{"version":3,"sources":["Gynae/DateFormatter.js","GP/DateFormatter.js","STD/DateFormatter.js","Derma/DateFormatter.js","PCR/PriceCalculator.js","Admin/DateFormatter.js","Payment/DateFormatter.js","Blood/PriceCalculator.js","Gynae/PriceCalculator.js","GP/PriceCalculator.js","STD/PriceCalculator.js","Derma/PriceCalculator.js","Screening/PriceCalculator.js","Admin/PriceCalculator.js","Blood/DateFormatter.js","Payment/PriceCalculator.js","PCR/DateFormatter.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","CopyRight.js","GlobalPath.js","services/api.js","services/UserService.js","PCR/services/api.js","PCR/services/BookService.js","PCR/services/PDFService.js","PCR/PersonsBox.js","PCR/FindByRef.js","PCR/ResendEmailsDialog.js","PCR/Corporates.js","PCR/PayDialog.js","PCR/TimeStampDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","PCR/BookingDialog.js","PCR/BookingTable.js","PCR/Title.js","PCR/Chart.js","PCR/CurrentVisits.js","PCR/BookingView.js","PCR/ResultsTimeReport.js","PCR/DashboardPreview.js","PCR/UnmatchedRecords.js","PCR/calendar-admin/MonthViewCell.js","PCR/calendar-admin/calendar-util.js","PCR/calendar-admin/MonthView.js","PCR/calendar-admin/WeekViewCell.js","PCR/calendar-admin/WeekView.js","PCR/calendar-admin/DayViewCell.js","PCR/calendar-admin/DayView.js","PCR/calendar-admin/CalendarView.js","Gynae/services/api.js","Gynae/services/BookService.js","Gynae/services/PDFService.js","Gynae/Corporates.js","Gynae/PayDialog.js","Blood/services/api.js","Blood/services/PDFService.js","Blood/services/BookService.js","Admin/services/api.js","Admin/services/BookService.js","Blood/Corporates.js","Blood/PayDialog.js","GP/services/api.js","GP/services/PDFService.js","GP/services/BookService.js","GP/Corporates.js","GP/PayDialog.js","GP/BookingDialog.js","STD/services/api.js","STD/services/PDFService.js","STD/services/BookService.js","STD/Corporates.js","STD/PayDialog.js","STD/BookingDialog.js","Blood/BookingDialog.js","Derma/services/api.js","Derma/services/PDFService.js","Derma/services/BookService.js","Derma/Corporates.js","Derma/PayDialog.js","Derma/BookingDialog.js","Screening/services/api.js","Screening/services/PDFService.js","Screening/services/BookService.js","Screening/Corporates.js","Screening/PayDialog.js","Screening/BookingDialog.js","Admin/BookingDialog.js","Blood/BloodReportDialog.js","Gynae/BookingDialog.js","Gynae/BookingTable.js","Gynae/Title.js","Gynae/Chart.js","Gynae/CurrentVisits.js","Gynae/BookingView.js","Gynae/DashboardPreview.js","Gynae/PersonsBox.js","Gynae/FindByRef.js","Gynae/calendar-admin/MonthViewCell.js","Gynae/calendar-admin/calendar-util.js","Gynae/calendar-admin/MonthView.js","Gynae/calendar-admin/WeekViewCell.js","Gynae/calendar-admin/WeekView.js","Gynae/NewBookingDialog.js","Gynae/calendar-admin/DayViewCell.js","Gynae/calendar-admin/DayView.js","Gynae/calendar-admin/CalendarView.js","GP/BookingTable.js","GP/Title.js","GP/Chart.js","GP/CurrentVisits.js","GP/BookingView.js","GP/DashboardPreview.js","GP/PersonsBox.js","GP/FindByRef.js","GP/calendar-admin/MonthViewCell.js","GP/calendar-admin/calendar-util.js","GP/calendar-admin/MonthView.js","GP/calendar-admin/WeekViewCell.js","GP/calendar-admin/WeekView.js","GP/NewBookingDialog.js","GP/calendar-admin/DayViewCell.js","GP/calendar-admin/DayView.js","GP/calendar-admin/CalendarView.js","STD/BookingTable.js","STD/Title.js","STD/Chart.js","STD/CurrentVisits.js","STD/BookingView.js","STD/DashboardPreview.js","STD/PersonsBox.js","STD/FindByRef.js","STD/calendar-admin/MonthViewCell.js","STD/calendar-admin/calendar-util.js","STD/calendar-admin/MonthView.js","STD/calendar-admin/WeekViewCell.js","STD/calendar-admin/WeekView.js","STD/NewBookingDialog.js","STD/calendar-admin/DayViewCell.js","STD/calendar-admin/DayView.js","STD/calendar-admin/CalendarView.js","Blood/BookingTable.js","Blood/Title.js","Blood/Chart.js","Blood/CurrentVisits.js","Blood/BookingView.js","Blood/DashboardPreview.js","Blood/PersonsBox.js","Blood/FindByRef.js","Blood/calendar-admin/MonthViewCell.js","Blood/calendar-admin/calendar-util.js","Blood/calendar-admin/MonthView.js","Blood/calendar-admin/WeekViewCell.js","Blood/calendar-admin/WeekView.js","Blood/DateField.js","Blood/NewBookingDialog.js","Blood/calendar-admin/DayViewCell.js","Blood/UnmatchedRecords.js","Blood/calendar-admin/DayView.js","Blood/calendar-admin/CalendarView.js","Blood/MatchedRecords.js","Blood/ArchivedRecords.js","Blood/SentRecords.js","Derma/BookingTable.js","Derma/Title.js","Derma/Chart.js","Derma/CurrentVisits.js","Derma/BookingView.js","Derma/DashboardPreview.js","Derma/PersonsBox.js","Derma/FindByRef.js","Derma/calendar-admin/MonthViewCell.js","Derma/calendar-admin/calendar-util.js","Derma/calendar-admin/MonthView.js","Derma/calendar-admin/WeekViewCell.js","Derma/calendar-admin/WeekView.js","Derma/NewBookingDialog.js","Derma/calendar-admin/DayViewCell.js","Derma/calendar-admin/DayView.js","Derma/calendar-admin/CalendarView.js","Screening/BookingTable.js","Screening/Title.js","Screening/Chart.js","Screening/CurrentVisits.js","Screening/BookingView.js","Screening/DashboardPreview.js","Screening/PersonsBox.js","Screening/FindByRef.js","Screening/calendar-admin/MonthViewCell.js","Screening/calendar-admin/calendar-util.js","Screening/calendar-admin/MonthView.js","Screening/calendar-admin/WeekViewCell.js","Screening/calendar-admin/WeekView.js","Screening/NewBookingDialog.js","Screening/calendar-admin/DayViewCell.js","Screening/calendar-admin/DayView.js","Screening/calendar-admin/CalendarView.js","Title.js","TodayBookingView.js","TomorrowBookingView.js","TotalBookingView.js","LateBookingView.js","UnmatchedBookingView.js","ShouldRefundBookingView.js","Role.js","NewBloodResultsBookingView.js","NewScreeningBookingView.js","DashboardPreview.js","Admin/FindByRef.js","Admin/Corporates.js","Admin/BookingTable.js","Admin/calendar-admin/MonthViewCell.js","Admin/calendar-admin/calendar-util.js","Admin/calendar-admin/MonthView.js","Admin/calendar-admin/WeekViewCell.js","Admin/calendar-admin/WeekView.js","Admin/NewBookingDialog.js","Admin/calendar-admin/DayViewCell.js","Admin/calendar-admin/DayView.js","Admin/calendar-admin/CalendarView.js","Admin/SearchBookingTable.js","Payment/services/api.js","Payment/services/PDFService.js","Payment/services/BookService.js","Payment/Corporates.js","Payment/PayDialog.js","Payment/BookingDialog.js","Payment/services/PaymentService.js","Payment/services/PatientService.js","Payment/DateField.js","Payment/PatientDialog.js","Payment/NewPaymentDialog.js","Payment/ViewPaymentDialog.js","Payment/PaymentsTable.js","Payment/Title.js","Payment/Chart.js","Payment/CurrentVisits.js","Payment/BookingView.js","Payment/TotalReceivedPaymentView.js","Payment/TodayReceivedPaymentView.js","Payment/TodayLinkSentView.js","Payment/LatePaymentsView.js","Payment/DashboardPreview.js","MenuList.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","Screening/DateFormatter.js"],"names":["module","exports","FormatDateFromString","str","substr","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash","calculatePrice","person","price","tr","certificate","antiBodyTest","calculateTotalPrice","persons","totalPrice","i","length","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","secondary","contrastText","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","Copyright","Typography","variant","align","Link","href","Date","getFullYear","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","payBooking","bookingId","paymentMethod","corporate","unPayBooking","getTestsTimeReport","axiosRetry","retries","retryDelay","retryCount","get","getTestsTimeReportLast7","getTestsTimeReportLast30","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","resendEmailsWithBookingId","regenerateFilesWithBookingId","resendEmails","linkId","regenerateFiles","matchRecords","findBestMatches","getLinkDetails","getLinkDetailsWithBookingId","findBookingByRefBirthDate","bookingRef","birthDate","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getAllTRBookings","getLateBookings","getDeletedBookings","getLiveBookings","getCompletedBookings","getPositiveBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","getUnmatchedRecords","getUnmatchedRecordsArchived","archiveRecord","unArchiveRecord","PDFService","downloadCovidForm1","responseType","Accept","downloadCovidForm2","downloadPdfResult","downloadPdfCert","downloadPdfLabReport","useStyles","makeStyles","box","padding","borderRadius","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","textDecoration","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","infoTitle","fontWeight","infoData","title","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","BookedLabel","borderLeft","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","PositiveLabel","EditButton","RestoreButton","DeleteButton","SaveButton","CancelButton","TextBox","checkIcon","closeIcon","centeredLabel","alignItems","PersonsBox","classes","useContext","setState","useState","expanded","setExpanded","edit","editMode","setEditMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","saving","setSaving","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","gender","setGender","setTitle","forename","setForename","surname","setSurnme","email","setEmail","dob","setDOB","tel","setTel","postCode","setPostCode","address","setAddress","notes","setNotes","passport","setPassport","passport2","setPassport2","setCertificate","setAntiBodyTest","bookingDateChanged","event","target","value","bookingDateError","bookingTimeChanged","bookingTimeError","genderChanged","titleChanged","forenameChanged","surnameChanged","emailChanged","dobChanged","dobError","telChanged","postCodeChanged","addressChanged","passportChanged","passport2Changed","certificateChanged","checked","antiBodyTestChanged","handleEditModeChanged","forenameCapital","surnameCapital","toUpperCase","phone","passportNumber","passportNumber2","booking","_id","validateBooking","validateDate","charAt","test","year","parseInt","month","day","err","hour","minute","validateTime","bookingService","res","RefreshPersonInfo","handleDeleteModeChanged","del","handleRestoreModeChanged","Fragment","Grid","container","direction","justify","className","foundRecords","map","index","status","panel","item","deleted","onChange","isExpanded","AccordionSummary","expandIcon","aria-controls","Tooltip","style","AccordionDetails","hidden","Button","type","fullWidth","onClick","disabled","TextField","inputProps","FormControlLabel","formControl","control","Checkbox","name","label","startIcon","file","Blob","data","fileURL","URL","createObjectURL","open","isBoolean","param","TextMaskCustom","props","inputRef","other","inputElement","mask","showMask","flexDirection","avatar","form","Find","Clear","NoRecordsFound","FindByRef","initialFocus","focus","setFocus","autoFocus","key","onFocus","onBlur","useFocus","focusProps","useEffect","clearField","refError","findRecords","indexOf","submiting","CssBaseline","component","FormControl","pattern","helperText","size","InputProps","inputComponent","onKeyPress","onTouchTap","Alert","severity","interval","refreshButton","RefLink","cursor","archiveButton","smartMatchButton","matchButton","resendButton","resendFilesButton","cancelButton","BorderLinearProgress","colorPrimary","bar","LinearProgress","LinearProgressWithLabel","Box","mr","minWidth","Math","round","PaperComponent","handle","cancel","Paper","ResendEmailsDialog","sending","setSending","sent","setSent","sendJustToPCR","setSendJustToPCR","sendingStatus","setSendingStatus","sendingProgress","setSendingProgress","setError","prevProgress","Dialog","onClose","clearInterval","handleClose","aria-labelledby","DialogTitle","Divider","DialogContent","setInterval","link","setTimeout","corporates","backdrop","zIndex","drawer","PayDialog","setPaymentMethod","setCorporate","payClicked","a","bookingPayChanged","RadioGroup","aria-label","Radio","Select","labelId","element","MenuItem","bottom","right","Backdrop","CircularProgress","addMinutes","date","minutes","getTime","itemTitle","itemData","TimeStampDialog","linkTimeStamp","setLinkTimeStamp","filename","timeStamp","dateformat","setHours","bookingTimeNormalized","setMinutes","setSeconds","setMilliseconds","getDateFromBooking","samplingTimeStamp","DialogActions","CalendarColors","PCR_COLOR","GYNAE_COLOR","GP_COLOR","STD_COLOR","BLOOD_COLOR","DERMA_COLOR","SCREENING_COLOR","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","InvoiceDialog","defaultCode","setCode","setCodeError","description","setDescription","descriptionError","setDescriptionError","items","setItems","setPrice","priceError","setPriceError","allCodes","setAllCodes","invoice","fetchAllCodes","defaultCodes","result","refresh","validateItem","validateItem2","getGrandTotal","_items","total","forEach","parseFloat","saveClikced","formData","JSON","parse","fullname","dateAttended","grandTotal","Autocomplete","newValue","options","getOptionLabel","option","toLocaleString","currency","renderInput","params","startAdornment","InputAdornment","overflowY","IconButton","temp","splice","removeItem","justifyContent","multiline","rows","placeholder","ResendEmailsButton","PayButton","PayLabel","checkIconSmall","printInvoiceButton","editInvoiceButton","Transition","forwardRef","Slide","BookingDialog","copied","setCopied","openResendDialog","setOpenResendDialog","openPayDialog","setOpenPayDialog","selectedBooking","setSelectedBooking","refreshData","setRefreshData","setBooking","recordChanged","setRecordChanged","fieldChanged","setFieldChanged","openUndoPayDialog","setOpenUndoPayDialog","openTimeStampDialog","setOpenTimeStampDialog","covidVaccine","setCovidVaccine","handleCloseUndoPayDialog","isChanged","bookingDialogDataChanged","undoPaymentClicked","setInvoice","invoiceLoaded","setInvoiceLoaded","openInvoiceDialog","setOpenInvoiceDialog","emailSentInvoice","setEmailSentInvoice","fetchInvoice","OpenInvoiceDialog","TransitionComponent","keepMounted","aria-describedby","top","left","role","clipboard","writeText","transition","deleteButtonDisabled","selfIsolate","postCodeSI","addressSI","NHSNumber","ethnicity","arrivalDate","flightNumber","lastDepartedDate","travellingFrom","_email","paid","paidBy","_booking","push","getDefaultCodes","DialogContentText","HideNowRows","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","fromDate","setFromDate","untilDate","setUntilDate","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","field","headerName","renderCell","getValue","openDetailsDialog","valueFormatter","formatTimeStamp","valueGetter","bookings","cachedBookings","isFetching","setData","setSelectedRow","seeDetailsDialogOpen","setSeeDetailsDialogOpen","filter","setFilter","useRef","todayStr","timeStampStr","loadData","api","trim","filteredData","toLowerCase","find","page","setPage","placement","userId","username","faFileExcel","autoComplete","InputLabel","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","Switch","utils","DateFnsUtils","autoOk","disableToolbar","format","KeyboardButtonProps","sheet","buttonText","extRef","PriceCalculator","Title","gutterBottom","children","createData","amount","emptyData","undefined","getCount","count","Chart","useTheme","loading","setLoading","fetchData","ResponsiveContainer","LineChart","XAxis","dataKey","stroke","YAxis","Label","angle","textAnchor","fill","Line","dot","depositContext","flex","bookingBox","boxShadow","getCurrentTimeSlot","now","min","getMinutes","getHours","pm","minStr","hourStr","pmStr","timeStr","getDay","getCurrentTimeSlotLabel","endTimeStr","CurrentVisits","current","setCurrent","setBookings","openDialog","setOpenDialog","currentTimeSlot","bookingCliked","_bookings","substring","getBookingsBox","seeMore","BookingView","setRefresh","Table","TableHead","TableRow","TableCell","TableBody","preventDefault","currentMenuIndex","getMenuIndex","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","dominantBaseline","ReportLabels","AverageLabel","less12Label","less24Label","less36Label","TableTitle","TableBorder","ResultsTimeReport","report","setReport","reportLast7","setReportLast7","reportLast30","setReportLast30","setOpen","lessThan12","lessThan24","lessThan36","PieChart","Pie","labelLine","entry","Cell","avg","lessThan12Percent","lessThan24Percent","lessThan36Percent","lessThan48","lessThan48Percent","overflow","fixedHeight","DashboardPreview","fixedHeightPaper","clsx","downloadPDFButton","UnmatchedRecords","selectedTab","disableId","smartMatchClicked","downloadLabReport","setDisableId","setSeletedTab","smartLinkId","setSmartLinkId","smartLinkDetails","setSmartLinkDetails","likelyBookings","setLikelyBookings","seeDetailsBooking","setSeeDetailsBooking","matching","setMatching","matched","setMatched","matchedBookings","lastPromise","currentPromise","e","ToggleButtonGroup","exclusive","ToggleButton","timeout","testDate","handleCheckChanged","likelihood","seeDetailsClicked","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","MonthViewCell","cellIndex","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","getMonth","AdminCalendarCache","record","method","query","fecthData","_bookingsCount","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","disableShrink","MAX_BOOKING_COUNT","percent","getBookingsCountGauge","CalendarUtil","getMonthRange","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","isPast","CancelToken","WeekView","dates","replace","overflowX","bookingBoxSampleTaken","bookingBoxPositive","bookingBoxReportSent","DayViewCell","filteredBookings","setFilteredBookings","dayViewCalFilter","search","getBookingClass","borderTop","titleLabel","titleLabelToday","DayView","monthNames","fontColor","CalendarView","setMonth","setYear","setDay","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","removeFilter","today","dayofWeek","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","onMouseDown","getBloodReportsByBookingId","changeDepositBooking","deposit","addNewBooking","sendRegFormEmail","getShouldRefundsCount","manualRefundBooking","refundBooking","changeToPatientAttended","downloadGynaeRegForm","required","downloadBloodRegForm","getNewBloodResultsCount","getSentBloodReports","getArchivedBloodReports","getNewMatchedBloodReports","getArchivedMatchedBloodReports","getNewUnmatchedBloodReports","getArchivedUnmatchedBloodReports","sendBloodReportEmail","bloodreportId","updateBloodReport","archiveBloodReport","unArchiveBloodReport","searchAllBookings","downloadGPRegForm","emailSent","setEmailSent","openRefundDialog","setOpenRefundDialog","setFullname","service","fetchBloodReports","bloodReports","setBloodReports","selectedBloodReport","setSelectedBloodReport","bloodReportDialogOpen","setBloodReportDialogOpen","handleCloseRefundDialog","refundPaymentClicked","updateShouldRefundsCount","shouldRefunsCount","OTCCharges","BloodReportDialog","downloadSTDRegForm","setService","packageName","estimatedPrice","doctorConsultation","indivisualTests","tests","testsString","getIndivisualTestsString","downloadDermaRegForm","package","downloadScreeningRegForm","confirmBooking","getPendingBookings","PackageBox","openConfirmDialog","setOpenConfirmDialog","setBirthDate","handleCloseConfirmDialog","birthDateError","confirmBookingClicked","confirmed","clinic","changesSaved","setChangesSaved","loadFileUrl","loadBookingDetail","AdminBookingService","setFileURL","reader","FileReader","readAsDataURL","onloadend","base64data","openBookingDetailDialog","setOpenBookingDetailDialog","getColorFromClinic","src","EmailValidator","bloodReportRefresh","PriceLabelPaid","PriceLabelNotPaid","manualRefund","depositChanged","paymentInfo","textTransform","refund","notifyIcon","showCreateExcel","isThursday","isFriday","slotMinStr","slotHourStr","fullnameChanged","serviceChanged","notesChanged","CalendarIcon","DateTimeLabel","Packages","NewBookingDialog","fullnameError","setFullnameError","setPhone","setDeposit","saveClicked","otem","bookingBoxNew","openDialogAddNew","setOpenDialogAddNew","addNewBookingClicked","IndivisualTests","comboSTDChecks","serviceError","setServiceError","indivisualArray","setIndivisualArray","comboArray","setComboArray","findIndex","IndivisualTestsChanged","comboSTDChecksChanged","DateField","loadingBox","dateChanged","dayArray","setDayArray","monthArray","setMonthArray","yearArray","setYearArray","updateDate","dd","mm","yyyy","dayStr","monthStr","d","m","months","years","listOptions","noOptionsText","setNoOptionsText","setIndivisualTests","setBirthDateError","firstLetter","scrollTo","stringify","multiple","filterOptions","inputValue","matchSorter","keys","sort","b","localeCompare","renderTags","getTagProps","Chip","whiteSpace","filterSelectedOptions","clinicTitle","PCRLabel","GynaeLabel","GPLabel","STDLabel","BloodLabel","MatchedRecords","getClassforClinic","ArchivedRecords","SentRecords","bookingBoxPending","TodayBookingView","PCRBookService","res1","GynaeBookService","res2","GPBookService","res3","STDBookService","res4","BloodBookService","res5","DermaBookService","res6","ScreeningBookService","res7","pcr","gynae","gp","std","blood","derma","screening","TomorrowBookingView","tomorrow","tomorrowStr","TotalBookingView","countLabel","countLabelRed","Icon","IconRed","TitleRed","LateBookingView","UnmatchedBookingView","ShouldRefundBookingView","getRole","sessionStorage","getItem","setRole","setItem","NewBloodResultsBookingView","NewScreeningBookingView","fixedHeightSmall","fixedHeightPaperSmall","history","useHistory","getMenuId","boxTitle","getPersonBox","DermaLabel","ScreeningLabel","PCRGauge","GynaeGauge","GPGauge","STDGauge","BloodGauge","DermaGauge","ScreeningGauge","DayLabelContainer","getPCRClinicBar","getGynaeClinicBar","getGPClinicBar","getSTDClinicBar","getBloodClinicBar","getDermaClinicBar","getScreeningClinicBar","selectedClinics","getClinicBar","BoxDisabled","BoxGynae","BoxGP","BoxSTD","BoxBlood","BoxScreening","BoxDerma","timeDisabled","clinicClicked","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","BookingBorderBlood","BookingBorderDerma","BookingBorderScreening","openDialogGP","setOpenDialogGP","openDialogGynae","setOpenDialogGynae","openDialogSTD","setOpenDialogSTD","openDialogBlood","setOpenDialogBlood","openDialogDerma","setOpenDialogDerma","openDialogScreening","setOpenDialogScreening","getBookingBorderClass","Clinics","DefaultLabel","SearchBookingTable","seeDetailsDialogOpenBloodReport","setSeeDetailsDialogOpenBloodReport","handleCloseSeeDetaisDialog","filterError","setFilterError","doSearch","dialogTitle","question","answer","PaymentService","sendPaymentLinkTextMessage","medexPaymentId","sendPaymentLinkEmail","doPayment","paymentId","refundPayment","createNewPaymentLink","paymentRecord","deletePaymentLink","getAllPayments","getDeletedPayments","getPaidPayments","getNotPaidPayments","getLatePayments","getRefundPayments","getRecentPayments","getPaymentById","getTotalReceivedAmount","getTodayReceivedAmount","getTotalLinkSent","getTodayLinkSent","PatientService","registerNewPatient","updatePatient","deletePatient","unDeletePatient","getPatientById","getPatientByPatientId","patiantID","getAllPatients","getDeletedPatients","appBar","flexGrow","tabs","borderRight","titleCenter","eyeText","NewPaymentDialog","LinkRef","setAmount","amountError","setAmountError","emailError","setEmailError","phoneError","setPhoneError","phoneSent","setPhoneSent","paymentLink","setPaymentLink","setPaymentId","createLinkClicked","validatePayment","payment","buildPaymentLink","paymentDialogDataChanged","scrollIntoView","behavior","block","sendEmailClicked","sendTextClicked","overflowWrap","rel","itemLabel","TextSecondary","ViewPaymentDialog","refundDone","setRefundDone","deleteDone","setdeleteDone","refundTimeStamp","setRefundTimeStamp","openDeleteDialog","setOpenDeleteDialog","handleCloseDeleteDialog","deleteClicked","paymentTimeStamp","textSent","PaymentsTable","setViewDialogOpen","setSelectedPatient","patientDialogOpen","setPatientDialogOpen","setPatientDialogTitle","setPatientDialogSaveButtonText","viewDialogOpen","TotalReceivedPaymentView","TodayReceivedPaymentView","TodayLinksSentView","LatePaymentsView","MenuList_Payment","MenuList_Admin","MenuList_Gynae","MenuList_GP","MenuList_STD","MenuList_Blood","MenuList_PCR","MenuList_Derma","MenuList_Screening","MenuList_PCRLAB","getMenuContent","getMenuRole","MenuList","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","password","setPassword","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setSubmiting","localStorage","signedIn","roles","elevation","alt","Avatar","lineHeight","on","textField","htmlFor","OutlinedInput","tabindex","Visibility","VisibilityOff","labelWidth","mt","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","GyaneBookService","updateHSPendingBookingsCount","hsPendingBookingsCount","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","opacity","drawerPaperClose","appBarSpacer","content","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsBloodLabel","appsDermaLabel","appsPaymentLabel","appsScreeningLabel","appsInToolbar","Dashboard","isMobile","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","globalPath","split","getMenuIdFromGlobalPath","pathname","appsClicked","getAppsLogo","getAppsLabel","AppBar","Toolbar","edge","currentTarget","anchorEl","lastLoginTimeStamp","Drawer","getUserIdFromToken","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","process","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5a65928.chunk.js","sourcesContent":["\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n      return \"\"\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n     return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n    \n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n      return \"\"\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n     return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#00a1c5\",\n               light: \"#5bd5f0\",\n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n\n      },\n    secondary: { main: \"#f68529\", contrastText:\"#fff\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","import Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"#\">\n          Medical Express Clinic\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  ","\n\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n\nexport const backendAPI = 'https://www.travelpcrtest.com/'\n// export const backendAPI = 'http://localhost:9090/'\n\nexport function getGlobalPath(path){\n    return '/medicalexpressclinic/admin' + path\n    // return path\n}\n\nexport function getMenuIdFromGlobalPath(globalPath){\n    try{\n       \n        var split = globalPath.split('/')\n        if (split && split.length > 0)\n        {\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\n        }\n        else\n        {\n            return ''\n        }\n    }\n    catch(err)\n    {\n        return ''\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\n\nexport default class UserService{\n\n    static setToken = (token) =>\n    {\n        this.token = token\n    }\n  \n    static signIn = (payload) =>\n    {\n        return  API.post('/api/medex/user/signin', payload)\n    }\n\n    static checkToken = (payload) =>\n    {\n        return  API.post('/api/medex/user/checktoken', payload)\n    }\n\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static payBooking = (bookingId, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getTestsTimeReport = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereport`);\n   }\n\n   static getTestsTimeReportLast7 = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereportlast7`);\n   }\n\n   static getTestsTimeReportLast30 = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereportlast30`);\n   }\n\n\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static resendEmailsWithBookingId = (bookingId) =>\n   {\n      return API.post(`/api/book/resendemailswithbookingid?id=${bookingId}`);\n   }\n\n   static regenerateFilesWithBookingId  = (bookingId) =>\n   {\n      return API.post(`/api/book/regeneratefileswithbookingid?id=${bookingId}`);\n   }\n\n\n   static resendEmails  = (linkId) =>\n   {\n      return API.post(`/api/book/resendemails?id=${linkId}`);\n   }\n\n   static regenerateFiles  = (linkId) =>\n   {\n      return API.post(`/api/book/regeneratefiles?id=${linkId}`);\n   }\n\n   static matchRecords  = (bookingId, linkId) =>\n   {\n      return API.post(`/api/book/matchrecords?bookingid=${bookingId}&linkid=${linkId}`);\n   }\n\n   static findBestMatches = (id) =>\n   {\n      return API.get(`/api/book/getbestmatchedbookings?id=${id}`);\n   } \n\n   static getLinkDetails = (id) =>\n   {\n      return API.get(`/api/book/getlinkdetails?id=${id}`);\n   } \n\n   static getLinkDetailsWithBookingId = (id) =>\n   {\n      return API.get(`/api/book/getlinkdetailswithbookingid?id=${id}`);\n   } \n\n\n\n   static findBookingByRefBirthDate = (bookingRef, birthDate) =>\n   {\n      return API.get(`/api/book/getbookingsbyrefandbirthdate?ref=${bookingRef}&birthdate=${birthDate}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/book/undeletebookappointment?id=${id}`);\n   } \n   \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/book/getallbookings?limit=${limit}`);\n    }\n\n    static getAllTRBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/book/getalltrbookings?limit=${limit}`);\n    }\n\n    static getLateBookings= () =>\n    {\n       return API.get(`/api/book/getlatebookings`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getLiveBookings= () =>\n    {\n       return API.get(`/api/book/getlivebookings`);\n    }\n\n    static getCompletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getcompletedbookings?limit=${limit}`);\n    }\n\n    static getPositiveBookings= () =>\n    {\n       return API.get(`/api/book/getpositivebookings`);\n    }\n\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getrecentbookingsall?limit=${limit}`);\n    }\n\n    static getUnmatchedRecords= () =>\n    {\n       return API.get(`/api/book/getunmatchedrecords`);\n    }\n\n    static getUnmatchedRecordsArchived= () =>\n    {\n       return API.get(`/api/book/getunmatchedrecordsarchived`);\n    }\n\n    static archiveRecord = (id) =>\n    {\n       return API.post(`/api/book/archiverecord?id=${id}`);\n    }\n\n    static unArchiveRecord = (id) =>\n    {\n       return API.post(`/api/book/unarchiverecord?id=${id}`);\n    }\n\n\n}","import API from './api';\n\nexport default class PDFService {\n\n    static downloadCovidForm1 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadCovidForm2 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfResult = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfCert = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\"   \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\"\n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\"\n    },\n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [gender, setGender] = React.useState('');\n    const [title, setTitle] = React.useState('');\n    const [forename, setForename] = React.useState('');\n    const [surname, setSurnme] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [dob, setDOB] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [postCode, setPostCode] = React.useState('');\n    const [address, setAddress] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n    const [passport, setPassport] = React.useState('');\n    const [passport2, setPassport2] = React.useState('');\n    const [certificate, setCertificate] = React.useState(false);\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const genderChanged = (event) =>\n    {\n      setGender(event.target.value);\n    }\n\n    const titleChanged = (event) =>\n    {\n      setTitle(event.target.value);\n    }\n\n    const forenameChanged = (event) =>\n    {\n      setForename(event.target.value);\n    }\n\n    const surnameChanged = (event) =>\n    {\n      setSurnme(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const dobChanged = (event) =>\n    {\n      setDOB(event.target.value);\n      setValidationError({...validationError, dobError : false});\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const postCodeChanged = (event) =>\n    {\n      setPostCode(event.target.value);\n    }\n\n    const addressChanged = (event) =>\n    {\n      setAddress(event.target.value);\n    }\n\n    const passportChanged = (event) =>\n    {\n      setPassport(event.target.value);\n    }\n\n    const passport2Changed = (event) =>\n    {\n      setPassport2(event.target.value);\n    }\n\n    const certificateChanged = (event) =>\n    {\n      setCertificate(event.target.checked);\n    }\n\n    const antiBodyTestChanged = (event) =>\n    {\n      setAntiBodyTest(event.target.checked);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }else if (status === 'sample_taken')\n      {\n        return (\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\n        );\n    \n      }else if (status === 'report_sent')\n      {\n        return (\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\n        );\n    \n      }else if (status === 'report_cert_sent')\n      {\n        return (\n          <span  className={classes.ReportCertSentLabel}> {`Report & Certificate Sent`} </span>\n        );\n      }\n      else if (status === 'positive')\n      {\n        return (\n          <span  className={classes.PositiveLabel}> {`POSITIVE`} </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n   const downloadForm1 = (id) =>\n   {\n       PDFService.downloadCovidForm1(id).then( (res) => \n       {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n       }).catch( (err) =>\n       {\n           console.log(err);\n       });\n   }\n\n   const downloadForm2 = (id) =>\n   {\n        PDFService.downloadCovidForm2(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const downloadLabResults = (id) =>\n   {\n        PDFService.downloadPdfResult(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const downloadCertificate = (id) =>\n   {\n        PDFService.downloadPdfCert(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setForename(person.forenameCapital);\n         setSurnme(person.surnameCapital);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime.toUpperCase());\n         setGender(person.gender.toUpperCase());\n         setTitle(person.title.toUpperCase());\n         setEmail(person.email.toUpperCase());\n         setDOB(FormatDateFromString(person.birthDate));\n         setTel(person.phone.toUpperCase());\n         setPostCode(person.postCode.toUpperCase());\n         setAddress(person.address.toUpperCase());\n         if (person.notes)\n         {\n          setNotes(person.notes.toUpperCase());\n         }\n        \n         if (person.passportNumber)\n         {\n           setPassport(person.passportNumber.toUpperCase());\n         }\n        \n         if (person.passportNumber2)\n         {\n           setPassport2(person.passportNumber2.toUpperCase());\n         }\n        \n         setCertificate(person.certificate);\n         setAntiBodyTest(person.antiBodyTest);\n\n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.certificate = certificate;\n          booking.antiBodyTest = antiBodyTest;\n          booking.gender = gender;\n          booking.title = title;\n          booking.birthDate = RevertFormatDateFromString(dob);\n          booking.email = email;\n          booking.phone = tel;\n          booking.postCode = postCode;\n          booking.address = address;\n          booking.passportNumber = passport;\n          booking.passportNumber2 = passport2;\n          booking.forename = forename;\n          booking.surname = surname;\n          booking.notes = notes;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateDate(booking.birthDate))\n      {\n        error = true;\n        setValidationError({...validationError, dobError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.forenameCapital} ${person.surnameCapital}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>GENDER</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.gender?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={gender}\n                                                      onChange = {genderChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>TITLE</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.title?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={title}\n                                                      onChange = {titleChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                             \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FORENAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.forenameCapital}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={forename}\n                                                      onChange = {forenameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SURNAME</span>\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.surnameCapital}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={surname}\n                                                      onChange = {surnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>D.O.B</span>\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                            {FormatDateFromString(person.birthDate) }\n                                          </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      error={validationError.dobError} \n                                                      className={classes.TextBox} \n                                                      value={dob}\n                                                      onChange = {dobChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>POST CODE</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.postCode?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={postCode}\n                                                      onChange = {postCodeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>ADDRESS</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.address?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={address}\n                                                      onChange = {addressChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>PASSPORT NO.</span>\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={passport}\n                                                      onChange = {passportChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SECOND PASSPORT NO.</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber2?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={passport2}\n                                                      onChange = {passport2Changed}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>REQUEST FOR CERTIFICATE</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.certificate ? ( <CheckIcon className={classes.checkIcon}/> ) :  <CloseIcon className={classes.closeIcon}/> }</span>\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                    <FormControlLabel className={classes.formControl} \n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={certificate} onChange={certificateChanged} />}\n                                          label=''\n                                        />\n                                </span>    \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>REQUEST FOR ANTIBODY TEST</span>\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.antiBodyTest ? <CheckIcon className={classes.checkIcon}/> :  <CloseIcon className={classes.closeIcon}/> }</span>  \n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                    <FormControlLabel className={classes.formControl} \n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={antiBodyTest} onChange={antiBodyTestChanged} />}\n                                          label=''\n                                        />\n                                </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                                \n                                {person.status === \"sample_taken\" &&\n                                          !(\n                                            editMode.edit && editMode.person._id === person._id\n                                          ) && (\n                                            <Button \n                                                  variant=\"outlined\"\n                                                  color=\"primary\"\n                                                  disabled = {saving}\n                                                  onClick = {event => changeBackToBookingMade(event,person._id)}\n\n                                                    >\n                                              Change Back To Booking Made\n                                            </Button>\n                                          )}\n\n                            </li>\n      \n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TOTAL CHARGES</span> <span className={calculatePrice(person) <= 199 ? classes.infoDataCharges : classes.infoDataChargesHigher}>{`£${calculatePrice(person)}`}</span>  \n                            </li>\n\n                            <li  hidden={person.deleted} >\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadForm1(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Registration Form\n                                </Button>\n                            </li>\n\n                            <li  hidden={person.deleted}>\n                                  <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadForm2(person._id)}}\n                                    // onTouchTap = {() => {downloadForm2(person._id)}}\n                                    className={classes.DownloadForm}\n                                    >\n                                    Download Lab Form\n                                 </Button>\n                            </li>\n\n                            <li hidden={ person.deleted || (person.status !== 'report_sent' && person.status !== 'report_cert_sent') }>\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadLabResults(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Lab Results\n                                </Button>\n                            </li>\n\n                            <li hidden={person.deleted || person.status !== 'report_cert_sent'}>\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadCertificate(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Certificate\n                                </Button>\n                            </li>\n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\"\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ResendEmailsDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState(\"\");\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [error, setError] = React.useState(false);\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === \"downloadFailed\") return 10;\n    else if (status === \"downloading\") return 30;\n    else if (status === \"downloadSuccess\") return 70;\n    else if (status === \"sent\") return 100;\n    else return 0;\n  };\n\n  const handleClose = () => {\n    setSending(false);\n    setSent(false);\n    setError(false);\n    clearInterval(interval);\n    props.handleClose();\n  };\n\n  useEffect(() => {\n    setSendingProgress((prevProgress) =>\n      prevProgress >= 100 ? 100 : getProgress(sendingStatus)\n    );\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus(\"downloadFailed\");\n    setSendJustToPCR(true);\n\n    BookService.regenerateFilesWithBookingId(props.booking._id)\n      .then((res) => {\n        interval = setInterval(() => {\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n            (res) => {\n              if (res.data.status === \"OK\") {\n                setSendingStatus(res.data.link.status);\n\n                if (res.data.link.status === \"sent\") {\n                  setSending(false);\n                  setSent(true);\n                  clearInterval(interval);\n                }\n              } else if (res.data.status === \"FAILED\") {\n                setSending(false);\n                setSent(false);\n                clearInterval(interval);\n                setError(true);\n              }\n            }\n          );\n        }, 1000);\n\n        setTimeout(() => {\n          setError(true);\n          clearInterval(interval);\n        }, 60000);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSending(false);\n      });\n  };\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus(\"downloadFailed\");\n\n    BookService.resendEmailsWithBookingId(props.booking._id)\n      .then((res) => {\n        interval = setInterval(() => {\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n            (res) => {\n              if (res.data.status === \"OK\") {\n                setSendingStatus(res.data.link.status);\n\n                if (res.data.link.status === \"sent\") {\n                  setSending(false);\n                  setSent(true);\n                  clearInterval(interval);\n                }\n              } else if (res.data.status === \"FAILED\") {\n                setSending(false);\n                setSent(false);\n                clearInterval(interval);\n                setError(true);\n              }\n            }\n          );\n        }, 1000);\n\n        setTimeout(() => {\n          setError(true);\n          clearInterval(interval);\n        }, 60000);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSending(false);\n      });\n  };\n\n  const cancelResendEmailsClicked = (event) => {\n    props.handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <SendIcon style={{ color: \"#2f942e\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#2f942e\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    RESEND EMAILS{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"230px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n                  {!sent && !sending && (\n                    <React.Fragment>\n                      <Grid item>\n                        <div\n                          style={{\n                            paddingTop: \"5px\",\n                            fontSize: \"1rem\",\n                            fontWeight: \"500\",\n                            color: \"#555\",\n                          }}\n                        >\n                          Do you want to Resend the LAB Report{\" \"}\n                          {props.booking.certificate ? \" and Certificate\" : \"\"}{\" \"}\n                          Now?\n                        </div>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                        </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                        </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to\n                          pcrresults@medicalexpressclinic.co.uk\n                        </Button>\n                      </Grid>\n                    </React.Fragment>\n                  )}\n\n                  {error && !sending && !sent && (\n                    <Grid item>\n                      <Alert\n                        style={{\n                          marginTop: \"10px\",\n                          paddingLeft: \"50px\",\n                          paddingRight: \"50px\",\n                        }}\n                        severity=\"error\"\n                      >\n                        Error! — Something is wrong with this record!\n                      </Alert>\n                    </Grid>\n                  )}\n\n                  {(sending || sent) && (\n                    <Grid item>\n                      <div\n                        style={{\n                          paddingTop: \"50px\",\n                          color: \"#2f942e\",\n                          fontWeight: \"600\",\n                          fontSize: \"1rem\",\n                        }}\n                      >\n                        {sending && !sent && \"Sending ...\"}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert\n                            style={{\n                              marginTop: \"10px\",\n                              paddingLeft: \"50px\",\n                              paddingRight: \"50px\",\n                            }}\n                            severity=\"success\"\n                          >\n                            Success! — The LAB Report{\" \"}\n                            {props.booking.certificate\n                              ? \" and Certificate \"\n                              : \" \"}{\" \"}\n                            Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert\n                            style={{\n                              marginTop: \"10px\",\n                              paddingLeft: \"50px\",\n                              paddingRight: \"50px\",\n                            }}\n                            severity=\"success\"\n                          >\n                            Success! — The LAB Report{\" \"}\n                            {props.booking.certificate\n                              ? \" and Certificate \"\n                              : \" \"}{\" \"}\n                            Successfully Sent Just to\n                            pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n                      </div>\n                    </Grid>\n                  )}\n                </Grid>\n\n                {(sending || sent) && (\n                  <React.Fragment>\n                    <div\n                      style={{\n                        marginTop: \"10px\",\n                        width: \"50%\",\n                        marginLeft: \"27%\",\n                      }}\n                    >\n                      <LinearProgressWithLabel\n                        variant=\"determinate\"\n                        color=\"primary\"\n                        value={sendingProgress}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        paddingTop: \"30px\",\n                        color: \"#2f942e\",\n                        fontWeight: \"600\",\n                        fontSize: \"1rem\",\n                        marginLeft: \"45%\",\n                      }}\n                    >\n                      {sending && !sent && \"PLEASE WAIT ...\"}\n                    </div>\n                  </React.Fragment>\n                )}\n              </div>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Backdrop, Button, Checkbox, CircularProgress, Divider, FormControlLabel, Grid, InputLabel, Link, makeStyles, MenuItem, Select, TextField, Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { corporates } from './Corporates';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    marginRight : \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle:  {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendFilesButton:{\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  cancelButton:\n  {\n    marginBottom : \"10px\",\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"90px\",\n    paddingRight: \"90px\"   \n  },\n  \n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n  \n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\n\n\nexport default function PayDialog(props) {\n  \n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);  \n  const [paymentMethod, setPaymentMethod] = useState('credit card');\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const paymentMethodChanged = (event) =>\n  {\n    setPaymentMethod(event.target.value);\n  }\n\n  const handleClose = () =>\n  {\n      if (saving)\n        return;\n\n      props.handleClose();  \n      setPaymentMethod('credit card');\n      setCorporate(corporates[0]);\n      setSaving(false);\n  }\n\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n\n  const payClicked = async () =>\n  {\n    setSaving(true);\n\n    try\n    {\n         await BookService.payBooking(props.booking._id,paymentMethod, paymentMethod === 'corporate' ? corporate : '');\n         setSaving(false);\n         setState(state => ({...state, bookingPayChanged : !state.bookingPayChanged ? true : false}));\n         handleClose();\n    }\n    catch(err)\n    {\n        console.error(err);\n        setSaving(false);\n    }\n\n  }\n\n\n  return (\n    <React.Fragment>\n\n        {props.booking && ( \n\n                <React.Fragment>\n<Dialog\nmaxWidth=\"800px\"\nopen={props.open}\nonClose={handleClose}\nPaperComponent={PaperComponent}\naria-labelledby=\"form-dialog-title\"\n>\n<DialogTitle id=\"draggable-dialog-title\">\n  <Grid\n    container\n    spacing={2}\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <Grid item>\n      <CreditCardIcon\n        style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n      />\n    </Grid>\n\n    <Grid item>\n      <div\n        style={{\n          color: \"#f50057\",\n          paddingBottom: \"10px\",\n          fontWeight: \"800\",\n        }}\n      >\n        {\" \"}\n        PAY the CHARGE{\" \"}\n      </div>\n    </Grid>\n  </Grid>\n\n  <Divider />\n</DialogTitle>\n<DialogContent>\n  <div\n    style={{\n      height: \"270px\",\n    \n    }}\n  >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          spacing = {2}\n          alignItems=\"flex-start\"\n        >\n            <Grid item>\n               <div style={{fontSize: \"17px\"}}> How do you want to pay? </div> \n            </Grid>\n\n            <Grid item>\n      \n            <FormControl component=\"fieldset\">\n                \n                <RadioGroup aria-label=\"paymentMethod\" name=\"paymentMethod\" value={paymentMethod} onChange={paymentMethodChanged}>\n                    <FormControlLabel value=\"credit card\" control={<Radio />} label=\"Credit Card\" />\n                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\n                    <FormControlLabel value=\"corporate\" control={<Radio />} label=\"Corporate\" />\n                </RadioGroup>\n\n                { paymentMethod === 'corporate' && (\n\n                        <FormControl style={{marginTop: \"10px\"}} className={classes.formControl}>\n                        <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                        >\n                        {\n                        corporates.map(element => (\n                                    <MenuItem value={element}>{`${element}`}</MenuItem>\n                        ))\n                        }     \n\n                        </Select>\n                    </FormControl>\n\n                )}\n              \n\n                </FormControl>\n            </Grid>\n\n\n        </Grid>\n\n        <Grid item>\n           \n    </Grid>\n\n    <div style={{position:\"absolute\", bottom:\"20px\", right:\"20px\"}}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing = {1}\n            >\n               \n                <Grid item>\n                    <Button onClick={handleClose}  style= {{width : '100px'}} disabled={saving}>\n                        back\n                    </Button>\n                        \n                </Grid>\n                <Grid item>\n                    <Button \n                        onClick = {payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style= {{width : '100px'}}\n                        disabled={saving}\n                    >\n                        Pay\n                    </Button>\n                </Grid>  \n          </Grid>\n\n    </div>\n\n    \n  </div>\n\n             <Backdrop\n                className={classes.backdrop}\n                open={saving}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n\n</DialogContent>\n</Dialog>\n\n\n\n\n</React.Fragment>\n\n\n        )}\n  \n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport dateformat from \"dateformat\";\n\nconst addMinutes = (date, minutes) => {\n  date = new Date(date);\n  return new Date(date.getTime() + minutes * 60 * 1000);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  itemTitle: {\n    fontWeight: \"500\",\n    color: \"#555\",\n  },\n\n  itemData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"600\",\n    color: \"#127512\",\n  },\n}));\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function TimeStampDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [linkTimeStamp, setLinkTimeStamp] = React.useState(null);\n\n  const handleClose = () => {\n    setLinkTimeStamp(null);\n\n    props.handleClose();\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      if (props.booking.filename && props.booking.filename.length > 0) {\n        BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n          (res) => {\n            if (res.data.status === \"OK\") {\n              setLinkTimeStamp(res.data.link.timeStamp);\n            }\n          }\n        );\n      }\n    }\n  }, [props.booking]);\n\n  const getDateFromBooking = (booking) => {\n    let date = new Date(booking.bookingDate);\n    date.setHours(booking.bookingTimeNormalized.substr(0, 2));\n    date.setMinutes(booking.bookingTimeNormalized.substr(3, 2));\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    return date;\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <HistoryIcon style={{ color: \"#f50057\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Audit Trail{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"370px\",\n              \n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={4}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      PATIENT BOOKING TIMESTAMP :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {\" \"}\n                      {dateformat(props.booking.timeStamp, \"isoDateTime\")}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      BOOKED DATE AND TIME :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {dateformat(\n                        getDateFromBooking(props.booking),\n                        \"isoDateTime\"\n                      )}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP ATTENDED :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          props.booking.samplingTimeStamp,\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SAMPLE TAKEN :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - COLLECTED BY COURIER :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 35),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - RESULTS RECEIVED :{\" \"}\n                    </span>\n                    {linkTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(linkTimeStamp, \"isoDateTime\")}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SENT TO PATIENT :{\" \"}\n                    </span>\n                    {linkTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(linkTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"default\">\n                Back\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\",\n    BLOOD_COLOR: \"#dc2626\",\n    DERMA_COLOR: \"#323e9a\",\n    SCREENING_COLOR: \"#006b8f\",\n\n}\n","import API from './api';\n\nexport default class InvoiceService{\n\n    static createInvoice = (payload) =>\n    {\n        return  API.post('/api/medex/invoice/createinvoice', payload)\n    }\n\n    static updateInvoice = (invoiceNumber, payload) =>\n    {\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\n    }\n\n    static deleteinvoice = (invoiceNumber) =>\n    {\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getInvoiceByBookingId = (bookingId) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\n    }\n\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getCodeDetails = (code) =>\n    {\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\n    }\n\n    static getAllCodes = () =>\n    {\n        return API.get(`/api/medex/invoice/getallcodes`)\n    }\n\n    static downloadInvoice = (id) =>\n    {\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static emailInvoice = (id, email) =>\n    {\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\n    }\n\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"./services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      console.log(props.invoice.items)\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(\"EDIT INVOICE\");\n    } else {\n      setTitle(\"INVOICE ISSUANCE\");\n    }\n\n    fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice, props.open]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item style={{ width: \"100%\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={10}>\n                        <Autocomplete\n                          id=\"code-auto-complete\"\n                          value={code}\n                          onChange={(event, newValue) => {\n                            setCode(newValue);\n                          }}\n                          options={allCodes}\n                          getOptionLabel={(option) =>\n                            `.${option.code} -- ${\n                              option.description\n                            } -- ${parseFloat(\n                              option.price\n                            ).toLocaleString(\"en-GB\", {\n                              style: \"currency\",\n                              currency: \"GBP\",\n                            })}`\n                          }\n                          style={{ width: \"750px\" }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"System Codes\"\n                              helperText=\"Standard codes already defined in the system\"\n                            />\n                          )}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"15px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={8}>\n                        <TextField\n                          error={descriptionError}\n                          value={description}\n                          onChange={descriptionChanged}\n                          fullWidth\n                          label=\"Description (Custom)\"\n                          name=\"desc\"\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\n                          id=\"desc-id\"\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <TextField\n                          error={priceError}\n                          value={price}\n                          onChange={priceChanged}\n                          fullWidth\n                          label=\"Price\"\n                          name=\"price\"\n                          id=\"price-id\"\n                          InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked2}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"12px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"30px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"300px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid>\n              </Grid>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport ResendEmailsDialog from \"./ResendEmailsDialog\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport TimeStampDialog from \"./TimeStampDialog\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n    marginBottom: \"-8px\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n    marginBottom: \"-8px\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"80px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const getDefaultCodes = (_booking) => {\n    const defaultCodes = [];\n    if (!_booking) return;\n\n    if (_booking.tr) {\n      defaultCodes.push({\n        code: \"PCRTR\",\n        description: \"PCR TEST TO RELEASE\",\n        price: 250,\n      });\n    } else {\n      defaultCodes.push({\n        code: \"PCR\",\n        description: \"PCR SWAB TEST\",\n        price: 199,\n      });\n      if (_booking.antiBodyTest) {\n        defaultCodes.push({\n          code: \"PCRA\",\n          description: \"PCR ANTIBODY TEST\",\n          price: 99,\n        });\n        defaultCodes.push({\n          code: \"PHLE\",\n          description: \"PHLEBOTOMY\",\n          price: 50,\n        });\n      }\n      if (_booking.certificate) {\n        defaultCodes.push({\n          code: \"PCRCERT\",\n          description: \"PCR FIT TO FLY CERTIFICATE\",\n          price: 50,\n        });\n      }\n    }\n    return defaultCodes;\n  };\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [gender, setGender] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [forename, setForename] = React.useState(\"\");\n  const [surname, setSurnme] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [dob, setDOB] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [postCode, setPostCode] = React.useState(\"\");\n  const [address, setAddress] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [passport, setPassport] = React.useState(\"\");\n  const [passport2, setPassport2] = React.useState(\"\");\n  const [certificate, setCertificate] = React.useState(false);\n  const [antiBodyTest, setAntiBodyTest] = React.useState(false);\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [covidVaccine, setCovidVaccine] = React.useState(\"\");\n\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        gender !== booking.gender ||\n        forename !== booking.forenameCapital ||\n        surname !== booking.surnameCapital ||\n        title !== booking.title ||\n        email !== booking.email ||\n        dob !== FormatDateFromString(booking.birthDate) ||\n        tel !== booking.phone ||\n        postCode !== booking.postCode ||\n        address !== booking.address ||\n        passport !== booking.passportNumber ||\n        passport2 !== booking.passportNumber2 ||\n        certificate !== booking.certificate ||\n        antiBodyTest !== booking.antiBodyTest ||\n        covidVaccine !== booking.covidVaccine\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const genderChanged = (event) => {\n    setGender(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const titleChanged = (event) => {\n    setTitle(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const forenameChanged = (event) => {\n    setForename(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const surnameChanged = (event) => {\n    setSurnme(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const postCodeChanged = (event) => {\n    setPostCode(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const addressChanged = (event) => {\n    setAddress(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const passportChanged = (event) => {\n    setPassport(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const passport2Changed = (event) => {\n    setPassport2(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const certificateChanged = (event) => {\n    setCertificate(event.target.checked);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const antiBodyTestChanged = (event) => {\n    setAntiBodyTest(event.target.checked);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const covidVaccineChanged = (event) => {\n    setCovidVaccine(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <span className={classes.BookedLabel}> Booking Made </span>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <span className={classes.PatientAttendedLabel}> Patient Attended </span>\n      );\n    } else if (status === \"sample_taken\") {\n      return <span className={classes.SampleTakenLabel}> Sample Taken </span>;\n    } else if (status === \"report_sent\") {\n      return <span className={classes.ReportSentLabel}> Report Sent </span>;\n    } else if (status === \"report_cert_sent\") {\n      return (\n        <span className={classes.ReportCertSentLabel}>\n          {\" \"}\n          {`Report & Certificate Sent`}{\" \"}\n        </span>\n      );\n    } else if (status === \"positive\") {\n      return <span className={classes.PositiveLabel}> {`POSITIVE`} </span>;\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const downloadForm1 = (id) => {\n    PDFService.downloadCovidForm1(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadForm2 = (id) => {\n    PDFService.downloadCovidForm2(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadLabResults = (id) => {\n    PDFService.downloadPdfResult(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadCertificate = (id) => {\n    PDFService.downloadPdfCert(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setForename(person.forenameCapital);\n      setSurnme(person.surnameCapital);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setGender(person.gender.toUpperCase());\n      setTitle(person.title.toUpperCase());\n      setEmail(person.email.toUpperCase());\n      setDOB(FormatDateFromString(person.birthDate));\n      setTel(person.phone.toUpperCase());\n      setPostCode(person.postCode.toUpperCase());\n      setAddress(person.address.toUpperCase());\n      if (person.notes) {\n        setNotes(person.notes.toUpperCase());\n      } else {\n        setNotes(\"\");\n      }\n\n      if (person.passportNumber) {\n        setPassport(person.passportNumber.toUpperCase());\n      } else {\n        setPassport(\"\");\n      }\n\n      if (person.passportNumber2) {\n        setPassport2(person.passportNumber2.toUpperCase());\n      } else {\n        setPassport2(\"\");\n      }\n\n      setCertificate(person.certificate);\n      setAntiBodyTest(person.antiBodyTest);\n      setCovidVaccine(person.covidVaccine)\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.certificate = certificate;\n      booking.antiBodyTest = antiBodyTest;\n      booking.gender = gender;\n      booking.title = title;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.email = email;\n      booking.phone = tel;\n      booking.postCode = postCode;\n      booking.address = address;\n      booking.passportNumber = passport;\n      booking.passportNumber2 = passport2;\n      booking.forename = forename;\n      booking.surname = surname;\n      booking.notes = notes;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n      booking.covidVaccine = covidVaccine;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const resendEmails = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenResendDialog(true);\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={props.onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div\n                style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}\n                hidden={state.role === \"pcrlab\"}\n              >\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/pcr/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.PCR_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                PCR\n              </div>\n\n              {booking.tr && (\n                <div style={{ position: \"absolute\", right: \"15px\" }}>TR</div>\n              )}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.forenameCapital} ${booking.surnameCapital}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  paddingTop: \"20px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit &&\n                            editMode.person._id === booking._id) ||\n                          state.role === \"pcrlab\"\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id) ||\n                          state.role === \"pcrlab\"\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleDeleteModeChanged(true, booking);\n                          }}\n                          className={classes.DeleteButton}\n                        >\n                          Delete This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>GENDER</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.gender?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={gender}\n                                onChange={genderChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TITLE</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.title?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={title}\n                                onChange={titleChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FORENAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.forenameCapital}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={forename}\n                                onChange={forenameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>SURNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.surnameCapital}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={surname}\n                                onChange={surnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>D.O.B</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.dobError}\n                                className={classes.TextBox}\n                                value={dob}\n                                onChange={dobChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}></li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>POST CODE</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.postCode?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={postCode}\n                                onChange={postCodeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>ADDRESS</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.address?.toUpperCase()}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={address}\n                            onChange={addressChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      {booking.selfIsolate && (\n                        <React.Fragment>\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              Self-Isolate Post Code\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.postCodeSI}\n                            </span>\n                          </li>\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              Self-Isolate Address\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.addressSI}\n                            </span>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              PASSPORT NO.\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.passportNumber?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={passport}\n                                onChange={passportChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          {!booking.tr && (\n                            <Grid item xs={6}>\n                              <span className={classes.infoTitle}>\n                                SECOND PASSPORT NO.\n                              </span>\n                              <span\n                                hidden={\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                }\n                                className={classes.infoData}\n                              >\n                                {booking.passportNumber2?.toUpperCase()}\n                              </span>\n                              <span\n                                hidden={\n                                  !(\n                                    editMode.edit &&\n                                    editMode.person._id === booking._id\n                                  )\n                                }\n                                className={classes.infoData}\n                              >\n                                <TextField\n                                  fullWidth\n                                  className={classes.TextBox}\n                                  value={passport2}\n                                  onChange={passport2Changed}\n                                  inputProps={{\n                                    style: {\n                                      padding: 0,\n                                    },\n                                  }}\n                                ></TextField>\n                              </span>\n                            </Grid>\n                          )}\n                        </Grid>\n                      </li>\n\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              NHS Number\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.NHSNumber ?? \"-\"}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>Ethnicity</span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.ethnicity}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Arrival Date\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.arrivalDate}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Flight Number\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.flightNumber}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Last Departed Date\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.lastDepartedDate}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Travelling From\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.travellingFrom}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li hidden={booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              REQUEST FOR CERTIFICATE\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.certificate ? (\n                                <CheckIcon className={classes.checkIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                  <Checkbox\n                                    className={classes.formControl}\n                                    color=\"secondary\"\n                                    name=\"certificate\"\n                                    checked={certificate}\n                                    onChange={certificateChanged}\n                                  />\n                                }\n                                label=\"\"\n                              />\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              REQUEST FOR ANTIBODY TEST\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.antiBodyTest ? (\n                                <CheckIcon className={classes.checkIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                  <Checkbox\n                                    className={classes.formControl}\n                                    color=\"secondary\"\n                                    name=\"certificate\"\n                                    checked={antiBodyTest}\n                                    onChange={antiBodyTestChanged}\n                                  />\n                                }\n                                label=\"\"\n                              />\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li style={{ paddingTop: \"10px\", paddingBottom:\"10px\" }}>\n                      <span className={classes.infoTitle}>\n                                COVID VACCINE\n                              </span>\n                              <span\n                                hidden={\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                }\n                                className={classes.infoData}\n                              >\n                                {booking.covidVaccine}\n                              </span>\n                              <span\n                                hidden={\n                                  !(\n                                    editMode.edit &&\n                                    editMode.person._id === booking._id\n                                  )\n                                }\n                                className={classes.infoData}\n                              >\n                                <TextField\n                                  fullWidth\n                                  className={classes.TextBox}\n                                  value={covidVaccine}\n                                  onChange={covidVaccineChanged}\n                                  inputProps={{\n                                    style: {\n                                      padding: 0,\n                                    },\n                                  }}\n                                ></TextField>\n                              </span>\n\n                      </li>          \n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {state.role !== \"pcrlab\" &&\n                          booking.status === \"sample_taken\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {(booking.status === \"report_sent\" ||\n                          booking.status === \"report_cert_sent\" ||\n                          booking.status === \"positive\") &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          state.role !== \"pcrlab\" && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              className={classes.ResendEmailsButton}\n                              onClick={(event) =>\n                                resendEmails(event, booking._id)\n                              }\n                            >\n                              Resend emails\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadForm1(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadForm2(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm2(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Lab Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          state.role === \"pcrlab\" ||\n                          booking.deleted ||\n                          (booking.status !== \"report_sent\" &&\n                            booking.status !== \"report_cert_sent\" &&\n                            booking.status !== \"positive\")\n                        }\n                      >\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadLabResults(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Lab Results\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          state.role === \"pcrlab\" ||\n                          booking.deleted ||\n                          (booking.status !== \"report_cert_sent\" &&\n                            booking.status !== \"positive\")\n                        }\n                      >\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadCertificate(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Certificate\n                        </Button>\n                      </li>\n\n                      <li hidden={state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<HistoryIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            setSelectedBooking(booking);\n                            setOpenTimeStampDialog(true);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Show Audit Trail\n                        </Button>\n                      </li>\n\n                     \n\n                      {state.role !== \"pcrlab\" && (\n                        <div>\n                           <Divider />\n                          <li\n                            className={classes.li}\n                            style={{ marginTop: \"20px\" }}\n                          >\n                            <span className={classes.infoTitle}>\n                              INVOICE # :{\" \"}\n                            </span>{\" \"}\n                            <span style={{ paddingLeft: \"0px\" }}>\n                              {!invoiceLoaded && (\n                                <span className={classes.invoiceNumber}>\n                                  {\" \"}\n                                  ...{\" \"}\n                                </span>\n                              )}\n                              {invoiceLoaded && invoice && (\n                                <span className={classes.invoiceNumber}>\n                                  {\" \"}\n                                  {invoice.invoiceNumber}{\" \"}\n                                </span>\n                              )}\n                              {invoiceLoaded && !invoice && (\n                                <span\n                                  className={classes.invoiceNumber}\n                                  style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                                >\n                                  {\" \"}\n                                  N/A{\" \"}\n                                </span>\n                              )}\n                            </span>\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              !booking.deleted && (\n                                <React.Fragment>\n                                  {invoiceLoaded && !invoice && (\n                                    <Button\n                                      variant=\"outlined\"\n                                      color=\"primary\"\n                                      className={classes.PayButton}\n                                      onClick={() => OpenInvoiceDialog()}\n                                    >\n                                      Issue Invoice\n                                    </Button>\n                                  )}\n\n                                  {invoiceLoaded && invoice && (\n                                    <React.Fragment>\n                                      <Button\n                                        variant=\"outlined\"\n                                        startIcon={<PrintIcon />}\n                                        color=\"primary\"\n                                        className={classes.printInvoiceButton}\n                                        onClick={() =>\n                                          downloadInvoice(invoice._id)\n                                        }\n                                      >\n                                        Download Invoice\n                                      </Button>\n\n                                      <Button\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.editInvoiceButton}\n                                        onClick={() => OpenInvoiceDialog()}\n                                      >\n                                        Edit Invoice\n                                      </Button>\n\n                                      <Button\n                                        disabled={\n                                          !booking.email ||\n                                          booking.email.length < 3\n                                        }\n                                        startIcon={<SendIcon />}\n                                        type=\"button\"\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                          sendInvoiceEmail(\n                                            invoice._id,\n                                            booking.email\n                                          );\n                                        }}\n                                        style={{\n                                          position: \"relative\",\n                                          marginLeft: \"10px\",\n                                          paddingRight: \"130px\",\n                                          fontSize: \"0.8rem\",\n                                        }}\n                                      >\n                                        Send Invoice By Email\n                                        {emailSentInvoice && (\n                                          <div\n                                            style={{\n                                              position: \"absolute\",\n                                              right: \"10px\",\n                                              top: \"5px\",\n                                              color: \"#05ad19\",\n                                            }}\n                                          >\n                                            Email Sent\n                                          </div>\n                                        )}\n                                      </Button>\n                                    </React.Fragment>\n                                  )}\n                                </React.Fragment>\n                              )}\n                          </li>\n\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              TOTAL CHARGES\n                            </span>{\" \"}\n                            <span\n                              className={\n                                calculatePrice(booking) <= 199\n                                  ? classes.infoDataCharges\n                                  : classes.infoDataChargesHigher\n                              }\n                            >{`£${calculatePrice(booking)}`}</span>\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              !booking.paid &&\n                              !booking.deleted && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.PayButton}\n                                  onClick={(event) => Pay(event, booking._id)}\n                                >\n                                  Pay\n                                </Button>\n                              )}\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              booking.paid && (\n                                <React.Fragment>\n                                  <span className={classes.PayLabel}>\n                                    {\" \"}\n                                    <CheckIcon\n                                      className={classes.checkIconSmall}\n                                    />{\" \"}\n                                    Paid by {booking.paidBy}\n                                    {booking.paidBy === \"corporate\"\n                                      ? ` \"${booking.corporate}\" `\n                                      : \"\"}\n                                  </span>\n\n                                  <Tooltip title=\"Undo Payment\">\n                                    <IconButton\n                                      onClick={() => setOpenUndoPayDialog(true)}\n                                    >\n                                      <UndoIcon style={{ color: \"red\" }} />\n                                    </IconButton>\n                                  </Tooltip>\n                                </React.Fragment>\n                              )}\n                          </li>\n                        </div>\n                      )}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <ResendEmailsDialog\n              booking={selectedBooking}\n              open={openResendDialog}\n              handleClose={handleCloseResendDialog}\n            />\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              defaultCodes={getDefaultCodes(props.booking)}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <TimeStampDialog\n              booking={selectedBooking}\n              open={openTimeStampDialog}\n              handleClose={handleCloseTimeStampDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"./../GlobalState\";\nimport { getMenuIndex } from \"./../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else if (str === \"tr\") {\n    return `Test & Release Bookings`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  if (props.date === \"recent\" && state.role !== \"pcrlab\") {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"tr\") ? (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\",\n                    color: \"#7e0082\",\n                  }}\n                >\n                  TR\n                </span>\n              ) : (\n                \"\"\n              )}\n\n              {state.role !== \"pcrlab\" && (\n                <Button\n                  color=\"primary\"\n                  onClick={(event) => openDetailsDialog(event, params.value)}\n                >\n                  <SearchIcon />\n                </Button>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            // <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false}));\n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n            >\n              {params.value}\n            </Link>\n            // </Tooltip>\n          );\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 150 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 150 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"email\",\n        headerName: \"Email\",\n        width: 200,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      {\n        field: \"passportNumber\",\n        headerName: \"Passport No.\",\n        width: 250,\n        //  valueGetter: (params) => {\n        //   const pass2 = params.getValue('passportNumber2');\n        //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\n        //   {\n        //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\n        //   }\n        //   else\n        //   {\n        //     return params.getValue('passportNumber')?.toUpperCase();\n        //   }\n        // }\n      },\n      {\n        field: \"certificate\",\n        headerName: \"Certificate\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"antiBodyTest\",\n        headerName: \"Antibody Test\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"postCode\",\n        headerName: \"Post Code\",\n        width: 150,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      {\n        field: \"address\",\n        headerName: \"Address\",\n        width: 500,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      // { field: 'notes', headerName: 'Notes', width: 500 },\n    ];\n  } else if (state.role === \"pcrlab\") {\n    columns = [\n      {\n        field: \"bookingDate\",\n        headerName: \"Booking Date\",\n        width: 200,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"Booking Time\",\n        width: 200,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 300 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 300 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n    ];\n  } else {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"tr\") ? (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\",\n                    color: \"#7e0082\",\n                  }}\n                >\n                  TR\n                </span>\n              ) : (\n                \"\"\n              )}\n\n              {state.role !== \"pcrlab\" && (\n                <Button\n                  color=\"primary\"\n                  onClick={(event) => openDetailsDialog(event, params.value)}\n                >\n                  <SearchIcon />\n                </Button>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return <CloseIcon className={classes.closeIcon} />;\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            // <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n              onClick={() => {\n                // console.log(params.value);\n                // setState(state => ({...state, currentMenuIndex: getMenuIndex(`findByRef`)}));\n                // setState(state => ({...state, ref : params.value}));\n                // setState(state => ({...state, refError : false}));\n                // setState(state => ({...state, foundRecords : []}));\n                // setState(state => ({...state, findRecords : !state.findRecords}));\n              }}\n            >\n              {params.value}\n            </Link>\n            // </Tooltip>\n          );\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 150 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 150 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"email\",\n        headerName: \"Email\",\n        width: 200,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      {\n        field: \"passportNumber\",\n        headerName: \"Passport No.\",\n        width: 250,\n        // valueGetter: (params) => {\n        //   const pass2 = params.getValue('passportNumber2');\n        //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\n        //   {\n        //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\n        //   }\n        //   else\n        //   {\n        //     return params.getValue('passportNumber')?.toUpperCase();\n        //   }\n        // }\n      },\n      {\n        field: \"certificate\",\n        headerName: \"Certificate\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"antiBodyTest\",\n        headerName: \"Antibody Test\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"postCode\",\n        headerName: \"Post Code\",\n        width: 150,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      {\n        field: \"address\",\n        headerName: \"Address\",\n        width: 500,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      // { field: 'notes', headerName: 'Notes', width: 500 },\n    ];\n  }\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: true,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const dateFormatter = (str) => {\n    return str;\n  };\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = (top) => {\n    var api = BookService.getAllBookings;\n    if (props.date === \"today\") {\n      api = BookService.getTodayBookings;\n    } else if (props.date === \"old\") {\n      api = BookService.getOldBookings;\n    } else if (props.date === \"future\") {\n      api = BookService.getFutureBookings;\n    } else if (props.date === \"recent\") {\n      api = BookService.getRecentBookingsAll;\n    } else if (props.date === \"live\") {\n      api = BookService.getLiveBookings;\n    } else if (props.date === \"completed\") {\n      api = BookService.getCompletedBookings;\n    } else if (props.date === \"positive\") {\n      api = BookService.getPositiveBookings;\n    } else if (props.date === \"deleted\") {\n      api = BookService.getDeletedBookings;\n    } else if (props.date === \"late\") {\n      api = BookService.getLateBookings;\n    } else if (props.date === \"tr\") {\n      api = BookService.getAllTRBookings;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(top)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    setTopCount(25);\n    loadData(25);\n  }, [props.date]);\n\n  useEffect(() => {\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter(\n        (element) =>\n          element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          `${element.forename} ${element.surname}`\n            .toLowerCase()\n            .indexOf(filter.toLowerCase()) >= 0\n      );\n\n      setData({\n        bookings: [...filteredData],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    } else {\n      setData({\n        bookings: [...data.cachedBookings],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    loadData(topCount);\n  }, [state.bookingDialogDataChanged]);\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  };\n\n  const openDetailsDialog = (event, id) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.userId.username === \"admin\" && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        autoOk={true}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        autoOk={true}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {FormatDateFromString(booking.birthDate)}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Grid, LinearProgress, Tooltip } from '@material-ui/core';\nimport * as dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport BookingDialog from './BookingDialog';\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth : \"90px\",\n    minHeight: \"30px\",\n    border : \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight : \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius : \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n        background: \"#3f51b5\",\n        color: \"#ebedf7\"\n      },\n}\n\n\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const[current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() => \n  {\n    const interval = setInterval(() => {  \n      setCurrent(new Date());\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval);\n    }\n\n  }, []);\n\n  useEffect(() => \n  {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot)\n      return;\n    const todayStr = dateformat(current, 'yyyy-mm-dd');\n    setLoading(true)\n    BookService.getBookingsByDateStrandTime(todayStr,currentTimeSlot).then(res =>\n      {\n        setLoading(false)\n        if (res.data.status === 'OK')\n        {\n            setBookings([...res.data.bookings]);\n        }   \n\n      }).catch(err =>\n        {\n          setLoading(false)\n          console.log(err);\n        });\n\n  }, [current]);\n\n  const getBookingsBox = (_bookings) =>\n  {\n      if (_bookings && _bookings.length > 0)\n      {\n         return (\n\n          <div className={classes.root}>\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={0}>\n\n                  { _bookings.map(booking => (\n\n                    <Grid item>\n\n                        <div className={classes.bookingBox} onClick={event => bookingCliked(event,booking)}>\n\n                            <span style={{textAlign:\"center\"}}> {`${booking.surnameCapital}`.substring(0,10)} </span>\n\n                        </div>\n\n                  </Grid>\n\n                  ))}\n\n              \n            </Grid>\n\n          </div>\n         )\n             \n        }                   \n  }\n\n  const bookingCliked = (event, booking) =>\n  {\n      setSelectedBooking(booking);\n      setOpenDialog(true);\n  }\n\n  const handleCloseDialog = () =>\n  {\n      setOpenDialog(false);\n  }\n\n  return (\n    <React.Fragment>\n\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, 'dd mmmm, yyyy') } \n      </Typography>\n     \n        {getBookingsBox(bookings)}\n      \n\n      <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('pcr',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Name</TableCell>\n            <TableCell>Surname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>D.O.B</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.forename}</TableCell>\n              <TableCell>{row.surname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{FormatDateFromString(row.birthDate)}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Dialog, DialogContent, DialogTitle, Grid, LinearProgress, Link, Table, TableBody, TableCell, TableHead, TableRow, Tooltip } from '@material-ui/core';\nimport BookService from './services/BookService';\n\nimport {\n  PieChart, Pie, Sector, Cell,\n} from 'recharts';\n\nconst COLORS = ['#00b33e', '#0070e0', '#bb00c4'];\n\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, value, index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fontSize=\"14px\" fontWeight=\"500\" fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${value} `}\n    </text>\n  );\n};\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  ReportLabels: {\n    position: \"absolute\",\n    top: \"80px\",\n    left: \"0px\"\n  },\n\n  AverageLabel: {\n    position: \"absolute\",\n    top: \"190px\",\n    right: \"30px\",\n    fontSize: \"12px\",\n    color: \"#0070e0\",\n    fontWeight: \"600\",\n  },\n\n  less12Label: {\n    fontSize: \"12px\",\n    color: \"#00b33e\",\n    fontWeight: \"600\",\n    paddingLeft: \"5px\",\n    borderLeft: \"5px solid #00b33e\",\n    marginBottom: \"10px\",\n  },\n\n  less24Label: {\n    fontSize: \"12px\",\n    color: \"#0070e0\",\n    fontWeight: \"600\",\n    paddingLeft: \"5px\",\n    borderLeft: \"5px solid #0070e0\",\n    marginBottom: \"10px\",\n  },\n\n  less36Label: {\n    fontSize: \"12px\",\n    color: \"#bb00c4\",\n    fontWeight: \"600\",\n    paddingLeft: \"5px\",\n    borderLeft: \"5px solid #bb00c4\",\n    marginBottom: \"10px\",\n  },\n\n  seeMore: {\n    position: \"absolute\",\n    top: \"191px\",\n    left: \"2px\"\n  },\n\n  TableTitle: {\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: \"1.1rem\",\n    fontWeight: \"500\",\n    backgroundColor: \"#00852a\",\n    color: \"#fff\",\n\n    border: \"1px solid #00852a\",\n    padding: \"5px\"\n  },\n\n  TableBorder: {\n    border: \"1px solid #00852a\",\n    marginBottom: \"20px\"\n\n  }\n\n});\n\n\nexport default function ResultsTimeReport() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [report, setReport] = React.useState({});\n\n  const [reportLast7, setReportLast7] = React.useState({});\n  const [reportLast30, setReportLast30] = React.useState({});\n\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const [data, setData] = React.useState(null);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    }\n\n  }, []);\n\n  useEffect(() => {\n\n    setLoading(true)\n    BookService.getTestsTimeReport().then(res => {\n      const result = [];\n      setLoading(false)\n      if (res.data.status === 'OK') {\n        setReport(res.data.result);\n        // console.log(res.data.result);\n        result.push({ name: 'lessThan12', value: res.data.result.lessThan12 });\n        result.push({ name: 'lessThan24', value: res.data.result.lessThan24 });\n        result.push({ name: 'lessThan36', value: res.data.result.lessThan36 });\n\n        // result.push({name: 'lessThan48', value : res.data.result.lessThan48 });\n        setData(result);\n      }\n\n    }).catch(err => {\n      setLoading(false)\n      console.error(err);\n    });\n\n    BookService.getTestsTimeReportLast7().then(res => {\n      if (res.data.status === 'OK') {\n        setReportLast7(res.data.result);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n\n    BookService.getTestsTimeReportLast30().then(res => {\n      if (res.data.status === 'OK') {\n        setReportLast30(res.data.result);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n\n\n\n\n  }, []);\n\n  const getReportLabels = () => {\n    return (\n\n      <div className={classes.ReportLabels}>\n        <div className={classes.less12Label}> {`12 Hours`} </div>\n        <div className={classes.less24Label}> {`24 Hours`} </div>\n        <div className={classes.less36Label}> {`36 Hours`} </div>\n      </div>\n\n    );\n  }\n\n  const getAverageLabel = () => {\n    return (\n\n      <div className={classes.AverageLabel}>\n        avg = <span style={{ fontSize: \"14px\" }}> {`${report.avg}`} </span> hours\n      </div>\n\n    );\n  }\n\n  const seeMoreClicked = (event) => {\n    event.preventDefault();\n    setOpen(true);\n  }\n\n  return (\n    <React.Fragment>\n\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n\n        <Title>PCR RESULTS SUMMARY</Title>\n\n        {data && (\n          <>\n\n            <PieChart width={250} height={150}>\n              <Pie\n                data={data}\n                cx={170}\n                cy={70}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={65}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {\n                  data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                }\n              </Pie>\n            </PieChart>\n\n\n            {getReportLabels()}\n            {getAverageLabel()}\n\n            <div className={classes.seeMore}>\n              <Link color=\"primary\" href=\"#\" onClick={seeMoreClicked}>\n                See Details\n                            </Link>\n            </div>\n\n\n            <Dialog style={{ padding: \"50px\" }} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n              <DialogTitle style={{ textAlign: \"center\" }} id=\"simple-dialog-title\">PCR Results Time Report</DialogTitle>\n              <DialogContent>\n                <div className={classes.TableTitle}>\n                  All Records\n                </div>\n                <div className={classes.TableBorder}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Recieved in Less Than</TableCell>\n                        <TableCell>Count</TableCell>\n                        <TableCell>Percent</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow key=\"row1\">\n                        <TableCell>12 Hours</TableCell>\n                        <TableCell>{report.lessThan12}</TableCell>\n                        <TableCell>{report.lessThan12Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row2\">\n                        <TableCell>24 Hours</TableCell>\n                        <TableCell>{report.lessThan24}</TableCell>\n                        <TableCell>{report.lessThan24Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row3\">\n                        <TableCell>36 Hours</TableCell>\n                        <TableCell>{report.lessThan36}</TableCell>\n                        <TableCell>{report.lessThan36Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell>48 Hours</TableCell>\n                        <TableCell>{report.lessThan48}</TableCell>\n                        <TableCell>{report.lessThan48Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell style={{ fontWeight: \"800\" }}>Total Results Received : </TableCell>\n                        <TableCell style={{ fontWeight: \"600\" }}>{report.lessThan48 + report.lessThan36 + report.lessThan24 + report.lessThan12}</TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n\n                <div className={classes.TableTitle}>\n                  Last 7 Days\n                </div>\n                <div className={classes.TableBorder}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Recieved in Less Than</TableCell>\n                        <TableCell>Count</TableCell>\n                        <TableCell>Percent</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow key=\"row1\">\n                        <TableCell>12 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan12}</TableCell>\n                        <TableCell>{reportLast7.lessThan12Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row2\">\n                        <TableCell>24 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan24}</TableCell>\n                        <TableCell>{reportLast7.lessThan24Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row3\">\n                        <TableCell>36 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan36}</TableCell>\n                        <TableCell>{reportLast7.lessThan36Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell>48 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan48}</TableCell>\n                        <TableCell>{reportLast7.lessThan48Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell style={{ fontWeight: \"800\" }}>Total Results Received : </TableCell>\n                        <TableCell style={{ fontWeight: \"600\" }}>{reportLast7.lessThan48 + reportLast7.lessThan36 + reportLast7.lessThan24 + reportLast7.lessThan12}</TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n\n                <div className={classes.TableTitle}>\n                  Last 30 Days\n                </div>\n                <div className={classes.TableBorder}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Recieved in Less Than</TableCell>\n                        <TableCell>Count</TableCell>\n                        <TableCell>Percent</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow key=\"row1\">\n                        <TableCell>12 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan12}</TableCell>\n                        <TableCell>{reportLast30.lessThan12Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row2\">\n                        <TableCell>24 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan24}</TableCell>\n                        <TableCell>{reportLast30.lessThan24Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row3\">\n                        <TableCell>36 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan36}</TableCell>\n                        <TableCell>{reportLast30.lessThan36Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell>48 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan48}</TableCell>\n                        <TableCell>{reportLast30.lessThan48Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell style={{ fontWeight: \"800\" }}>Total Results Received : </TableCell>\n                        <TableCell style={{ fontWeight: \"600\" }}>{reportLast30.lessThan48 + reportLast30.lessThan36 + reportLast30.lessThan24 + reportLast30.lessThan12}</TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n\n\n\n\n\n              </DialogContent>\n            </Dialog>\n\n\n\n\n          </>\n        )}\n\n      </div>\n\n\n\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\nimport ResultsTimeReport from './ResultsTimeReport';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={5}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Tests Summary */}\n                    <Grid item xs={12} md={4} lg={4}>\n                     <Paper className={fixedHeightPaper}>\n                        <ResultsTimeReport />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={3}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from './../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginLeft: \"50px\"\n  }\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function UnmatchedRecords() {\n\n  const classes = useStyles();\n\n  const columns = [\n    { field: 'id', headerName: '#', width: 50 },\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'forename', headerName: 'Forename', width: 200 },\n    { field: 'surname', headerName: 'Surname', width: 200 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<WbIncandescentIcon />}\n                onClick={event => smartMatchClicked(event, params.value)}\n                className={classes.smartMatchButton}\n              >\n                smart match\n                </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n                </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n\n              {state.role !== \"pcrlab\" && (\n\n                <Button\n                  disabled={params.value === disableId}\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<WbIncandescentIcon />}\n                  onClick={event => smartMatchClicked(event, params.value)}\n                  className={classes.smartMatchButton}\n                >\n                  smart match\n                </Button>\n              )}\n\n              {state.role !== \"pcrlab\" && (\n\n                <Button\n                  disabled={params.value === disableId}\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={event => unArchiveRecord(event, params.value)}\n                  className={classes.archiveButton}\n                >\n                  Undo\n                </Button>\n              )}\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState(state.role !== \"pcrlab\" ? 'unresolved' : 'archived');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n\n    if (state.role === \"pcrlab\") {\n      return\n    }\n\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setTimeout(() => {\n      setSeeDetailsBooking(null);\n    }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveRecord(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveRecord(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getUnmatchedRecords;\n    if (selectedTab === 'archived') {\n      api = BookService.getUnmatchedRecordsArchived;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n\n      return res.data;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab]);\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n          (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}> <WarningIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#444\" }}> Unmatched Records </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              UnResolved\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Forename:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.forename}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Surname:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.surname}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n          <BookingDialog\n            booking={seeDetailsBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n            deleteButtonDisabled={true}\n          />\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 100;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 5;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.forenameCapital.indexOf(search) >= 0\n                                                            ||  booking.surnameCapital.indexOf(search) >= 0\n                                                            ||  `${booking.forenameCapital} ${booking.surnameCapital}`.indexOf(search) >= 0\n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        if (state.role === 'pcrlab')\n            return\n\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'sample_taken':\n                return classes.bookingBoxSampleTaken;\n            case 'positive':\n                return classes.bookingBoxPositive;\n            case 'report_sent':\n            case 'report_cert_sent':\n                return classes.bookingBoxReportSent;     \n\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length > 0)\n        {\n           return (\n                _bookings.map(booking => (\n\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={getBookingClass(booking.status)} onClick={event => bookingCliked(event,booking)}>\n\n                        {`${booking.forenameCapital}-${booking.surnameCapital}`.substring(0,15)}\n\n                    </div>\n\n                ))\n\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n\n   static changeDepositBooking = (bookingId, deposit) => {\n      return API.post(`/api/gynae/book/changedepositbooking?id=${bookingId}&deposit=${deposit}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gynae/book/addnewbooking`, payload);\n   }\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gynae/book/sendregformemail?id=${bookingId}`);\n   }\n\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gynae/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gynae/book/getshouldrefundscount`);\n   }\n\n   static manualRefundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/payment/manualrefundpayment`, {bookingId: bookingId});\n   }\n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gynae/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gynae/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gynae/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gynae/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gynae/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gynae/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gynae/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gynae/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/gynae/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gynae/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/gynae/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/gynae/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/gynae/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGynaeRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgynaeregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n    static downloadCovidForm1 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadCovidForm2 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfResult = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfCert = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"OTC Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadBloodRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadbloodregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getAllCodes = () =>\n   {\n       return API.get(`/api/medex/invoice/getallbloodcodesadmin`)\n   }\n\n   \n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n\n   \n\n   static getNewBloodResultsCount = () =>\n   {\n      return API.get(`/api/blood/book/getnewbloodresultscount`);\n   }\n\n   static getSentBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getsentbloodreports`);\n   }\n\n\n   static getArchivedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedbloodreports`);\n   }\n\n   static getNewMatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getnewmatchedbloodreports`);\n   }\n\n   static getArchivedMatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedmatchedbloodreports`);\n   }\n\n   static getNewUnmatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getnewunmatchedbloodreports`);\n   }\n\n   static getArchivedUnmatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedunmatchedbloodreports`);\n   }\n\n   static sendBloodReportEmail = (bloodreportId, email, notes) =>\n   {\n      return API.post(`/api/blood/book/sendbloodreportemail?id=${bloodreportId}`, {email, notes});\n   }\n\n   static updateBloodReport = (bloodreportId, email, notes) =>\n   {\n      return API.post(`/api/blood/book/updatebloodreport?id=${bloodreportId}`, {email, notes});\n   }\n\n\n   static archiveBloodReport = (bloodreportId) =>\n   {\n      return API.post(`/api/blood/book/archivebloodreport?id=${bloodreportId}`);\n   }\n\n   static unArchiveBloodReport = (bloodreportId) =>\n   {\n      return API.post(`/api/blood/book/unarchivebloodreport?id=${bloodreportId}`);\n   }\n\n\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/blood/book/addnewbooking`, payload);\n   }\n   \n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/blood/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/blood/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/blood/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/blood/book/getshouldrefundscount`);\n   }  \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/blood/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/blood/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/blood/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/blood/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/blood/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/blood/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/blood/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/blood/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/blood/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/blood/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/blood/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/blood/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/blood/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/blood/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/blood/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/admin/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/admin/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/admin/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/admin/book/getallbookings?limit=${limit}`);\n    }\n\n    static searchAllBookings = (filter) =>\n    {\n      return API.post(`/api/admin/book/searchallbookings`,{filter:filter});\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/admin/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/admin/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/gp/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gp/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/gp/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/gp/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/gp/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gp/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GP_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GP\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadSTDRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadstdregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/std/book/addnewbooking`, payload);\n   }\n   \n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/std/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/std/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/std/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/std/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/std/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/std/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/std/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/std/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/std/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/std/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/std/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/std/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/std/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/std/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/std/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/std/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/std/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/std/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/std/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/std/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/std/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        service !== booking.packageName;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadSTDRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/std/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.STD_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                STD\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Package</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.packageName}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoTitle}\n                        >\n                          Estimated Price\n                        </span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.estimatedPrice}\n                        </span>\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n<BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"./BloodReportDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        dob !== FormatDateFromString(booking.birthDate) ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        service !== booking.packageName;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }else if (props.open){\n\n\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setDOB(FormatDateFromString(person.birthDate));\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadBloodRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () =>\n  {\n    setBloodReports(null)\n    try{\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0)\n      {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch(err)\n    {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () =>\n  {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) =>\n  {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  const [dob, setDOB] = React.useState(\"\");\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getIndivisualTestsString = (indivisualTests) => {\n    if (!indivisualTests)\n      return '-'\n    const tests = JSON.parse(indivisualTests);\n    let testsString = \"\";\n    tests.forEach((item) => {\n      testsString += item.description;\n      testsString += \" , \";\n    });\n    return testsString;\n  };\n\n  \n\n\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/blood/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"20px\",\n                  backgroundColor: CalendarColors.BLOOD_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {booking.doctorConsultation ? \"Blood + Doctor Consultation\" : \"Blood\"}\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                          <span className={classes.infoTitle}>D.O.B</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.dobError}\n                                className={classes.TextBox}\n                                value={dob}\n                                onChange={dobChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Package</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.packageName}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Indivisual Tests</span>\n                        <span\n                          className={classes.infoData}\n                        >\n                          {getIndivisualTestsString(booking.indivisualTests)}\n                        </span>\n                      </li>\n\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                      <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoTitle}\n                        >\n                          Estimated Price\n                        </span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.estimatedPrice}\n                        </span>\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon/>} style={{color:\"#dc2626\"}} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>  \n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                         </React.Fragment>\n                       )}     \n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadDermaRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloaddermaregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/derma/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/derma/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/derma/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/derma/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/derma/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/derma/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/derma/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/derma/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/derma/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/derma/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/derma/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/derma/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/derma/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/derma/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/derma/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/derma/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/derma/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/derma/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/derma/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/derma/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        service !== booking.package ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.package)\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.package = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadDermaRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/derma/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.DERMA_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Dermatology\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{paddingTop:\"20px\"}}>\n                      <span className={classes.infoTitle}>Service</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.package?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={service}\n                                onChange={serviceChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadScreeningRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadscreeningregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/screening/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/screening/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/screening/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/screening/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/screening/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/screening/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/screening/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/screening/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/screening/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/screening/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/screening/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/screening/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/screening/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/screening/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/screening/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/screening/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/screening/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/screening/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/screening/book/deletebookappointment?id=${id}`);\n   } \n\n   static confirmBooking = (id) =>\n   {\n      return API.post(`/api/screening/book/confirmbookappointment?bookingId=${id}`);\n   } \n\n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/screening/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/screening/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/screening/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/screening/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/screening/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/screening/book/getrecentbookings`);\n    }\n\n    static getPendingBookings= () =>\n    {\n       return API.get(`/api/screening/book/getpendingbookings`);\n    }\n\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\n\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: 999,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  PackageBox:{\n    width:\"100%\",\n    color: \"#005bb5\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    fontSize:\"1rem\",\n  }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openConfirmDialog, setOpenConfirmDialog] = React.useState(false);\n\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [birthDate, setBirthDate] = React.useState(\"\");\n\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setOpenConfirmDialog(false);\n    setSelectedBooking(null);\n  };\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        birthDate !== booking.birthDate\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const birthDateChanged = (event) => {\n    setBirthDate(event.target.value);\n    setValidationError({ ...validationError, birthDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setBirthDate(FormatDateFromString(person.birthDate));\n\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = person.service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n      booking.birthDate = RevertFormatDateFromString(birthDate);\n\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (booking.birthDate && !validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, birthDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const confirmBookingClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.confirmBooking(booking._id);\n      setSaving(false);\n      setOpenConfirmDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadScreeningRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n\n                {!booking.confirmed && (\n                  <div style={{color:\"red\", fontSize:\"1.1rem\", fontWeight:\"500\", border:\"2px solid red\", padding:\"5px\", borderRadius:\"8px\"}}>\n                    NOT CONFIRMED!\n                  </div>  \n                )}\n\n\n                {booking.confirmed && (\n                  <div style={{color:\"#258200\", fontSize:\"1.1rem\", fontWeight:\"500\", border:\"2px solid #258200\", padding:\"5px\", borderRadius:\"8px\"}}>\n                    CONFIRMED\n                  </div>  \n                )}\n\n              </div>  \n\n\n              {/* <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gp/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div> */}\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.SCREENING_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Screening\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"10px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n\n                      {!booking.confirmed && (\n                        <li style={{margin:\"20px 0px\"}}>\n                            <Button\n                              style={{height:\"50px\"}}\n                              color=\"primary\"\n                              fullWidth\n                              variant=\"contained\"\n                              onClick={()=> {\n                                setSelectedBooking(booking)\n                                setOpenConfirmDialog(true)\n                              }}\n                            >\n                              Confirm Booking\n\n                            </Button>\n\n                        </li>\n                      )}\n\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              DOB\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.birthDateError}\n                                className={classes.TextBox}\n                                value={birthDate}\n                                onChange={birthDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li style={{marginTop:\"20px\"}}>\n                        <span className={classes.infoTitle}>PACKAGE</span>\n\n                        <span className={classes.PackageBox}>\n                          {booking.service}\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openConfirmDialog}\n            onClose={handleCloseConfirmDialog}\n            aria-labelledby=\"confirm-dialog-title\"\n            aria-describedby=\"confirm-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#00a1c5\" }} id=\"confirm-dialog-title\">\n              {\"Confirm Booking\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                <span style={{fontWeight:\"500\"}}>\n                   Are you sure you want to confirm this booking?\n                </span>\n                <p>\n                  * After confirmation, email/sms will also be sent to the patient.\n                </p>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseConfirmDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={confirmBookingClicked}\n                color=\"primary\"\n                variant=\"contained\"\n                autoFocus\n              >\n                Yes, Confirm Booking\n              </Button>\n            </DialogActions>\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          </Dialog>\n\n\n\n        </React.Fragment>\n      )}\n\n          <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PCRBookingDialog from \"./../PCR/BookingDialog\";\nimport GPBookingDialog from \"./../GP/BookingDialog\";\nimport GynaeBookingDialog from \"./../Gynae/BookingDialog\";\nimport STDBookingDialog from \"./../STD/BookingDialog\";\nimport BloodBookingDialog from \"./../Blood/BookingDialog\";\nimport DermaBookingDialog from \"./../Derma/BookingDialog\";\nimport ScreeningBookingDialog from \"./../Screening/BookingDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  if (props.booking) {\n    switch (props.booking.clinic) {\n      case \"pcr\":\n        return (\n          <PCRBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n      case \"gp\":\n        return (\n          <GPBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <GynaeBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n      case \"std\":\n        return (\n          <STDBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n        case \"blood\":\n          return (\n            <BloodBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n          case \"derma\":\n          return (\n            <DermaBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n          case \"screening\":\n          return (\n            <ScreeningBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n\n\n      default:\n        return null;\n    }\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n  unstable_createMuiStrictModeTheme,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport * as EmailValidator from 'email-validator';\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport AdminBookingService from \"../Admin/services/BookService\";\n\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport { getInitialColumnReorderState } from \"@material-ui/data-grid\";\n\nimport { Document, Page } from 'react-pdf';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport BookingDialog from '../Admin/BookingDialog'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BloodReportDialog(props) {\n  const classes = useStyles();\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [changesSaved, setChangesSaved] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setDOB(FormatDateFromString(person.birthDate));\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n\n  useEffect(() => {\n    if (props.booking && props.open) {\n      loadFileUrl(props.booking._id)\n      loadBookingDetail(props.booking.bookingId)\n      setBooking(props.booking);\n      setEmail(props.booking.email)\n      setNotes(props.booking.notes)\n\n\n    }\n  }, [props.booking, props.open]);\n\n  const loadBookingDetail = async (_id) => {\n    setSelectedBooking(null)\n    if (!_id) {\n      return\n    }\n\n    try {\n      const res = await AdminBookingService.getBookingById(_id)\n      if (res.data && res.data.length > 0) {\n        setSelectedBooking(res.data[0])\n      }\n\n    } catch (err) {\n      console.error(err)\n    }\n\n\n  }\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const [fileURL, setFileURL] = React.useState(null)\n  const loadFileUrl = (id) => {\n    setFileURL(null)\n    PDFService.downloadPdfLabReport(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = function () {\n          var base64data = reader.result;\n          console.log(base64data);\n          setFileURL(base64data)\n        }\n        // const _fileURL = URL.createObjectURL(file);\n        // setFileURL(_fileURL)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadPdfLabReport(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendBloodReportEmail(id, email, notes)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n          setState(state => ({ ...state, bloodReportRefresh: !state.bloodReportRefresh }))\n          booking.emailSent = true\n\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const saveChanges = (id) => {\n    setSaving(true);\n    setChangesSaved(false);\n    BookService.updateBloodReport(id, email, notes)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setChangesSaved(true);\n          setState(state => ({ ...state, bloodReportRefresh: !state.bloodReportRefresh }))\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n\n  const onClose = () => {\n    setEmailSent(false);\n    setChangesSaved(false)\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    setEmail('')\n    setNotes('')\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  const [dob, setDOB] = React.useState(\"\");\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getIndivisualTestsString = (indivisualTests) => {\n    if (!indivisualTests)\n      return '-'\n    const tests = JSON.parse(indivisualTests);\n    let testsString = \"\";\n    tests.forEach((item) => {\n      testsString += item.description;\n      testsString += \" , \";\n    });\n    return testsString;\n  };\n\n  const getColorFromClinic = (clinic) => {\n    switch (clinic) {\n      case 'blood':\n        return CalendarColors.BLOOD_COLOR\n      case 'std':\n        return CalendarColors.STD_COLOR\n      case 'gp':\n        return CalendarColors.GP_COLOR\n      case 'gynae':\n        return CalendarColors.GYNAE_COLOR\n      default:\n        return \"#999\"\n    }\n  }\n\n  const [openBookingDetailDialog, setOpenBookingDetailDialog] = React.useState(false)\n  const showBookingDetailClicked = () => {\n    setOpenBookingDetailDialog(true)\n  }\n  const handleCloseBookingDetailDialog = () => {\n    setOpenBookingDetailDialog(false)\n  }\n\n\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"lg\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"10px\",\n                  backgroundColor: getColorFromClinic(booking.clinic),\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {booking.clinic?.toUpperCase()}\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  left: \"20px\",\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                }}\n                hidden={!booking.emailSent}\n              >\n                <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                  <SendRoundedIcon style={{ fontSize: \"25px\", color: \"#009634\" }} />\n                </Tooltip>\n\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.name}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n\n                      <li className={classes.li}>\n\n                        <Grid container spacing={2} alignItems=\"center\">\n                          <Grid item xs={12} md={3}>\n                            <span className={classes.infoTitle}>\n                              TEST DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.testDate)}\n                            </span>\n\n\n                          </Grid>\n                          <Grid item xs={12} md={3}>\n                            <span className={classes.infoTitle}>NAME : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.name}\n                            </span>\n\n\n                          </Grid>\n                          <Grid item xs={12} md={3}>\n                            <span className={classes.infoTitle}>D.O.B : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n\n                          </Grid>\n\n                          {selectedBooking && (\n                            <Grid item xs={12} md={3}>\n                              <Button onClick={showBookingDetailClicked} startIcon={<SearchIcon />} color=\"primary\" variant=\"contained\">\n                                Show Booking Detail ...\n                              </Button>\n                            </Grid>\n                          )\n                          }\n\n                        </Grid>\n\n                      </li>\n\n                      {fileURL && (\n                        <div>\n                          {/* <Document\n                          file={{data:fileURL}}\n                          onLoadSuccess={onDocumentLoadSuccess}\n                        >\n                          <Page pageNumber={pageNumber} />\n                        </Document>\n                        <p>Page {pageNumber} of {numPages}</p> */}\n                          <iframe style={{ width: \"100%\", minHeight: \"500px\" }} src={fileURL}></iframe>\n                        </div>\n\n                      )}\n\n\n\n                      <li>\n                        {/* <span className={classes.infoTitle}>EMAIL :</span> */}\n                        <span\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            label=\"EMAIL\"\n                            style={{ margin: \"10px\" }}\n                            fullWidth\n                            variant=\"outlined\"\n                            // className={classes.TextBox}\n                            value={email || ''}\n                            onChange={emailChanged}\n                          // inputProps={{\n                          //   style: {\n                          //     padding: 0,\n                          //   },\n                          // }}\n                          ></TextField>\n                        </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"0px\" }}>\n                        {/* <span className={classes.infoTitle}>NOTES :</span> */}\n                        <span\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"NOTES\"\n                            style={{ margin: \"10px\" }}\n                            // className={classes.TextBox}\n                            value={notes || ''}\n                            onChange={notesChanged}\n                            variant=\"outlined\"\n                            multiline\n                            rows={4}\n                          // inputProps={{\n                          //   style: {\n                          //     padding: 0,\n                          //   },\n                          // }}\n                          ></TextField>\n                        </span>\n\n                      </li>\n\n\n                      {/* <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download LAB Report\n                        </Button>\n                      </li> */}\n\n                      <li>\n                        <Button\n                          disabled={!email || !EmailValidator.validate(email)}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\", marginBottom: \"10px\" }}\n                        >\n                          Send Email To Patient\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <li>\n                        <Button\n                          startIcon={<SaveIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            saveChanges(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\", marginBottom: \"10px\" }}\n                        >\n                          Save Changes\n                          {changesSaved && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Saved Successfully\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n\n\n              <BookingDialog\n                booking={selectedBooking}\n                open={openBookingDetailDialog}\n                onClose={handleCloseBookingDetailDialog}\n              />\n\n\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n\n\n\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        service !== booking.service ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.service);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGynaeRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const manualRefund = async () => {\n    setSaving(true);\n    try {\n      await BookService.manualRefundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const depositChanged = async (event) => {\n    const checked = event.target.checked;\n    const deposit = checked ? 100 : 0;\n    setSaving(true);\n    try {\n      await BookService.changeDepositBooking(booking._id, deposit);\n      setSaving(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GYNAE_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GYNAE\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>SERVICE</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.service}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"20px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            {booking.paymentInfo ? \"ONLINE\" : \"PHONE\"} DEPOSIT\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.deposit || booking.deposit === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${booking.deposit.toLocaleString(\n                            \"en-GB\"\n                          )}`}</span>\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className={classes.PayButton}\n                                onClick={(event) => setOpenRefundDialog(true)}\n                              >\n                                Refund Deposit\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.PayButton}\n                                onClick={(event) => manualRefund()}\n                              >\n                                <span style={{ textTransform: \"capitalize\" }}>\n                                  I made the refund manually\n                                </span>\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            // !booking.paid &&\n                            !booking.deleted &&\n                            // booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <FormControlLabel\n                                style={{ marginLeft: \"90px\" }}\n                                control={\n                                  <Switch\n                                    color=\"primary\"\n                                    checked={booking.deposit > 0}\n                                    onChange={depositChanged}\n                                    name=\"deposit\"\n                                  />\n                                }\n                                label={\n                                  booking.deposit > 0 ? (\n                                    <span className={classes.PriceLabelPaid}>\n                                      £100 Deposit Paid\n                                    </span>\n                                  ) : (\n                                    <span className={classes.PriceLabelNotPaid}>\n                                      £100 Deposit Not Paid\n                                    </span>\n                                  )\n                                }\n                              />\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            booking.refund && (\n                              <React.Fragment>\n                                <span className={classes.PayLabel}>\n                                  {\" \"}\n                                  <CheckIcon\n                                    className={classes.checkIconSmall}\n                                  />{\" \"}\n                                  Refund Done\n                                  {booking.paidBy === \"corporate\"\n                                    ? ` \"${booking.corporate}\" `\n                                    : \"\"}\n                                </span>\n                              </React.Fragment>\n                            )}\n                        </div>\n                      </li>\n\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>OTC CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li>\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal - booking.deposit : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'service', headerName: 'Service', width: 250 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'service', headerName: 'Service', width: 250 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n  if (isWeekend(now)) {\n    return null;\n  }\n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isThursday(now) && hour < 13) {\n    return null;\n  }\n\n  if (isFriday(now) && hour >= 13) {\n    return null;\n  }\n\n  if (hour < 10 || hour >= 18) return null;\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Service</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{row.service}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [deposit, setDeposit] = React.useState(false);\n\n  const depositChanged = (event) => {\n    setDeposit(event.target.checked);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setNotes(\"\");\n    setDeposit(false);\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        service: service,\n        notes: notes,\n        deposit: deposit ? 100 : 0,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\" style={{position:\"relative\"}}>\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GYNAE_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    GYNAE\n              </div>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"480px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid otem xs={12} style={{marginTop:\"15px\"}}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={deposit}\n                          onChange={depositChanged}\n                          name=\"deposit\"\n                        />\n                      }\n                      label={deposit ? <span className={classes.PriceLabelPaid}>£100 Deposit Paid</span> : <span className={classes.PriceLabelNotPaid}>£100 Deposit Not Paid</span>}\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor:  theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () =>\n  {\n      setOpenDialogAddNew(true)\n  }\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={getBookingClass(booking.status)}\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GP_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    GP\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"400px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking.status)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n}));\n\nconst Packages = [\n  { packageName: \"Sexual Health Clinic - Bronze\" },\n  { packageName: `Sexual Health Clinic - Silver` },\n  { packageName: `Sexual Health Clinic - Gold` },\n  { packageName: `Sexual Health Clinic - Platinium` },\n  { packageName: `BLOOD SAMPLE AND URINE` },\n  { packageName: `BLOOD SAMPLE AND URINE OR SWAB` },\n  { packageName: `Indivisual Tests` },\n  { packageName: `Combo STD Checks` },\n];\n\nconst IndivisualTests = [\n  \"HIV TESTING\",\n  \"CHLAMYDIA TESTING\",\n  \"SYPHILIS BLOOD TESTING\",\n  \"HERPES TESTING\",\n  \"GONORRHOEA TESTING\",\n  \"HEPATITIS A PROFILE TESTING\",\n  \"HEPATITIS B PROFILE TESTING\",\n  \"HEPATITIS C ANTIBODIES TESTING\",\n  \"HPV TESTING\",\n  \"BACTERIAL SWAB TESTING\",\n];\n\nconst comboSTDChecks = [\n  \"CHLAMYDIA, GONORRHOEA AND TRICHOMONAS\",\n  \"HIV I & II WITH SYPHILIS\",\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\n  const [comboArray, setComboArray] = React.useState([]);\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setServiceError(false)\n    setNotes(\"\");\n    setIndivisualArray([]);\n    setComboArray([]);\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (!service || service.trim().length < 1)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    if (service === 'Indivisual Tests' && indivisualArray.length === 0)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    if (service === 'Combo STD Checks' && comboArray.length === 0)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    let packageName = service;\n    if (service === \"Indivisual Tests\") {\n      let temp = \"\";\n      indivisualArray.forEach((item, index) => {\n        temp += item;\n        if (index < indivisualArray.length - 1) {\n          temp += \" - \";\n        }\n      });\n      packageName = `Indivisual Tests : ( ${temp} )`;\n    } else if (service === \"Combo STD Checks\") {\n      let temp = \"\";\n      comboArray.forEach((item, index) => {\n        temp += item;\n        if (index < comboArray.length - 1) {\n          temp += \" - \";\n        }\n      });\n      packageName = `Combo STD Checks : ( ${temp} )`;\n    }\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        packageName: packageName,\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const IndivisualTestsChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (indivisualArray.findIndex((e) => e === item) < 0)\n        setIndivisualArray([...indivisualArray, item]);\n    } else {\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\n    }\n\n    setServiceError(false)\n  };\n\n  const comboSTDChecksChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (comboArray.findIndex((e) => e === item) < 0)\n        setComboArray([...comboArray, item]);\n    } else {\n      setComboArray(comboArray.filter((e) => e !== item));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.STD_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    STD\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"600px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth required error={serviceError}>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  {service === \"Indivisual Tests\" && (\n                    <Grid item xs={12}>\n                      {IndivisualTests.map((item) => (\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={\n                                indivisualArray.findIndex((e) => e === item) >=\n                                0\n                              }\n                              onChange={(event) =>\n                                IndivisualTestsChanged(event, item)\n                              }\n                              name={item}\n                            />\n                          }\n                          label={item}\n                        />\n                      ))}\n                    </Grid>\n                  )}\n\n                  {service === \"Combo STD Checks\" && (\n                    <Grid item xs={12}>\n                      {comboSTDChecks.map((item) => (\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={\n                                comboArray.findIndex((e) => e === item) >= 0\n                              }\n                              onChange={(event) =>\n                                comboSTDChecksChanged(event, item)\n                              }\n                              name={item}\n                            />\n                          }\n                          label={item}\n                        />\n                      ))}\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\nimport NewBookingDialog from '../NewBookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBoxNew: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth: \"150px\",\n        overflowX: \"hidden\",\n        border: \"1px solid #ddd\",\n        color: \"#ccc\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n    \n        boxShadow: \"2px 4px #fafafa\",\n        transition: \"all 0.5s ease\",\n        borderRadius: \"4px\",\n    \n        \"&:hover\": {\n          background: \"#fff\",\n          color: theme.palette.secondary.main,\n          borderColor:  theme.palette.secondary.main,\n        },\n      },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n                                                          \n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog || openDialogAddNew)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog || openDialogAddNew)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'patient_attended':\n                return classes.bookingBoxSampleTaken;\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const addNewBookingClicked = () =>\n    {\n        setOpenDialogAddNew(true)\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length >= 0)\n        {\n           return (\n            <React.Fragment>\n            {_bookings.map((booking) => (\n              <div\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                className={getBookingClass(booking.status)}\n                onClick={(event) => bookingCliked(event, booking)}\n              >\n                {`${booking.fullname}`.substring(0, 15)}\n              </div>\n            ))}\n  \n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n          </React.Fragment>\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    const handleCloseDialogAddNew = () => {\n        setOpenDialogAddNew(false);\n      };\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li} hidden={true}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li} hidden={true}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  loadingBox: {\n    \n  }\n\n}));\n\n\nconst DateField = ({title, value, dateChanged, error}) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n        const updateDate = (dd,mm,yyyy) =>\n        {\n            let dayStr = `${dd}`;\n            let monthStr = `${mm + 1}`;\n            \n\n            if (dayStr.length === 1)\n            {\n                dayStr = `0${dayStr}`;\n            }\n\n            if (monthStr.length === 1)\n            {\n                monthStr = `0${monthStr}`;\n            }\n\n            dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n            \n\n        }\n\n        const handleDayChanged = (event) => {\n            setDay(event.target.value);\n            updateDate(event.target.value,month,year);\n        };\n\n        const handleMonthChanged = (event) => {\n            setMonth(event.target.value);\n            updateDate(day, event.target.value, year);\n        };\n\n        const handleYearChanged = (event) => {\n            setYear(event.target.value);\n            updateDate(day,month,event.target.value);\n        };\n\n        useEffect ( () => \n        {\n            if (value && value.length === 10)\n            {\n                const d = parseInt(value.substr(8,2));\n                const m = parseInt(value.substr(5,2));\n                const y = parseInt(value.substr(0,4));\n\n                setDay(d);\n                setMonth(m-1);\n                setYear(y);\n            }\n           \n\n        }, [value]);\n\n      useEffect( () => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1 ; i <= 31; i++)\n        {\n            days.push(i);\n        }\n\n        for ( i = 0 ; i < 12; i++)\n        {\n            months.push(dateformat(new Date(2020,i,5), 'mmmm'));\n        }\n\n        for ( i = 1900 ; i < new Date().getFullYear(); i++)\n        {\n            years.push(i);\n        }\n\n       \n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n      } , [])\n    \n  return (\n\n    <React.Fragment>\n\n        \n    <div style={{position:\"relative\", border:`1px solid ${error ? 'red' : '#ddd'}` , borderRadius:\"10px\", padding:\"20px\", paddingBottom: \"50px\", marginTop: \"20px\"}}>\n\n        <div style={{position:\"absolute\", top: \"-15px\", left : \"15px\", backgroundColor:\"#fff\", color : `${error ? 'red' : '#555'}`, padding:\"5px\" , paddingLeft:\"10px\", paddingRight:\"10px\" }}>\n               {title} \n       </div>\n\n    \n\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={2}\n        >\n\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Day</InputLabel>\n                    <Select\n                        \n                        labelId=\"day-label\"\n                        id=\"day-select\"\n                        value={day}\n                        onChange={handleDayChanged}\n                        >\n                        {\n                            dayArray.map( item => (\n                                <MenuItem value={item}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"month-label\">Month</InputLabel>\n                    <Select\n                        labelId=\"month-label\"\n                        id=\"month-select\"\n                        value={month}\n                        onChange={handleMonthChanged}\n                        >\n                        {\n                            monthArray.map( (item , index) => (\n                                <MenuItem value={index}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n                \n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Year</InputLabel>\n                    <Select\n                    labelId=\"year-label\"\n                    id=\"year-select\"\n                    value={year}\n                    onChange={handleYearChanged}\n                    >\n                    {\n                        yearArray.map( item => (\n                            <MenuItem value={item}>{item}</MenuItem>\n                        )\n                    )} \n                    </Select>\n                </FormControl>\n            </Grid>\n        </Grid>\n\n        </div>\n    </React.Fragment>\n  );\n}\n\n\nDateField.propTypes = {\n    title : PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n  };\n\nexport default DateField;\n\n\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  Chip,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { matchSorter } from 'match-sorter'\nimport DateField from \"./DateField\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n\n  listOptions:{\n    backgroundColor: \"#dcf0f5\",\n    color: \"#034859\",\n    borderRadius:\"30px\",\n    padding: \"10px\",\n    fontWeight:\"500\",\n    fontSize: \"1rem\"\n  }\n\n}));\n\nconst Packages = [\n  { packageName: \"-\" }, \n  { packageName: \"SLIVER BLOOD TEST\" },\n  { packageName: `SLIVER PLUS BLOOD TEST\"` },\n  { packageName: `GOLD BLOOD TEST` },\n  { packageName: `PLATINIUM BLOOD TEST` },\n];\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\n  const [comboArray, setComboArray] = React.useState([]);\n\n  const [noOptionsText, setNoOptionsText] = React.useState('')\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  const [indivisualTests, setIndivisualTests] = React.useState([])\n\n  const [birthDate, setBirthDate] = React.useState(null);\n  const [birthDateError, setBirthDateError] = React.useState(false);\n\n  const birthDateChanged = (dateStr) =>\n  {\n      setBirthDate(dateStr);\n      setBirthDateError(false)\n  }  \n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await BookService.getAllCodes();\n      const data = res.data.result\n      const options = data.map((option) => {\n        const firstLetter = option.code[0].toUpperCase();\n        return {\n          firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n          ...option,\n        };\n      });\n\n      console.log(options)\n      setAllCodes(options);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if ((!allCodes || allCodes.length === 0) && props.open)\n      fetchAllCodes();\n  }, [props.open]);\n\n\n\n  const filterOptions = (options, { inputValue }) => {\n\n    if (inputValue && inputValue.length >= 3) {\n      setNoOptionsText(\"\")\n      return matchSorter(options, inputValue, { keys: ['code', 'description'] });\n    }\n    else {\n      setNoOptionsText(\"Please enter at least 3 characters\")\n      return matchSorter(options, '$$$$', { keys: ['code', 'description'] });\n    }\n  }\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setServiceError(false)\n    setNotes(\"\");\n    setIndivisualArray([]);\n    setComboArray([]);\n    setBirthDate(null)\n    setIndivisualTests([])\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (!birthDate || birthDate.length !== 10)\n    {\n      setBirthDateError(true)\n      error = true\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    let packageName = service;\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        packageName: packageName,\n        birthDate: birthDate,\n        indivisualTests: indivisualTests.length === 0 ? null : JSON.stringify(indivisualTests),\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const IndivisualTestsChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (indivisualArray.findIndex((e) => e === item) < 0)\n        setIndivisualArray([...indivisualArray, item]);\n    } else {\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\n    }\n\n    setServiceError(false)\n  };\n\n  const comboSTDChecksChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (comboArray.findIndex((e) => e === item) < 0)\n        setComboArray([...comboArray, item]);\n    } else {\n      setComboArray(comboArray.filter((e) => e !== item));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{ position: \"absolute\", top: \"5px\", right: \"5px\", backgroundColor: CalendarColors.BLOOD_COLOR, color: \"#fff\", padding: \"0px 5px\", borderRadius: \"10px\", fontSize: \"1rem\" }}>\n                Blood\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"620px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <DateField\n                      error={birthDateError}\n                      title=\"Date of Birth\"\n                      value={birthDate}\n                      dateChanged={birthDateChanged}\n                    >\n\n                    </DateField>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth error={serviceError}>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n\n\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        width: \"100%\",\n                        fontWeight: \"400\",\n                        color: \"#777\",\n                        marginTop:\"20px\"\n                      }}\n                    >\n                      <Autocomplete\n                        multiple\n                        id=\"tags-outlined\"\n                        noOptionsText={noOptionsText}\n                        value={indivisualTests}\n                        onChange={(event, newValue) => {\n                          setIndivisualTests(newValue)\n                          setState(state => ({ ...state, indivisualTests: newValue }))\n                        }}\n                        filterOptions={filterOptions}\n                        options={allCodes.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                        // groupBy={(option) => option.firstLetter}\n                        getOptionLabel={(option) => <div className={classes.listOptions}>\n                          {option.code} - {option.description} - {parseFloat(\n                            option.price\n                          ).toLocaleString(\"en-GB\", {\n                            style: \"currency\",\n                            currency: \"GBP\",\n                          })}</div>\n                        }\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              label={\n                                <Typography\n                                  style={{\n                                    whiteSpace: \"normal\",\n                                    fontSize: \"0.9rem\",\n                                    fontWeight: \"500\",\n                                    padding: \"10px\",\n                                    width: \"100%\",\n                                  }}\n                                >\n                                  {`${option.code} - ${option.description} - ${parseFloat(\n                                    option.price\n                                  ).toLocaleString(\"en-GB\", {\n                                    style: \"currency\",\n                                    currency: \"GBP\",\n                                  })}`}\n                                </Typography>\n                              }\n                              {...getTagProps({ index })}\n                              style={{ height: \"100%\", width: \"100%\" }}\n                            />\n                          ))\n                        }\n                        filterSelectedOptions\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            {...params}\n                            variant=\"outlined\"\n                            label=\"Blood Tests\"\n                            placeholder=\"Enter blood test\"\n                          />\n                        )}\n                      />\n\n                    </div>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginBottom:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <DialogActions>\n            <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\nimport NewBookingDialog from '../NewBookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBoxNew: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth: \"150px\",\n        overflowX: \"hidden\",\n        border: \"1px solid #ddd\",\n        color: \"#ccc\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n    \n        boxShadow: \"2px 4px #fafafa\",\n        transition: \"all 0.5s ease\",\n        borderRadius: \"4px\",\n    \n        \"&:hover\": {\n          background: \"#fff\",\n          color: theme.palette.secondary.main,\n          borderColor:  theme.palette.secondary.main,\n        },\n      },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n                                                          \n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog || openDialogAddNew)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog || openDialogAddNew)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'patient_attended':\n                return classes.bookingBoxSampleTaken;\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const addNewBookingClicked = () =>\n    {\n        setOpenDialogAddNew(true)\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length >= 0)\n        {\n           return (\n            <React.Fragment>\n            {_bookings.map((booking) => (\n              <div\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                className={getBookingClass(booking.status)}\n                onClick={(event) => bookingCliked(event, booking)}\n              >\n                {`${booking.fullname}`.substring(0, 15)}\n              </div>\n            ))}\n  \n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n          </React.Fragment>\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    const handleCloseDialogAddNew = () => {\n        setOpenDialogAddNew(false);\n      };\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function MatchedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) => {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n\n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            { params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 250 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n              </Button>\n\n\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getNewUnmatchedBloodReports;\n    if (selectedTab === 'archived') {\n      api = BookService.getArchivedUnmatchedBloodReports;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#ff8000\" }}> <WarningIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Unmatched Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function MatchedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) => {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n\n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n              </Button>\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getNewMatchedBloodReports;\n    if (selectedTab === 'archived') {\n      api = BookService.getArchivedMatchedBloodReports;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#008c00\" }}> <DoneOutlineIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Matched Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ArchivedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  \n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n              </Button>\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getArchivedBloodReports;\n    // if (selectedTab === 'archived') {\n    //   api = BookService.getArchivedMatchedBloodReports;\n    // }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#777\" }}> <ArchiveIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Archived Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        {/* <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid> */}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n            booking={selectedBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n          />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SentRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  \n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              {/* <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n              </Button> */}\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getSentBloodReports;\n    // if (selectedTab === 'archived') {\n    //   api = BookService.getArchivedMatchedBloodReports;\n    // }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#008c00\" }}> <SendRoundedIcon style={{ fontSize: \"1.8rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Sent Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        {/* <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid> */}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n            booking={selectedBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n          />\n\n    </React.Fragment>\n  );\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'package', headerName: 'Service', width: 200 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'package', headerName: 'Service', width: 200 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.package)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.package}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  {packageName: 'PRIVATE CONSULTATION WITH CONSULTANT DERMATOLOGIST'},\n  {packageName: `FREE CONSULTATION FOR AESTHETIC TREATMENTS AND BOTOX`},\n  {packageName: `RADIOFREQUNCY`},\n  {packageName: `LASER HAIR`},\n  {packageName: `FILLERS`},\n  {packageName: `MOLE MAPPING / REMOVAL`},\n  {packageName: `DERMABRASION`},\n  {packageName: `PEELS`},\n  {packageName: `WART REMOVAL`},\n]\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [service, setService] = React.useState(\"\");\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n  };\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    setService(\"\");\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n        package: service,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.DERMA_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    Dermatology\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"450px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking.status)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }else if (str === 'pending')\n  {\n    return `Pending Bookings`;\n  }\n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'pending')\n  {\n    return <AddAlertIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }else if (props.date === 'pending')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n    else if (props.date === 'pending')\n    {\n      api = BookService.getPendingBookings;\n    }\n\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                      <li style={{marginBottom:\"10px\", maxWidth:\"400px\"}}>\n                        {!person.confirmed && (\n                          <div style={{ color: \"red\", fontSize: \"1.1rem\", fontWeight: \"500\", border: \"0px solid red\", padding: \"5px\", borderRadius: \"8px\" }}>\n                            NOT CONFIRMED!\n                          </div>\n                        )}\n\n\n                        {person.confirmed && (\n                          <div style={{ color: \"#258200\", fontSize: \"1.1rem\", fontWeight: \"500\", border: \"0px solid #258200\", padding: \"5px\", borderRadius: \"8px\" }}>\n                            CONFIRMED\n                          </div>\n                        )}\n\n                      </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\",\n        textAlign:\"center\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport DateField from \"../Blood/DateField\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"HEALTH SCREENING / MEDISCREEN BASIC MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH BASICS MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH ADVANCED MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH ELITE MOT\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"HEALTH SCREENING / MEN'S HEALTH BASICS MOT\" },\n  { packageName: \"HEALTH SCREENING / MEN'S HEALTH ADVANCED MOT\" },\n  { packageName: \"HEALTH SCREENING / MEN'S HEALTH ELITE MOT\" },\n  { packageName: \"HEALTH SCREENING / PLATINIUM HEALTH SCREEN MEN\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"HEALTH SCREENING / WOMEN'S HEALTH BASICS MOT\" },\n  { packageName: \"HEALTH SCREENING / WOMEN'S HEALTH ADVANCED MOT\" },\n  { packageName: \"HEALTH SCREENING / WOMEN'S HEALTH ELITE MOT\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH ADVANCED PLUS MOT\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"ALLERGY SCREENING / ALLERGY BASICS MOT PACKAGE\" },\n  { packageName: \"ALLERGY SCREENING / ALLERGY ADVANCED MOT PACKAGE\" },\n\n  { packageName: `OCCUPATIONAL HEALTH / PRE EMPLOYMENT` },\n  { packageName: `TRAVEL HEALTH & VACCINATION` },\n  { packageName: `VISA MEDICAL` },\n  { packageName: `CANCER SCREEENING` },\n  \n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [service, setService] = React.useState(\"\");\n\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [birthDate, setBirthDate] = React.useState(null);\n  const [birthDateError, setBirthDateError] = React.useState(false);\n\n  const birthDateChanged = (dateStr) =>\n  {\n      setBirthDate(dateStr);\n      setBirthDateError(false)\n  }  \n\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    setService(\"\");\n    setBirthDate(null)\n    setServiceError(false)\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (birthDate && birthDate.length !== 10)\n    {\n      setBirthDateError(true)\n      error = true\n    }\n\n    if (!service)\n    {\n      setServiceError(true)\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n        service: service,\n        birthDate: birthDate\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.SCREENING_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    Screening\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"500px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                        error={serviceError}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <DateField\n                      error={birthDateError}\n                      title=\"Date of Birth\"\n                      value={birthDate}\n                      dateChanged={birthDateChanged}\n                    >\n\n                    </DateField>\n                  </Grid>\n\n\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n            <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPending: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ddd\",\n    color: \"#777\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#eee\",\n      color: \"#333\",\n    },\n  },\n\n\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = ({status, confirmed}) => {\n\n    if (!confirmed)\n    {\n      return classes.bookingBoxPending\n    }\n\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h6\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\nimport * as dateformat from \"dateformat\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function TodayBookingView() {\n  const classes = useStyles();\n  \n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n  const loadData = async () => {\n    setLoading(true);\n\n    const today = dateformat(new Date(), 'yyyy-mm-dd')\n    try{\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(today)\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(today)\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(today)\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(today)\n      const res5 = await BloodBookService.getAllBookingsCountByDateStr(today)\n      const res6 = await DermaBookService.getAllBookingsCountByDateStr(today)\n      const res7 = await ScreeningBookService.getAllBookingsCountByDateStr(today)\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n      const screening = parseInt(res7.data.count)\n\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Screening\", count: screening},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma+screening}\n      ]\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\n\nimport * as dateformat from \"dateformat\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function TomorrowBookingView() {\n  const classes = useStyles();\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n\n  const loadData = async () => {\n    setLoading(true);\n    const today = new Date()\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000)\n\n    const tomorrowStr = dateformat(tomorrow, 'yyyy-mm-dd')\n    try{\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res5 = await BloodBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res6 = await DermaBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res7 = await ScreeningBookService.getAllBookingsCountByDateStr(tomorrowStr)\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n      const screening = parseInt(res7.data.count)\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Screening\", count: screening},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma+screening}\n\n      ]\n\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Tomorrow Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\n\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function TotalBookingView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n  const loadData = async () => {\n    setLoading(true);\n   \n    try{\n      const res1 = await PCRBookService.getAllBookingsCountAll()\n      const res2 = await GynaeBookService.getAllBookingsCountAll()\n      const res3 = await GPBookService.getAllBookingsCountAll()\n      const res4 = await STDBookService.getAllBookingsCountAll()\n      const res5 = await BloodBookService.getAllBookingsCountAll()\n      const res6 = await DermaBookService.getAllBookingsCountAll()\n      const res7 = await ScreeningBookService.getAllBookingsCountAll()\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n      const screening = parseInt(res7.data.count)\n\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n        {clinic: \"Screening\", count: screening},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma+screening}\n      ]\n\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n    \n\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Total Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   position: \"absolute\",\n   top: \"65px\",\n   left: \"44%\",\n   fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main\n   },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n  IconRed: {\n   fontSize: \"2rem\",\n  //  color: theme.palette.secondary.main,\n  },\n\n  TitleRed:{\n    // color: theme.palette.secondary.main,\n  }\n\n\n}));\n\nexport default function LateBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PCRBookService.getLateBookings();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={data === 0 ? classes.Icon : classes.IconRed } />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.PCR_COLOR}}>PCR</span> 40-Hours Late\n              </span>\n           \n            </Grid>\n          </Grid>\n\n          {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function UnmatchedBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PCRBookService.getUnmatchedRecords();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.PCR_COLOR}}>PCR</span> Unmatched Records\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ShouldRefundBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await GynaeBookService.getShouldRefundsCount()\n      setData(res.data.count);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n                <span style={{color:CalendarColors.GYNAE_COLOR}}>GYNAE</span>  Waiting for Refunds\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","export const getRole = () => {\n    return sessionStorage.getItem('medexadmin-role')\n}\n\nexport const setRole = (role) => {\n    return sessionStorage.setItem('medexadmin-role', role)\n}\n\nexport const clearRole = (role) => {\n    return sessionStorage.removeItem('medexadmin-role')\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport BloodBookService from \"./Blood/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function NewBloodResultsBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await BloodBookService.getNewBloodResultsCount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.BLOOD_COLOR}}>BLOOD</span> New Results\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport ScreeningBookService from \"./Screening/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function NewScreeningBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await ScreeningBookService.getPendingBookings();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.SCREENING_COLOR}}>Health Screening</span> Pending Bookings\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\n\nimport TodayBookingView from \"./TodayBookingView\" \nimport TomorrowBookingView from \"./TomorrowBookingView\";\nimport TotalBookingView from \"./TotalBookingView\";\nimport LateBookingView from \"./LateBookingView\";\nimport UnmatchedBookingView from \"./UnmatchedBookingView\";\nimport ShouldRefundBookingView from \"./ShouldRefundBookingView\";\nimport { setRole } from \"./Role\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getGlobalPath } from \"./GlobalPath\";\nimport { getMenuId, getMenuIndex } from \"./MenuList\";\nimport NewBloodResultsBookingView from \"./NewBloodResultsBookingView\";\nimport NewScreeningBookingView from \"./NewScreeningBookingView\"\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 380,\n  },\n  fixedHeightSmall: {\n    height: 200,\n    cursor:\"pointer\"\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\n\n  const history = useHistory();\n\n  const gotoLateBookings = () =>\n  {\n    const role = 'pcr'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'latebookings'))}`));\n  }\n\n  const gotoUnmatchedPCR = () =>\n  {\n    const role = 'pcr'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'unmatchedRecords'))}`));\n  }\n\n  const gotoBlood = () =>\n  {\n    const role = 'blood'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'dashboard'))}`));\n  }\n\n  \n  const gotoRefundGynae = () =>\n  {\n    const role = 'gynae'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'deletedBookings'))}`));\n  }\n\n  const gotoScreening = () =>\n  {\n    const role = 'screening'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'pendingBookings'))}`));\n  }\n\n\n  \n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>       \n       \n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoLateBookings}>\n             <LateBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoUnmatchedPCR}>\n             <UnmatchedBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoRefundGynae}>\n             <ShouldRefundBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoBlood}>\n             <NewBloodResultsBookingView />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoScreening}>\n             <NewScreeningBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n        </Grid>\n\n\n\n        {/* <Grid item xs={12} md={4}>\n        </Grid>\n        <Grid item xs={12} md={4}>\n        </Grid> */}\n\n\n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n            <TodayBookingView />\n          </Paper>\n        </Grid>\n      \n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n             <TomorrowBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n             <TotalBookingView />\n          </Paper>\n        </Grid>\n\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\nimport MaskedInput from \"react-text-mask\";\nimport { FormControl, Grid, Input, InputLabel } from \"@material-ui/core\";\nimport BookService from \"./services/BookService\";\n\nimport PersonsBoxPCR from \"./../PCR/PersonsBox\";\nimport PersonsBoxGP from \"./../GP/PersonsBox\";\nimport PersonsBoxGynae from \"./../Gynae/PersonsBox\";\nimport PersonsBoxSTD from \"./../STD/PersonsBox\";\nimport PersonsBoxBlood from \"./../Blood/PersonsBox\";\nimport PersonsBoxDerma from \"./../Derma/PersonsBox\";\nimport PersonsBoxScreening from \"./../Screening/PersonsBox\";\n\n\nimport { width } from \"@material-ui/system\";\n\nconst isBoolean = (param) => typeof param === \"boolean\";\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n  const [focus, setFocus] = React.useState(initialFocus);\n  const setFocusWithTrueDefault = (param) =>\n    setFocus(isBoolean(param) ? param : true);\n  return [\n    setFocusWithTrueDefault,\n    {\n      autoFocus: focus,\n      key: `${id}${focus}`,\n      onFocus: () => setFocus(true),\n      onBlur: () => setFocus(false),\n    },\n  ];\n};\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[/\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: \"20px\",\n  },\n\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  Find: {\n    width: \"80px\",\n  },\n\n  Clear: {\n    marginRight: \"20px\",\n  },\n\n  title: {\n    marginTop: \"20px\",\n  },\n\n  TextBox: {\n    marginTop: \"30px\",\n    \"& > *\": {\n      textAlign: \"center\",\n    },\n  },\n\n  TextField: {},\n\n  NoRecordsFound: {\n    marginTop: \"20px\",\n    color: \"red\",\n    fontWeight: \"600\",\n    fontSize: \"14px\",\n  },\n\n  PersonsBox: {\n    marginTop: \"20px\",\n    marginBottom: \"50px\",\n  },\n\n  boxTitle:{\n      fontWeight: \"500\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n      border: \"1px solid\",\n      fontSize: \"1.2rem\",\n      backgroundColor: \"#fff\",\n      width: \"150px\",\n      padding:\"5px\",\n      borderRadius:\"30px\",\n      textAlign:\"center\",\n      marginBottom:\"10px\",\n      boxShadow: \"4px 8px 8px #eee\"\n  }\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [setFocus, focusProps] = useFocus(true);\n\n  //   useEffect( () =>\n  //   {\n  //      findRecords();\n  //   }, [state.findRecords]);\n\n  useEffect(() => {\n    setState((state) => ({ ...state, foundRecords: [] }));\n  }, []);\n\n  useEffect(() => {\n    BookService.getBookingsByRef(state.ref).then((res) => {\n      if (res.data.length > 0) {\n        setState((state) => ({ ...state, foundRecords: res.data }));\n      }\n    });\n  }, [state.RefreshPersonInfo]);\n\n  const handleChange = (event) => {\n    setState((state) => ({ ...state, ref: event.target.value }));\n    setState((state) => ({ ...state, refError: false }));\n  };\n\n  const clearField = () => {\n    setState((state) => ({ ...state, refError: false }));\n    setState((state) => ({ ...state, ref: \"___-___-___\" }));\n    setState((state) => ({ ...state, foundRecords: [] }));\n    setFocus();\n  };\n\n  const findRecords = () => {\n    if (!state.ref || state.ref.indexOf(\"_\") >= 0) {\n      setState((state) => ({ ...state, refError: true }));\n      return;\n    }\n\n    setState((state) => ({ ...state, submiting: true }));\n    setState((state) => ({ ...state, foundRecords: [] }));\n\n    BookService.getBookingsByRef(state.ref)\n      .then((res) => {\n        setState((state) => ({ ...state, submiting: false }));\n        if (res.data.length > 0) {\n          setState((state) => ({ ...state, foundRecords: res.data }));\n        } else {\n          setState((state) => ({ ...state, foundRecords: null }));\n        }\n\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setState((state) => ({ ...state, submiting: false }));\n      });\n  };\n\n  const getPersonBox = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return <PersonsBoxPCR />;\n      case \"gp\":\n        return <PersonsBoxGP />;\n      case \"std\":\n        return <PersonsBoxSTD />;\n      case \"gynae\":\n        return <PersonsBoxGynae />;\n      case \"blood\":\n        return <PersonsBoxBlood />;\n      case \"derma\":\n        return <PersonsBoxDerma />;\n      case \"screening\":\n        return <PersonsBoxScreening />;\n\n  \n      default:\n        return null;\n    }\n  };\n\n  const getBoxTitle = (clinic) => {\n      return (\n          <div className={classes.boxTitle}>\n              {clinic.toUpperCase() + ' Clinic'}\n\n          </div>\n      )\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.title}>\n        <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n          Find Booking Appoinments\n        </Typography>\n      </div>\n\n      <Grid\n        container\n        direction=\"column\"\n        spacing={1}\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} md={12}>\n          <FormControl className={classes.TextBox}>\n            <TextField\n              {...focusProps}\n              autoFocus\n              pattern=\"[0-9]*\"\n              error={state.refError ? true : false}\n              value={state.ref}\n              className={classes.TextField}\n              width=\"50px\"\n              onChange={handleChange}\n              label=\"Reference No.\"\n              helperText=\"Enter Your 9-digits Reference No.\"\n              name=\"refNo\"\n              id=\"refNo\"\n              variant=\"outlined\"\n              size=\"medium\"\n              margin=\"normal\"\n              fullWidth={true}\n              InputProps={{\n                inputComponent: TextMaskCustom,\n                style: {\n                  textAlign: \"center\",\n                  fontSize: \"24px\",\n                  width: \"210px\",\n                  paddingLeft: \"20px\",\n                },\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  findRecords();\n                }\n              }}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Button\n            disabled={state.submiting}\n            color=\"default\"\n            onClick={clearField}\n            onTouchTap={clearField}\n            className={classes.Clear}\n          >\n            Clear\n          </Button>\n\n          <Button\n            type=\"button\"\n            disabled={state.submiting}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={findRecords}\n            onTouchTap={findRecords}\n            className={classes.Find}\n          >\n            Find\n          </Button>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          {state.foundRecords && state.foundRecords.length > 0 && (\n            <React.Fragment>\n              <div className={classes.PersonsBox}>\n                {getBoxTitle(state.foundRecords[0].clinic)}  \n                {getPersonBox(state.foundRecords[0].clinic)}\n              </div>\n            </React.Fragment>\n          )}\n\n          {!state.foundRecords && (\n            <React.Fragment>\n              <div className={classes.root}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <strong>No Records Found !</strong> <br /> Please check you\n                  reference number again.\n                </Alert>\n              </div>\n            </React.Fragment>\n          )}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"./../GlobalState\";\nimport { getMenuIndex } from \"./../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DERMA_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n      case \"screening\":\n          return classes.ScreeningLabel;\n     \n      \n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  if (props.date === \"recent\") {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <Button\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </Button>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"clinic\",\n        headerName: \"Clinic\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          return (\n            <span className={getClassforClinic(params.value)}>\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\n            </span>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return (\n              <React.Fragment>\n                <CloseIcon className={classes.closeIcon} />\n              </React.Fragment>\n            );\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link\n                className={classes.RefLink}\n                //  onClick={\n                //   () => {\n                //     console.log(params.value);\n\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n                //     setState(state => ({...state, ref : params.value}));\n                //     setState(state => ({...state, refError : false}));\n                //     setState(state => ({...state, foundRecords : []}));\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\n                //   }\n                // }\n              >\n                {params.value}\n              </Link>\n            </Tooltip>\n          );\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\n        if (!params.value || params.value.length === 0)\n        {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        }else\n        {\n          return params.value\n        }\n       \n      } },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\n    ];\n  } else {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <Button\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </Button>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"clinic\",\n        headerName: \"Clinic\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          return (\n            <span className={getClassforClinic(params.value)}>\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\n            </span>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return (\n              <React.Fragment>\n                <CloseIcon className={classes.closeIcon} />\n                {parseInt(params.getValue(\"deposit\")) > 0 &&\n                  props.date === \"deleted\" && (\n                    <span className={classes.notifyIcon}>&nbsp;</span>\n                  )}\n              </React.Fragment>\n            );\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link\n                className={classes.RefLink}\n                //  onClick={\n                //   () => {\n                //     console.log(params.value);\n\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n                //     setState(state => ({...state, ref : params.value}));\n                //     setState(state => ({...state, refError : false}));\n                //     setState(state => ({...state, foundRecords : []}));\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\n                //   }\n                // }\n              >\n                {params.value}\n              </Link>\n            </Tooltip>\n          );\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\n        if (!params.value || params.value.length === 0)\n        {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        }else\n        {\n          return params.value\n        }\n       \n      } },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\n    ];\n  }\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: true,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = (top) => {\n    var api = BookService.getAllBookings;\n    if (props.date === \"today\") {\n      api = BookService.getTodayBookings;\n    } else if (props.date === \"old\") {\n      api = BookService.getOldBookings;\n    } else if (props.date === \"future\") {\n      api = BookService.getFutureBookings;\n    } else if (props.date === \"recent\") {\n      api = BookService.getRecentBookingsAll;\n    } else if (props.date === \"deleted\") {\n      api = BookService.getDeletedBookings;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(top)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    setTopCount(25);\n    loadData(25);\n  }, [props.date]);\n\n  useEffect(() => {\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter(\n        (element) =>\n          element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.forename?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 \n      );\n\n      setData({\n        bookings: [...filteredData],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    } else {\n      setData({\n        bookings: [...data.cachedBookings],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    }\n  }, [filter]);\n\n  // useEffect(() => {\n  //   loadData(topCount);\n  // }, [state.bookingDialogDataChanged]);\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  };\n\n  const openDetailsDialog = (event, id) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport GlobalState from \"../../GlobalState\";\nimport { Grid } from \"@material-ui/core\";\nimport { CalendarColors } from \"./colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    minWidth:\"200px\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelToday: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    backgroundColor: \"#1a73e8\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    borderRadius: \"50%\",\n    padding: \"5px\",\n    lineHight: \"35px\",\n    minWidth: \"35px\",\n    textAlign: \"center\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  BookingCountLabel: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#3f51b5\",\n    backgroundColor: \"#ebedf7\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    lineHight: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  BookingCountLabelBusy: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#b00000\",\n    backgroundColor: \"#fce6e6\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"8%\",\n    height: \"85%\",\n  },\n\n  PCRGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"0\",\n    width: \"30px\",\n    height: \"120%\",\n  },\n\n  GynaeGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"31px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  GPGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"52px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  STDGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"73px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  BloodGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"94px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  DermaGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"115px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  ScreeningGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"136px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n\n\n  DayLabelContainer: {\n    position: \"absolute\",\n    top: \"15%\",\n    left: \"5px\",\n    width: \"100%\",\n    paddingTop: \"45%\",\n  },\n}));\n\nconst MAX_BOOKING_COUNT_PCR = 50;\nconst MAX_BOOKING_COUNT_GP = 10;\nconst MAX_BOOKING_COUNT_STD = 10;\nconst MAX_BOOKING_COUNT_GYNAE = 10;\nconst MAX_BOOKING_COUNT_BLOOD = 10;\nconst MAX_BOOKING_COUNT_DERMA = 10;\n\n\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [dateStr, setDateStr] = React.useState(\"\");\n\n  const [cellDate, setCellDate] = React.useState(new Date());\n\n  const [bookingsCount, setBookingsCount] = React.useState(null);\n\n  const [disableDay, setDisableDay] = React.useState(false);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  useEffect(() => {\n    if (cellIndex <= daysInMonth.length) {\n      const date = daysInMonth[cellIndex - 1];\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(date.getMonth() !== month - 1);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    } else {\n      const day = cellIndex - daysInMonth.length;\n      const date = new Date(\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\n      );\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(true);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    }\n  }, [cellIndex, month, daysInMonth]);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      if (!dateStr || dateStr.length <= 0) {\n        return;\n      }\n\n      if (disableDay) {\n        setBookingsCount(-2);\n        return;\n      }\n\n      setBookingsCount(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsCountByDateStr\" &&\n          record.query === dateStr\n      )?.res;\n\n      if (!res) {\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\n          ],\n        }));\n      }\n\n      if (res.data.count) {\n        setBookingsCount(res.data.count);\n      }\n    };\n\n    fecthData();\n  }, [dateStr]);\n\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\n    var date = null;\n    var disabled = false;\n    var day = -1;\n\n    if (_cellIndex <= _daysInMonth.length) {\n      date = _daysInMonth[_cellIndex - 1];\n      day = date.getDate();\n      if (date.getMonth() !== _month - 1) {\n        disabled = true;\n      }\n    } else {\n      const _day = _cellIndex - _daysInMonth.length;\n      const date = new Date(\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\n      );\n      day = date.getDate();\n      disabled = true;\n    }\n\n    const isToday =\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\n\n    return (\n      <span\n        className={\n          disabled\n            ? classes.DayLabelDisabled\n            : isToday\n            ? classes.DayLabelToday\n            : classes.DayLabel\n        }\n      >\n        {day > 0 ? `${day}` : \"\"}\n      </span>\n    );\n  };\n\n  const getClinicBar = (clinic, count) => {\n    return (\n      <React.Fragment>\n        {clinic === \"pcr\" &&\n          state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\n          getPCRClinicBar(count)}\n        {clinic === \"gynae\" &&\n          state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\n          getGynaeClinicBar(count)}\n        {clinic === \"gp\" &&\n          state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\n          getGPClinicBar(count)}\n        {clinic === \"std\" &&\n          state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\n          getSTDClinicBar(count)}\n        {clinic === \"blood\" &&\n          state.selectedClinics.findIndex((e) => e === \"BLOOD\") >= 0 &&\n          getBloodClinicBar(count)}\n        {clinic === \"derma\" &&\n          state.selectedClinics.findIndex((e) => e === \"DERMA\") >= 0 &&\n          getDermaClinicBar(count)}\n        {clinic === \"screening\" &&\n          state.selectedClinics.findIndex((e) => e === \"SCREENING\") >= 0 &&\n          getScreeningClinicBar(count)}\n\n\n      </React.Fragment>\n    );\n  };\n\n  const minHeight = 1;\n  const getPCRClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.PCRGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.PCR_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"0px\",\n              color: \"#fff\",\n              fontWeight: \"500\",\n              fontSize:\"0.8rem\",\n              textAlign: \"center\",\n              width: \"100%\",\n            }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getGynaeClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GynaeGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.GYNAE_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getGPClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GPGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.GP_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getSTDClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.STDGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.STD_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getBloodClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_BLOOD) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.BloodGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.BLOOD_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getDermaClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_DERMA) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.DermaGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.DERMA_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getScreeningClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_DERMA) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.ScreeningGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.SCREENING_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n\n\n\n  const getBookingsCountLabel = (_bookingsCount) => {\n    if (!_bookingsCount) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookingsCount !== -2) {\n      return (\n        <div className={classes.DayLabelContainer}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-end\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {_bookingsCount.map((item) => (\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const getBookingsCountGauge = (_bookingsCount) => {\n    if (_bookingsCount > 0) {\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\n      if (percent > 100) {\n        percent = 100;\n      }\n\n      percent = 100 - percent;\n\n      return (\n        <div className={classes.BookingCountGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"#3f51b5\",\n            }}\n          >\n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.Container}\n        onClick={(event) => dayClicked(event, cellDate)}\n      >\n        {getDayLabel(cellIndex, month, daysInMonth)}\n\n        {getBookingsCountLabel(bookingsCount)}\n\n        {/* {getBookingsCountGauge(bookingsCount)} */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nMonthViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\n  dayClicked: PropTypes.func,\n};\n\nexport default MonthViewCell;\n","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nimport { Grid } from '@material-ui/core';\nimport { CalendarColors } from './colors';\n\nconst MAX_BOOKING_COUNT_PCR = 10;\nconst MAX_BOOKING_COUNT_GP = 1;\nconst MAX_BOOKING_COUNT_STD = 1;\nconst MAX_BOOKING_COUNT_GYNAE = 1;\nconst MAX_BOOKING_COUNT_BLOOD = 1;\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    PCRGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"0\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      GynaeGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"16px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      GPGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"32px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      STDGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"48px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n      BloodGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"64px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n      DermaGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"80px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n\n\n    \n\n    DayLabelContainer:{\n        position: \"absolute\",\n        top: \"15%\",\n        left:\"5px\",\n        width:\"100%\",\n        height:\"100%\"   \n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(null);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(null);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const minHeight = 1;\n    const getPCRClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.PCRGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.PCR_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getGynaeClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GynaeGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.GYNAE_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getGPClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GPGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.GP_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getSTDClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.STDGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.STD_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getBloodClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_BLOOD) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.BloodGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.BLOOD_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getDermaClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.DermaGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.DERMA_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n\n  \n  \n    const getBookingsCountLabel = (_bookingsCount) => {\n      if (!_bookingsCount) {\n        return (\n          <div className={classes.LoadingProgress}>\n            <CircularProgress disableShrink />\n          </div>\n        );\n      } else if (_bookingsCount !== -2) {\n        return (\n          <div className={classes.DayLabelContainer}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              {_bookingsCount.map((item) => (\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n              ))}\n            </Grid>\n          </div>\n        );\n      }\n    };\n\n    const getClinicBar = (clinic, count) => {\n        return (\n          <React.Fragment>\n            {clinic === \"pcr\" &&\n              state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\n              getPCRClinicBar(count)}\n            {clinic === \"gynae\" &&\n              state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\n              getGynaeClinicBar(count)}\n            {clinic === \"gp\" &&\n              state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\n              getGPClinicBar(count)}\n            {clinic === \"std\" &&\n              state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\n              getSTDClinicBar(count)}\n            {clinic === \"blood\" &&\n              state.selectedClinics.findIndex((e) => e === \"BLOOD\") >= 0 &&\n              getBloodClinicBar(count)}\n            {clinic === \"derma\" &&\n              state.selectedClinics.findIndex((e) => e === \"DERMA\") >= 0 &&\n              getDermaClinicBar(count)}\n   \n\n          </React.Fragment>\n        );\n      };\n  \n  \n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {/* {getBookingsCountGauge(bookingsCount)} */}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxGynae: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n\n  },\n\n  BoxGP: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxBlood: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n    color: CalendarColors.BLOOD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.BLOOD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxScreening: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.SCREENING_COLOR,\n    color: CalendarColors.SCREENING_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.SCREENING_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n  BoxDerma: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.DERMA_COLOR,\n    color: CalendarColors.DERMA_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.DERMA_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {\n    props.handleClose();\n  };\n\n\n  const timeDisabled = () => {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0\n  }\n\n  const clinicClicked = (clinic) => {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"420px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGynae} onClick={() => !timeDisabled() ? clinicClicked(\"gynae\") : null}>\n                      GYNAE\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGP} onClick={() => !timeDisabled() ? clinicClicked(\"gp\") : null}>\n                      GP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxSTD} onClick={() => clinicClicked(\"std\")}>\n                      STD\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxBlood} onClick={() => clinicClicked(\"blood\")}>\n                      BLOOD\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxScreening} onClick={() => clinicClicked(\"screening\")}>\n                      SCREENING\n                    </div>\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxDerma} onClick={() => clinicClicked(\"derma\")}>\n                      DERMATOLOGY\n                    </div>\n                  </Grid>\n\n\n\n                </Grid>\n\n              </div>\n\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={handleClose}\n                    style={{ width: \"100px\" }}\n                  >\n                    close\n                  </Button>\n                </Grid>\n\n              </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport { CalendarColors } from \"./colors\";\nimport clsx from \"clsx\";\n\nimport NewGPDialog from \"../../GP/NewBookingDialog\";\nimport NewGynaeDialog from \"../../Gynae/NewBookingDialog\";\nimport NewSTDDialog from \"../../STD/NewBookingDialog\";\nimport NewBloodDialog from \"../../Blood/NewBookingDialog\";\nimport NewDermaDialog from \"../../Derma/NewBookingDialog\";\nimport NewScreeningDialog from \"../../Screening/NewBookingDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    // border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n  BookingBorderPCR: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.PCR_COLOR,\n  },\n\n  BookingBorderGynae: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n  },\n\n  BookingBorderGP: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GP_COLOR,\n  },\n\n  BookingBorderSTD: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.STD_COLOR,\n  },\n  BookingBorderBlood: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n  },\n\n  BookingBorderDerma: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.DERMA_COLOR,\n  },\n\n  BookingBorderScreening: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.SCREENING_COLOR,\n  },\n\n  bookingBoxPending: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ddd\",\n    color: \"#777\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#eee\",\n      color: \"#333\",\n    },\n  },\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  const [openDialogGP, setOpenDialogGP] = React.useState(false);\n  const [openDialogGynae, setOpenDialogGynae] = React.useState(false);\n  const [openDialogSTD, setOpenDialogSTD] = React.useState(false);\n  const [openDialogBlood, setOpenDialogBlood] = React.useState(false);\n  const [openDialogDerma, setOpenDialogDerma] = React.useState(false);\n  const [openDialogScreening, setOpenDialogScreening] = React.useState(false);\n\n\n  const handleCloseDialogGP = () => {\n    setOpenDialogGP(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogGynae = () => {\n    setOpenDialogGynae(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogSTD = () => {\n    setOpenDialogSTD(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogBlood = () => {\n    setOpenDialogBlood(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogDerma = () => {\n    setOpenDialogDerma(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogScreening = () => {\n    setOpenDialogScreening(false);\n    setOpenDialogAddNew(false)\n  };\n\n\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >=\n              0 ||\n              booking.forename?.toLowerCase().indexOf(search.toLowerCase()) >=\n              0 ||\n              booking.surname?.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = ({status, confirmed, clinic}) => {\n\n    if (clinic === \"screening\" && !confirmed)\n    {\n      return classes.bookingBoxPending\n    }\n\n    switch (status) {\n      case \"sample_taken\":\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      case \"positive\":\n        return classes.bookingBoxPositive;\n      case \"report_sent\":\n      case \"report_cert_sent\":\n        return classes.bookingBoxReportSent;\n\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n  const getBookingBorderClass = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.BookingBorderPCR;\n      case \"gynae\":\n        return classes.BookingBorderGynae;\n      case \"gp\":\n        return classes.BookingBorderGP;\n      case \"std\":\n        return classes.BookingBorderSTD;\n      case \"blood\":\n        return classes.BookingBorderBlood;\n      case \"derma\":\n        return classes.BookingBorderDerma;\n      case \"screening\":\n        return classes.BookingBorderScreening;\n  \n\n      default:\n        return null;\n    }\n  };\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map(\n            (booking) =>\n              state.selectedClinics.findIndex(\n                (e) => e === booking.clinic.toUpperCase()\n              ) >= 0 && (\n                <div\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                  className={clsx(\n                    getBookingClass(booking),\n                    getBookingBorderClass(booking.clinic)\n                  )}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  {`${booking.fullname\n                      ? booking.fullname\n                      : `${booking.forename} ${booking.surname}`\n                    }`.substring(0, 15)}\n                </div>\n              )\n          )}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  const handleClinicClicked = (clinic) => {\n    switch (clinic) {\n      case \"gynae\":\n        setOpenDialogGynae(true);\n        break;\n      case \"gp\":\n        setOpenDialogGP(true);\n        break;\n      case \"std\":\n        setOpenDialogSTD(true);\n        break;\n      case \"blood\":\n        setOpenDialogBlood(true);\n        break;\n      case \"derma\":\n        setOpenDialogDerma(true);\n        break;\n      case \"screening\":\n        setOpenDialogScreening(true);\n        break;\n  \n\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        clinicClicked={handleClinicClicked}\n      />\n\n      <NewGPDialog\n        date={date}\n        time={time}\n        open={openDialogGP}\n        handleClose={handleCloseDialogGP}\n      />\n\n      <NewSTDDialog\n        date={date}\n        time={time}\n        open={openDialogSTD}\n        handleClose={handleCloseDialogSTD}\n      />\n\n      <NewGynaeDialog\n        date={date}\n        time={time}\n        open={openDialogGynae}\n        handleClose={handleCloseDialogGynae}\n      />\n\n      <NewBloodDialog\n        date={date}\n        time={time}\n        open={openDialogBlood}\n        handleClose={handleCloseDialogBlood}\n      />\n\n      <NewDermaDialog\n        date={date}\n        time={time}\n        open={openDialogDerma}\n        handleClose={handleCloseDialogDerma}\n      />\n\n      <NewScreeningDialog\n        date={date}\n        time={time}\n        open={openDialogScreening}\n        handleClose={handleCloseDialogScreening}\n      />\n\n\n\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CalendarColors } from './colors';\n\nconst Clinics = [\n    {clinic: \"PCR\", color: CalendarColors.PCR_COLOR},\n    {clinic: \"GYNAE\", color: CalendarColors.GYNAE_COLOR},\n    {clinic: \"GP\", color: CalendarColors.GP_COLOR},\n    {clinic: \"STD\", color: CalendarColors.STD_COLOR},\n    {clinic: \"BLOOD\", color: CalendarColors.BLOOD_COLOR},\n    {clinic: \"DERMA\", color: CalendarColors.DERMA_COLOR},\n    {clinic: \"SCREENING\", color: CalendarColors.SCREENING_COLOR},\n\n]\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n        setState(state => ({...state, selectedClinics : [\"PCR\", \"GP\", \"GYNAE\", \"STD\", \"BLOOD\",\"DERMA\",\"SCREENING\"]}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    const clinicClicked = (clinic) =>\n    {\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\n        {\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\n        }else\n        {\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\n        }\n    }\n\n    const getClinicGuide = () =>\n    {\n        return (\n            <div>\n               <Grid container spacing={1}>\n                   {Clinics.map( item => (\n                       <Grid item>\n                           <div \n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", minWidth:\"70px\", textAlign:\"center\", cursor:\"pointer\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", minWidth:\"70px\", textAlign:\"center\", cursor:\"pointer\"}}\n                                onClick= {() => clinicClicked(item.clinic)}   \n                                > \n                               {item.clinic}\n                           </div>\n                        </Grid>\n                   ))\n                   }\n               </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n\n            {getClinicGuide()}\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"../GlobalState\";\nimport { getMenuIndex } from \"../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n  DefaultLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SearchBookingTable(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n        case \"screening\":\n      return classes.ScreeningLabel;\n        \n      default:\n        return classes.DefaultLabel;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  columns = [\n    // { field: 'id', headerName: '#', width: 70 },\n\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <Button\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value, params.getValue(\"clinic\"))}\n            >\n              <SearchIcon />\n            </Button>\n          </React.Fragment>\n        );\n      },\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Type\",\n      align: \"center\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"fullname\", headerName: \"Fullname\", width: 200, valueGetter: (params) => {\n        if (!params.value || params.value.length === 0) {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        } else {\n          return params.value\n        }\n\n      }\n    },\n\n\n    {\n      field: \"bookingDate\",\n      headerName: \"B Date\",\n      width: 110,\n      valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      },\n    },\n    {\n      field: \"bookingTimeNormalized\",\n      headerName: \"B Time\",\n      width: 105,\n      valueGetter: (params) => {\n        return params.getValue(\"bookingTime\");\n      },\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 100,\n      renderCell: (params) => {\n        if (params.value === \"booked\") {\n          return <span className={classes.BookedLabel}> BM </span>;\n        } else if (params.value === \"patient_attended\") {\n          return <span className={classes.PatientAttendedLabel}> PA </span>;\n        } else if (params.value === \"sample_taken\") {\n          return <span className={classes.SampleTakenLabel}> ST </span>;\n        } else if (params.value === \"report_sent\") {\n          return <span className={classes.ReportSentLabel}> RS </span>;\n        } else if (params.value === \"report_cert_sent\") {\n          return <span className={classes.ReportCertSentLabel}> RCS </span>;\n        } else if (params.value === \"positive\") {\n          return <span className={classes.PositiveLabel}> POS </span>;\n        } else {\n          return \"\";\n        }\n      },\n    },\n    {\n      field: \"bookingRef\",\n      headerName: \"Ref No.\",\n      width: 120,\n      renderCell: (params) => {\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n            //  onClick={\n            //   () => {\n            //     console.log(params.value);\n\n            //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n            //     setState(state => ({...state, ref : params.value}));\n            //     setState(state => ({...state, refError : false}));\n            //     setState(state => ({...state, foundRecords : []}));\n            //     setState(state => ({...state, findRecords : !state.findRecords}));\n            //   }\n            // }\n            >\n              {params.value}\n            </Link>\n          </Tooltip>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    { field: \"phone\", headerName: \"Tel\", width: 150 },\n    { field: \"notes\", headerName: \"Notes\", width: 500 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: false,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n  const [seeDetailsDialogOpenBloodReport, setSeeDetailsDialogOpenBloodReport] = React.useState(false);\n\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = () => {\n    var api = BookService.searchAllBookings;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(filter)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  };\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n    setSeeDetailsDialogOpenBloodReport(false);\n  };\n\n  const openDetailsDialog = (event, id, clinic) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    if (clinic === \"Blood Result\") {\n      setSeeDetailsDialogOpenBloodReport(true);\n\n    }\n    else {\n      setSeeDetailsDialogOpen(true);\n\n    }\n\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n    setFilterError(false)\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  const [filterError, setFilterError] = React.useState(false)\n  const doSearch = () => {\n    if (!filter || filter.trim().length < 3) {\n      setFilterError(true)\n      return\n    }\n\n    loadData()\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={4}\n            >\n              <Grid item>\n                <TextField\n                  error={filterError}\n                  variant=\"standard\"\n                  value={filter}\n                  onChange={filterChanged}\n                  id=\"filter\"\n                  label=\"Patient's Name\"\n                  helperText={`You can search the patients by name ${filterError ? \"- Please Enter at least 3 characters\" : \"\"}`}\n                  name=\"filter\"\n                  autoComplete=\"off\"\n                  style={{ width: \"250px\" }}\n                  onKeyPress={(event) => {\n                    if (event.key === \"Enter\") {\n                      doSearch();\n                    }\n                  }}\n                />\n              </Grid>\n\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" onClick={doSearch}>\n                  Search\n                  </Button>\n              </Grid>\n\n              <Grid item>\n                {data.isFetching && (\n                  <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n                    <CircularProgress color=\"primary\" />\n                  </div>\n                )}\n              </Grid>\n\n            </Grid>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n      </Grid>\n\n\n      {data.bookings && data.bookings.length > 0 && (\n        <div style={{ height: 700, width: \"100%\", marginTop: \"20px\" }}>\n          <DataGrid\n            rows={data.bookings}\n            columns={columns}\n            autoPageSize\n            page={page}\n            onPageChange={(params) => {\n              setPage(params.page);\n            }}\n            onSelectionChange={handleSelectionChanged}\n          />\n        </div>\n      )}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n\n\n\n      )}\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpenBloodReport}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/bookappointment`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/optimalvision/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/optimalvision/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n    color: theme.palette.secondary.main,\n    fontSize: \"0.9rem\",\n  },\n\n  infoData: {\n    fontWeight: \"500\",\n    fontSize: \"1rem\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#b80012\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#d90015\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    color: \"#fff\",\n\n    backgroundColor:  \"#bd0d50\",\n    \"&:hover\": {\n      background: \"#d1175e\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  dialogTitle: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"#fff\",\n  },\n\n  question:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"400\",\n    color: theme.palette.secondary.main,\n    marginTop:\"30px\"\n  },\n\n  answer:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  const [openQDialg, setOpenQDialog] = React.useState(false)\n  const handleQDialgClose = () =>\n  {\n    setOpenQDialog(false)\n  }\n\n  const fixQuestion = (str) =>\n  {\n    let result = str.replace('*', '')\n    if (!result.trim().endsWith('?'))\n    {\n      result += '?'\n    }\n    return result\n  }\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              className={classes.dialogTitle}\n              style={{position:\"relative\"}}\n            >\n              {booking.questions && (\n                 <div style={{position:\"absolute\", right:\"10px\", top:\"12px\", backgroundColor:\"#069c00\", fontSize:\"0.85rem\", padding:\"8px\", borderRadius:\"10px\"}}>\n                   Self-Test\n                 </div>\n              )}\n\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: 25,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME :\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              FULLNAME :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>EMAIL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>TEL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              Consultation :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.faceToFaceConsultation && (\n                                <span> Face to Face </span>\n                              )}\n                              {((booking.faceToFaceConsultation &&\n                                booking.telephoneConsultation) ||\n                                (!booking.faceToFaceConsultation &&\n                                  !booking.telephoneConsultation)) && (\n                                <span\n                                  style={{\n                                    paddingLeft: \"5px\",\n                                    paddingRight: \"5px\",\n                                  }}\n                                >\n                                  {\" \"}\n                                  -{\" \"}\n                                </span>\n                              )}\n                              {booking.telephoneConsultation && (\n                                <span> Telephone </span>\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      {booking.questions && (\n                        <React.Fragment>\n                          <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                          <Button fullWidth variant=\"contained\" color=\"primary\" style={{color:\"#fff\",margin:\"10px\"}} onClick={() => setOpenQDialog(true)}>\n                             Show questionnaire\n                          </Button>\n                          </div>\n                          <Divider />\n                        </React.Fragment>\n                      )}\n\n                   \n\n                      \n                      <div style={{marginTop:\"20px\"}}>\n\n                      </div>\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to archive this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Archive This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Archive This Record\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Archive this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n\n          <Dialog\n            open={openQDialg}\n            onClose={handleQDialgClose}\n            maxWidth=\"sm\"\n          >\n            <DialogContent>\n                      {booking.questions && JSON.parse(booking.questions).map(item => (\n                        <div >\n                          <div className={classes.question}>\n                            {fixQuestion(item.question)}\n                          </div>\n                          <div className={classes.answer}>\n                            {item.answer}\n                          </div>\n                        </div>\n                      ))}\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={() => setOpenQDialog(false)}>\n                Close\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PaymentService {\n\n   static sendPaymentLinkTextMessage = (medexPaymentId, phone) =>\n   {\n      return API.post(`/api/medex/payment/sendpaymentlinktext`, {medexPaymentId : medexPaymentId, phone: phone});\n   }\n\n\n   static sendPaymentLinkEmail = (medexPaymentId, email) =>\n   {\n      return API.post(`/api/medex/payment/sendpaymentlinkemail`, {medexPaymentId : medexPaymentId, email: email});\n   }\n\n   static doPayment = (paymentId, medexPaymentId) =>\n   {\n      return API.post(`/api/medex/payment/dopayment`, {paymentId: paymentId  , medexPaymentId : medexPaymentId});\n   }\n\n   static refundPayment = (paymentId) =>\n   {\n      return API.post(`/api/medex/payment/refundpayment`, {medexPaymentId : paymentId});\n   }\n\n   static createNewPaymentLink = (paymentRecord) =>\n   {\n      return API.post(`/api/medex/payment/createpayment`, {paymentRecord : paymentRecord});\n   }\n\n   static deletePaymentLink = (paymentId) =>\n   {\n      return API.post(`/api/medex/payment/deletepayment`, {medexPaymentId : paymentId});\n   }\n\n   static getAllPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getallpayments`);\n   }\n\n   static getDeletedPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getdeletedpayments`);\n   }\n\n   static getPaidPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getpaidpayments`);\n   }\n\n   static getNotPaidPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getnotpaidpayments`);\n   }\n\n   static getLatePayments = () =>\n   {\n      return API.get(`/api/medex/payment/getlatepayments`);\n   }\n\n\n   static getRefundPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getrefundpayments`);\n   }\n\n   static getRecentPayments = () => {\n      return API.get(`/api/medex/payment/getrecentpayments`);\n   }\n\n   static getPaymentById = (paymentId) =>\n   {\n      return API.get(`/api/medex/payment/getpaymentbyid?id=${paymentId}`);\n   }\n\n   static getTotalReceivedAmount = () => {\n      return API.get(`/api/medex/payment/gettotalreceivedamount`);\n   }\n\n   static getTodayReceivedAmount = () => {\n      return API.get(`/api/medex/payment/gettodayreceivedamount`);\n   }\n\n   static getTotalLinkSent = () => {\n      return API.get(`/api/medex/payment/gettotallinksent`);\n   }\n\n   static getTodayLinkSent = () => {\n      return API.get(`/api/medex/payment/gettodaylinksent`);\n   }\n\n\n   \n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PatientService {\n\n\n   static registerNewPatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/registernewpatient`, payload);\n   }\n\n   static updatePatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/updatepatient`, payload);\n   } \n\n   static deletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/deletepatient?id=${id}`);\n   } \n\n   static unDeletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/undeletepatient?id=${id}`);\n   } \n   \n    static getPatientById = (id) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbyid?id=${id}`);\n    }\n\n    static getPatientByPatientId = (patiantID) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbypatientid?patiantID=${patiantID}`);\n    }\n\n    static getAllPatients = () =>\n    {\n      return API.get(`/api/optimalvision/patient/getallpatients`);\n    }\n\n    static getDeletedPatients= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/patiant/getdeletedpatients`);\n    }\n\n}","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, IconButton, InputLabel, Select, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    loadingBox: {\n\n    }\n\n}));\n\n\nconst DateField = ({ title, value, dateChanged, error, todayButton, children }) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n    const updateDate = (dd, mm, yyyy) => {\n        let dayStr = `${dd}`;\n        let monthStr = `${mm + 1}`;\n\n\n        if (dayStr.length === 1) {\n            dayStr = `0${dayStr}`;\n        }\n\n        if (monthStr.length === 1) {\n            monthStr = `0${monthStr}`;\n        }\n\n        dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n\n\n    }\n\n    const handleDayChanged = (event) => {\n        setDay(event.target.value);\n        updateDate(event.target.value, month, year);\n    };\n\n    const handleMonthChanged = (event) => {\n        setMonth(event.target.value);\n        updateDate(day, event.target.value, year);\n    };\n\n    const handleYearChanged = (event) => {\n        setYear(event.target.value);\n        updateDate(day, month, event.target.value);\n    };\n\n    const resetDate = () => {\n        setDay(\"\")\n        setYear(\"\")\n        setMonth(\"\")\n        dateChanged(\"\")\n    }\n\n    const todayDate = () => {\n        const today = new Date()\n        updateDate(today.getDate(), today.getMonth(), today.getFullYear())\n    }\n\n\n    useEffect(() => {\n        if (value && value.length === 10) {\n            const d = parseInt(value.substr(8, 2));\n            const m = parseInt(value.substr(5, 2));\n            const y = parseInt(value.substr(0, 4));\n\n            setDay(d);\n            setMonth(m - 1);\n            setYear(y);\n        }else if (!value)\n        {\n            resetDate()\n        }\n\n\n    }, [value]);\n\n    useEffect(() => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1; i <= 31; i++) {\n            days.push(i);\n        }\n\n        for (i = 0; i < 12; i++) {\n            months.push(dateformat(new Date(2020, i, 5), 'mmmm'));\n        }\n\n        for (i = 1900; i <= new Date().getFullYear() + 1; i++) {\n            years.push(i);\n        }\n\n\n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n    }, [])\n\n    return (\n\n        <React.Fragment>\n\n\n            <div style={{ position: \"relative\", border: `1px solid ${error ? 'red' : '#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    {title}\n                </div>\n\n                <div style={{ position: \"absolute\", top: \"-25px\", right: \"10px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    <Tooltip title=\"Clear Date\">\n                        <IconButton onClick={resetDate}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n\n                {todayButton && (\n                    <div style={{ position: \"absolute\", top: \"-25px\", right: \"70px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                        <Tooltip title=\"Today\">\n                            <IconButton onClick={todayDate}>\n                                <TodayIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n\n                )}\n\n\n\n\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                >\n\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Day</InputLabel>\n                            <Select\n\n                                labelId=\"day-label\"\n                                id=\"day-select\"\n                                value={day}\n                                onChange={handleDayChanged}\n                            >\n                                {\n                                    dayArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"month-label\">Month</InputLabel>\n                            <Select\n                                labelId=\"month-label\"\n                                id=\"month-select\"\n                                value={month}\n                                onChange={handleMonthChanged}\n                            >\n                                {\n                                    monthArray.map((item, index) => (\n                                        <MenuItem value={index}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Year</InputLabel>\n                            <Select\n                                labelId=\"year-label\"\n                                id=\"year-select\"\n                                value={year}\n                                onChange={handleYearChanged}\n                            >\n                                {\n                                    yearArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <div>\n                    {children}\n                </div>\n\n            </div>\n\n\n        </React.Fragment>\n    );\n}\n\n\nDateField.propTypes = {\n    title: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n};\n\nexport default DateField;\n\n\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport PatientService from \"./services/PatientService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PatientDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [patient, setPatient] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [patientIDError, setPatientIDError] = React.useState(false)\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [patientRepeated, setPatientRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n            const _history = []\n\n            if (props.patient) {\n                setPatient({ ...props.patient, formData: props.patient.formData ? JSON.parse(props.patient.formData) : {} })\n                setBackUpFormData(props.patient.formData ? JSON.parse(props.patient.formData) : {})\n                if (props.patient.history) {\n                    props.patient.history.forEach(record => {\n                        _history.push(JSON.parse(record))\n                    });\n                    setSelectedVersion(0)\n                }\n            }\n            else {\n                setPatient({ formData: {},  name : props.name || '', surname: props.surname || ''})\n            }\n\n            setHistory(_history.reverse())\n\n        }\n    }, [props.patient, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        setPatient({ formData: {} })\n        setPatientIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        setPatientRepeated(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatePatient()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            setPatientRepeated(false)\n            setSaving(true)\n            patient.formData = JSON.stringify(patient.formData)\n            if (props.patient) {\n                const res = await PatientService.updatePatient({ id: patient._id, patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await PatientService.registerNewPatient({ patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated Patient!\") {\n                    setPatientIDError(true)\n                    setPatientRepeated(true)\n                    setValue(0)\n\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await PatientService.deletePatient(props.patient._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                patientDialogDataChanged: !state.patientDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatePatient = () => {\n        var error = false\n        if (!patient.patientID || patient.patientID.trim().length === 0) {\n            error = true\n            setPatientIDError(true)\n        }\n        if (!patient.name || patient.name.trim().length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!patient.surname || patient.surname.trim().length === 0) {\n            error = true\n            setSurnameError(true)\n        }\n\n        if (patient.birthDate && patient.birthDate.length !== 10) {\n            setBirthDateError(true)\n            error = true\n        }\n\n        return !error\n\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const showHistoryComboBox = () => {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"-10px\" }}>\n                    <span style={{ color: \"#fff\", fontWeight: \"500\", fontSize: \"1rem\", marginRight: \"10px\" }}>\n                        Version :\n                    </span>\n                    <Select\n                        label=\"Version\"\n                        labelId=\"version-label\"\n                        id=\"version-label\"\n                        style={{ color: \"#fff\", padding: \"0px 10px\" }}\n                        value={selectedVersion}\n                        onChange={(event) => {\n                            setSelectedVersion(event.target.value)\n                            if (event.target.value === 0) {\n                                setPatient({ ...patient, formData: backupFormData })\n                            } else {\n                                setPatient({ ...patient, formData: history[event.target.value - 1] })\n                            }\n\n                        }}\n\n                    >\n                        <MenuItem value={0}>{`${formatDate(patient.formData.timeStamp)} ( Current )`}</MenuItem>\n\n                        {history.map((item, index) => (\n                            <MenuItem value={index + 1}>{`${formatDate(item.timeStamp)} ( History )`}</MenuItem>\n                        ))\n                        }\n                    </Select>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"secondary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n\n                            {history && history.length > 0 && (\n                                <Grid item>\n                                    {showHistoryComboBox()}\n                                </Grid>\n                            )}\n                        </Grid>\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n                            <Tab label={`History & Symptoms`} {...a11yProps(1)} />\n                            <Tab label=\"Dry Eyes\" {...a11yProps(2)} />\n                            <Tab label=\"Ocular Examination\" {...a11yProps(3)} />\n                            <Tab label=\"Diagnostics\" {...a11yProps(4)} />\n                            <Tab label=\"Uncorrected VA\" {...a11yProps(5)} />\n                            <Tab label=\"Refraction\" {...a11yProps(6)} />\n                            <Tab label=\"Auto Refraction\" {...a11yProps(7)} />\n                            <Tab label=\"Manifest Refraction\" {...a11yProps(8)} />\n                            <Tab label=\"Target Refraction\" {...a11yProps(9)} />\n                            <Tab label=\"Recommendation\" {...a11yProps(10)} />\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        disabled={props.patient}\n                                        name=\"patientid\"\n                                        id=\"patientid\"\n                                        label=\"Patient ID\"\n                                        fullWidth\n                                        required\n                                        helperText={patientRepeated ? 'This PatientID is already assigned to another patient' : ''}\n                                        error={patientIDError}\n                                        value={patient.patientID || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, patientID: event.target.value })\n                                            setPatientIDError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"firstname\"\n                                        id=\"firstname\"\n                                        label=\"First Name\"\n                                        fullWidth\n                                        required\n                                        error={nameError}\n                                        value={patient.name || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, name: event.target.value })\n                                            setNameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"surname\"\n                                        id=\"surname\"\n                                        label=\"Surname\"\n                                        fullWidth\n                                        required\n                                        error={surnameError}\n                                        value={patient.surname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, surname: event.target.value })\n                                            setSurnameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"gender-label\">Gender</InputLabel>\n                                        <Select\n                                            label=\"Gender\"\n                                            labelId=\"gender-label\"\n                                            id=\"gender-label\"\n                                            fullWidth\n                                            style={{ height: \"90px\" }}\n                                            value={patient.gender || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, gender: event.target.value })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8} style={{ marginTop: \"-20px\" }} >\n                                    <DateField\n                                        error={birthDateError}\n                                        value={patient.birthDate || ''}\n                                        title=\"DOB\"\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, birthDate: value })\n                                            setBirthDateError(false)\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"postcode\"\n                                        id=\"postcode\"\n                                        label=\"Postcode\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.postCode || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, postCode: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8}>\n                                    <TextField\n                                        name=\"address\"\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.address || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, address: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"hometel\"\n                                        id=\"hometel\"\n                                        label=\"Home Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.homeTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, homeTel: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"mobiletel\"\n                                        id=\"mobiletel\"\n                                        label=\"Mobile Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.mobileTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, mobileTel: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"email\"\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.email || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, email: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"occupation\"\n                                        id=\"occupation\"\n                                        label=\"Occupation\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.occupation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, occupation: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"gpname\"\n                                        id=\"gpname\"\n                                        label={`GP Name & Address`}\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.gpname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, gpname: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"kincontact\"\n                                        id=\"kincontact\"\n                                        label=\"Next of Kin Contact\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.kincontact || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, kincontact: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"prevsighttest\"\n                                        id=\"prevsignttest\"\n                                        label=\"Previous Sight Test\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevsighttest || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevsighttest: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                {props.patient && (\n                                    <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                                        <Button\n                                            onClick={() => setOpenDeleteDialog(true)}\n                                            variant=\"contained\"\n                                            fullWidth\n                                            color=\"primary\"\n                                            // style={{ width: \"100px\" }}\n                                            style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                            disabled={saving}\n                                        >\n                                            Delete This Patient\n                                  </Button>\n                                    </Grid>\n\n\n                                )}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cc\"\n                                        id=\"cc\"\n                                        label=\"C.C\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cc || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cc: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevmedicalhistory\"\n                                        id=\"prevmedicalhistory\"\n                                        label=\"Previous Medical History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevmedicalhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevmedicalhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevocularhistory\"\n                                        id=\"prevocularhistory\"\n                                        label=\"Previous Ocular History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevocularhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevocularhistory: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"familyhistory\"\n                                        id=\"familyhistory\"\n                                        label=\"Family History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.familyhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, familyhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"medications\"\n                                        id=\"medications\"\n                                        label=\"Medications\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.medications || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, medications: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"grafth\"\n                                        id=\"grafth\"\n                                        label=\"Graft H\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.grafth || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, grafth: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"allergies\"\n                                        id=\"allregies\"\n                                        label=\"Allergies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.allergies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, allergies: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"contactlenswearer\"\n                                        id=\"contactlenswearer\"\n                                        label=\"Contact Lens Wearer\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        placeholder={` Yes/No \\n Soft/RGP/EW`}\n                                        value={patient.formData.contactlenswearer || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlenswearer: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"hobbies\"\n                                        id=\"hobbies\"\n                                        label=\"Lifestyle / Hobbies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.hobbies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, hobbies: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vdu\"\n                                        id=\"vdu\"\n                                        label=\"VDU\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vdu || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vdu: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"driver\"\n                                        id=\"driver\"\n                                        label=\"Driver\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.driver || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, driver: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"othernotes\"\n                                        id=\"othernotes\"\n                                        label=\"Other Notes\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.othernotes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, othernotes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"dryevehistory\"\n                                        id=\"dryevehistory\"\n                                        label=\"Dry Eye History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.dryeyehistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, dryeyehistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"nightvisionglare\"\n                                        id=\"nightvisionglare\"\n                                        label=\"Night Vision / Glare\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nightvisionglare || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nightvisionglare: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"ocularirritation\"\n                                        id=\"ocularirritation\"\n                                        label=\"Ocular Irritation\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ocularirritation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ocularirritation: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"wateryeyes\"\n                                        id=\"wateryeyes\"\n                                        label=\"Watery Eyes\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.wateryeyes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, wateryeyes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"speedquestionariedone\"\n                                        id=\"speedquestionariedone\"\n                                        label=\"SPEED Questionnaire Done\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.speedquestionariedone || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, speedquestionariedone: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <div className={classes.titleCenter || ''}>\n                                        ANTERIOR SEGMENT\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cornearight\"\n                                        id=\"cornearight\"\n                                        label=\"Cornea (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cornearight || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cornearight: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cornealeft\"\n                                        id=\"cornealeft\"\n                                        label=\"Cornea (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cornealeft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cornealeft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lidslashesright\"\n                                        id=\"lidslashesright\"\n                                        label={`Lids & Lashes (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lidslashesright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lidslashesright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lidslashesleft\"\n                                        id=\"lidslashesleft\"\n                                        label={`Lids & Lashes (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lidslashesleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lidslashesleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"conjunctivaright\"\n                                        id=\"conjunctivaright\"\n                                        label={`Conjunctiva (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.conjunctivaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, conjunctivaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"conjunctivaleft\"\n                                        id=\"conjunctivaleft\"\n                                        label={`Conjunctiva (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.conjunctivaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, conjunctivaleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupilright\"\n                                        id=\"pupilright\"\n                                        label={`Pupil/PERRLA/RPAD/SIZE (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupilright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupilright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupilleft\"\n                                        id=\"pupilleft\"\n                                        label={`Pupil/PERRLA/RPAD/SIZE (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupilleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupilleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acright\"\n                                        id=\"acright\"\n                                        label={`A.C. (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acleft\"\n                                        id=\"acleft\"\n                                        label={`A.C. (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lensright\"\n                                        id=\"lensright\"\n                                        label={`Lens (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lensright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lensright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lensleft\"\n                                        id=\"lensleft\"\n                                        label={`Lens (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lensleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lensleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vitreousright\"\n                                        id=\"vitreousright\"\n                                        label={`Vitreous (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vitreousright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vitreousright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vitreousleft\"\n                                        id=\"vitreousleft\"\n                                        label={`Vitreous (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vitreousleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vitreousleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombright\"\n                                        id=\"ombright\"\n                                        label={`OMB (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombleft\"\n                                        id=\"ombleft\"\n                                        label={`OMB (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"tbutright\"\n                                        id=\"tbutright\"\n                                        label={`TBUT (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.tbutright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, tbutright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombleft\"\n                                        id=\"ombleft\"\n                                        label={`OMB (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} style={{ margingTop: \"10px\" }}>\n                                    <div className={classes.titleCenter}>\n                                        POSTERIOR SEGMENT\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"discright\"\n                                        id=\"discright\"\n                                        label={`DISC (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.discright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, discright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"discleft\"\n                                        id=\"discleft\"\n                                        label={`DISC (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.discleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, discleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cdright\"\n                                        id=\"cdright\"\n                                        label={`C:D (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cdright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cdright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cdleft\"\n                                        id=\"cdleft\"\n                                        label={`C:D (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cdleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cdleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"bloodvesselsright\"\n                                        id=\"bloodvesselsright\"\n                                        label={`Blood Vessels (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.bloodvesselsright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, bloodvesselsright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"bloodvesselsleft\"\n                                        id=\"bloodvesselsleft\"\n                                        label={`Blood Vessels (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.bloodvesselsleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, bloodvesselsleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"macularight\"\n                                        id=\"macularight\"\n                                        label={`Macula (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.macularight || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, macularight: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculaleft\"\n                                        id=\"maculaleft\"\n                                        label={`Macula (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculaleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"peripheryright\"\n                                        id=\"peripheryright\"\n                                        label={`Periphery (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.peripheryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, peripheryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"peripheryleft\"\n                                        id=\"peripheryleft\"\n                                        label={`Periphery (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.peripheryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, peripheryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={4}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupillowlightdiamright\"\n                                        id=\"pupillowlightdiamright\"\n                                        label=\"Pupil (low light diam) (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupillowlightdiamright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupillowlightdiamright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupillowlightdiamleft\"\n                                        id=\"pupillowlightdiamleft\"\n                                        label=\"Pupil (low light diam) (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupillowlightdiamleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupillowlightdiamleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pachmetryright\"\n                                        id=\"pachmetryright\"\n                                        label=\"Pachmetry (μm) (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pachmetryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pachmetryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pachmetryleft\"\n                                        id=\"pachmetryleft\"\n                                        label=\"Pachmetry (μm) (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pachmetryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pachmetryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"keratometryright\"\n                                        id=\"keratometryright\"\n                                        label=\"Keratometry (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.keratometryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, keratometryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"keratometryleft\"\n                                        id=\"keratometryleft\"\n                                        label=\"Keratometry (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.keratometryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, keratometryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acdepthright\"\n                                        id=\"acdepthright\"\n                                        label=\"AC Depth (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acdepthright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acdepthright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acdepthleft\"\n                                        id=\"acdepthleft\"\n                                        label=\"AC Depth (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acdepthleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acdepthleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculathicnessright\"\n                                        id=\"maculathicnessright\"\n                                        label=\"Macula Thickness (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculathicnessright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculathicnessright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculathicnessleft\"\n                                        id=\"maculathicnessleft\"\n                                        label=\"Macula Thickness (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculathicnessleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculathicnessleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"octcommentright\"\n                                        id=\"octcommentright\"\n                                        label=\"OCT Comment (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.octcommentright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, octcommentright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"octcommentleft\"\n                                        id=\"octcommentleft\"\n                                        label=\"OCT Comment (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.octcommentleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, octcommentleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pentacamcommentright\"\n                                        id=\"pentacamcommentright\"\n                                        label=\"Pentacam Comment (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pentacamcommentright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pentacamcommentright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pentacamcommentleft\"\n                                        id=\"pentacamcommentleft\"\n                                        label=\"Pentacam Comment (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pentacamcommentleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pentacamcommentleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={5}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevaright\"\n                                        id=\"distancevaright\"\n                                        label=\"Distance (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevaleft\"\n                                        id=\"distancevaleft\"\n                                        label=\"Distance (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevabinocular\"\n                                        id=\"distancevabinocular\"\n                                        label=\"Distance (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevaright\"\n                                        id=\"intermediatevaright\"\n                                        label=\"Intermediate (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevaleft\"\n                                        id=\"intermediatevaleft\"\n                                        label=\"Intermediate (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevabinocular\"\n                                        id=\"intermediatevabinocular\"\n                                        label=\"Intermediate (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvaright\"\n                                        id=\"nearvaright\"\n                                        label=\"Near (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvaleft\"\n                                        id=\"nearvaleft\"\n                                        label=\"Near (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvabinocular\"\n                                        id=\"nearvabinocular\"\n                                        label=\"Near (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n\n\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={6}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <DateField\n                                        // error={birthDateError}\n                                        title=\"Current Prescription Date\"\n                                        value={patient.formData.refractioncurrentpresdate || ''}\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, refractioncurrentpresdate: value } })\n                                            // setBirthDateError(false)\n                                        }}\n                                        todayButton={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateright\"\n                                        id=\"spherepresdateright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateright\"\n                                        id=\"cylpresdateright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateright\"\n                                        id=\"axispresdateright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateright\"\n                                        id=\"addpresdateright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateright\"\n                                        id=\"vapresdateright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateleft\"\n                                        id=\"spherepresdateleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateleft\"\n                                        id=\"cylpresdateleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateleft\"\n                                        id=\"axispresdateleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateleft\"\n                                        id=\"addpresdateleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateleft\"\n                                        id=\"vapresdateleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"spectype-label\">Spec Type</InputLabel>\n                                        <Select\n                                            label=\"Spec Type\"\n                                            labelId=\"spectype-label\"\n                                            id=\"spectype-label\"\n                                            style={{ textAlign: \"center\" }}\n                                            fullWidth\n                                            value={patient.formData.refractionsepctype || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, formData: { ...patient.formData, refractionsepctype: event.target.value } })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Single Vision\"}>Single Vision</MenuItem>\n                                            <MenuItem value={\"Bifocal\"}>Bifocal</MenuItem>\n                                            <MenuItem value={\"Varifocal\"}>Varifocal</MenuItem>\n                                            <MenuItem value={\"RR\"}>RR</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12}>\n                                    <DateField\n                                        // error={birthDateError}\n                                        title=\"Contact Lens Date\"\n                                        value={patient.formData.contactlensdate || ''}\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlensdate: value } })\n                                            // setBirthDateError(false)\n                                        }}\n                                        todayButton={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdaterightlens\"\n                                        id=\"spherepresdaterightlens\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdaterightlens\"\n                                        id=\"cylpresdaterightlens\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdaterightlens\"\n                                        id=\"axispresdaterightlens\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdaterightlens\"\n                                        id=\"addpresdaterightlens\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdaterightlens\"\n                                        id=\"vapresdaterightlens\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateleftlens\"\n                                        id=\"spherepresdateleftlens\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateleftlens\"\n                                        id=\"cylpresdateleftlens\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateleftlens\"\n                                        id=\"axispresdateleftlens\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateleftlens\"\n                                        id=\"addpresdateleftlens\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateleftlens\"\n                                        id=\"vapresdateleftlens\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"cltype-label\">CL Type</InputLabel>\n                                        <Select\n                                            label=\"CL Type\"\n                                            labelId=\"cltype-label\"\n                                            id=\"cltype-label\"\n                                            style={{ textAlign: \"center\" }}\n                                            fullWidth\n                                            value={patient.formData.refractioncltype || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, formData: { ...patient.formData, refractioncltype: event.target.value } })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Dailies Soft\"}>Dailies Soft</MenuItem>\n                                            <MenuItem value={\"Monthlies\"}>Monthlies</MenuItem>\n                                            <MenuItem value={\"RGP\"}>RGP</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={12} style={{ marginBottom: \"20px\" }}></Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={7}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"sphereautorefright\"\n                                        id=\"sphereautorefright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.sphereautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, sphereautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylautorefright\"\n                                        id=\"cylautorefright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axisautorefright\"\n                                        id=\"axisautorefright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axisautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axisautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vaautorefright\"\n                                        id=\"vaautorefright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vaautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vaautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}></Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"sphereautorefleft\"\n                                        id=\"sphereautorefleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.sphereautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, sphereautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylautorefleft\"\n                                        id=\"cylautorefleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axisautorefleft\"\n                                        id=\"axisautorefleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axisautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axisautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vaautorefleft\"\n                                        id=\"vaautorefleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vaautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vaautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={8}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <div className={classes.titleCenter}>\n                                        Manifest Refraction\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheremanifestright\"\n                                        id=\"spheremanifestright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheremanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheremanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylmanifestright\"\n                                        id=\"cylmanifestright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylmanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylmanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axismanifestright\"\n                                        id=\"axismanifestright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axismanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axismanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addmanifestright\"\n                                        id=\"addmanifestright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addmanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addmanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vamanifestright\"\n                                        id=\"vamanifestright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vamanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vamanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheremanifestleft\"\n                                        id=\"spheremanifestleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheremanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheremanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylmanifestleft\"\n                                        id=\"cylmanifestleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylmanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylmanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axismanifestleft\"\n                                        id=\"axismanifestleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axismanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axismanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addmanifestleft\"\n                                        id=\"addmanifestleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addmanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addmanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vamanifestleft\"\n                                        id=\"vamanifestleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vamanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vamanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} style={{ marginTop: \"50px\" }}>\n                                    <div className={classes.titleCenter}>\n                                        Cycloplegic Refraction\n                                    </div>\n                                </Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherecycloright\"\n                                        id=\"spherecycloright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherecycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherecycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylcycloright\"\n                                        id=\"cylcycloright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylcycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylcycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axiscycloright\"\n                                        id=\"axiscycloright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axiscycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axiscycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addcycloright\"\n                                        id=\"addcycloright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addcycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addcycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vacycloright\"\n                                        id=\"vacycloright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vacycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vacycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherecycloleft\"\n                                        id=\"spherecycloleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherecycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherecycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylcycloleft\"\n                                        id=\"cylcycloleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylcycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylcycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axiscycloleft\"\n                                        id=\"axiscycloleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axiscycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axiscycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addcycloleft\"\n                                        id=\"addcycloleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addcycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addcycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vacycloleft\"\n                                        id=\"vacycloleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vacycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vacycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={9}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheretargetrefright\"\n                                        id=\"spheretargetrefright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheretargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheretargetrefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cyltargetrefright\"\n                                        id=\"cyltargetrefright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cyltargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cyltargetrefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axistargetrefright\"\n                                        id=\"axistargetrefright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axistargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axistargetrefright: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                </Grid>\n                                <Grid item xs={12} md={2}></Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheretargetrefleft\"\n                                        id=\"spheretargetrefleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheretargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheretargetrefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cyltargetrefleft\"\n                                        id=\"cyltargetrefleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cyltargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cyltargetrefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axistargetrefleft\"\n                                        id=\"axistargetrefleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axistargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axistargetrefleft: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={10}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"recommendation\"\n                                        id=\"recommendation\"\n                                        label=\"Recommendation\"\n                                        fullWidth\n                                        multiline\n                                        rows={15}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.recommendation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, recommendation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                Are you sure you want to delete this patient?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this patient\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport PaymentService from \"./services/PaymentService\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\n\nimport * as EmailValidator from \"email-validator\";\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport SendIcon from '@material-ui/icons/Send';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewPaymentDialog(props) {\n  const classes = useStyles();\n\n  const LinkRef = React.useRef(null)\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [amount, setAmount] = useState(\"\");\n  const [amountError, setAmountError] = useState(false);\n\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [phoneSent, setPhoneSent] = React.useState(false);\n\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [description, setDescription] = React.useState(\"\");\n\n  const [paymentLink, setPaymentLink] = React.useState(null);\n  const [paymentId, setPaymentId] = React.useState(null);\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    if (EmailValidator.validate(event.target.value))\n    {\n      setEmailError(false)\n    }\n   \n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n  };\n\n\n  const amountChanged = (event) => {\n    setAmount(event.target.value)\n    setAmountError(false)\n  }\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setAmount('')\n    setFullname('')\n    setEmail('')\n    setPhone('')\n    setDescription('')\n    setNotes('')\n    setPaymentLink(null)\n    setPaymentId(null)\n\n    setAmountError(false)\n    setFullnameError(false)\n    setEmailError(false)\n    setPhoneError(false)\n    setSaving(false);\n    setEmailSent(false)\n    setPhoneSent(false)\n  };\n\n  const createLinkClicked = async () => {\n    if (!validatePayment()) {\n      return\n    }\n\n    try {\n      setSaving(true)\n      const paymentRecord = {\n        amount: amount,\n        fullname: fullname,\n        description: description,\n        notes: notes\n      }\n\n      const res = await PaymentService.createNewPaymentLink(paymentRecord)\n\n      if (res && res.data && res.data.status === \"OK\") {\n        const payment = res.data.payment\n        setPaymentLink(buildPaymentLink(payment._id))\n        setPaymentId(payment._id)\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n        LinkRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n      }\n\n      setSaving(false)\n\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n\n\n  }\n\n  const validatePayment = () => {\n    let error = false\n\n    if (!amount || amount.trim().length === 0 || parseFloat(amount) <= 0) {\n      setAmountError(true)\n      error = true\n    }\n\n    if (!fullname || fullname.trim().length === 0) {\n      setFullnameError(true)\n      error = true\n    }\n\n    return !error\n\n  }\n\n  const buildPaymentLink = (id) => {\n    return `https://londonmedicalclinic.co.uk/medicalexpressclinic/pay/${id}`\n  }\n\n  const sendEmailClicked = async () =>\n  {\n    if (!email || email.length < 3 || !EmailValidator.validate(email))\n    {\n      setEmailError(true)\n      return\n    }\n\n    try{\n\n      setSaving(true)\n\n     const res = await PaymentService.sendPaymentLinkEmail(paymentId, email)\n     if (res && res.data && res.data.status === \"OK\")\n     {\n       setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n       setEmailSent(true)     \n     }\n\n     setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n  const sendTextClicked = async () =>\n  {\n    if (!phone || (phone.trim().length < 10))\n    {\n      setPhoneError(true)\n      return\n    }\n\n    try{\n\n      setSaving(true)\n\n     const res = await PaymentService.sendPaymentLinkTextMessage(paymentId, phone)\n     if (res && res.data && res.data.status === \"OK\")\n     {\n       setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n       setPhoneSent(true)     \n     }\n\n     setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        <Dialog\n          maxWidth=\"sm\"\n          open={props.open}\n          onClose={handleClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <LinkIcon\n                  style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#f50057\",\n                    paddingBottom: \"10px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                    Create New Payment Link{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <Grid\n              container\n              justify=\"space-between\"\n              spacing={2}\n              alignItems=\"flex-start\"\n              style={{ marginBottom: \"20px\" }}\n            >\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  autoFocus\n                  error={amountError}\n                  label=\"Amount\"\n                  value={amount}\n                  fullWidth\n                  required\n                  onChange={amountChanged}\n                  name=\"product-price\"\n                  id=\"product-price-id\"\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        £\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  fullWidth\n                  error={fullnameError}\n                  label=\"Customer/Payer Name\"\n                  value={fullname}\n                  required\n                  onChange={fullnameChanged}\n                  name=\"fullname\"\n                  id=\"fullname-id\"\n                  autoComplete=\"none\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  fullWidth\n                  label=\"Description\"\n                  value={description}\n                  onChange={descriptionChanged}\n                  name=\"description\"\n                  id=\"description-id\"\n                  helperText=\"This will be shown to the users at payment time.\"\n                  autoComplete=\"none\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  fullWidth\n                  label=\"Notes\"\n                  value={notes}\n                  onChange={notesChanged}\n                  name=\"notes\"\n                  id=\"notes-id\"\n                  helperText=\"This is just for your use, it will not be shown to the users.\"\n                  autoComplete=\"none\"\n                />\n              </Grid>\n\n              {paymentLink && (\n                <React.Fragment>\n\n                  <Grid item xs={12}>\n\n                    <div style={{ fontSize: \"1rem\", fontWeight: \"500\", marginBottom: \"5px\", marginTop: \"5px\", color: \"#333\" }}>\n                      Payment Link URL :\n                    </div>\n\n                    <div style={{ width: \"100%\", overflowWrap: \"break-word\" }} ref={LinkRef}>\n                      <Link style={{ fontSize: \"1rem\", fontWeight: \"500\" }} href={paymentLink} target=\"_blank\" rel=\"noopener\">\n                        {paymentLink}\n                      </Link>\n\n                      <span>\n\n                        <Tooltip title=\"COPY LINK TO CLIPBOARD\">\n                          <IconButton\n                            onClick={() => {\n                              navigator.clipboard.writeText(\n                                paymentLink\n                              );\n                            }}\n                            aria-label=\"delete\"\n                            className={classes.margin}\n                            size=\"small\"\n                          >\n                            <FileCopyOutlinedIcon\n                              style={{color:\"#bf9b30\", fontSize:\"1.3rem\", marginLeft:\"10px\"}}\n                            />\n                          </IconButton>\n                        </Tooltip>\n\n                      </span>\n\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      error={emailError}\n                      label=\"Customer Email Address\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                      variant=\"outlined\"\n                      placeholder=\"Enter customer email address\"\n                      InputProps={ emailSent ?  {\n                        endAdornment: <InputAdornment position=\"end\">\n                          <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Email Sent</span>\n                          <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                        </InputAdornment>,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <AccountCircleIcon style={{color:\"#05acb2\"}}/>\n                          </InputAdornment>\n                        ),\n                      } : {\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <AccountCircleIcon style={{color:\"#05acb2\"}} />\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button\n                      disabled={saving}\n                      fullWidth\n                      onClick={sendEmailClicked}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Send Link With Email\n                    </Button>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      error={phoneError}\n                      label=\"Customer Mobile Number\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                      variant=\"outlined\"\n                      placeholder=\"1234567891\"\n                      helperText=\"* Please enter only the mobile number (10 numbers) without the country code. Just UK numbers are accepted.\"\n                      InputProps={ phoneSent ?  {\n                        endAdornment: <InputAdornment position=\"end\">\n                          <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Text MSG Sent</span>\n                          <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                        </InputAdornment>,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}}/>\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                          </InputAdornment>\n                        ),\n                      } : {\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}}/>\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                           \n                          </InputAdornment>\n                        ),\n                      }}\n\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button\n                      disabled={saving}\n                      fullWidth\n                      onClick={sendTextClicked}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Send Link With Text Message\n                    </Button>\n                  </Grid>\n\n\n\n                </React.Fragment>\n              )}\n\n\n            </Grid>\n\n            <Backdrop className={classes.backdrop} open={saving}>\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </DialogContent>\n\n\n          <DialogActions>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n\n              <Grid item>\n                <Button\n                  onClick={handleClose}\n                  style={{ width: \"100px\" }}\n                  disabled={saving}\n                >\n                  back\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  disabled={paymentLink !== null || saving}\n                  onClick={createLinkClicked}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Create Link\n                </Button>\n              </Grid>\n\n            </Grid>\n\n          </DialogActions>\n\n\n\n        </Dialog>\n      </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport PaymentService from \"./services/PaymentService\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport * as EmailValidator from \"email-validator\";\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport SendIcon from '@material-ui/icons/Send';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport dateformat from 'dateformat'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 999,\n    color: \"#fff\",\n  },\n\n  itemLabel: {\n    color: \"#555\",\n    fontWeight: \"500\",\n    fontSize: \"1rem\"\n  },\n\n  itemData: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n    fontSize: \"1rem\"\n  },\n\n  TextSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ViewPaymentDialog(props) {\n  const classes = useStyles();\n\n  const LinkRef = React.useRef(null)\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [amount, setAmount] = useState(\"\");\n  const [amountError, setAmountError] = useState(false);\n\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [description, setDescription] = React.useState(\"\");\n\n  const [paymentLink, setPaymentLink] = React.useState(null);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [phoneSent, setPhoneSent] = React.useState(false);\n\n  const [refundDone, setRefundDone] = React.useState(false);\n  const [deleteDone, setdeleteDone] = React.useState(false);\n  const [refundTimeStamp, setRefundTimeStamp] = React.useState(null)\n\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const handleCloseDeleteDialog = () =>\n  {\n    setOpenDeleteDialog(false)\n  }\n\n\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false)\n  }\n\n\n\n  React.useEffect(() => {\n    if (props.payment && props.open) {\n      setPaymentLink(buildPaymentLink(props.payment._id))\n      setEmail(props.payment.email || '')\n      setPhone(props.payment.phone || '')\n    }\n\n  }, [props.payment, props.open])\n\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n  };\n\n\n  const amountChanged = (event) => {\n    setAmount(event.target.value)\n    setAmountError(false)\n  }\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setAmount('')\n    setFullname('')\n    setEmail('')\n    setPhone('')\n    setDescription('')\n    setNotes('')\n    setPaymentLink(null)\n    setRefundTimeStamp(null)\n\n    setAmountError(false)\n    setFullnameError(false)\n    setEmailError(false)\n    setPhoneError(false)\n    setSaving(false);\n    setEmailSent(false)\n    setRefundDone(false)\n    setOpenRefundDialog(false)\n    setOpenDeleteDialog(false)\n    setdeleteDone(false)\n    setPhoneSent(false)\n  };\n\n  const createLinkClicked = async () => {\n    if (!validatePayment()) {\n      return\n    }\n\n    try {\n      setSaving(true)\n      const paymentRecord = {\n        amount: amount,\n        fullname: fullname,\n        description: description,\n        notes: notes\n      }\n\n      const res = await PaymentService.createNewPaymentLink(paymentRecord)\n\n      if (res && res.data && res.data.status === \"OK\") {\n        const payment = res.data.payment\n        setPaymentLink(buildPaymentLink(payment._id))\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n        LinkRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n      }\n\n      setSaving(false)\n\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n\n\n  }\n\n  const validatePayment = () => {\n    let error = false\n\n    if (!amount || amount.trim().length === 0 || parseFloat(amount) <= 0) {\n      setAmountError(true)\n      error = true\n    }\n\n    if (!fullname || fullname.trim().length === 0) {\n      setFullnameError(true)\n      error = true\n    }\n\n    return !error\n\n  }\n\n  const buildPaymentLink = (id) => {\n    return `https://londonmedicalclinic.co.uk/medicalexpressclinic/pay/${id}`\n  }\n\n\n  const sendEmailClicked = async () => {\n    if (!email || email.length < 3 || !EmailValidator.validate(email)) {\n      setEmailError(true)\n      return\n    }\n\n    try {\n\n      setSaving(true)\n\n      const res = await PaymentService.sendPaymentLinkEmail(props.payment._id, email)\n      if (res && res.data && res.data.status === \"OK\") {\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n        setEmailSent(true)\n      }\n\n      setSaving(false)\n\n    } catch (err) {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n  const refundPaymentClicked = () => {\n    setOpenRefundDialog(true)\n  }\n\n  const refundPayment = async () => {\n    try {\n      setSaving(true)\n\n      const res = await PaymentService.refundPayment(props.payment._id)\n      setSaving(false)\n      setOpenRefundDialog(false)\n      if (res && res.data && res.data.status === \"OK\") {\n        setRefundDone(true)\n        setRefundTimeStamp(new Date())\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n      }\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n  }\n\n  const deleteClicked = async () => {\n    try {\n      setSaving(true)\n\n      const res = await PaymentService.deletePaymentLink(props.payment._id)\n      setSaving(false)\n      setOpenDeleteDialog(false)\n      if (res && res.data && res.data.status === \"OK\") {\n        setdeleteDone(true)\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n      }\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n  }\n\n  const sendTextClicked = async () =>\n  {\n    if (!phone || (phone.trim().length < 10))\n    {\n      setPhoneError(true)\n      return\n    }\n\n    try{\n\n      setSaving(true)\n\n     const res = await PaymentService.sendPaymentLinkTextMessage(props.payment._id, phone)\n     if (res && res.data && res.data.status === \"OK\")\n     {\n       setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n       setPhoneSent(true)     \n     }\n\n     setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      {props.payment && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\" style={{ position: \"relative\" }}>\n              <div style={{ position: \"absolute\", top: \"15px\" }}>\n                {props.payment.paymentInfo && !props.payment.refund && !refundDone && (\n                  <Tooltip title=\"Successful Payment\">\n                    <DoneOutlineIcon style={{ color: \"#009c39\", fontSize: \"2.5rem\" }} />\n                  </Tooltip>\n                )}\n\n                {props.payment.paymentInfo && (props.payment.refund || refundDone) && (\n                  <Tooltip title=\"Refunded Payment\">\n                    <KeyboardReturnIcon style={{ color: \"#f06400\", fontSize: \"2.5rem\" }} />\n                  </Tooltip>\n                )}\n\n              </div>\n\n              <div style={{ position: \"absolute\", top: \"15px\", right: \"15px\" }}>\n                {(props.payment.deleted || deleteDone) && (\n                  <Tooltip title=\"Deleted Payment\">\n                    <DeleteIcon style={{ color: \"#d40000\", fontSize: \"2.5rem\" }} />\n                  </Tooltip>\n                )}\n\n              </div>\n\n\n\n\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <LinkIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Payment Link Info{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent style={(props.payment.deleted || deleteDone) ? { backgroundColor: \"#bbb\" } : {}}\n            >\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={2}\n                alignItems=\"flex-start\"\n                style={{ marginBottom: \"20px\" }}\n              >\n                {props.payment.paymentInfo && (\n                  <React.Fragment>\n                    <Grid item xs={12}>\n                      <span className={classes.itemLabel} style={{ color: \"#009c39\", marginRight: \"10px\" }}> Square Ref # : </span>\n                      <span className={classes.itemData} style={{ color: \"#009c39\" }}>\n                        {JSON.parse(props.payment.paymentInfo).id}\n                      </span>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <span className={classes.itemLabel} style={{ color: \"#009c39\", marginRight: \"10px\" }}> Payment done at : </span>\n                        <span className={classes.itemData} style={{ color: \"#009c39\" }}>\n                          {dateformat(props.payment.paymentTimeStamp,\"dddd, mmmm dS, yyyy, h:MM:ss TT\")}\n                        </span>\n                    </Grid>  \n                 </React.Fragment>\n                \n                )}\n\n                {props.payment.paymentInfo && !props.payment.refund && !refundDone && (\n                  <Grid item xs={12}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={refundPaymentClicked}\n                    >\n                      Refund Payment\n                    </Button>\n                  </Grid>\n                )}\n\n                {props.payment.paymentInfo && (props.payment.refund || refundDone) && (\n                  <React.Fragment> \n                  <Grid item xs={12}>\n                    <div style={{ fontSize: \"1.1rem\", fontWeight: \"600\", textAlign: \"left\", color: \"#f06400\" }}>\n                      Payment has been Refunded.\n                    </div>\n                  </Grid>\n                    <Grid item xs={12}>\n                        <span className={classes.itemLabel} style={{ color: \"#f06400\", marginRight: \"10px\" }}> Refund done at : </span>\n                        <span className={classes.itemData} style={{ color: \"#f06400\" }}>\n                          {dateformat(props.payment.refundTimeStamp || refundTimeStamp,\"dddd, mmmm dS, yyyy, h:MM:ss TT\")}\n                        </span>\n                    </Grid>  \n                    </React.Fragment>\n              \n                )}\n\n\n\n\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Amount: </span>\n                  <span className={classes.itemData}>\n                    {`£${(\n                      props.payment.amount\n                    ).toLocaleString(\"en-GB\")}`}\n                  </span>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Customer/Payer Name: </span>\n                  <span className={classes.itemData}>\n                    {props.payment.fullname || '-'}\n                  </span>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Description: </span>\n                  <span className={classes.itemData}>\n                    {props.payment.description || '-'}\n                  </span>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Notes: </span>\n                  <span className={classes.itemData}>\n                    {props.payment.notes || '-'}\n                  </span>\n                </Grid>\n\n\n                {paymentLink && (\n                  <React.Fragment>\n\n                    <Grid item xs={12}>\n\n                      <div style={{ fontSize: \"1rem\", fontWeight: \"500\", color: \"#333\" }}>\n                        Payment Link URL :\n                    </div>\n\n                      <div style={{ width: \"100%\", overflowWrap: \"break-word\" }} ref={LinkRef}>\n                        <Link style={{ fontSize: \"1rem\", fontWeight: \"500\" }} href={paymentLink} target=\"_blank\" rel=\"noopener\">\n                          {paymentLink}\n                        </Link>\n\n                        <span>\n\n                          <Tooltip title=\"COPY LINK TO CLIPBOARD\">\n                            <IconButton\n                              onClick={() => {\n                                navigator.clipboard.writeText(\n                                  paymentLink\n                                );\n                              }}\n                              aria-label=\"delete\"\n                              className={classes.margin}\n                              size=\"small\"\n                            >\n                              <FileCopyOutlinedIcon\n                                style={{ color: \"#bf9b30\", fontSize: \"1.3rem\", marginLeft: \"10px\" }}\n                              />\n                            </IconButton>\n                          </Tooltip>\n\n                        </span>\n\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        error={emailError}\n                        label=\"Customer Email Address\"\n                        value={email}\n                        onChange={emailChanged}\n                        name=\"email\"\n                        id=\"email-id\"\n                        autoComplete=\"none\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter customer email address\"\n                        InputProps={ (emailSent || props.payment.emailSent) ?  {\n                          endAdornment: <InputAdornment position=\"end\">\n                            <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Email Sent</span>\n                            <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                          </InputAdornment>,\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <AccountCircleIcon style={{color:\"#05acb2\"}}/>\n                            </InputAdornment>\n                          ),\n                        } : {\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <AccountCircleIcon style={{color:\"#05acb2\"}} />\n                            </InputAdornment>\n                          ),\n                        }}\n  \n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Button\n                        disabled={saving || (props.payment.paymentInfo || props.payment.refund || props.payment.deleted)}\n                        fullWidth\n                        onClick={sendEmailClicked}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        Send Link With Email\n                    </Button>\n                    </Grid>\n\n\n                    <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      error={phoneError}\n                      label=\"Customer Mobile Number\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                      variant=\"outlined\"\n                      placeholder=\"1234567891\"\n                      helperText=\"* Please enter only the mobile number (10 numbers) without the country code. Just UK numbers are accepted.\"\n                      InputProps={ (phoneSent || props.payment.textSent) ?  {\n                        endAdornment: <InputAdornment position=\"end\">\n                          <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Text MSG Sent</span>\n                          <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                        </InputAdornment>,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}}/>\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                          </InputAdornment>\n                        ),\n                      } : {\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}} />\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                          </InputAdornment>\n                        ),\n                      }}\n\n                    />\n                  </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        disabled={saving || (props.payment.paymentInfo || props.payment.refund || props.payment.deleted)}\n                        fullWidth\n                        onClick={sendTextClicked}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        Send Link With Text Message\n                    </Button>\n                    </Grid>\n\n                    {!props.payment.deleted && !deleteDone && (\n                      <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                        <Button\n                          onClick={() => setOpenDeleteDialog(true)}\n                          variant=\"contained\"\n                          fullWidth\n                          color=\"primary\"\n                          style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                          disabled={saving}\n                        >\n                          Delete This Record\n                        </Button>\n                      </Grid>\n                    )}\n\n                  </React.Fragment>\n                )}\n\n\n              </Grid>\n\n            </DialogContent>\n\n\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={2}\n              >\n\n                <Grid item>\n                  <Button\n                    onClick={handleClose}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    close\n                </Button>\n                </Grid>\n                {/* <Grid item>\n                <Button\n                  disabled={paymentLink !== null || saving}\n                  onClick={createLinkClicked}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Create Link\n                </Button>\n              </Grid> */}\n\n              </Grid>\n            </DialogActions>\n\n\n            <Dialog\n              open={openRefundDialog}\n              onClose={handleCloseRefundDialog}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle style={{ color: \"#bf0000\" }} id=\"alert-dialog-title\">\n                {\"Refund Deposit\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText\n                  style={{ color: \"#333\", fontWeight: \"400\" }}\n                  id=\"alert-dialog-description\"\n                >\n                  Are you sure you want to refund this payment?\n              </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseRefundDialog} color=\"default\">\n                  Back\n              </Button>\n                <Button\n                  onClick={refundPayment}\n                  color=\"secondary\"\n                  style={{ fontWeight: \"600\" }}\n                  variant=\"contained\"\n                  autoFocus\n                >\n                  Yes, Refund Payment\n              </Button>\n              </DialogActions>\n            </Dialog>\n\n\n            <Dialog\n              open={openDeleteDialog}\n              onClose={handleCloseDeleteDialog}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                {\"Delete Record\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText\n                  style={{ color: \"#000\", fontWeight: \"500\" }}\n                  id=\"alert-dialog-description\"\n                >\n                  Are you sure you want to delete this record?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                  Back\n                </Button>\n                <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                  Yes, Delete this record\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n          </Dialog>\n\n          <Backdrop className={classes.backdrop} open={saving}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport PaymentService from './services/PaymentService';\nimport PatientDialog from './PatientDialog';\nimport LinkIcon from '@material-ui/icons/Link';\nimport NewPaymentDialog from './NewPaymentDialog';\nimport ViewPaymentDialog from './ViewPaymentDialog';\n\nimport DoneIcon from '@material-ui/icons/Done';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport SendIcon from '@material-ui/icons/Send';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'paid') {\n    return `Successful Payments`;\n  } else if (str === 'refund') {\n    return `Refunded Payments`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'notpaid') {\n    return `Not Yet Paid`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Deleted Records`;\n  } else if (str === 'late') {\n    return `4 Hours Late`;\n  }\n\n  else {\n    return `Payment Links`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'paid') {\n    return <DoneOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'refund') {\n    return <KeyboardReturnIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'notpaid') {\n    return <MoneyOffIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <LinkIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PaymentsTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 120,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n\n            {params.getValue(\"paymentInfo\") && !params.getValue(\"refund\") && (\n              <DoneOutlineIcon style={{color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n            )}\n\n            {params.getValue(\"paymentInfo\") && params.getValue(\"refund\") && (\n              <KeyboardReturnIcon style={{color:\"#f06400\", fontSize:\"1.6rem\"}}/>\n            )}\n            \n            {!params.getValue(\"paymentInfo\") && (params.getValue(\"emailSent\") || params.getValue(\"textSent\")) && (\n              <SendIcon style={{color:\"#008082\", fontSize:\"1.6rem\"}}/>\n            )}\n\n\n\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'timeStamp', headerName: 'Created at', width: 180, valueFormatter: (params) => { \n      return formatTimeStamp(params.value);\n      }\n    },\n\n    { field: 'amount', headerName: 'Amount', width: 150 , valueFormatter: (params) => {\n      return `£${(\n        params.value\n      ).toLocaleString(\"en-GB\")}`\n    },},\n    { field: 'fullname', headerName: 'Customer Name', width: 200 },\n    { field: 'description', headerName: 'Description', width: 250 },\n    { field: 'email', headerName: 'Email', width: 150 },\n    { field: 'phone', headerName: 'Telephone', width: 150 },\n    { field: 'notes', headerName: 'Notes', width: 300 },\n\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = PaymentService.getAllPayments;\n\n    if (props.date === 'deleted') {\n      api = PaymentService.getDeletedPayments;\n    }else if (props.date === 'paid') {\n      api = PaymentService.getPaidPayments;\n    }else if (props.date === 'refund') {\n      api = PaymentService.getRefundPayments;\n    }else if (props.date === 'notpaid') {\n      api = PaymentService.getNotPaidPayments;\n    }else if (props.date === 'late') {\n      api = PaymentService.getLatePayments;\n    }\n\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data.result], cachedBookings: [...res.data.result], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.paymentDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const payment = data.bookings.find(element => element._id === id);\n    if (payment) {\n      setSelectedBooking(payment);\n      setViewDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewPatientClicked = () => {\n    setSelectedPatient(null)\n    setPatientDialogTitle('Register New Patient')\n    setPatientDialogSaveButtonText(\"Save\")\n    setPatientDialogOpen(true)\n  }\n\n  const [selectedPatient, setSelectedPatient] = React.useState(null)\n  const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n  const [patientDialogTitle, setPatientDialogTitle] = React.useState('')\n  const [patientDialogSaveButtonText, setPatientDialogSaveButtonText] = React.useState('')\n\n\n  const [viewDialogOpen, setViewDialogOpen] = React.useState(false)\n\n\n  const handleClosePatientDialog = () => {\n    setPatientDialogOpen(false)\n  }\n\n  const handleCloseViewDialog = () => {\n    setViewDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <div\n                  style={{\n                    fontSize: \"1.2rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                    marginTop : \"-5px\"\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </div>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n      {props.date === \"all\" && (\n            <Grid item md={3}>\n            <div style={{ paddingBottom: \"10px\" }}>\n              <Button\n                // className={classes.ExportToExcelButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={registerNewPatientClicked}\n                startIcon={\n                  <AddIcon />\n                }\n              >\n                Create New Link\n                </Button>\n            </div>\n          </Grid>\n      )}\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      {/* <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      /> */}\n\n      {/* <PatientDialog\n        patient={selectedPatient}\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n        title={patientDialogTitle}\n        saveButtonText={patientDialogSaveButtonText}\n      /> */}\n\n      <NewPaymentDialog\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n      />\n\n      <ViewPaymentDialog\n        payment={selectedBooking}\n        open={viewDialogOpen}\n        handleClose={handleCloseViewDialog}\n      />\n\n\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport PaymentService from './services/PaymentService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  // const seeMoreRecords = (event) => {\n  //   event.preventDefault();\n  //   setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  // }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    PaymentService.getRecentPayments().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data.result, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings.result, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Payments Received</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Recived at</TableCell>        \n            <TableCell>Amount</TableCell>        \n            <TableCell>Customer</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Desctiption</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.paymentTimeStamp)}</TableCell>\n              <TableCell style={{fontWeight:\"600\"}}>{`£${(\n                row.amount\n              ).toLocaleString(\"en-GB\")}`}\n              </TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{row.description}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {/* <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div> */}\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n\n}));\n\nexport default function TotalReceivedPaymentView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getTotalReceivedAmount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}}>\n                    Total Money Received\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n                {data !== null && <div className={classes.countLabel}>\n                {`£${(\n                    data\n                  ).toLocaleString(\"en-GB\")}`}\n                \n                  </div>\n                }\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n\n}));\n\nexport default function TodayReceivedPaymentView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getTodayReceivedAmount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}}>\n                    Today Money Received\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n                {data !== null && <div className={classes.countLabel}>\n                {`£${(\n                    data\n                  ).toLocaleString(\"en-GB\")}`}\n                \n                  </div>\n                }\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n\n}));\n\nexport default function TodayLinksSentView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getTodayLinkSent();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}}>\n                    Today Payment Links Sent\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n                {data !== null && <div className={classes.countLabel}>\n                      {data}                \n                  </div>\n                }\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n  countLabelRed: {\n    fontSize: \"2rem\",\n    color: \"red\"\n   },\n\n   TitleRed:{\n    color: \"red\"\n   }\n\n\n\n}));\n\nexport default function LatePaymentsView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getLatePayments();\n\n      setData(res.data.result?.length || 0);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}} className={data === 0 ? classes.Title : classes.TitleRed}>\n                    4 Hours Late Payments\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n              {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\n\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\nimport TotalReceivedPaymentView from './TotalReceivedPaymentView';\nimport TodayReceivedPaymentView from './TodayReceivedPaymentView';\nimport TodayLinksSentView from './TodayLinkSentView';\nimport LatePaymentsView from './LatePaymentsView';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getGlobalPath } from \"./../GlobalPath\";\nimport { getMenuId, getMenuIndex } from \"./../MenuList\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\n\n  const history = useHistory();\n\n  const role=\"museumadmin\"\n\n  const gotoLatePayments = () =>\n  {\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'latepaymentsTable'))}`));\n  }\n\n\n  return (\n    <React.Fragment>\n\n      <Grid container spacing={3}>\n        {/* Chart */}\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall}>\n            <TotalReceivedPaymentView/>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall}>\n             <TodayReceivedPaymentView/>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoLatePayments} style={{cursor:\"pointer\"}}>\n              <LatePaymentsView/>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall}>\n              <TodayLinksSentView/>\n          </Paper>\n        </Grid>\n\n        {/* Recent Bookings */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper} style={{ minHeight: \"250px\" }}>\n            <BookingView />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\n\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport SendIcon from '@material-ui/icons/Send';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\n\n/// PCR ------------------\nimport FindByRef from \"./PCR/FindByRef\";\nimport BookingTable from \"./PCR/BookingTable\";\nimport DashboardPreview from \"./PCR/DashboardPreview\";\nimport UnmatchedRecords from \"./PCR/UnmatchedRecords\";\n// import CalendarView from \"./PCR/calendar/CalendarView\";\nimport PCRCalendarView from \"./PCR/calendar-admin/CalendarView\";\n//-----------------------\n\n/// Gynae -------------------\nimport GynaeBookingTable from \"./Gynae/BookingTable\";\nimport GynaeDashboardPreview from \"./Gynae/DashboardPreview\";\nimport GynaeFindByRef from \"./Gynae/FindByRef\";\nimport GynaeCalendarView from \"./Gynae/calendar-admin/CalendarView\";\n//----------------------------\n\n/// GP -------------------\nimport GPBookingTable from \"./GP/BookingTable\";\nimport GPDashboardPreview from \"./GP/DashboardPreview\";\nimport GPFindByRef from \"./GP/FindByRef\";\nimport GPCalendarView from \"./GP/calendar-admin/CalendarView\";\n//----------------------------\n\n/// STD -------------------\nimport STDBookingTable from \"./STD/BookingTable\";\nimport STDDashboardPreview from \"./STD/DashboardPreview\";\nimport STDFindByRef from \"./STD/FindByRef\";\nimport STDCalendarView from \"./STD/calendar-admin/CalendarView\";\n//----------------------------\n\n/// Blood -------------------\nimport BloodBookingTable from \"./Blood/BookingTable\";\nimport BloodDashboardPreview from \"./Blood/DashboardPreview\";\nimport BloodFindByRef from \"./Blood/FindByRef\";\nimport BloodCalendarView from \"./Blood/calendar-admin/CalendarView\";\nimport BloodUnmatchedRecords from \"./Blood/UnmatchedRecords\";\nimport BloodMatchedRecords from \"./Blood/MatchedRecords\";\nimport BloodArchivedRecords from \"./Blood/ArchivedRecords\";\nimport SentBloodRecords from \"./Blood/SentRecords\";\n\n//----------------------------\n\n/// Derma -------------------\nimport DermaBookingTable from \"./Derma/BookingTable\";\nimport DermaDashboardPreview from \"./Derma/DashboardPreview\";\nimport DermaFindByRef from \"./Derma/FindByRef\";\nimport DermaCalendarView from \"./Derma/calendar-admin/CalendarView\";\n//----------------------------\n\n/// Screening -------------------\nimport ScreeningBookingTable from \"./Screening/BookingTable\";\nimport ScreeningDashboardPreview from \"./Screening/DashboardPreview\";\nimport ScreeningFindByRef from \"./Screening/FindByRef\";\nimport ScreeningCalendarView from \"./Screening/calendar-admin/CalendarView\";\n//----------------------------\n\n\n\n// Admin ----------------\nimport AdminDashBoardPreview from \"./DashboardPreview\";\nimport AdminFindByRef from \"./Admin/FindByRef\";\nimport AdminBookingTable from \"./Admin/BookingTable\";\nimport AdminCalendarView from \"./Admin/calendar-admin/CalendarView\";\nimport SearchBookingTable from \"./Admin/SearchBookingTable\";\n\n\n// Payment ----------------\nimport PaymentsTable from \"./Payment/PaymentsTable\";\nimport PaymentsDashboard from \"./Payment/DashboardPreview\"\n\n//---------------\n\nimport LinkIcon from '@material-ui/icons/Link';\n\nexport const MenuList_Payment = [\n  {\n    index: 0,\n    id: `dashboard`,\n    title: `Dashboard`,\n    icon: <DashboardIcon />,\n  },\n  {\n    index: 1,\n    id: `paymentsTable`,\n    title: `Payment Links`,\n    icon: <LinkIcon />,\n  },\n  {\n    index: 2,\n    id: `paidpaymentsTable`,\n    title: `Successful Payments`,\n    icon: <DoneOutlineIcon />,\n  },\n  {\n    index: 3,\n    id: `latepaymentsTable`,\n    title: `4 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n\n\n  {\n    index: 4,\n    id: `notyetPaid`,\n    title: `Not Yet Paid`,\n    icon: <MoneyOffIcon />,\n  },\n  {\n    index: 5,\n    id: `refundpaymentsTable`,\n    title: `Refunded Payments`,\n    icon: <KeyboardReturnIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedpaymentsTable`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n]\n\n\n//---------------\n\nexport const MenuList_Admin = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Gynae = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_GP = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_STD = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Blood = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `bloodMatchedRecords`,\n    title: `Matched Results`,\n    icon: <DoneOutlineIcon />,\n  },\n  {\n    index: 8,\n    id: `bloodUnatchedRecords`,\n    title: `Unmatched Results`,\n    icon: <WarningIcon />,\n  },\n\n  {\n    index: 9,\n    id: `bloodArchived`,\n    title: `Archived Results`,\n    icon: <ArchiveIcon />,\n  },\n\n  {\n    index: 10,\n    id: `bloodSent`,\n    title: `Sent Results`,\n    icon: <SendRoundedIcon />,\n  },\n\n\n\n  {\n    index: 11,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 12, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 13, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_PCR = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `completedBookings`,\n    title: `Completed Bookings`,\n    icon: <PlaylistAddCheckIcon />,\n  },\n  {\n    index: 8,\n    id: `positiveBookings`,\n    title: `Positive Results`,\n    icon: <AddCircleOutlineIcon />,\n  },\n  {\n    index: 9,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 10,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 11,\n    id: `trBookings`,\n    title: `TR Bookings`,\n    icon: <AirplanemodeActiveIcon />,\n  },\n  {\n    index: 12,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n  {\n    index: 13,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  // {\n  //   index: 14,\n  //   id: `adminCalendarView`,\n  //   title: `Admin Calendar`,\n  //   icon: <EventNoteIcon />,\n  // },\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 16, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Derma = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Screening = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  { index: 1, id: `pendingBookings`, title: `Pending Bookings`, icon: <AddAlertIcon /> },\n\n  {\n    index: 2,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 3,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 4,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 8,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 9, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 10, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\n\n\nexport const MenuList_PCRLAB = [\n  {\n    index: 0,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  {\n    index: 1,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 2,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n\n  {\n    index: 3,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n];\n\nexport const getMenuContent = (role, index) => {\n  if (role === \"pcr\") {\n    switch (index) {\n      case 0:\n        return <DashboardPreview />;\n      case 1:\n        return <BookingTable date=\"recent\" />;\n      case 2:\n        return <BookingTable date=\"today\" />;\n      case 3:\n        return <BookingTable date=\"live\" />;\n      case 4:\n        return <BookingTable date=\"old\" />;\n      case 5:\n        return <BookingTable date=\"future\" />;\n      case 6:\n        return <BookingTable date=\"all\" />;\n      case 7:\n        return <BookingTable date=\"completed\" />;\n      case 8:\n        return <BookingTable date=\"positive\" />;\n      case 9:\n        return <BookingTable date=\"late\" />;\n      case 10:\n        return <BookingTable date=\"deleted\" />;\n      case 11:\n        return <BookingTable date=\"tr\" />;\n      case 12:\n        return <UnmatchedRecords />;\n      case 13:\n        //   return <CalendarView />;\n        // case 14:\n        return <PCRCalendarView />;\n      case 15:\n        return <FindByRef />;\n      case 16:\n        return <SearchBookingTable />\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"pcrlab\") {\n    switch (index) {\n      case 0:\n        return <BookingTable date=\"live\" />;\n      case 1:\n        return <BookingTable date=\"late\" />;\n      case 2:\n        return <UnmatchedRecords />;\n      case 3:\n        return <PCRCalendarView />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"gynae\") {\n    switch (index) {\n      case 0:\n        return <GynaeDashboardPreview />;\n      case 1:\n        return <GynaeBookingTable date=\"recent\" />;\n      case 2:\n        return <GynaeBookingTable date=\"today\" />;\n      case 3:\n        return <GynaeBookingTable date=\"old\" />;\n      case 4:\n        return <GynaeBookingTable date=\"future\" />;\n      case 5:\n        return <GynaeBookingTable date=\"all\" />;\n      case 6:\n        return <GynaeBookingTable date=\"deleted\" />;\n      case 7:\n        return <GynaeCalendarView />;\n      case 8:\n        return <GynaeFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"gp\") {\n    switch (index) {\n      case 0:\n        return <GPDashboardPreview />;\n      case 1:\n        return <GPBookingTable date=\"recent\" />;\n      case 2:\n        return <GPBookingTable date=\"today\" />;\n      case 3:\n        return <GPBookingTable date=\"old\" />;\n      case 4:\n        return <GPBookingTable date=\"future\" />;\n      case 5:\n        return <GPBookingTable date=\"all\" />;\n      case 6:\n        return <GPBookingTable date=\"deleted\" />;\n      case 7:\n        return <GPCalendarView />;\n      case 8:\n        return <GPFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"std\") {\n    switch (index) {\n      case 0:\n        return <STDDashboardPreview />;\n      case 1:\n        return <STDBookingTable date=\"recent\" />;\n      case 2:\n        return <STDBookingTable date=\"today\" />;\n      case 3:\n        return <STDBookingTable date=\"old\" />;\n      case 4:\n        return <STDBookingTable date=\"future\" />;\n      case 5:\n        return <STDBookingTable date=\"all\" />;\n      case 6:\n        return <STDBookingTable date=\"deleted\" />;\n      case 7:\n        return <STDCalendarView />;\n      case 8:\n        return <STDFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"blood\") {\n    switch (index) {\n      case 0:\n        return <BloodDashboardPreview />;\n      case 1:\n        return <BloodBookingTable date=\"recent\" />;\n      case 2:\n        return <BloodBookingTable date=\"today\" />;\n      case 3:\n        return <BloodBookingTable date=\"old\" />;\n      case 4:\n        return <BloodBookingTable date=\"future\" />;\n      case 5:\n        return <BloodBookingTable date=\"all\" />;\n      case 6:\n        return <BloodBookingTable date=\"deleted\" />;\n      case 7:\n        return <BloodMatchedRecords />;\n\n      case 8:\n        return <BloodUnmatchedRecords />;\n      case 9:\n        return <BloodArchivedRecords />;\n\n      case 10:\n        return <SentBloodRecords />;\n\n      case 11:\n        return <BloodCalendarView />;\n      case 12:\n        return <BloodFindByRef />;\n      case 13:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"admin\") {\n    switch (index) {\n      case 0:\n        return <AdminDashBoardPreview />;\n      case 1:\n        return <AdminBookingTable date=\"recent\" />;\n      case 2:\n        return <AdminBookingTable date=\"today\" />;\n      case 3:\n        return <AdminBookingTable date=\"old\" />;\n      case 4:\n        return <AdminBookingTable date=\"future\" />;\n      case 5:\n        return <AdminBookingTable date=\"all\" />;\n      case 6:\n        return <AdminBookingTable date=\"deleted\" />;\n      case 7:\n        return <AdminCalendarView />;\n      case 8:\n        return <AdminFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  }\n  else if (role === \"derma\") {\n    switch (index) {\n      case 0:\n        return <DermaDashboardPreview />;\n      case 1:\n        return <DermaBookingTable date=\"recent\" />;\n      case 2:\n        return <DermaBookingTable date=\"today\" />;\n      case 3:\n        return <DermaBookingTable date=\"old\" />;\n      case 4:\n        return <DermaBookingTable date=\"future\" />;\n      case 5:\n        return <DermaBookingTable date=\"all\" />;\n      case 6:\n        return <DermaBookingTable date=\"deleted\" />;\n      case 7:\n        return <DermaCalendarView />;\n      case 8:\n        return <DermaFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"payment\") {\n    switch (index) {\n      case 0:\n        return <PaymentsDashboard />;\n      case 1:\n        return <PaymentsTable date=\"all\" />;\n      case 2:\n        return <PaymentsTable date=\"paid\" />;\n      case 3:\n        return <PaymentsTable date=\"late\" />;\n      case 4:\n        return <PaymentsTable date=\"notpaid\" />;\n      case 5:\n        return <PaymentsTable date=\"refund\" />;\n      case 6:\n        return <PaymentsTable date=\"deleted\" />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"screening\") {\n    switch (index) {\n      case 0:\n        return <ScreeningDashboardPreview />;\n      case 1:\n        return <ScreeningBookingTable date=\"pending\" />;  \n      case 2:\n        return <ScreeningBookingTable date=\"recent\" />;\n      case 3:\n        return <ScreeningBookingTable date=\"today\" />;\n      case 4:\n        return <ScreeningBookingTable date=\"old\" />;\n      case 5:\n        return <ScreeningBookingTable date=\"future\" />;\n      case 6:\n        return <ScreeningBookingTable date=\"all\" />;\n      case 7:\n        return <ScreeningBookingTable date=\"deleted\" />;\n      case 8:\n        return <ScreeningCalendarView />;\n      case 9:\n        return <ScreeningFindByRef />;\n      case 10:\n        return <SearchBookingTable />;\n\n\n      default:\n        return `Page Not Found!`;\n    }\n  }\n  else {\n    return `Page Not Found!`;\n  }\n};\n\nexport const getMenuRole = (role) => {\n  switch (role) {\n    case \"admin\":\n      return MenuList_Admin;\n    case \"pcr\":\n      return MenuList_PCR;\n    case \"pcrlab\":\n      return MenuList_PCRLAB;\n\n    case \"gynae\":\n      return MenuList_Gynae;\n    case \"gp\":\n      return MenuList_GP;\n    case \"std\":\n      return MenuList_STD;\n    case \"blood\":\n      return MenuList_Blood;\n    case \"derma\":\n      return MenuList_Derma;\n    case \"payment\":\n      return MenuList_Payment;\n    case \"screening\":\n      return MenuList_Screening;\n\n\n\n    default:\n      return [];\n  }\n};\n\nexport const getMenuId = (role, index) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].index === index) {\n      return MenuList[i].id;\n    }\n  }\n\n  return `Page Not Found!`;\n};\n\nexport const getMenuIndex = (role, id) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].id === id) {\n      return MenuList[i].index;\n    }\n  }\n\n  return -1;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalState from \"./GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport logoImage from \"./images/logo.png\"\n\nimport {\n  Grid,\n  AppBar,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Copyright from \"./CopyRight\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UserService from \"./services/UserService\";\nimport { getMenuId } from \"./MenuList\";\n\nimport { useMediaQuery } from 'react-responsive'\nimport { borderRadius } from \"@material-ui/system\";\nimport { setRole } from \"./Role\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/images/bg.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(15, 2),\n    padding: theme.spacing(4,4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\"\n    // border: `2px solid ${theme.palette.primary.main}`,\n    // borderRadius: \"8px\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"#f5f5f5\",\n  },\n\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  pageBg:{\n    paddingTop: theme.spacing(15),\n   \n    background: \"linear-gradient(3deg, rgba(2,0,36,1) 0%, rgba(9,77,121,1) 35%, rgba(0,212,255,1) 100%)\",\n    height: \"100vh\",\n    margin: 0,\n    padding:0,\n  },\n\n  appbarCenter: {\n    position: \"absolute\",\n    // width: \"260px\",\n    top: \"-40px\",\n    right: \"0\",\n    marginLeft: \"-145px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    padding: \"5px 20px 15px 20px\",\n    borderRadius: \"8px\"\n  },\n\n  logoImage: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"0px\",\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  adminPanelLabel: {\n    color: theme.palette.primary.main, \n    marginBottom:\"20px\"\n  }\n\n\n\n\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\n\n\n  let history = useHistory();\n\n  const [password, setPassword] = React.useState(\"\");\n\n  const [username, setUsername] = React.useState(\"\");\n\n  const [saveChecked, setSaveChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const [error, setError] = React.useState(null);\n  const [submiting, setSubmiting] = React.useState(false);\n\n  const signIn = () => {\n    setSubmiting(true);\n\n    UserService.signIn({\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        setSubmiting(false);\n        if (res.data.status === \"OK\") {\n          setError(null);\n          const token = res.data.token;\n          if (saveChecked) {\n            localStorage.setItem(\"medexadmin-auth-token\", token);\n          } else {\n            sessionStorage.setItem(\"medexadmin-auth-token\", token);\n          }\n\n          setState((state) => ({ ...state, signedIn: true }));\n          setRole(res.data.roles[0])\n          setState((state) => ({ ...state, currentMenuIndex: 0 }));\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 0)}`));\n        } else if (res.data.status === \"FAILED\") {\n          setError(res.data.error);\n        } else {\n          setError(\"Sorry, something went wrong, please try again.\");\n        }\n      })\n      .catch((err) => {\n        setSubmiting(false);\n        console.error(err);\n        setError(\"Sorry, something went wrong, please try again.\");\n      });\n  };\n\n  const usernameChanged = (event) => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n\n  const passwordChanged = (event) => {\n    setPassword(event.target.value);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const saveCheckedChanged = (event) => {\n    setSaveChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.pageBg}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Paper elevation={20}>\n          <div className={classes.paper}>\n            <div className={classes.appbarCenter}>\n              <span className={classes.appbarTitle}>\n                Medical Express Clinic\n              </span>\n\n              <img\n                className={classes.logoImage}\n                src={getGlobalPath(\"/images/logo.png\")}\n                alt=\"logo image\"\n              />\n            </div>\n\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.adminPanelLabel}\n            >\n              Admin Panel\n            </Typography>\n\n            {error && (\n              <div className={classes.alert}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\n                    {error}\n                  </div>\n                </Alert>\n              </div>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"username\"\n              value={username}\n              onChange={usernameChanged}\n              on\n              autoFocus\n            />\n            <FormControl\n              fullWidth\n              required\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  signIn();\n                }\n              }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                {\" \"}\n                Password{\" \"}\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                name=\"outlined-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={passwordChanged}\n                autoComplete=\"current-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      tabindex=\"-1\"\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n\n            <FormControlLabel\n              style={{ textAlign: \"left\", width: \"100%\" }}\n              control={\n                <Checkbox\n                  value=\"remember\"\n                  color=\"secondary\"\n                  checked={saveChecked}\n                  onChange={saveCheckedChanged}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={signIn}\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </div>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={submiting}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <CircularProgress color=\"inherit\" />\n            </Grid>\n            <Grid item>\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n                {\" \"}\n                {/* Please wait ...{\" \"} */}\n              </span>\n            </Grid>\n          </Grid>\n        </Backdrop>\n\n        <Box mt={5} style={{ color: \"#eee\" }}>\n          <Copyright />\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Badge,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { List, ListItem } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getMenuRole, getMenuId } from \"./MenuList\";\nimport { border, borderBottom } from \"@material-ui/system\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\nimport GyaneBookService from \"./Gynae/services/BookService\"\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  icon: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    cursor: \"pointer\",\n    paddingTop: \"10px\",\n    paddingBottom: \"8px\",\n    borderBottom: \"1px solid #eee\",\n  },\n\n  iconSelected: {\n    color: \"#fff\",\n    backgroundColor:  theme.palette.primary.main,\n    transition: \"all 0.1s ease-in-out\"\n  },\n\n  menuText: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\"\n  },\n\n  Badge:{\n    backgroundColor: \"rgb(220, 0, 78)\",\n    color: \"#fff\",\n    fontWeight: \"600\",\n    textAlign:\"center\",\n    borderRadius: \"50%\",\n    fontSize: \"0.85rem\",\n    lineHeight: \"0.85rem\",\n    padding:\"7px\",\n    marginTop:\"9px\",\n    width:\"28px\"\n\n  }\n}));\n\nexport default function MyMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  let history = useHistory();\n\n  const updateShouldRefundsCount = async () =>\n  {\n    try{\n      const res = await GyaneBookService.getShouldRefundsCount()\n      if (res && res.data && res.data.status === \"OK\")\n      {\n        setState(state => ({...state, shouldRefunsCount: res.data.count}))\n      }\n    }\n    catch(ex)\n    {\n      console.error(ex)\n    }\n  }\n\n  const updateHSPendingBookingsCount = async () =>\n  {\n    try{\n      const res = await ScreeningBookService.getPendingBookings()\n      if (res && res.data)\n      {\n        setState(state => ({...state, hsPendingBookingsCount: res.data.length}))\n      }\n    }\n    catch(ex)\n    {\n      console.error(ex)\n    }\n  }\n\n\n  useEffect(() => {\n    setSelectedIndex(state.currentMenuIndex);\n    updateShouldRefundsCount()\n    updateHSPendingBookingsCount()\n  }, [state.currentMenuIndex, state.bookingDialogDataChanged]);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {state.role &&\n          getMenuRole(state.role).map(\n            (item) =>\n              !item.hidden && (\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\n                // <ListItemIcon>\n                //     {item.icon}\n                // </ListItemIcon>\n                // <ListItemText primary={`${item.title}`} />\n                // </ListItem>\n                <React.Fragment key={`${item.id}`}>\n                  <div\n                    key={`${item.id}`}\n                    className={clsx(\n                      classes.icon,\n                      selectedIndex === item.index && classes.iconSelected\n                    )}\n                    onClick={(event) => handleListItemClick(event, item.index)}\n                  >\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={3}\n                      style={{paddingLeft:\"15px\"}}\n                    >\n                      <Grid item>{item.icon}</Grid>\n\n                      <Grid item style={{textAlign:\"left\"}}>\n                        <span\n                          className={classes.menuText}\n                        >{`${item.title}`}</span>{\" \"}\n                      </Grid>\n\n                      {state.role === \"gynae\" && item.id === \"deletedBookings\" && state.shouldRefunsCount > 0 && (\n                        <span className={classes.Badge}> {state.shouldRefunsCount} </span>\n                      )}\n\n                      {state.role === \"screening\" && item.id === \"pendingBookings\" && state.hsPendingBookingsCount > 0 && (\n                        <span className={classes.Badge}> {state.hsPendingBookingsCount} </span>\n                      )}\n\n\n                    </Grid>\n                  </div>\n                </React.Fragment>\n              )\n          )}\n      </List>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport MyMenu from \"./Menu\";\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Copyright from \"./CopyRight\";\nimport { useMediaQuery } from \"react-responsive\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport dateformat from \"dateformat\";\nimport { getRole, setRole, clearRole } from \"./Role\";\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport AirplayIcon from '@material-ui/icons/Airplay';\n\nconst drawerWidth = 240;\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    marginTop: \"10px\",\n    // marginRight: \"5px\",\n    width: \"270px\",\n    height: \"240px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    paddingTop: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuApps = withStyles((theme) => ({\n  paper: {\n    marginTop: \"5px\",\n    // marginRight: \"5px\",\n    width: \"280px\",\n    height: \"340px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    // marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      opacity: 0.9,\n    },\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  appbarCenter: {\n    position: \"fixed\",\n    width: \"260px\",\n    top: \"10px\",\n    left: \"50%\",\n    marginLeft: \"-130px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n  },\n\n  logoImage: {\n    width: \"36px\",\n    height: \"36px\",\n    marginLeft: \"0px\",\n  },\n\n  userAvatar: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#aaa\",\n    border: \"1px solid\",\n    color: \"#aaa\",\n    cursor: \"pointer\",\n  },\n\n  userAvatarSelected: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n  },\n\n  userAvatarBig: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    width: \"60px\",\n    height: \"60px\",\n  },\n\n  appBarText: {\n    color: \"#888\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  appBarAppsIcon: {\n    // color: \"#888\",\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n  },\n\n  appBarAppsIconSelected: {\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n    color: theme.palette.primary.main,\n  },\n\n  usernameLabel: {\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n\n  lastLoginLabel: {\n    color: \"#777\",\n    paddingTop: \"5px\",\n  },\n\n  appsLogo: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n\n  appsBox: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid #fff`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsBoxSelected: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid${theme.palette.primary.light}`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsAdminLabel: {\n    color: \"#0264d4\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGPLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsSTDLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsBloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsDermaLabel: {\n    color: \"#323e9a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPaymentLabel: {\n    color: \"#008c77\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsScreeningLabel: {\n    color: \"#006b8f\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n\n\n\n\n  appsInToolbar: {\n    position: \"fixed\",\n    left: \"60px\",\n    top: \"-5px\",\n    height: \"65px\",\n    width: \"200px\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const [open, setOpen] = React.useState(isMobile ? false : true);\n\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\n\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\n  const handleUserAvatarClick = (event) => {\n    setAnchorUserAvatar(event.currentTarget);\n  };\n  const handleUserAvatarClose = () => {\n    setAnchorUserAvatar(null);\n  };\n\n  const [anchorApps, setAnchorApps] = React.useState(null);\n  const handleAppsClick = (event) => {\n    setAnchorApps(event.currentTarget);\n  };\n  const handleAppsClose = () => {\n    setAnchorApps(null);\n  };\n\n  const history = useHistory();\n\n  let location = useLocation();\n  React.useEffect(() => {\n    if (!state.role) return;\n    const index = getMenuIndex(\n      state.role,\n      getMenuIdFromGlobalPath(location.pathname)\n    );\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n  }, [location]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setCurrentMenuIndex(state.currentMenuIndex);\n    if (isMobile) {\n      setOpen(false);\n    }\n  }, [state.currentMenuIndex]);\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"medexadmin-auth-token\");\n    sessionStorage.removeItem(\"medexadmin-auth-token\");\n    clearRole();\n\n    setState((state) => ({ signedIn: false }));\n    history.replace(\"./login\");\n  };\n\n  const appsClicked = (role) => {\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\n    handleAppsClose();\n  };\n\n  const getAppsLogo = (role) => {\n    switch (role) {\n      case \"admin\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/admin.png\")}\n            className={classes.appsLogo}\n          />\n        );\n      case \"pcr\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/corona.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/woman.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gp\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/doctor.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"std\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/std-icon.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"blood\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/blood-logo.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"derma\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/derma-logo.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"payment\":\n        return (\n          // <img\n          //   src={getGlobalPath(\"/images/payment-logo.png\")}\n          //   className={classes.appsLogo}\n          // />\n          <MonetizationOnIcon className={classes.appsLogo} style={{color:\"#008c77\", fontSize:\"2rem\", padding:\"15px\"}}/>\n        );\n\n\n        case \"screening\":\n          return (\n            // <img\n            //   src={getGlobalPath(\"/images/payment-logo.png\")}\n            //   className={classes.appsLogo}\n            // />\n            <AirplayIcon className={classes.appsLogo} style={{color:\"#006b8f\", fontSize:\"2rem\", padding:\"16px\"}}/>\n          );\n  \n\n\n\n      default:\n        return null;\n    }\n  };\n\n  const getAppsLabel = (role) => {\n    switch (role) {\n      case \"admin\":\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\n      case \"pcr\":\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\n      case \"gynae\":\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\n      case \"gp\":\n        return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\n      case \"std\":\n        return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\n      case \"blood\":\n        return <div className={classes.appsBloodLabel}> {\"Blood\"} </div>;\n      case \"derma\":\n        return <div className={classes.appsDermaLabel}> {\"Dermatology\"} </div>;\n      case \"payment\":\n        return <div className={classes.appsPaymentLabel}> {\"Payments\"} </div>;\n      case \"screening\":\n        return <div className={classes.appsScreeningLabel}> {\"Screening\"} </div>;\n  \n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.userId && state.role && (\n        <React.Fragment>\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\n              position=\"absolute\"\n              className={clsx(\n                classes.appBar,\n                false && open && classes.appBarShift\n              )}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton)}\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <div className={classes.appsInToolbar}>\n                  <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\n                    <Grid item>\n                      <div style={{ paddingTop: \"8px\" }}>\n                        {getAppsLabel(state.role)}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n                <div className={classes.appbarCenter}>\n                  {!isMobile && (\n                    <React.Fragment>\n                      <span className={classes.appbarTitle}>\n                        Medical Express Clinic\n                      </span>\n\n                      <img\n                        className={classes.logoImage}\n                        src={getGlobalPath(\"/images/logo.png\")}\n                        alt=\"logo image\"\n                      />\n                    </React.Fragment>\n                  )}\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    width: \"100%\",\n                    paddingLeft: \"2%\",\n                  }}\n                >\n                  <Grid\n                    container\n                    spacing={2}\n                    direction=\"row-reverse\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={\n                          anchorUserAvatar\n                            ? classes.userAvatarSelected\n                            : classes.userAvatar\n                        }\n                        onClick={handleUserAvatarClick}\n                      >\n                        <IconButton>\n                          <PersonOutlineIcon />\n                        </IconButton>\n                      </Avatar>\n                    </Grid>\n\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\n                      <Grid item>\n                        <IconButton onClick={handleAppsClick}>\n                          <AppsIcon\n                            className={\n                              anchorApps\n                                ? classes.appBarAppsIconSelected\n                                : classes.appBarAppsIcon\n                            }\n                          />\n                        </IconButton>\n                      </Grid>\n                    )}\n                  </Grid>\n                </div>\n              </Toolbar>\n            </AppBar>\n\n            <StyledMenu\n              id=\"user-avatar-menu\"\n              anchorEl={anchorUserAvatar}\n              keepMounted\n              open={Boolean(anchorUserAvatar)}\n              onClose={handleUserAvatarClose}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar className={classes.userAvatarBig}>\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <div className={classes.usernameLabel}>\n                    {\" \"}\n                    {state.userId?.username}{\" \"}\n                  </div>\n                </Grid>\n                <Grid item>\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\n                    Logged in at :\n                  </span>\n                </Grid>\n                <Grid item>\n                  <div className={classes.lastLoginLabel}>\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\n                  </div>\n                </Grid>\n\n                <Grid item>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    style={{\n                      marginTop: \"30px\",\n                      width: \"150px\",\n                      borderRadius: \"30px\",\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Grid>\n              </Grid>\n            </StyledMenu>\n\n            <StyledMenuApps\n              id=\"apps-menu\"\n              anchorEl={anchorApps}\n              keepMounted\n              open={Boolean(anchorApps)}\n              onClose={handleAppsClose}\n            >\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"admin\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"admin\")}\n                  >\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"pcr\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"pcr\")}\n                  >\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gynae\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gynae\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gp\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gp\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"std\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"std\")}\n                  >\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"blood\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"blood\")}\n                  >\n                    <Grid item>{getAppsLogo(\"blood\")}</Grid>\n                    <Grid item>{getAppsLabel(\"blood\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"screening\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"screening\")}\n                  >\n                    <Grid item>{getAppsLogo(\"screening\")}</Grid>\n                    <Grid item>{getAppsLabel(\"screening\")}</Grid>\n                  </Grid>\n                </Grid>\n\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"derma\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"derma\")}\n                  >\n                    <Grid item>{getAppsLogo(\"derma\")}</Grid>\n                    <Grid item>{getAppsLabel(\"derma\")}</Grid>\n                  </Grid>\n                </Grid>\n\n\n\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"payment\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"payment\")}\n                  >\n                    <Grid item>{getAppsLogo(\"payment\")}</Grid>\n                    <Grid item>{getAppsLabel(\"payment\")}</Grid>\n                  </Grid>\n                </Grid>\n\n\n\n\n\n\n              </Grid>\n            </StyledMenuApps>\n\n            <Drawer\n              variant={isMobile ? \"temporary\" : \"persistent\"}\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <React.Fragment>\n                  <img\n                    className={classes.logoImage}\n                    src={getGlobalPath(\"/images/logo.png\")}\n                    alt=\"logo image\"\n                    style={{ marginRight: \"10px\" }}\n                  />\n                  <span className={classes.appbarTitle}>\n                    <span style={{ fontSize: \"0.9rem\" }}>Medical Express</span>\n                  </span>\n                </React.Fragment>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n\n              <MyMenu />\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\n                className={classes.container}\n              >\n                {getMenuContent(state.role, currentMenuIndex)}\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import UserService from \"./services/UserService\";\n\nexport async function getUserIdFromToken(token)\n{\n    try{\n       const res  = await UserService.checkToken({token: token})\n       if (res.data.status === 'OK')\n        {\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\n        }\n       else\n        {\n            return null\n        }\n    }\n    catch(err)\n    {\n        return null\n    }\n  \n}","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GlobalState from './GlobalState';\n\n\n\n\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard';\n\nimport { useLocation, useHistory} from \"react-router-dom\";\nimport { getUserIdFromToken } from './TokenVerifier';\nimport UserService from './services/UserService';\nimport { getMenuId } from './MenuList';\nimport { getRole, setRole } from './Role';\nimport { getGlobalPath } from './GlobalPath';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    appBar: {\n        position: 'static',\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        //alignItems: 'center'\n    \n      },\n\n      signOutButton:{\n        color: \"#fff\",\n        marginRight : \"20px\",\n        fontWeight: \"500\"\n      },\n\n      title: {\n        flexGrow : 1\n      }\n\n\n}));\n\nexport default function Navigator() {\n\n    const classes = useStyles();\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [loaded, setLoaded] = React.useState(false)\n\n    let history = useHistory();\n\n    const handleSignOut = () =>\n    {\n      setState(state => ({...state, signedIn: false}));\n\n    }\n\n    let location = useLocation();\n\n    React.useEffect(() => {\n\n      const checkToken = async () =>\n      {\n        const authToken = localStorage.getItem('medexadmin-auth-token') || sessionStorage.getItem('medexadmin-auth-token');\n        UserService.setToken(authToken)\n\n         if (!authToken)\n        {\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n          setLoaded(true)\n          history.push(getGlobalPath('/login'));\n        }\n        else\n        {\n           const userId = await getUserIdFromToken(authToken);\n           if (!userId)\n           {\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n              history.push(getGlobalPath('/login'));\n           }\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\n           {\n            if (!getRole())\n            {\n             setRole(userId.roles[0])\n            }\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\n            \n             history.push(getGlobalPath(`/${getMenuId(getRole(),0)}`));\n           }\n           else\n           {\n              if (!getRole())\n              {\n               setRole(userId.roles[0])\n              }\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\n           }\n\n           setLoaded(true)\n        }\n      }\n\n      checkToken();\n   \n    }, [location.pathname]);\n\n    const getComponentFromState = () =>\n    {\n\n      if (state.signedIn)\n      {\n        return <Dashboard/>\n      }\n      else\n      {\n          return <SignIn/>    \n      }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            {\n              loaded && (\n                getComponentFromState()\n              )\n            }\n        \n        </React.Fragment>\n    );\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalState from \"./GlobalState\";\nimport Navigator from './Navigator';\n\n\n\n\n// Configure JSS\n\n\nfunction App() {\n  const [state, setState] = React.useState({currentMenuIndex:0});\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <GlobalStyles />\n\n       \n\n              <Navigator/>\n\n       \n\n\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </GlobalState.Provider>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }else\n    {\n        return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n    }\n\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }\n    else\n    {\n        return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n    }\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }\n    else\n    {\n        return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n    }\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }else\n    {\n        return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n    }\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}"],"sourceRoot":""}