{"version":3,"sources":["PCR/PriceCalculator.js","Gynae/PriceCalculator.js","PCR/DateFormatter.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","CopyRight.js","GlobalPath.js","services/api.js","services/UserService.js","PCR/services/api.js","PCR/services/BookService.js","PCR/services/PDFService.js","PCR/PersonsBox.js","PCR/FindByRef.js","PCR/ResendEmailsDialog.js","PCR/Corporates.js","PCR/PayDialog.js","PCR/TimeStampDialog.js","PCR/BookingDialog.js","PCR/BookingTable.js","PCR/Title.js","PCR/Chart.js","PCR/CurrentVisits.js","PCR/BookingView.js","PCR/ResultsTimeReport.js","PCR/DashboardPreview.js","PCR/UnmatchedRecords.js","PCR/calendar/MonthViewCell.js","PCR/calendar/calendar-util.js","PCR/calendar/MonthView.js","PCR/calendar/WeekViewCell.js","PCR/calendar/WeekView.js","PCR/calendar/DayViewCell.js","PCR/calendar/DayView.js","PCR/calendar/CalendarView.js","PCR/calendar-admin/MonthViewCell.js","PCR/calendar-admin/calendar-util.js","PCR/calendar-admin/MonthView.js","PCR/calendar-admin/WeekViewCell.js","PCR/calendar-admin/WeekView.js","PCR/calendar-admin/DayViewCell.js","PCR/calendar-admin/DayView.js","PCR/calendar-admin/CalendarView.js","Gynae/services/api.js","Gynae/services/BookService.js","Gynae/services/PDFService.js","Gynae/Corporates.js","Gynae/PayDialog.js","Gynae/BookingDialog.js","Gynae/BookingTable.js","Gynae/Title.js","Gynae/Chart.js","Gynae/CurrentVisits.js","Gynae/BookingView.js","Gynae/DashboardPreview.js","Gynae/PersonsBox.js","Gynae/FindByRef.js","Gynae/calendar-admin/MonthViewCell.js","Gynae/calendar-admin/calendar-util.js","Gynae/calendar-admin/MonthView.js","Gynae/calendar-admin/WeekViewCell.js","Gynae/calendar-admin/WeekView.js","Gynae/calendar-admin/DayViewCell.js","Gynae/calendar-admin/DayView.js","Gynae/calendar-admin/CalendarView.js","Title.js","TodayBookingView.js","TomorrowBookingView.js","TotalBookingView.js","LateBookingView.js","UnmatchedBookingView.js","ShouldRefundBookingView.js","DashboardPreview.js","MenuList.js","Role.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","Gynae/DateFormatter.js"],"names":["calculatePrice","person","price","tr","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","FormatDateFromString","str","substr","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","secondary","contrastText","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","Copyright","Typography","variant","align","Link","href","Date","getFullYear","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","payBooking","bookingId","paymentMethod","corporate","unPayBooking","getTestsTimeReport","axiosRetry","retries","retryDelay","retryCount","get","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","resendEmailsWithBookingId","regenerateFilesWithBookingId","resendEmails","linkId","regenerateFiles","matchRecords","findBestMatches","getLinkDetails","getLinkDetailsWithBookingId","findBookingByRefBirthDate","bookingRef","birthDate","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getLateBookings","getDeletedBookings","getLiveBookings","getCompletedBookings","getPositiveBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","getUnmatchedRecords","getUnmatchedRecordsArchived","archiveRecord","unArchiveRecord","PDFService","downloadCovidForm1","responseType","Accept","downloadCovidForm2","downloadPdfResult","downloadPdfCert","downloadPdfLabReport","useStyles","makeStyles","box","padding","borderRadius","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","textDecoration","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","infoTitle","fontWeight","infoData","title","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","BookedLabel","borderLeft","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","PositiveLabel","EditButton","RestoreButton","DeleteButton","SaveButton","CancelButton","TextBox","checkIcon","closeIcon","centeredLabel","alignItems","PersonsBox","classes","useContext","setState","useState","expanded","setExpanded","edit","editMode","setEditMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","saving","setSaving","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","gender","setGender","setTitle","forename","setForename","surname","setSurnme","email","setEmail","dob","setDOB","tel","setTel","postCode","setPostCode","address","setAddress","notes","setNotes","passport","setPassport","passport2","setPassport2","setCertificate","setAntiBodyTest","bookingDateChanged","event","target","value","bookingDateError","bookingTimeChanged","bookingTimeError","genderChanged","titleChanged","forenameChanged","surnameChanged","emailChanged","dobChanged","dobError","telChanged","postCodeChanged","addressChanged","passportChanged","passport2Changed","certificateChanged","checked","antiBodyTestChanged","handleEditModeChanged","forenameCapital","surnameCapital","toUpperCase","phone","passportNumber","passportNumber2","booking","_id","validateBooking","validateDate","charAt","test","year","parseInt","month","day","err","hour","minute","validateTime","bookingService","res","RefreshPersonInfo","handleDeleteModeChanged","del","handleRestoreModeChanged","Fragment","Grid","container","direction","justify","className","foundRecords","map","index","status","panel","item","deleted","onChange","isExpanded","AccordionSummary","expandIcon","aria-controls","Tooltip","style","AccordionDetails","hidden","Button","type","fullWidth","onClick","disabled","TextField","inputProps","FormControlLabel","formControl","control","Checkbox","name","label","startIcon","file","Blob","data","fileURL","URL","createObjectURL","open","isBoolean","param","TextMaskCustom","props","inputRef","other","inputElement","mask","showMask","flexDirection","avatar","form","Find","Clear","NoRecordsFound","FindByRef","initialFocus","focus","setFocus","autoFocus","key","onFocus","onBlur","useFocus","focusProps","useEffect","clearField","refError","findRecords","indexOf","submiting","CssBaseline","component","FormControl","pattern","helperText","size","InputProps","inputComponent","onKeyPress","onTouchTap","Alert","severity","interval","refreshButton","RefLink","cursor","archiveButton","smartMatchButton","matchButton","resendButton","resendFilesButton","cancelButton","BorderLinearProgress","colorPrimary","bar","LinearProgress","LinearProgressWithLabel","Box","mr","minWidth","Math","round","PaperComponent","handle","cancel","Paper","ResendEmailsDialog","sending","setSending","sent","setSent","sendJustToPCR","setSendJustToPCR","sendingStatus","setSendingStatus","sendingProgress","setSendingProgress","setError","prevProgress","Dialog","onClose","clearInterval","handleClose","aria-labelledby","DialogTitle","Divider","DialogContent","setInterval","link","setTimeout","corporates","PayDialog","setPaymentMethod","setCorporate","payClicked","a","bookingPayChanged","RadioGroup","aria-label","Radio","Select","labelId","element","MenuItem","bottom","right","Backdrop","backdrop","CircularProgress","addMinutes","date","minutes","getTime","itemTitle","itemData","TimeStampDialog","linkTimeStamp","setLinkTimeStamp","filename","timeStamp","dateformat","setHours","bookingTimeNormalized","setMinutes","setSeconds","setMilliseconds","getDateFromBooking","samplingTimeStamp","DialogActions","ResendEmailsButton","PayButton","PayLabel","checkIconSmall","zIndex","drawer","Transition","forwardRef","Slide","BookingDialog","copied","setCopied","openResendDialog","setOpenResendDialog","openPayDialog","setOpenPayDialog","selectedBooking","setSelectedBooking","refreshData","setRefreshData","setBooking","recordChanged","setRecordChanged","fieldChanged","setFieldChanged","openUndoPayDialog","setOpenUndoPayDialog","openTimeStampDialog","setOpenTimeStampDialog","handleCloseUndoPayDialog","isChanged","bookingDialogDataChanged","undoPaymentClicked","TransitionComponent","keepMounted","aria-describedby","top","left","IconButton","clipboard","writeText","transition","minHeight","maxHeight","deleteButtonDisabled","selfIsolate","postCodeSI","addressSI","NHSNumber","ethnicity","arrivalDate","flightNumber","lastDepartedDate","travellingFrom","paid","paidBy","DialogContentText","HideNowRows","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","fromDate","setFromDate","untilDate","setUntilDate","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","field","headerName","renderCell","params","getValue","openDetailsDialog","valueFormatter","formatTimeStamp","valueGetter","placement","bookings","cachedBookings","isFetching","setData","setSelectedRow","seeDetailsDialogOpen","setSeeDetailsDialogOpen","filter","setFilter","useRef","todayStr","timeStampStr","loadData","api","trim","filteredData","toLowerCase","find","page","setPage","userId","username","faFileExcel","autoComplete","InputLabel","rows","autoPageSize","onPageChange","onSelectionChange","newSelection","row","Switch","utils","DateFnsUtils","autoOk","disableToolbar","format","KeyboardButtonProps","sheet","buttonText","extRef","PriceCalculator","Title","gutterBottom","children","createData","amount","emptyData","undefined","getCount","count","Chart","useTheme","loading","setLoading","result","push","fetchData","ResponsiveContainer","LineChart","XAxis","dataKey","stroke","YAxis","Label","angle","textAnchor","fill","Line","dot","depositContext","flex","bookingBox","boxShadow","getCurrentTimeSlot","now","min","getMinutes","getHours","pm","minStr","hourStr","pmStr","timeStr","getDay","getCurrentTimeSlotLabel","endTimeStr","CurrentVisits","current","setCurrent","setBookings","openDialog","setOpenDialog","currentTimeSlot","bookingCliked","_bookings","substring","getBookingsBox","seeMore","BookingView","refresh","setRefresh","Table","TableHead","TableRow","TableCell","TableBody","preventDefault","currentMenuIndex","getMenuIndex","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","dominantBaseline","ReportLabels","AverageLabel","less12Label","less24Label","less36Label","ResultsTimeReport","report","setReport","setOpen","lessThan12","lessThan24","lessThan36","PieChart","Pie","labelLine","entry","Cell","avg","lessThan12Percent","lessThan24Percent","lessThan36Percent","lessThan48","lessThan48Percent","overflow","fixedHeight","DashboardPreview","fixedHeightPaper","clsx","downloadPDFButton","UnmatchedRecords","selectedTab","disableId","smartMatchClicked","downloadLabReport","setDisableId","setSeletedTab","smartLinkId","setSmartLinkId","smartLinkDetails","setSmartLinkDetails","likelyBookings","setLikelyBookings","seeDetailsBooking","setSeeDetailsBooking","matching","setMatching","matched","setMatched","matchedBookings","lastPromise","currentPromise","e","ToggleButtonGroup","exclusive","ToggleButton","timeout","testDate","handleCheckChanged","likelihood","seeDetailsClicked","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","MonthViewCell","cellIndex","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","isPast","setIsPast","getMonth","calendarCache","record","method","query","fecthData","_bookingsCount","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","disableShrink","MAX_BOOKING_COUNT","percent","getBookingsCountGauge","CalendarUtil","getMonthRange","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","CancelToken","overflowY","WeekView","dates","replace","overflowX","DayViewCell","filteredBookings","setFilteredBookings","dayViewCalFilter","search","borderTop","titleLabel","titleLabelToday","DayView","monthNames","fontColor","CalendarView","setMonth","setYear","setDay","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","removeFilter","today","dayofWeek","firstdayofweek","_mode","newDay","justifyContent","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","InputAdornment","onMouseDown","AdminCalendarCache","bookingBoxSampleTaken","bookingBoxPositive","bookingBoxReportSent","getBookingClass","getShouldRefundsCount","refundBooking","changeToPatientAttended","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","setPrice","priceError","setPriceError","required","startAdornment","openRefundDialog","setOpenRefundDialog","fullname","setFullname","service","setService","handleCloseRefundDialog","refundPaymentClicked","updateShouldRefundsCount","shouldRefunsCount","OTCCharges","deposit","toLocaleString","refund","notifyIcon","showCreateExcel","isThursday","isFriday","fullnameChanged","serviceChanged","notesChanged","TodayBookingView","PCRBookService","res1","GynaeBookService","res2","pcr","gynae","clinic","TomorrowBookingView","tomorrow","tomorrowStr","TotalBookingView","countLabel","countLabelRed","Icon","IconRed","TitleRed","LateBookingView","UnmatchedBookingView","ShouldRefundBookingView","MenuList_Admin","MenuList_Gynae","MenuList_PCR","getMenuContent","role","getMenuRole","getMenuId","MenuList","getRole","sessionStorage","getItem","setRole","setItem","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","history","useMediaQuery","useHistory","password","setPassword","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setSubmiting","localStorage","signedIn","roles","elevation","src","alt","Avatar","lineHeight","on","textField","htmlFor","OutlinedInput","tabindex","Visibility","VisibilityOff","labelWidth","mt","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","GyaneBookService","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","appBar","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","opacity","drawerPaperClose","appBarSpacer","content","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsInToolbar","Dashboard","isMobile","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","globalPath","split","getMenuIdFromGlobalPath","pathname","scrollTo","appsClicked","getAppsLogo","getAppsLabel","AppBar","Toolbar","edge","currentTarget","anchorEl","lastLoginTimeStamp","removeItem","Drawer","getUserIdFromToken","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","process","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f40fb3.chunk.js","sourcesContent":["\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\nimport { enGB } from '@material-ui/core/locale';\r\n\r\n\r\nconst black = \"#212121\";\r\nconst darkBlack = \"rgb(36, 40, 44)\";\r\nconst background = \"#f9f9f9\";\r\n\r\nconst warningLight = \"rgba(253, 200, 69, .3)\";\r\nconst warningMain = \"rgba(253, 200, 69, .5)\";\r\nconst warningDark = \"rgba(253, 200, 69, .7)\";\r\n\r\n// border\r\nconst borderWidth = 2;\r\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\r\n\r\n// breakpoints\r\nconst xl = 1920;\r\nconst lg = 1280;\r\nconst md = 960;\r\nconst sm = 600;\r\nconst xs = 0;\r\n\r\n// spacing\r\nconst spacing = 8;\r\n\r\nconst theme = createMuiTheme({\r\n\r\n  palette: {\r\n\r\n    primary: { main: \"#00a1c5\",\r\n               light: \"#5bd5f0\"\r\n              //  dark: \"#0288D1\",\r\n              //  light: \"#B3E5FC\"\r\n\r\n      },\r\n    secondary: { main: \"#f68529\", contrastText:\"#fff\" },\r\n    common: {\r\n      black,\r\n      darkBlack\r\n    },\r\n    warning: {\r\n      light: warningLight,\r\n      main: warningMain,\r\n      dark: warningDark\r\n    },\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n    background: {\r\n      default: background\r\n    },\r\n    spacing\r\n  },\r\n  breakpoints: {\r\n    // Define custom breakpoint values.\r\n    // These will apply to Material-UI components that use responsive\r\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\r\n    // theme breakpoint functions `up`, `down`, and `between` to create\r\n    // media queries for these breakpoints\r\n    values: {\r\n      xl,\r\n      lg,\r\n      md,\r\n      sm,\r\n      xs\r\n    }\r\n  },\r\n  border: {\r\n    borderColor: borderColor,\r\n    borderWidth: borderWidth\r\n  },\r\n  overrides: {\r\n    MuiExpansionPanel: {\r\n      root: {\r\n        position: \"static\"\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        paddingLeft: spacing * 2,\r\n        paddingRight: spacing * 2,\r\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\r\n        [`@media (max-width:  ${sm}px)`]: {\r\n          paddingLeft: spacing,\r\n          paddingRight: spacing\r\n        }\r\n      }\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: borderColor,\r\n        height: borderWidth\r\n      }\r\n    },\r\n    MuiPrivateNotchedOutline: {\r\n      root: {\r\n        borderWidth: borderWidth\r\n      }\r\n    },\r\n    MuiListItem: {\r\n      divider: {\r\n        borderBottom: `${borderWidth}px solid ${borderColor}`\r\n      }\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        width: \"100%\",\r\n        maxWidth: 430,\r\n        marginLeft: spacing,\r\n        marginRight: spacing\r\n      }\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        backgroundColor: darkBlack,\r\n        fontSize: \"0.7rem\"\r\n      }\r\n    },\r\n    MuiExpansionPanelDetails: {\r\n      root: {\r\n        [`@media (max-width:  ${sm}px)`]: {\r\n          paddingLeft: spacing,\r\n          paddingRight: spacing\r\n        }\r\n      }\r\n    }\r\n  },\r\n \r\n}, enGB);\r\n\r\nexport default responsiveFontSizes(theme);\r\n","import { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    /**\r\n     * Disable the focus outline, which is default on some browsers like\r\n     * chrome when focusing elements\r\n     */\r\n    \"*:focus\": {\r\n      outline: 0\r\n    },\r\n    \".text-white\": {\r\n      color: theme.palette.common.white\r\n    },\r\n    \".listItemLeftPadding\": {\r\n      paddingTop: `${theme.spacing(1.75)}px !important`,\r\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\r\n      paddingLeft: `${theme.spacing(4)}px !important`,\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        paddingLeft: `${theme.spacing(4)}px !important`\r\n      },\r\n      \"@media (max-width:  420px)\": {\r\n        paddingLeft: `${theme.spacing(1)}px !important`\r\n      }\r\n    },\r\n    \".container\": {\r\n      width: \"100%\",\r\n      paddingRight: theme.spacing(4),\r\n      paddingLeft: theme.spacing(4),\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        maxWidth: 540\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        maxWidth: 720\r\n      },\r\n      [theme.breakpoints.up(\"lg\")]: {\r\n        maxWidth: 1170\r\n      }\r\n    },\r\n    \".row\": {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      marginRight: -theme.spacing(2),\r\n      marginLeft: -theme.spacing(2)\r\n    },\r\n    \".container-fluid\": {\r\n      width: \"100%\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingLeft: theme.spacing(2),\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      maxWidth: 1370\r\n    },\r\n    \".lg-mg-top\": {\r\n      marginTop: `${theme.spacing(20)}px !important`,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        marginTop: `${theme.spacing(18)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginTop: `${theme.spacing(16)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        marginTop: `${theme.spacing(14)}px !important`\r\n      }\r\n    },\r\n    \".lg-mg-bottom\": {\r\n      marginBottom: `${theme.spacing(20)}px !important`,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        marginBottom: `${theme.spacing(18)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginBottom: `${theme.spacing(16)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        marginBottom: `${theme.spacing(14)}px !important`\r\n      }\r\n    },\r\n    \".lg-p-top\": {\r\n      paddingTop: `${theme.spacing(20)}px !important`,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        paddingTop: `${theme.spacing(18)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        paddingTop: `${theme.spacing(16)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        paddingTop: `${theme.spacing(14)}px !important`\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nfunction globalStyles() {\r\n  return null;\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(globalStyles);\r\n","/* eslint-disable */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'; \r\nconst GlobalState = React.createContext([{}, () => {}]); \r\nexport default GlobalState;","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"#\">\r\n          Medical Express Clinic\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n  ","\r\n\r\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\r\n\r\nexport const backendAPI = 'https://www.travelpcrtest.com/'\r\n// export const backendAPI = 'http://localhost:9090/'\r\n\r\nexport function getGlobalPath(path){\r\n    return '/medicalexpressclinic/admin' + path\r\n    // return path\r\n}\r\n\r\nexport function getMenuIdFromGlobalPath(globalPath){\r\n    try{\r\n       \r\n        var split = globalPath.split('/')\r\n        if (split && split.length > 0)\r\n        {\r\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\r\n        }\r\n        else\r\n        {\r\n            return ''\r\n        }\r\n    }\r\n    catch(err)\r\n    {\r\n        return ''\r\n    }\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n\r\n  headers : {\r\n      'Authorization' : authToken\r\n  }\r\n});","import API from './api';\r\n\r\nexport default class UserService{\r\n\r\n    static setToken = (token) =>\r\n    {\r\n        this.token = token\r\n    }\r\n  \r\n    static signIn = (payload) =>\r\n    {\r\n        return  API.post('/api/medex/user/signin', payload)\r\n    }\r\n\r\n    static checkToken = (payload) =>\r\n    {\r\n        return  API.post('/api/medex/user/checktoken', payload)\r\n    }\r\n\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n\r\n   static payBooking = (bookingId, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getTestsTimeReport = () =>\r\n   {\r\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\r\n         return retryCount * 1000;\r\n       } });\r\n      return API.get(`/api/book/getteststimereport`);\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static resendEmailsWithBookingId = (bookingId) =>\r\n   {\r\n      return API.post(`/api/book/resendemailswithbookingid?id=${bookingId}`);\r\n   }\r\n\r\n   static regenerateFilesWithBookingId  = (bookingId) =>\r\n   {\r\n      return API.post(`/api/book/regeneratefileswithbookingid?id=${bookingId}`);\r\n   }\r\n\r\n\r\n   static resendEmails  = (linkId) =>\r\n   {\r\n      return API.post(`/api/book/resendemails?id=${linkId}`);\r\n   }\r\n\r\n   static regenerateFiles  = (linkId) =>\r\n   {\r\n      return API.post(`/api/book/regeneratefiles?id=${linkId}`);\r\n   }\r\n\r\n   static matchRecords  = (bookingId, linkId) =>\r\n   {\r\n      return API.post(`/api/book/matchrecords?bookingid=${bookingId}&linkid=${linkId}`);\r\n   }\r\n\r\n   static findBestMatches = (id) =>\r\n   {\r\n      return API.get(`/api/book/getbestmatchedbookings?id=${id}`);\r\n   } \r\n\r\n   static getLinkDetails = (id) =>\r\n   {\r\n      return API.get(`/api/book/getlinkdetails?id=${id}`);\r\n   } \r\n\r\n   static getLinkDetailsWithBookingId = (id) =>\r\n   {\r\n      return API.get(`/api/book/getlinkdetailswithbookingid?id=${id}`);\r\n   } \r\n\r\n\r\n\r\n   static findBookingByRefBirthDate = (bookingRef, birthDate) =>\r\n   {\r\n      return API.get(`/api/book/getbookingsbyrefandbirthdate?ref=${bookingRef}&birthdate=${birthDate}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getLateBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getlatebookings`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getLiveBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getlivebookings`);\r\n    }\r\n\r\n    static getCompletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getcompletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getPositiveBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getpositivebookings`);\r\n    }\r\n\r\n\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n\r\n    static getUnmatchedRecords= () =>\r\n    {\r\n       return API.get(`/api/book/getunmatchedrecords`);\r\n    }\r\n\r\n    static getUnmatchedRecordsArchived= () =>\r\n    {\r\n       return API.get(`/api/book/getunmatchedrecordsarchived`);\r\n    }\r\n\r\n    static archiveRecord = (id) =>\r\n    {\r\n       return API.post(`/api/book/archiverecord?id=${id}`);\r\n    }\r\n\r\n    static unArchiveRecord = (id) =>\r\n    {\r\n       return API.post(`/api/book/unarchiverecord?id=${id}`);\r\n    }\r\n\r\n\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n    static downloadCovidForm1 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadCovidForm2 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfResult = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfCert = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfLabReport = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\"   \r\n  },\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#555\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\"   \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\"\r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState('panel0');\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [gender, setGender] = React.useState('');\r\n    const [title, setTitle] = React.useState('');\r\n    const [forename, setForename] = React.useState('');\r\n    const [surname, setSurnme] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [dob, setDOB] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [postCode, setPostCode] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n    const [passport, setPassport] = React.useState('');\r\n    const [passport2, setPassport2] = React.useState('');\r\n    const [certificate, setCertificate] = React.useState(false);\r\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const genderChanged = (event) =>\r\n    {\r\n      setGender(event.target.value);\r\n    }\r\n\r\n    const titleChanged = (event) =>\r\n    {\r\n      setTitle(event.target.value);\r\n    }\r\n\r\n    const forenameChanged = (event) =>\r\n    {\r\n      setForename(event.target.value);\r\n    }\r\n\r\n    const surnameChanged = (event) =>\r\n    {\r\n      setSurnme(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const dobChanged = (event) =>\r\n    {\r\n      setDOB(event.target.value);\r\n      setValidationError({...validationError, dobError : false});\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const postCodeChanged = (event) =>\r\n    {\r\n      setPostCode(event.target.value);\r\n    }\r\n\r\n    const addressChanged = (event) =>\r\n    {\r\n      setAddress(event.target.value);\r\n    }\r\n\r\n    const passportChanged = (event) =>\r\n    {\r\n      setPassport(event.target.value);\r\n    }\r\n\r\n    const passport2Changed = (event) =>\r\n    {\r\n      setPassport2(event.target.value);\r\n    }\r\n\r\n    const certificateChanged = (event) =>\r\n    {\r\n      setCertificate(event.target.checked);\r\n    }\r\n\r\n    const antiBodyTestChanged = (event) =>\r\n    {\r\n      setAntiBodyTest(event.target.checked);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }else if (status === 'sample_taken')\r\n      {\r\n        return (\r\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\r\n        );\r\n    \r\n      }else if (status === 'report_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\r\n        );\r\n    \r\n      }else if (status === 'report_cert_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportCertSentLabel}> {`Report & Certificate Sent`} </span>\r\n        );\r\n      }\r\n      else if (status === 'positive')\r\n      {\r\n        return (\r\n          <span  className={classes.PositiveLabel}> {`POSITIVE`} </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n   const downloadForm1 = (id) =>\r\n   {\r\n       PDFService.downloadCovidForm1(id).then( (res) => \r\n       {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n       }).catch( (err) =>\r\n       {\r\n           console.log(err);\r\n       });\r\n   }\r\n\r\n   const downloadForm2 = (id) =>\r\n   {\r\n        PDFService.downloadCovidForm2(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadLabResults = (id) =>\r\n   {\r\n        PDFService.downloadPdfResult(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadCertificate = (id) =>\r\n   {\r\n        PDFService.downloadPdfCert(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setForename(person.forenameCapital);\r\n         setSurnme(person.surnameCapital);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime.toUpperCase());\r\n         setGender(person.gender.toUpperCase());\r\n         setTitle(person.title.toUpperCase());\r\n         setEmail(person.email.toUpperCase());\r\n         setDOB(FormatDateFromString(person.birthDate));\r\n         setTel(person.phone.toUpperCase());\r\n         setPostCode(person.postCode.toUpperCase());\r\n         setAddress(person.address.toUpperCase());\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber)\r\n         {\r\n           setPassport(person.passportNumber.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber2)\r\n         {\r\n           setPassport2(person.passportNumber2.toUpperCase());\r\n         }\r\n        \r\n         setCertificate(person.certificate);\r\n         setAntiBodyTest(person.antiBodyTest);\r\n\r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.certificate = certificate;\r\n          booking.antiBodyTest = antiBodyTest;\r\n          booking.gender = gender;\r\n          booking.title = title;\r\n          booking.birthDate = RevertFormatDateFromString(dob);\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.postCode = postCode;\r\n          booking.address = address;\r\n          booking.passportNumber = passport;\r\n          booking.passportNumber2 = passport2;\r\n          booking.forename = forename;\r\n          booking.surname = surname;\r\n          booking.notes = notes;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateDate(booking.birthDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, dobError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const changeBackToBookingMade = (event, id) =>\r\n   {\r\n     setSaving(true);\r\n     bookingService.changeBackToBookingMade(id).then(res => {\r\n       setSaving(false);\r\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n     }).catch(err => {\r\n       console.log(err);\r\n       setSaving(false);\r\n     })\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                      {person.deleted && (\r\n                          <Tooltip  title=\"This record has been deleted.\">\r\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.forenameCapital} ${person.surnameCapital}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n\r\n\r\n                        <ul className={classes.ul}>\r\n\r\n                        {/* Restore Functionality ******************************************* */}  \r\n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\r\n                                Are you sure you want to restore this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\r\n                                    className={classes.RestoreButton}\r\n                                 >\r\n                                   Restore This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Restore this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n                           {/*  ******************************************************************* */}\r\n\r\n                              {/* Edit Functionality ******************************************* */}\r\n\r\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                            \r\n                            {/* ****************************************************************************************** */}\r\n\r\n\r\n                            {/* Delete Functionality ******************************************* */}\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\r\n                                Are you sure you want to delete this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\r\n                                    className={classes.DeleteButton}\r\n                                 >\r\n                                   Delete This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Delete this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                                 \r\n                            {/* ****************************************************************************************** */}\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                   {FormatDateFromString(person.bookingDate) }\r\n                                  </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>GENDER</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.gender?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={gender}\r\n                                                      onChange = {genderChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>TITLE</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.title?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={title}\r\n                                                      onChange = {titleChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                             \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FORENAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.forenameCapital}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={forename}\r\n                                                      onChange = {forenameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SURNAME</span>\r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.surnameCapital}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={surname}\r\n                                                      onChange = {surnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>D.O.B</span>\r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                            {FormatDateFromString(person.birthDate) }\r\n                                          </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.dobError} \r\n                                                      className={classes.TextBox} \r\n                                                      value={dob}\r\n                                                      onChange = {dobChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>POST CODE</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.postCode?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={postCode}\r\n                                                      onChange = {postCodeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>ADDRESS</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.address?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={address}\r\n                                                      onChange = {addressChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>PASSPORT NO.</span>\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={passport}\r\n                                                      onChange = {passportChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SECOND PASSPORT NO.</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber2?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={passport2}\r\n                                                      onChange = {passport2Changed}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>REQUEST FOR CERTIFICATE</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.certificate ? ( <CheckIcon className={classes.checkIcon}/> ) :  <CloseIcon className={classes.closeIcon}/> }</span>\r\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                    <FormControlLabel className={classes.formControl} \r\n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={certificate} onChange={certificateChanged} />}\r\n                                          label=''\r\n                                        />\r\n                                </span>    \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>REQUEST FOR ANTIBODY TEST</span>\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.antiBodyTest ? <CheckIcon className={classes.checkIcon}/> :  <CloseIcon className={classes.closeIcon}/> }</span>  \r\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                    <FormControlLabel className={classes.formControl} \r\n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={antiBodyTest} onChange={antiBodyTestChanged} />}\r\n                                          label=''\r\n                                        />\r\n                                </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> \r\n                                {getStatusLabel(person.status)} \r\n                                \r\n                                {person.status === \"sample_taken\" &&\r\n                                          !(\r\n                                            editMode.edit && editMode.person._id === person._id\r\n                                          ) && (\r\n                                            <Button \r\n                                                  variant=\"outlined\"\r\n                                                  color=\"primary\"\r\n                                                  disabled = {saving}\r\n                                                  onClick = {event => changeBackToBookingMade(event,person._id)}\r\n\r\n                                                    >\r\n                                              Change Back To Booking Made\r\n                                            </Button>\r\n                                          )}\r\n\r\n                            </li>\r\n      \r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TOTAL CHARGES</span> <span className={calculatePrice(person) <= 199 ? classes.infoDataCharges : classes.infoDataChargesHigher}>{`£${calculatePrice(person)}`}</span>  \r\n                            </li>\r\n\r\n                            <li  hidden={person.deleted} >\r\n                                 <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadForm1(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Registration Form\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li  hidden={person.deleted}>\r\n                                  <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadForm2(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm2(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                    >\r\n                                    Download Lab Form\r\n                                 </Button>\r\n                            </li>\r\n\r\n                            <li hidden={ person.deleted || (person.status !== 'report_sent' && person.status !== 'report_cert_sent') }>\r\n                                 <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadLabResults(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Lab Results\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted || person.status !== 'report_cert_sent'}>\r\n                                 <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadCertificate(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Certificate\r\n                                </Button>\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n//   useEffect( () =>\r\n//   {\r\n//      findRecords();\r\n//   }, [state.findRecords]);\r\n\r\n useEffect ( () => {\r\n    setState(state => ({...state, foundRecords : []}));\r\n }, [])\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function ResendEmailsDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [sending, setSending] = React.useState(false);\r\n  const [sent, setSent] = React.useState(false);\r\n\r\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\r\n\r\n  const [sendingStatus, setSendingStatus] = React.useState(\"\");\r\n\r\n  const [sendingProgress, setSendingProgress] = React.useState(10);\r\n\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const getProgress = (status) => {\r\n    console.log(`status : ${status}`);\r\n\r\n    if (status === \"downloadFailed\") return 10;\r\n    else if (status === \"downloading\") return 30;\r\n    else if (status === \"downloadSuccess\") return 70;\r\n    else if (status === \"sent\") return 100;\r\n    else return 0;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSending(false);\r\n    setSent(false);\r\n    setError(false);\r\n    clearInterval(interval);\r\n    props.handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSendingProgress((prevProgress) =>\r\n      prevProgress >= 100 ? 100 : getProgress(sendingStatus)\r\n    );\r\n  }, [sendingStatus]);\r\n\r\n  const resendFilesClicked = (event) => {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus(\"downloadFailed\");\r\n    setSendJustToPCR(true);\r\n\r\n    BookService.regenerateFilesWithBookingId(props.booking._id)\r\n      .then((res) => {\r\n        interval = setInterval(() => {\r\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\r\n            (res) => {\r\n              if (res.data.status === \"OK\") {\r\n                setSendingStatus(res.data.link.status);\r\n\r\n                if (res.data.link.status === \"sent\") {\r\n                  setSending(false);\r\n                  setSent(true);\r\n                  clearInterval(interval);\r\n                }\r\n              } else if (res.data.status === \"FAILED\") {\r\n                setSending(false);\r\n                setSent(false);\r\n                clearInterval(interval);\r\n                setError(true);\r\n              }\r\n            }\r\n          );\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          setError(true);\r\n          clearInterval(interval);\r\n        }, 60000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSending(false);\r\n      });\r\n  };\r\n\r\n  const resendEmailsClicked = (event) => {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus(\"downloadFailed\");\r\n\r\n    BookService.resendEmailsWithBookingId(props.booking._id)\r\n      .then((res) => {\r\n        interval = setInterval(() => {\r\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\r\n            (res) => {\r\n              if (res.data.status === \"OK\") {\r\n                setSendingStatus(res.data.link.status);\r\n\r\n                if (res.data.link.status === \"sent\") {\r\n                  setSending(false);\r\n                  setSent(true);\r\n                  clearInterval(interval);\r\n                }\r\n              } else if (res.data.status === \"FAILED\") {\r\n                setSending(false);\r\n                setSent(false);\r\n                clearInterval(interval);\r\n                setError(true);\r\n              }\r\n            }\r\n          );\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          setError(true);\r\n          clearInterval(interval);\r\n        }, 60000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSending(false);\r\n      });\r\n  };\r\n\r\n  const cancelResendEmailsClicked = (event) => {\r\n    props.handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <SendIcon style={{ color: \"#2f942e\", fontSize: \"2rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#2f942e\",\r\n                      paddingBottom: \"12px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    RESEND EMAILS{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"230px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                >\r\n                  {!sent && !sending && (\r\n                    <React.Fragment>\r\n                      <Grid item>\r\n                        <div\r\n                          style={{\r\n                            paddingTop: \"5px\",\r\n                            fontSize: \"1rem\",\r\n                            fontWeight: \"500\",\r\n                            color: \"#555\",\r\n                          }}\r\n                        >\r\n                          Do you want to Resend the LAB Report{\" \"}\r\n                          {props.booking.certificate ? \" and Certificate\" : \"\"}{\" \"}\r\n                          Now?\r\n                        </div>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <Button\r\n                          disabled={sending || sent}\r\n                          className={classes.resendButton}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={resendEmailsClicked}\r\n                        >\r\n                          YES ! RESEND THE EMAILS\r\n                        </Button>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <Button\r\n                          disabled={sending || sent}\r\n                          className={classes.cancelButton}\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          onClick={cancelResendEmailsClicked}\r\n                        >\r\n                          NO ! NOT NOW\r\n                        </Button>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <Button\r\n                          disabled={sending || sent}\r\n                          className={classes.resendFilesButton}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={resendFilesClicked}\r\n                        >\r\n                          Just Generate The Files and send to\r\n                          pcrresults@medicalexpressclinic.co.uk\r\n                        </Button>\r\n                      </Grid>\r\n                    </React.Fragment>\r\n                  )}\r\n\r\n                  {error && !sending && !sent && (\r\n                    <Grid item>\r\n                      <Alert\r\n                        style={{\r\n                          marginTop: \"10px\",\r\n                          paddingLeft: \"50px\",\r\n                          paddingRight: \"50px\",\r\n                        }}\r\n                        severity=\"error\"\r\n                      >\r\n                        Error! — Something is wrong with this record!\r\n                      </Alert>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {(sending || sent) && (\r\n                    <Grid item>\r\n                      <div\r\n                        style={{\r\n                          paddingTop: \"50px\",\r\n                          color: \"#2f942e\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"1rem\",\r\n                        }}\r\n                      >\r\n                        {sending && !sent && \"Sending ...\"}\r\n\r\n                        {sent && !sendJustToPCR && (\r\n                          <Alert\r\n                            style={{\r\n                              marginTop: \"10px\",\r\n                              paddingLeft: \"50px\",\r\n                              paddingRight: \"50px\",\r\n                            }}\r\n                            severity=\"success\"\r\n                          >\r\n                            Success! — The LAB Report{\" \"}\r\n                            {props.booking.certificate\r\n                              ? \" and Certificate \"\r\n                              : \" \"}{\" \"}\r\n                            Successfully Sent.\r\n                          </Alert>\r\n                        )}\r\n\r\n                        {sent && sendJustToPCR && (\r\n                          <Alert\r\n                            style={{\r\n                              marginTop: \"10px\",\r\n                              paddingLeft: \"50px\",\r\n                              paddingRight: \"50px\",\r\n                            }}\r\n                            severity=\"success\"\r\n                          >\r\n                            Success! — The LAB Report{\" \"}\r\n                            {props.booking.certificate\r\n                              ? \" and Certificate \"\r\n                              : \" \"}{\" \"}\r\n                            Successfully Sent Just to\r\n                            pcrresults@medicalexpressclinic.co.uk .\r\n                          </Alert>\r\n                        )}\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                {(sending || sent) && (\r\n                  <React.Fragment>\r\n                    <div\r\n                      style={{\r\n                        marginTop: \"10px\",\r\n                        width: \"50%\",\r\n                        marginLeft: \"27%\",\r\n                      }}\r\n                    >\r\n                      <LinearProgressWithLabel\r\n                        variant=\"determinate\"\r\n                        color=\"primary\"\r\n                        value={sendingProgress}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        paddingTop: \"30px\",\r\n                        color: \"#2f942e\",\r\n                        fontWeight: \"600\",\r\n                        fontSize: \"1rem\",\r\n                        marginLeft: \"45%\",\r\n                      }}\r\n                    >\r\n                      {sending && !sent && \"PLEASE WAIT ...\"}\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, {useEffect, useRef, useState} from 'react';\r\nimport BookService from './services/BookService';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Backdrop, Button, Checkbox, CircularProgress, Divider, FormControlLabel, Grid, InputLabel, Link, makeStyles, MenuItem, Select, TextField, Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { corporates } from './Corporates';\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  archiveButton: {\r\n\r\n  },\r\n\r\n  smartMatchButton: {\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    marginRight : \"10px\"\r\n    // padding: \"10px\"  \r\n  },\r\n\r\n  infoTitle:  {\r\n    fontWeight: \"400\"\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\"\r\n  },\r\n\r\n  matchButton:\r\n  {\r\n    marginTop: \"30px\",\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendButton:\r\n  {\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendFilesButton:{\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  cancelButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"90px\",\r\n    paddingRight: \"90px\"   \r\n  },\r\n  \r\n  \r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#2f942e',\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function PayDialog(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n  const [paymentMethod, setPaymentMethod] = useState('credit card');\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const paymentMethodChanged = (event) =>\r\n  {\r\n    setPaymentMethod(event.target.value);\r\n  }\r\n\r\n  const handleClose = () =>\r\n  {\r\n      if (saving)\r\n        return;\r\n\r\n      props.handleClose();  \r\n      setPaymentMethod('credit card');\r\n      setCorporate(corporates[0]);\r\n      setSaving(false);\r\n  }\r\n\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n\r\n  const payClicked = async () =>\r\n  {\r\n    setSaving(true);\r\n\r\n    try\r\n    {\r\n         await BookService.payBooking(props.booking._id,paymentMethod, paymentMethod === 'corporate' ? corporate : '');\r\n         setSaving(false);\r\n         setState(state => ({...state, bookingPayChanged : !state.bookingPayChanged ? true : false}));\r\n         handleClose();\r\n    }\r\n    catch(err)\r\n    {\r\n        console.error(err);\r\n        setSaving(false);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n        {props.booking && ( \r\n\r\n                <React.Fragment>\r\n<Dialog\r\nmaxWidth=\"800px\"\r\nopen={props.open}\r\nonClose={handleClose}\r\nPaperComponent={PaperComponent}\r\naria-labelledby=\"form-dialog-title\"\r\n>\r\n<DialogTitle id=\"draggable-dialog-title\">\r\n  <Grid\r\n    container\r\n    spacing={2}\r\n    direction=\"row\"\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n  >\r\n    <Grid item>\r\n      <CreditCardIcon\r\n        style={{ color: \"#f50057\", fontSize: \"3rem\" }}\r\n      />\r\n    </Grid>\r\n\r\n    <Grid item>\r\n      <div\r\n        style={{\r\n          color: \"#f50057\",\r\n          paddingBottom: \"10px\",\r\n          fontWeight: \"800\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        PAY the CHARGE{\" \"}\r\n      </div>\r\n    </Grid>\r\n  </Grid>\r\n\r\n  <Divider />\r\n</DialogTitle>\r\n<DialogContent>\r\n  <div\r\n    style={{\r\n      height: \"270px\",\r\n    \r\n    }}\r\n  >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          spacing = {2}\r\n          alignItems=\"flex-start\"\r\n        >\r\n            <Grid item>\r\n               <div style={{fontSize: \"17px\"}}> How do you want to pay? </div> \r\n            </Grid>\r\n\r\n            <Grid item>\r\n      \r\n            <FormControl component=\"fieldset\">\r\n                \r\n                <RadioGroup aria-label=\"paymentMethod\" name=\"paymentMethod\" value={paymentMethod} onChange={paymentMethodChanged}>\r\n                    <FormControlLabel value=\"credit card\" control={<Radio />} label=\"Credit Card\" />\r\n                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\r\n                    <FormControlLabel value=\"corporate\" control={<Radio />} label=\"Corporate\" />\r\n                </RadioGroup>\r\n\r\n                { paymentMethod === 'corporate' && (\r\n\r\n                        <FormControl style={{marginTop: \"10px\"}} className={classes.formControl}>\r\n                        <Select\r\n                            labelId=\"select-corporate\"\r\n                            id=\"select-corporate-id\"\r\n                            value={corporate}\r\n                            onChange={corporateChanged}\r\n                        >\r\n                        {\r\n                        corporates.map(element => (\r\n                                    <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                        ))\r\n                        }     \r\n\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                )}\r\n              \r\n\r\n                </FormControl>\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n        <Grid item>\r\n           \r\n    </Grid>\r\n\r\n    <div style={{position:\"absolute\", bottom:\"20px\", right:\"20px\"}}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"center\"\r\n                spacing = {1}\r\n            >\r\n               \r\n                <Grid item>\r\n                    <Button onClick={handleClose}  style= {{width : '100px'}} disabled={saving}>\r\n                        back\r\n                    </Button>\r\n                        \r\n                </Grid>\r\n                <Grid item>\r\n                    <Button \r\n                        onClick = {payClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style= {{width : '100px'}}\r\n                        disabled={saving}\r\n                    >\r\n                        Pay\r\n                    </Button>\r\n                </Grid>  \r\n          </Grid>\r\n\r\n    </div>\r\n\r\n    \r\n  </div>\r\n\r\n             <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n\r\n</DialogContent>\r\n</Dialog>\r\n\r\n\r\n\r\n\r\n</React.Fragment>\r\n\r\n\r\n        )}\r\n  \r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport dateformat from \"dateformat\";\r\n\r\nconst addMinutes = (date, minutes) => {\r\n  date = new Date(date);\r\n  return new Date(date.getTime() + minutes * 60 * 1000);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  itemTitle: {\r\n    fontWeight: \"500\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  itemData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"600\",\r\n    color: \"#127512\",\r\n  },\r\n}));\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function TimeStampDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [linkTimeStamp, setLinkTimeStamp] = React.useState(null);\r\n\r\n  const handleClose = () => {\r\n    setLinkTimeStamp(null);\r\n\r\n    props.handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      if (props.booking.filename && props.booking.filename.length > 0) {\r\n        BookService.getLinkDetailsWithBookingId(props.booking._id).then(\r\n          (res) => {\r\n            if (res.data.status === \"OK\") {\r\n              setLinkTimeStamp(res.data.link.timeStamp);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const getDateFromBooking = (booking) => {\r\n    let date = new Date(booking.bookingDate);\r\n    date.setHours(booking.bookingTimeNormalized.substr(0, 2));\r\n    date.setMinutes(booking.bookingTimeNormalized.substr(3, 2));\r\n    date.setSeconds(0);\r\n    date.setMilliseconds(0);\r\n    return date;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"sm\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <HistoryIcon style={{ color: \"#f50057\", fontSize: \"2rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"12px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Audit Trail{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"370px\",\r\n              \r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  spacing={4}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      PATIENT BOOKING TIMESTAMP :{\" \"}\r\n                    </span>\r\n                    <span className={classes.itemData}>\r\n                      {\" \"}\r\n                      {dateformat(props.booking.timeStamp, \"isoDateTime\")}{\" \"}\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      BOOKED DATE AND TIME :{\" \"}\r\n                    </span>\r\n                    <span className={classes.itemData}>\r\n                      {dateformat(\r\n                        getDateFromBooking(props.booking),\r\n                        \"isoDateTime\"\r\n                      )}\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP ATTENDED :{\" \"}\r\n                    </span>\r\n                    {props.booking.samplingTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          props.booking.samplingTimeStamp,\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - SAMPLE TAKEN :{\" \"}\r\n                    </span>\r\n                    {props.booking.samplingTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          addMinutes(props.booking.samplingTimeStamp, 5),\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - COLLECTED BY COURIER :{\" \"}\r\n                    </span>\r\n                    {props.booking.samplingTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          addMinutes(props.booking.samplingTimeStamp, 35),\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - RESULTS RECEIVED :{\" \"}\r\n                    </span>\r\n                    {linkTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(linkTimeStamp, \"isoDateTime\")}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - SENT TO PATIENT :{\" \"}\r\n                    </span>\r\n                    {linkTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          addMinutes(linkTimeStamp, 5),\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"default\">\r\n                Back\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, Checkbox, DialogActions, DialogContentText, FormControlLabel, IconButton,  TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Slide from '@material-ui/core/Slide'  \r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BookService from './services/BookService';\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\nimport ResendEmailsDialog from './ResendEmailsDialog';\r\nimport PayDialog from './PayDialog';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n\r\n\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport TimeStampDialog from './TimeStampDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\"   \r\n  },\r\n\r\n  ResendEmailsButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  PayButton:\r\n  {\r\n    marginLeft : \"83px\",\r\n    paddingLeft: \"30px\",\r\n    paddingRight: \"30px\"   \r\n  },\r\n\r\n  PayLabel:\r\n  {\r\n    marginLeft : \"20px\",\r\n    \r\n    color : \"#2f942e\",\r\n    fontWeight : \"500\",\r\n    textAlign: 'center'\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#eee\",\r\n    color: \"#333\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\"   \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\"\r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  checkIconSmall:{\r\n    color: \"green\",\r\n    paddingTop: \"5px\"   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#alert-dialog-slide-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function BookingDialog(props) {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n  \r\n    const [openResendDialog, setOpenResendDialog] = React.useState(false);\r\n    const [openPayDialog, setOpenPayDialog] = React.useState(false);\r\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [gender, setGender] = React.useState('');\r\n    const [title, setTitle] = React.useState('');\r\n    const [forename, setForename] = React.useState('');\r\n    const [surname, setSurnme] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [dob, setDOB] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [postCode, setPostCode] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n    const [passport, setPassport] = React.useState('');\r\n    const [passport2, setPassport2] = React.useState('');\r\n    const [certificate, setCertificate] = React.useState(false);\r\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\r\n\r\n    const [refreshData, setRefreshData] = React.useState(false);\r\n\r\n    const [booking, setBooking] = React.useState(null);\r\n\r\n    const [recordChanged, setRecordChanged] = React.useState(false);\r\n\r\n    const [fieldChanged, setFieldChanged] = React.useState(false);\r\n\r\n    const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\r\n\r\n    const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\r\n\r\n    const handleCloseTimeStampDialog = () =>\r\n    {\r\n      setOpenTimeStampDialog(false);\r\n      setSelectedBooking(null);\r\n    }\r\n\r\n    const handleCloseUndoPayDialog = () =>\r\n    {\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n\r\n    const handleCloseResendDialog = () =>\r\n    {\r\n      setOpenResendDialog(false);\r\n      setSelectedBooking(null);\r\n    }\r\n\r\n    const handleClosePayDialog = () =>\r\n    {\r\n      setOpenPayDialog(false);\r\n      setSelectedBooking(null);\r\n    }\r\n\r\n    useEffect( () => {\r\n\r\n      if (booking)\r\n      {\r\n        const isChanged = (             \r\n           bookingDate !== FormatDateFromString(booking.bookingDate) \r\n        || bookingTime !== booking.bookingTime\r\n        || gender !== booking.gender\r\n        || forename !== booking.forenameCapital\r\n        || surname !== booking.surnameCapital\r\n        || title !== booking.title\r\n        || email !== booking.email\r\n        || dob !== FormatDateFromString(booking.birthDate)\r\n        || tel !== booking.phone\r\n        || postCode !== booking.postCode\r\n        || address !== booking.address\r\n        || passport !== booking.passportNumber\r\n        || passport2 !== booking.passportNumber2\r\n        || certificate !== booking.certificate\r\n        || antiBodyTest !== booking.antiBodyTest\r\n        );\r\n\r\n        setRecordChanged(isChanged);\r\n\r\n  \r\n\r\n      }\r\n    }, [fieldChanged]);\r\n\r\n    useEffect( () => {\r\n      if (!props.open)\r\n      {\r\n        setTimeout(() => {\r\n          setEditMode({edit: false, person: null});\r\n          setRecordChanged(false);\r\n        }, 500);\r\n       \r\n      }\r\n    }, [props.open])\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const genderChanged = (event) =>\r\n    {\r\n      setGender(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const titleChanged = (event) =>\r\n    {\r\n      setTitle(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const forenameChanged = (event) =>\r\n    {\r\n      setForename(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const surnameChanged = (event) =>\r\n    {\r\n      setSurnme(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const dobChanged = (event) =>\r\n    {\r\n      setDOB(event.target.value);\r\n      setValidationError({...validationError, dobError : false});\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const postCodeChanged = (event) =>\r\n    {\r\n      setPostCode(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const addressChanged = (event) =>\r\n    {\r\n      setAddress(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const passportChanged = (event) =>\r\n    {\r\n      setPassport(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const passport2Changed = (event) =>\r\n    {\r\n      setPassport2(event.target.value);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const certificateChanged = (event) =>\r\n    {\r\n      setCertificate(event.target.checked);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n    const antiBodyTestChanged = (event) =>\r\n    {\r\n      setAntiBodyTest(event.target.checked);\r\n      setFieldChanged(!fieldChanged);\r\n    }\r\n\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }else if (status === 'sample_taken')\r\n      {\r\n        return (\r\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\r\n        );\r\n    \r\n      }else if (status === 'report_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\r\n        );\r\n    \r\n      }else if (status === 'report_cert_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportCertSentLabel}> {`Report & Certificate Sent`} </span>\r\n        );\r\n      }\r\n      else if (status === 'positive')\r\n      {\r\n        return (\r\n          <span  className={classes.PositiveLabel}> {`POSITIVE`} </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n   const downloadForm1 = (id) =>\r\n   {\r\n       PDFService.downloadCovidForm1(id).then( (res) => \r\n       {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n       }).catch( (err) =>\r\n       {\r\n           console.log(err);\r\n       });\r\n   }\r\n\r\n   const downloadForm2 = (id) =>\r\n   {\r\n        PDFService.downloadCovidForm2(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        setRefreshData(!refreshData);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadLabResults = (id) =>\r\n   {\r\n        PDFService.downloadPdfResult(id).then( (res) => \r\n        {       \r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        \r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadCertificate = (id) =>\r\n   {\r\n        PDFService.downloadPdfCert(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n      \r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setForename(person.forenameCapital);\r\n         setSurnme(person.surnameCapital);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime.toUpperCase());\r\n         setGender(person.gender.toUpperCase());\r\n         setTitle(person.title.toUpperCase());\r\n         setEmail(person.email.toUpperCase());\r\n         setDOB(FormatDateFromString(person.birthDate));\r\n         setTel(person.phone.toUpperCase());\r\n         setPostCode(person.postCode.toUpperCase());\r\n         setAddress(person.address.toUpperCase());\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber)\r\n         {\r\n           setPassport(person.passportNumber.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber2)\r\n         {\r\n           setPassport2(person.passportNumber2.toUpperCase());\r\n         }\r\n        \r\n         setCertificate(person.certificate);\r\n         setAntiBodyTest(person.antiBodyTest);\r\n\r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n         setRecordChanged(false);\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.certificate = certificate;\r\n          booking.antiBodyTest = antiBodyTest;\r\n          booking.gender = gender;\r\n          booking.title = title;\r\n          booking.birthDate = RevertFormatDateFromString(dob);\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.postCode = postCode;\r\n          booking.address = address;\r\n          booking.passportNumber = passport;\r\n          booking.passportNumber2 = passport2;\r\n          booking.forename = forename;\r\n          booking.surname = surname;\r\n          booking.notes = notes;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateDate(booking.birthDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, dobError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setRefreshData(!refreshData);\r\n        \r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setRefreshData(!refreshData);\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setRefreshData(!refreshData);\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const changeBackToBookingMade = (event, id) =>\r\n  {\r\n    setSaving(true);\r\n    BookService.changeBackToBookingMade(id).then(res => {\r\n      setSaving(false);\r\n      setRefreshData(!refreshData);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setSaving(false);\r\n    })\r\n  }\r\n\r\n  const resendEmails = (event, id) =>\r\n  {\r\n    setSelectedBooking(booking);\r\n    setOpenResendDialog(true);\r\n  }\r\n\r\n  const Pay = (event, id) =>\r\n  {\r\n    setSelectedBooking(booking);\r\n    setOpenPayDialog(true);\r\n  }\r\n\r\n  useEffect( () => \r\n  {\r\n    if (props.booking)\r\n    {\r\n      BookService.getBookingById(props.booking._id).then( res => {\r\n        setBooking(res.data);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n      setState(state => ({...state, bookingDialogDataChanged : !state.bookingDialogDataChanged ? true : false}));\r\n    }\r\n\r\n  } , [refreshData,state.bookingPayChanged]);\r\n\r\n\r\n  useEffect( () => {\r\n    if (props.booking)\r\n    {\r\n      setBooking(props.booking);\r\n    }\r\n\r\n  }, [props.booking]);\r\n\r\n  const undoPaymentClicked = async () =>\r\n  {\r\n    setSaving(true);\r\n    try{\r\n      await BookService.unPayBooking(booking._id);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n      setRefreshData(!refreshData);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={props.onClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-slide-title\" style={booking.tr ? {backgroundColor:'#7e0082', color: \"#fff\"} : {}}>\r\n\r\n              <div style={{position:\"absolute\", top: \"25x\", left: \"25px\"}}>\r\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\r\n                    <IconButton onClick={() => {navigator.clipboard.writeText(`https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/pcr/${booking._id}`); setCopied(true); setTimeout(() => { \r\n                      setCopied(false)\r\n                    }, 1500);}}\r\n\r\n                           aria-label=\"delete\" \r\n                           className={classes.margin} \r\n                           size=\"small\">\r\n                          <FileCopyOutlinedIcon style={booking.tr ? { color: \"#ddd\"} : {}} fontSize=\"14px\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n          \r\n                  <span hidden={!copied} style={{fontSize:\"12px\", transition: \"all 1s ease-in\"}}> Copied </span>\r\n               \r\n              </div>\r\n              \r\n              {booking.tr && (\r\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\r\n                     TR\r\n                </div>\r\n\r\n              )}\r\n              \r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={\r\n                      booking.deleted\r\n                        ? {\r\n                            paddingBottom: \"5px\",\r\n                            textDecoration: \"line-through\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {`${booking.forenameCapital} ${booking.surnameCapital}`}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {booking.deleted && (\r\n                  <Grid item>\r\n                    <Tooltip title=\"This record has been deleted.\">\r\n                      <DeleteIcon\r\n                        style={booking.tr ? \r\n                          {\r\n                            padding: 0,\r\n                            margin: 0,\r\n                            color: \"#fff\",\r\n                            fontSize: 25,\r\n                          }\r\n                          \r\n                          : {\r\n                          padding: 0,\r\n                          margin: 0,\r\n                          color: \"#333\",\r\n                          fontSize: 25,\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  minHeight: \"600px\",\r\n                  maxHeight: \"600px\",\r\n                  minWidth: \"500px\",\r\n                  maxWidth: \"800px\",\r\n                  paddingTop: \"20px\",\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={12} key={`panel0`}>\r\n                  <div className={classes.infoDetails}>\r\n                    <ul className={classes.ul}>\r\n                      {/* Restore Functionality ******************************************* */}\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"500\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to restore this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !booking.deleted ||\r\n                          (restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.RestoreButton}\r\n                        >\r\n                          Restore This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Restore this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/*  ******************************************************************* */}\r\n\r\n                      {/* Edit Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          deleteMode.delete ||\r\n                          (editMode.edit && editMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleEditModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.EditButton}\r\n                        >\r\n                          Edit Booking Info\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={saving || !recordChanged}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={saving}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      {/* Delete Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to delete this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          props.deleteButtonDisabled ||\r\n                          booking.deleted ||\r\n                          editMode.edit ||\r\n                          (deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.DeleteButton}\r\n                        >\r\n                          Delete This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Delete this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>BOOKED DATE</span>\r\n\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {FormatDateFromString(booking.bookingDate)}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            error={validationError.bookingDateError}\r\n                            className={classes.TextBox}\r\n                            value={bookingDate}\r\n                            onChange={bookingDateChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>BOOKED TIME</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.bookingTime.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            error={validationError.bookingTimeError}\r\n                            className={classes.TextBox}\r\n                            value={bookingTime}\r\n                            onChange={bookingTimeChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>GENDER</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.gender?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={gender}\r\n                            onChange={genderChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>TITLE</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.title?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={title}\r\n                            onChange={titleChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>FORENAME</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.forenameCapital}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={forename}\r\n                            onChange={forenameChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>SURNAME</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.surnameCapital}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={surname}\r\n                            onChange={surnameChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>EMAIL</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.email?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={email}\r\n                            onChange={emailChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>D.O.B</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {FormatDateFromString(booking.birthDate)}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            error={validationError.dobError}\r\n                            className={classes.TextBox}\r\n                            value={dob}\r\n                            onChange={dobChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>TEL</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.phone?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={tel}\r\n                            onChange={telChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>POST CODE</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.postCode?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={postCode}\r\n                            onChange={postCodeChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>ADDRESS</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.address?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={address}\r\n                            onChange={addressChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      {booking.selfIsolate && (\r\n                                    <React.Fragment>\r\n                                            <li className={classes.li}>\r\n                                            <span className={classes.infoTitle}>Self-Isolate Post Code</span> <span className={classes.infoData}>{booking.postCodeSI}</span>  \r\n                                            </li>\r\n                                            <li className={classes.li}>\r\n                                            <span className={classes.infoTitle}>Self-Isolate Address</span> <span className={classes.infoData}>{booking.addressSI}</span>  \r\n                                            </li>\r\n                                    </React.Fragment>\r\n                      )}\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>PASSPORT NO.</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.passportNumber?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={passport}\r\n                            onChange={passportChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                                     <span className={classes.infoTitle}>NHS Number</span> <span className={classes.infoData}>{booking.NHSNumber ?? '-'}</span>  \r\n                                  </li>\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                          <span className={classes.infoTitle}>Ethnicity</span> <span className={classes.infoData}>{booking.ethnicity}</span>  \r\n                      </li>\r\n\r\n                    \r\n\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                          <span className={classes.infoTitle}>Arrival Date</span> <span className={classes.infoData}>{booking.arrivalDate}</span>  \r\n                      </li>\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                          <span className={classes.infoTitle}>Flight Number</span> <span className={classes.infoData}>{booking.flightNumber}</span>  \r\n                      </li>\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                          <span className={classes.infoTitle}>Last Departed Date</span> <span className={classes.infoData}>{booking.lastDepartedDate}</span>  \r\n                      </li>\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                          <span className={classes.infoTitle}>Travelling From</span> <span className={classes.infoData}>{booking.travellingFrom}</span>  \r\n                      </li>\r\n\r\n\r\n                      <li hidden={booking.tr} className={classes.li}>\r\n                        <span className={classes.infoTitle}>\r\n                          SECOND PASSPORT NO.\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.passportNumber2?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={passport2}\r\n                            onChange={passport2Changed}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li hidden={booking.tr} className={classes.li}>\r\n                        <span className={classes.infoTitle}>\r\n                          REQUEST FOR CERTIFICATE\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.certificate ? (\r\n                            <CheckIcon className={classes.checkIcon} />\r\n                          ) : (\r\n                            <CloseIcon className={classes.closeIcon} />\r\n                          )}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <FormControlLabel\r\n                            className={classes.formControl}\r\n                            control={\r\n                              <Checkbox\r\n                                className={classes.formControl}\r\n                                color=\"secondary\"\r\n                                name=\"certificate\"\r\n                                checked={certificate}\r\n                                onChange={certificateChanged}\r\n                              />\r\n                            }\r\n                            label=\"\"\r\n                          />\r\n                        </span>\r\n                      </li>\r\n                      <li hidden={booking.tr} className={classes.li}>\r\n                        <span className={classes.infoTitle}>\r\n                          REQUEST FOR ANTIBODY TEST\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.antiBodyTest ? (\r\n                            <CheckIcon className={classes.checkIcon} />\r\n                          ) : (\r\n                            <CloseIcon className={classes.closeIcon} />\r\n                          )}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <FormControlLabel\r\n                            className={classes.formControl}\r\n                            control={\r\n                              <Checkbox\r\n                                className={classes.formControl}\r\n                                color=\"secondary\"\r\n                                name=\"certificate\"\r\n                                checked={antiBodyTest}\r\n                                onChange={antiBodyTestChanged}\r\n                              />\r\n                            }\r\n                            label=\"\"\r\n                          />\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\r\n                        {getStatusLabel(booking.status)}\r\n                        {booking.status === \"sample_taken\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) && (\r\n                            <Button \r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  disabled = {saving}\r\n                                  onClick = {event => changeBackToBookingMade(event,booking._id)}\r\n\r\n                                     >\r\n                              Change Back To Booking Made\r\n                            </Button>\r\n                          )}\r\n\r\n                          {(booking.status === \"report_sent\" || booking.status === \"report_cert_sent\" ||  booking.status === \"positive\") &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) && (\r\n                            <Button \r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  className = {classes.ResendEmailsButton}\r\n                                  onClick = {event => resendEmails(event,booking._id)}\r\n\r\n                                     >\r\n                              Resend emails\r\n                            </Button>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\r\n                        <span\r\n                          className={\r\n                            calculatePrice(booking) <= 199\r\n                              ? classes.infoDataCharges\r\n                              : classes.infoDataChargesHigher\r\n                          }\r\n                        >{`£${calculatePrice(booking)}`}</span>\r\n\r\n                          {\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) && (!booking.paid) && (!booking.deleted) && (\r\n                            <Button \r\n                                  variant=\"outlined\"\r\n                                  color=\"secondary\"\r\n                                  className = {classes.PayButton}\r\n                                  onClick = {event => Pay(event,booking._id)}\r\n\r\n                                     >\r\n                              Pay\r\n                            </Button>\r\n                          )}\r\n\r\n                          {\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) && (booking.paid) && (\r\n                                 <React.Fragment>\r\n                                      <span className={classes.PayLabel}>  <CheckIcon className={classes.checkIconSmall} /> Paid by {booking.paidBy} \r\n                                         {booking.paidBy === 'corporate' ? ` \"${booking.corporate}\" ` : ''}\r\n                                      </span>\r\n\r\n                                      <Tooltip title='Undo Payment'>\r\n                                          <IconButton onClick={() => setOpenUndoPayDialog(true)}>\r\n                                            <UndoIcon style={{color: 'red'}}/>\r\n                                          </IconButton>\r\n                                      </Tooltip>\r\n\r\n                                </React.Fragment>                    \r\n                          )}\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted}>\r\n                        <Button\r\n                          startIcon = {<PrintIcon/>}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadForm1(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Registration Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted}>\r\n                        <Button\r\n                          startIcon = {<PrintIcon/>}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadForm2(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm2(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Lab Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          (booking.status !== \"report_sent\" &&\r\n                            booking.status !== \"report_cert_sent\" &&\r\n                            booking.status !== \"positive\"\r\n                            )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          startIcon = {<PrintIcon/>}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadLabResults(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Lab Results\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          (booking.status !== \"report_cert_sent\" && booking.status !== \"positive\")\r\n                        }\r\n                      >\r\n                        <Button\r\n                          startIcon = {<PrintIcon/>}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadCertificate(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Certificate\r\n                        </Button>\r\n                      </li>\r\n\r\n\r\n                      <li>\r\n\r\n                        <Button\r\n                          startIcon = {<HistoryIcon/>}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            setSelectedBooking(booking);\r\n                            setOpenTimeStampDialog(true);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Show Audit Trail\r\n                        </Button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving || deleting || restoring}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n\r\n\r\n            <ResendEmailsDialog booking={selectedBooking} open={openResendDialog} handleClose={handleCloseResendDialog} />\r\n            <PayDialog booking={selectedBooking} open={openPayDialog} handleClose={handleClosePayDialog} />\r\n            <TimeStampDialog booking={selectedBooking} open={openTimeStampDialog} handleClose={handleCloseTimeStampDialog} />\r\n\r\n          </Dialog>\r\n\r\n\r\n          <Dialog\r\n              open={openUndoPayDialog}\r\n              onClose={handleCloseUndoPayDialog}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle style={{color:\"#999\"}} id=\"alert-dialog-title\">{\"Undo Payment\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText style={{color:\"#333\", fontWeight:\"400\"}} id=\"alert-dialog-description\">\r\n                  Are you sure you want to undo payment for this booking?  \r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleCloseUndoPayDialog} color=\"default\">\r\n                  Back\r\n                </Button>\r\n                <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\r\n                  Yes, Undo Payment\r\n                </Button>\r\n              </DialogActions>\r\n      </Dialog>\r\n\r\n        \r\n\r\n        </React.Fragment>\r\n      )}\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BookingDialog from './BookingDialog';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as dateformat from 'dateformat';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PriceCalculator from './PriceCalculator';\r\nimport { corporates } from './Corporates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel:{\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color : \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\"\r\n  },\r\n\r\n  ExportToExcelButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n   \r\n  },\r\n\r\n  ExportToExcelButtonInline:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n    cursor: \"pointer\",\r\n    padding: \"10px\"\r\n   \r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n},\r\n\r\nth: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntd: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntopSelect: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 80,\r\n}\r\n\r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else if (str === 'live')\r\n  {\r\n    return `Live Bookings`;\r\n  }else if (str === 'completed')\r\n  {\r\n    return `Completed Bookings`;\r\n  }else if (str === 'positive')\r\n  {\r\n    return `Positive Results`;\r\n  }else if (str === 'deleted')\r\n  {\r\n    return `Deleted Records`;\r\n  }else if (str === 'late')\r\n  {\r\n    return `40 Hours Late`;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n}\r\n\r\nconst getTableIcon = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'old')\r\n  {\r\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'future')\r\n  {\r\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'recent')\r\n  {\r\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'live')\r\n  {\r\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'completed')\r\n  {\r\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'positive')\r\n  {\r\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\r\n  }else if (str === 'deleted')\r\n  {\r\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'late')\r\n  {\r\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [topCount, setTopCount] = React.useState(25)\r\n  const topCountChanged = (event) =>\r\n  {\r\n    setTopCount(event.target.value)\r\n    loadData(event.target.value)\r\n  }\r\n  \r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () =>\r\n  {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  }\r\n\r\n\r\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const[chkDate, setChkDate] = useState(true);\r\n  const[chkForename, setChkForename] = useState(true);\r\n  const[chkSurname, setChkSurname] = useState(true);\r\n  const[chkDOB, setChkDOB] = useState(true);\r\n  const[chkEmail, setChkEmail] = useState(true);\r\n  const[chkTel, setChkTel] = useState(true);\r\n  const[chkCertificate, setChkCertidicate] = useState(true);\r\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const[chkextRef, setChkExtRef] = useState(true);\r\n  const[chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) =>\r\n  {\r\n    setJustCorporate(event.target.checked);\r\n  }\r\n  \r\n\r\n  const chkDateChanged = (event) =>\r\n  {\r\n    setChkDate(event.target.checked);\r\n  }\r\n\r\n  const chkForenameChanged = (event) =>\r\n  {\r\n    setChkForename(event.target.checked);\r\n  }\r\n\r\n  const chkSurnameChanged = (event) =>\r\n  {\r\n    setChkSurname(event.target.checked);\r\n  }\r\n\r\n  const chkDOBChanged = (event) =>\r\n  {\r\n    setChkDOB(event.target.checked);\r\n  }\r\n\r\n  const chkEmailChanged = (event) =>\r\n  {\r\n    setChkEmail(event.target.checked);\r\n  }\r\n\r\n  const chkTelChanged = (event) =>\r\n  {\r\n    setChkTel(event.target.checked);\r\n  }\r\n\r\n  const chkCertificateChanged = (event) =>\r\n  {\r\n    setChkCertidicate(event.target.checked);\r\n  }\r\n\r\n  const chkAntiBodyTestChanged = (event) =>\r\n  {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  }\r\n\r\n  const chkextRefChanged = (event) =>\r\n  {\r\n    setChkExtRef(event.target.checked);\r\n  }\r\n\r\n  const chkPriceChanged = (event) =>\r\n  {\r\n    setChkPrice(event.target.checked);\r\n  }\r\n\r\n\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === 'recent')\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n\r\n           <React.Fragment>\r\n\r\n                {params.getValue('tr') ? \r\n                \r\n                  <span style={{ position:\"absolute\", fontSize:\"12px\", fontWeight:\"600\", color:\"#7e0082\"}}>\r\n                    TR\r\n                  </span> \r\n                \r\n                : \r\n                \r\n                ''}\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n\r\n          \r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \r\n        return formatTimeStamp(params.value);\r\n        }\r\n      },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n  \r\n          }else if (params.value === 'sample_taken')\r\n          {\r\n            return (\r\n              <span  className={classes.SampleTakenLabel}>  ST </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportSentLabel}>  RS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_cert_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportCertSentLabel}>  RCS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'positive')\r\n          {\r\n            return (\r\n              <span  className={classes.PositiveLabel}> POS </span>\r\n            );\r\n          }\r\n          \r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink}\r\n              //  onClick={\r\n              //   () => {\r\n              //     console.log(params.value);\r\n  \r\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n              //     setState(state => ({...state, ref : params.value}));\r\n              //     setState(state => ({...state, refError : false})); \r\n              //     setState(state => ({...state, foundRecords : []}));\r\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n              //   }\r\n              // }\r\n              \r\n              >\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'forenameCapital', headerName: 'Forename', width: 150 },\r\n      { field: 'surnameCapital', headerName: 'Surname', width: 150 },\r\n      { field: 'birthDate', headerName: 'D.O.B', width: 110, valueFormatter: (params) => { \r\n        return FormatDateFromString(params.value);\r\n         }\r\n      },\r\n      { field: 'email', headerName: 'Email', width: 200 , valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      }},\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'passportNumber', headerName: 'Passport No.', width: 250, \r\n      //  valueGetter: (params) => {\r\n      //   const pass2 = params.getValue('passportNumber2');\r\n      //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\r\n      //   {\r\n      //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\r\n      //   }\r\n      //   else\r\n      //   {\r\n      //     return params.getValue('passportNumber')?.toUpperCase();\r\n      //   }\r\n      // }\r\n    },\r\n      { field: 'certificate', headerName: 'Certificate', width: 120,  renderCell: (params) => {\r\n          return params.value ? (\r\n            <CheckIcon className={classes.checkIcon}/>\r\n          ) :\r\n          (\r\n            <CloseIcon className={classes.closeIcon}/> \r\n          );\r\n      } },\r\n      { field: 'antiBodyTest', headerName: 'Antibody Test', width: 120,  renderCell: (params) => {\r\n        return params.value ? (\r\n          <CheckIcon className={classes.checkIcon}/>\r\n        ) :\r\n        (\r\n        <  CloseIcon className={classes.closeIcon}/> \r\n        );\r\n    } },\r\n      { field: 'postCode', headerName: 'Post Code', width: 150, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      { field: 'address', headerName: 'Address', width: 500, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      // { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n\r\n  }\r\n  else\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n            <React.Fragment>\r\n\r\n                {params.getValue('tr') ? \r\n                \r\n                  <span style={{ position:\"absolute\", fontSize:\"12px\", fontWeight:\"600\", color:\"#7e0082\"}}>\r\n                    TR\r\n                  </span> \r\n                \r\n                : \r\n                \r\n                ''}\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n               if (!params.value)\r\n               {\r\n                  return ( <CloseIcon className={classes.closeIcon}/> );\r\n               }\r\n               else\r\n               {\r\n                  if (params.getValue('paidBy') === 'credit card')\r\n                  {\r\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'cash')\r\n                  {\r\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'corporate')\r\n                  {\r\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else\r\n                  {\r\n                    return '';  \r\n                  }\r\n               }\r\n         }\r\n        },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n  \r\n          }else if (params.value === 'sample_taken')\r\n          {\r\n            return (\r\n              <span  className={classes.SampleTakenLabel}>  ST </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportSentLabel}>  RS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_cert_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportCertSentLabel}>  RCS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'positive')\r\n          {\r\n            return (\r\n              <span  className={classes.PositiveLabel}> POS </span>\r\n            );\r\n          }\r\n          \r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink} onClick={\r\n                () => {\r\n                  // console.log(params.value);\r\n  \r\n                  // setState(state => ({...state, currentMenuIndex: getMenuIndex(`findByRef`)}));\r\n                  // setState(state => ({...state, ref : params.value}));\r\n                  // setState(state => ({...state, refError : false})); \r\n                  // setState(state => ({...state, foundRecords : []}));\r\n                  // setState(state => ({...state, findRecords : !state.findRecords}));\r\n                }\r\n              }>\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'forenameCapital', headerName: 'Forename', width: 150 },\r\n      { field: 'surnameCapital', headerName: 'Surname', width: 150 },\r\n      { field: 'birthDate', headerName: 'D.O.B', width: 110, valueFormatter: (params) => { \r\n        return FormatDateFromString(params.value);\r\n         }\r\n      },\r\n      { field: 'email', headerName: 'Email', width: 200 , valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      }},\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'passportNumber', headerName: 'Passport No.', width: 250,  \r\n      // valueGetter: (params) => {\r\n      //   const pass2 = params.getValue('passportNumber2');\r\n      //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\r\n      //   {\r\n      //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\r\n      //   }\r\n      //   else\r\n      //   {\r\n      //     return params.getValue('passportNumber')?.toUpperCase();\r\n      //   }\r\n      // }\r\n    },\r\n      { field: 'certificate', headerName: 'Certificate', width: 120,  renderCell: (params) => {\r\n          return params.value ? (\r\n            <CheckIcon className={classes.checkIcon}/>\r\n          ) :\r\n          (\r\n            <CloseIcon className={classes.closeIcon}/> \r\n          );\r\n      } },\r\n      { field: 'antiBodyTest', headerName: 'Antibody Test', width: 120,  renderCell: (params) => {\r\n        return params.value ? (\r\n          <CheckIcon className={classes.checkIcon}/>\r\n        ) :\r\n        (\r\n        <  CloseIcon className={classes.closeIcon}/> \r\n        );\r\n    } },\r\n      { field: 'postCode', headerName: 'Post Code', width: 150, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      { field: 'address', headerName: 'Address', width: 500, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      // { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const dateFormatter = str => {\r\n    return str;\r\n  };\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n  \r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) =>\r\n  {\r\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n    if (todayStr === timeStampStr)\r\n    {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    }\r\n    else\r\n    {\r\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  }\r\n\r\n  const loadData = (top) =>\r\n  {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === 'today')\r\n    {\r\n      api = BookService.getTodayBookings;\r\n    }else if (props.date === 'old')\r\n    {\r\n      api = BookService.getOldBookings;\r\n    }else if (props.date === 'future')\r\n    {\r\n      api = BookService.getFutureBookings;\r\n    }else if (props.date === 'recent')\r\n    {\r\n      api = BookService.getRecentBookingsAll;\r\n    }else if (props.date === 'live')\r\n    {\r\n      api = BookService.getLiveBookings;\r\n    }else if (props.date === 'completed')\r\n    {\r\n      api = BookService.getCompletedBookings;\r\n    }\r\n    else if (props.date === 'positive')\r\n    {\r\n      api = BookService.getPositiveBookings;\r\n    }\r\n    else if (props.date === 'deleted')\r\n    {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n    else if (props.date === 'late')\r\n    {\r\n      api = BookService.getLateBookings;\r\n    }\r\n               \r\n    setData({bookings: [], cachedBookings: [], isFetching: true});\r\n   \r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top).then( (res) =>{\r\n      // console.log(res)\r\n      for (var i=0; i < res.data.length; i++)\r\n      {\r\n        res.data[i] = {...res.data[i], id : i + 1}\r\n      }  \r\n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\r\n      // return res.data;\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n            setTopCount(25)\r\n            loadData(25)\r\n        },\r\n        [props.date]);\r\n\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => \r\n\r\n             (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\r\n                   (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0) \r\n                  || (`${element.forename} ${element.surname}`.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n          );\r\n  \r\n  \r\n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n  \r\n      useEffect(() => {\r\n\r\n       loadData(topCount)\r\n    \r\n      }, [state.bookingDialogDataChanged]);    \r\n\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  }    \r\n  \r\n  const openDetailsDialog = (event, id) =>\r\n  {\r\n    const booking = data.bookings.find(element => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n\r\n  }\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    loadData(topCount)\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) =>\r\n  {\r\n    setOpenDialogExcel(true);\r\n  }\r\n\r\n  const isTopSelectHidden = (date)=>\r\n  {\r\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.userId.username === 'admin' && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                    <KeyboardDatePicker\r\n                        autoOk={true}\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        autoOk={true}\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {FormatDateFromString(booking.birthDate)}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n} ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\n\r\nconst emptyData = [\r\n  createData('09:00', 0),\r\n  createData('10:00', 0),\r\n  createData('11:00', 0),\r\n  createData('12:00', 0),\r\n  createData('13:00', 0),\r\n  createData('14:00', 0),\r\n  createData('15:00', 0),\r\n  createData('16:00', 0),\r\n  createData('17:00', 0),\r\n  createData('18:00', undefined),\r\n\r\n];\r\n\r\nconst getCount = (data, str) =>\r\n{\r\n  if (!data)\r\n    return 0;\r\n\r\n  var count = 0;\r\n  for (var i=0; i < data.length; i++)\r\n  {\r\n    if (data[i]._id.substr(0,2) === str)\r\n    {\r\n      count += data[i].count;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  const [data, setData] = React.useState(emptyData);\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n      var result = [];\r\n      try\r\n      {\r\n          setLoading(true)\r\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\r\n          setLoading(false)\r\n          const data = res.data.result;\r\n          result.push(createData('09:00', getCount(data,'09')));\r\n          result.push(createData('10:00', getCount(data,'10')));\r\n          result.push(createData('11:00', getCount(data,'11')));\r\n          result.push(createData('12:00', getCount(data,'12')));\r\n          result.push(createData('13:00', getCount(data,'13')));\r\n          result.push(createData('14:00', getCount(data,'14')));\r\n          result.push(createData('15:00', getCount(data,'15')));\r\n          result.push(createData('16:00', getCount(data,'16')));\r\n          result.push(createData('17:00', getCount(data,'17')));\r\n          result.push(createData('18:00', undefined));\r\n \r\n           setData(result);\r\n      }\r\n      catch(err){\r\n        setLoading(false)\r\n        console.error(err);\r\n      }\r\n\r\n    }\r\n  \r\n   fetchData();\r\n\r\n  }, [] );\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport { Grid, LinearProgress, Tooltip } from '@material-ui/core';\r\nimport * as dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport BookingDialog from './BookingDialog';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    margin: \"5px\",\r\n    padding: \"5px\",\r\n    maxWidth : \"90px\",\r\n    minHeight: \"30px\",\r\n    border : \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight : \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    borderRadius : \"5px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    align: \"center\",\r\n\r\n    \"&:hover\": {\r\n        background: \"#3f51b5\",\r\n        color: \"#ebedf7\"\r\n      },\r\n}\r\n\r\n\r\n});\r\n\r\nconst isWeekend = (date) =>\r\n{\r\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\r\n}\r\n\r\nconst getCurrentTimeSlot = (now) =>\r\n{\r\n    var min = now.getMinutes();\r\n    var hour = now.getHours();\r\n    var pm = (hour >= 12);\r\n    if (hour > 12)\r\n    {\r\n      hour = hour - 12;\r\n    }\r\n\r\n    if (min >= 0 && min < 15)\r\n    {\r\n      min = 0;\r\n    }else if (min >= 15 && min < 30)\r\n    {\r\n      min = 15;\r\n    }else if (min >= 30 && min < 45)\r\n    {\r\n      min = 30;\r\n    }else if (min >= 45)\r\n    {\r\n      min = 45;\r\n    }\r\n\r\n    const minStr = min < 10 ? `0${min}` : `${min}`;\r\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\r\n    const pmStr = pm ? 'PM' : 'AM';\r\n\r\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\r\n\r\n    if (isWeekend(now))\r\n    {\r\n      if (now.getHours() < 10 || now.getHours() >= 14)\r\n      {\r\n        return null;\r\n      }\r\n      else\r\n      {\r\n        return timeStr;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if (now.getHours() < 9 || now.getHours() >= 18)\r\n      {\r\n        return null;\r\n      }\r\n      else\r\n      {\r\n        return timeStr;\r\n      }\r\n\r\n    }\r\n}\r\n\r\nconst getCurrentTimeSlotLabel = (timeStr) =>\r\n{\r\n  if (!timeStr)\r\n  {\r\n    return 'Closed';\r\n  }\r\n\r\n  var hour = parseInt(timeStr.substr(0,2));\r\n  var minute = parseInt(timeStr.substr(3,2)); \r\n  var pm = timeStr.indexOf('PM') > 0;\r\n  if (minute !== 45)\r\n  {\r\n    minute += 15;\r\n  }\r\n  else{\r\n    minute = 0;\r\n    hour += 1;\r\n    if (hour >= 12)\r\n    {\r\n      pm = true;\r\n    }\r\n    if (hour > 12)\r\n    {\r\n      hour = hour - 12;\r\n    }\r\n  }\r\n\r\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\r\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\r\n  const pmStr = pm ? 'PM' : 'AM';\r\n\r\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\r\n\r\n  return `${timeStr} - ${endTimeStr}`;\r\n\r\n}\r\n\r\nexport default function CurrentVisits() {\r\n  const classes = useStyles();\r\n\r\n  const[current, setCurrent] = React.useState(new Date());\r\n  const [bookings, setBookings] = React.useState([]);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() => \r\n  {\r\n    const interval = setInterval(() => {  \r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval);\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => \r\n  {\r\n    const currentTimeSlot = getCurrentTimeSlot(current);\r\n    if (!currentTimeSlot)\r\n      return;\r\n    const todayStr = dateformat(current, 'yyyy-mm-dd');\r\n    setLoading(true)\r\n    BookService.getBookingsByDateStrandTime(todayStr,currentTimeSlot).then(res =>\r\n      {\r\n        setLoading(false)\r\n        if (res.data.status === 'OK')\r\n        {\r\n            setBookings([...res.data.bookings]);\r\n        }   \r\n\r\n      }).catch(err =>\r\n        {\r\n          setLoading(false)\r\n          console.log(err);\r\n        });\r\n\r\n  }, [current]);\r\n\r\n  const getBookingsBox = (_bookings) =>\r\n  {\r\n      if (_bookings && _bookings.length > 0)\r\n      {\r\n         return (\r\n\r\n          <div className={classes.root}>\r\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={0}>\r\n\r\n                  { _bookings.map(booking => (\r\n\r\n                    <Grid item>\r\n\r\n                        <div className={classes.bookingBox} onClick={event => bookingCliked(event,booking)}>\r\n\r\n                            <span style={{textAlign:\"center\"}}> {`${booking.surnameCapital}`.substring(0,10)} </span>\r\n\r\n                        </div>\r\n\r\n                  </Grid>\r\n\r\n                  ))}\r\n\r\n              \r\n            </Grid>\r\n\r\n          </div>\r\n         )\r\n             \r\n        }                   \r\n  }\r\n\r\n  const bookingCliked = (event, booking) =>\r\n  {\r\n      setSelectedBooking(booking);\r\n      setOpenDialog(true);\r\n  }\r\n\r\n  const handleCloseDialog = () =>\r\n  {\r\n      setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(current, 'dd mmmm, yyyy') } \r\n      </Typography>\r\n     \r\n        {getBookingsBox(bookings)}\r\n      \r\n\r\n      <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n      />\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('pcr',`recentBookings`)}));\r\n  }\r\n\r\n  const loadData = () => \r\n  {\r\n    setData({bookings: data.bookings, isFetching: true});\r\n    setLoading(true)\r\n    BookService.getRecentBookings().then( (res) =>{\r\n      setLoading(false)\r\n        setData({bookings: res.data, isFetching: false});\r\n\r\n    }).catch( (err) => {\r\n      setLoading(false)\r\n        console.log(err);\r\n        setData({bookings: data.bookings, isFetching: false});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n          loadData();\r\n        },\r\n        [refresh]);   \r\n\r\n\r\n   useEffect( () => {\r\n     loadData();\r\n     setInterval(() => {\r\n       setRefresh(refresh => !refresh);\r\n     }, 30000);\r\n   }, []) ;    \r\n\r\n   const formatTimeStamp = (timeStamp) =>\r\n   {\r\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n     if (todayStr === timeStampStr)\r\n     {\r\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n     }\r\n     else\r\n     {\r\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n     }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Surname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>D.O.B</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\r\n              <TableCell>{row.forename}</TableCell>\r\n              <TableCell>{row.surname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.birthDate)}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport { Dialog, DialogContent, DialogTitle, Grid, LinearProgress, Link, Table, TableBody, TableCell, TableHead, TableRow, Tooltip } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\n\r\nimport {\r\n    PieChart, Pie, Sector, Cell,\r\n  } from 'recharts';\r\n\r\n  const COLORS = ['#00b33e', '#0070e0', '#bb00c4'];\r\n\r\n  const RADIAN = Math.PI / 180;\r\n\r\n  const renderCustomizedLabel = ({\r\n    cx, cy, midAngle, innerRadius, outerRadius, value, index,\r\n  }) => {\r\n     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n    return (\r\n      <text x={x} y={y} fontSize=\"14px\" fontWeight=\"500\" fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                {`${value} `}\r\n      </text>\r\n    );\r\n  };\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  ReportLabels: {\r\n      position: \"absolute\",\r\n      top : \"80px\",\r\n      left: \"0px\"\r\n  },\r\n\r\n  AverageLabel: {\r\n    position: \"absolute\",\r\n    top : \"190px\",\r\n    right: \"30px\",\r\n    fontSize : \"12px\",\r\n    color : \"#0070e0\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  less12Label: {\r\n      fontSize : \"12px\",\r\n      color : \"#00b33e\",\r\n      fontWeight: \"600\",\r\n      paddingLeft : \"5px\",\r\n      borderLeft: \"5px solid #00b33e\",\r\n      marginBottom : \"10px\",\r\n  },\r\n\r\n  less24Label: {\r\n    fontSize : \"12px\",\r\n    color : \"#0070e0\",\r\n    fontWeight: \"600\",\r\n    paddingLeft : \"5px\",\r\n    borderLeft: \"5px solid #0070e0\",\r\n    marginBottom : \"10px\",\r\n    },\r\n\r\nless36Label: {\r\n    fontSize : \"12px\",\r\n    color : \"#bb00c4\",\r\n    fontWeight: \"600\",\r\n    paddingLeft : \"5px\",\r\n    borderLeft: \"5px solid #bb00c4\",\r\n    marginBottom : \"10px\",\r\n    },\r\n\r\n    seeMore :{\r\n        position: \"absolute\",\r\n        top : \"191px\",\r\n        left : \"2px\"\r\n    }\r\n\r\n});\r\n\r\n\r\nexport default function ResultsTimeReport() {\r\n  const classes = useStyles();\r\n\r\n  const[current, setCurrent] = React.useState(new Date());\r\n  const [report, setReport] = React.useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const handleClose = () =>\r\n  {\r\n      setOpen(false);\r\n  }\r\n\r\n  useEffect(() => \r\n  {\r\n    const interval = setInterval(() => {  \r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval);\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect( () => \r\n  {\r\n    \r\n    setLoading(true)\r\n    BookService.getTestsTimeReport().then(res =>\r\n      {\r\n        const result = [];  \r\n        setLoading(false)\r\n        if (res.data.status === 'OK')\r\n        {\r\n            setReport(res.data.result);\r\n            // console.log(res.data.result);\r\n            result.push({name: 'lessThan12', value : res.data.result.lessThan12 });\r\n            result.push({name: 'lessThan24', value : res.data.result.lessThan24 });\r\n            result.push({name: 'lessThan36', value : res.data.result.lessThan36 });\r\n         \r\n           // result.push({name: 'lessThan48', value : res.data.result.lessThan48 });\r\n            setData(result);\r\n        }   \r\n\r\n      }).catch(err =>\r\n        {\r\n          setLoading(false)\r\n          console.error(err);\r\n        });\r\n\r\n\r\n    } , [] );\r\n\r\n    const getReportLabels = () =>\r\n    {\r\n           return (\r\n\r\n                <div className={classes.ReportLabels}>\r\n                    <div className={classes.less12Label}> {`12 Hours`} </div>\r\n                    <div className={classes.less24Label}> {`24 Hours`} </div>\r\n                    <div className={classes.less36Label}> {`36 Hours`} </div>\r\n                </div>\r\n    \r\n            );\r\n    }\r\n\r\n    const getAverageLabel = () =>\r\n    {\r\n           return (\r\n\r\n                <div className={classes.AverageLabel}>\r\n                   avg = <span style={{fontSize:\"14px\"}}> {`${report.avg}`} </span> hours\r\n                </div>\r\n    \r\n            );\r\n    }\r\n\r\n    const seeMoreClicked = (event) => {\r\n        event.preventDefault();\r\n        setOpen(true);\r\n      }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    \r\n    <div style={{position: \"relative\"}}>\r\n    {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>PCR RESULTS SUMMARY</Title>\r\n\r\n      {data && (\r\n                <>\r\n\r\n                <PieChart width={250} height={150}>\r\n                    <Pie\r\n                        data={data}\r\n                        cx={170}\r\n                        cy={70}\r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={65}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                        >\r\n                        {\r\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                </PieChart>\r\n                \r\n\r\n                {getReportLabels()}\r\n                {getAverageLabel()}\r\n\r\n                <div className={classes.seeMore}>\r\n                            <Link color=\"primary\" href=\"#\" onClick={seeMoreClicked}>\r\n                                  See Details\r\n                            </Link>\r\n                  </div>\r\n\r\n\r\n                  <Dialog style={{padding: \"50px\"}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>  \r\n                      <DialogTitle style={{textAlign: \"center\"}} id=\"simple-dialog-title\">PCR Results Time Report</DialogTitle>\r\n                            <DialogContent>\r\n                            <Table>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Recieved in Less Than</TableCell>        \r\n                                <TableCell>Count</TableCell>\r\n                                <TableCell>Percent</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key=\"row1\">\r\n                                    <TableCell>12 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan12}</TableCell>\r\n                                    <TableCell>{report.lessThan12Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row2\">\r\n                                    <TableCell>24 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan24}</TableCell>\r\n                                    <TableCell>{report.lessThan24Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row3\">\r\n                                    <TableCell>36 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan36}</TableCell>\r\n                                    <TableCell>{report.lessThan36Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row4\">\r\n                                    <TableCell>48 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan48}</TableCell>\r\n                                    <TableCell>{report.lessThan48Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row4\">\r\n                                    <TableCell style={{fontWeight:\"800\"}}>Total Results Received : </TableCell>\r\n                                    <TableCell style={{fontWeight:\"600\"}}>{report.lessThan48 + report.lessThan36 + report.lessThan24 + report.lessThan12}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n\r\n\r\n\r\n                            \r\n                            </TableBody>\r\n                        </Table>\r\n                            </DialogContent>\r\n                </Dialog>\r\n    \r\n\r\n\r\n\r\n                </>\r\n      )}\r\n     \r\n     </div>\r\n\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport CurrentVisits from './CurrentVisits';\r\n\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport BookingView from './BookingView';\r\nimport ResultsTimeReport from './ResultsTimeReport';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Tests Summary */}\r\n                    <Grid item xs={12} md={4} lg={3}>\r\n                     <Paper className={fixedHeightPaper}>\r\n                        <ResultsTimeReport />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Current Visits */}\r\n                    <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <CurrentVisits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Bookings */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\nimport GlobalState from './../GlobalState';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport dateformat from 'dateformat';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport BookingDialog from './BookingDialog';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\nimport PDFService from './services/PDFService';\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  archiveButton: {\r\n\r\n  },\r\n\r\n  smartMatchButton: {\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    marginRight : \"10px\"\r\n    // padding: \"10px\"  \r\n  },\r\n\r\n  infoTitle:  {\r\n    fontWeight: \"400\"\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\"\r\n  },\r\n\r\n  matchButton:\r\n  {\r\n    marginTop: \"30px\",\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendButton:\r\n  {\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendFilesButton:{\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  cancelButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"90px\",\r\n    paddingRight: \"90px\"   \r\n  },\r\n\r\n  downloadPDFButton:\r\n  {\r\n    marginLeft: \"50px\"\r\n  }\r\n  \r\n  \r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#2f942e',\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function UnmatchedRecords() {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n\r\n    { field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter : (params) =>\r\n      {\r\n        return FormatDateFromString(params.value);\r\n      }\r\n     },\r\n    { field: 'forename', headerName: 'Forename', width: 200 },\r\n    { field: 'surname', headerName: 'Surname', width: 200 },\r\n    { field: 'birthDate', headerName: 'D.O.B', width: 120 , valueFormatter : (params) =>\r\n    {\r\n      return FormatDateFromString(params.value);\r\n    }},\r\n    { field: '_id' , headerName:'Action', width: 500 , renderCell: (params) => {\r\n        if (selectedTab === 'unresolved')\r\n        {\r\n            return (\r\n              <React.Fragment>\r\n\r\n              <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<WbIncandescentIcon />}\r\n                    onClick = { event => smartMatchClicked(event,params.value)}\r\n                    className={classes.smartMatchButton}\r\n                    >\r\n                    smart match\r\n              </Button>\r\n\r\n              <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = { event => archiveRecord(event,params.value)}\r\n                    className={classes.archiveButton}\r\n                  >\r\n                    archive\r\n              </Button>\r\n\r\n\r\n              <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"                   \r\n                    color=\"primary\"\r\n                    onClick = { event => downloadLabReport(params.value)}\r\n                    className={classes.downloadPDFButton}\r\n                  >\r\n                    view pdf\r\n              </Button>\r\n\r\n\r\n              </React.Fragment>\r\n\r\n            );\r\n        }else\r\n        {\r\n            return (\r\n\r\n              <React.Fragment>\r\n\r\n                  <Button\r\n                        disabled = {params.value === disableId}\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<WbIncandescentIcon />}\r\n                        onClick = { event => smartMatchClicked(event,params.value)}\r\n                        className={classes.smartMatchButton}\r\n                        >\r\n                        smart match\r\n                  </Button>\r\n\r\n                    <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = { event => unArchiveRecord(event,params.value)}\r\n                    className={classes.archiveButton}\r\n                  >\r\n                    Undo\r\n                  </Button>\r\n\r\n                  <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"                   \r\n                    color=\"primary\"\r\n                    onClick = { event => downloadLabReport(params.value)}\r\n                    className={classes.downloadPDFButton}\r\n                  >\r\n                    view pdf\r\n                  </Button>\r\n\r\n              </React.Fragment>\r\n            );\r\n        }\r\n        \r\n    } },\r\n   \r\n  ];\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : false});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [disableId, setDisableId] = React.useState(null);\r\n\r\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\r\n\r\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\r\n\r\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\r\n\r\n  const [matching, setMatching] = React.useState(false);\r\n\r\n  const [matched, setMatched] = React.useState(false);\r\n\r\n  const [sending, setSending] = React.useState(false);\r\n  const [sent, setSent] = React.useState(false);\r\n\r\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\r\n\r\n  const [sendingStatus, setSendingStatus] = React.useState('');\r\n\r\n  const [sendingProgress, setSendingProgress] = React.useState(10);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n\r\n  const handleTabChanged = (event, value) => {\r\n      if (value && value.length)\r\n      {\r\n        setSeletedTab(value);\r\n      }\r\n   \r\n  };\r\n\r\n  const handleCloseDialog = () =>\r\n  {\r\n    setOpenDialog(false);\r\n    setTimeout(() => {\r\n      setSmartLinkId(null);\r\n      setSmartLinkDetails(null);\r\n      setLikelyBookings(null);\r\n      setSelectedBooking(null);\r\n      setMatched(false);\r\n      setMatching(false);\r\n      setSendingStatus(null);\r\n      setSending(false);\r\n      setSent(false);\r\n      clearInterval(interval);\r\n      setSendJustToPCR(false);\r\n    }, 100);\r\n  }\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSeeDetailsDialogOpen(false);\r\n    setTimeout(() => {\r\n      setSeeDetailsBooking(null);\r\n    }, 500);\r\n  }\r\n\r\n  const seeDetailsClicked = (event, row) =>\r\n  {\r\n    setSeeDetailsBooking(row);\r\n    setSeeDetailsDialogOpen(true);\r\n  }\r\n\r\n  const smartMatchClicked = (event, id) =>\r\n  {\r\n    setSmartLinkId(id);\r\n    setOpenDialog(true);\r\n    findBestMatches(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (smartLinkId)\r\n    {\r\n      findBestMatches(smartLinkId);\r\n      // console.log('refrshing....');\r\n\r\n    }\r\n\r\n\r\n  }, [state.bookingDialogDataChanged]);\r\n\r\n  const findBestMatches = (id) =>\r\n  {\r\n    BookService.getLinkDetails(id).then( res => {\r\n      setSmartLinkDetails(res.data);\r\n      console.log(res.data);\r\n    }).catch( err =>\r\n      {\r\n        console.log(err);\r\n      });\r\n\r\n    BookService.findBestMatches(id).then( res => {\r\n      setLikelyBookings(res.data.matchedBookings);\r\n    }).catch( err => {\r\n      console.log(err);\r\n      setLikelyBookings([]);\r\n    })\r\n  }\r\n\r\n  const archiveRecord = (event, id) =>\r\n  {\r\n      if (disableId)\r\n      {\r\n        return;\r\n      }\r\n        setDisableId(id);\r\n        \r\n        BookService.archiveRecord(id).then(\r\n            (res) => {\r\n                setDisableId(null);\r\n                setRefresh(!refresh);\r\n            }\r\n        ).catch( (err) => {\r\n            setDisableId(null);\r\n        })\r\n  }\r\n\r\n  const unArchiveRecord = (event, id) =>\r\n  {\r\n      if (disableId)\r\n      {\r\n        return;\r\n      }\r\n        setDisableId(id);\r\n        \r\n        BookService.unArchiveRecord(id).then(\r\n            (res) => {\r\n                setDisableId(null);\r\n                setRefresh(!refresh);\r\n            }\r\n        ).catch( (err) => {\r\n            setDisableId(null);\r\n        })\r\n  }\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  useEffect( () => {\r\n\r\n            var api = BookService.getUnmatchedRecords;\r\n            if (selectedTab === 'archived')\r\n            {\r\n                api = BookService.getUnmatchedRecordsArchived;\r\n            }\r\n            \r\n            setLoading(true)\r\n            \r\n            setData({bookings: [], cachedBookings: [], isFetching: true});\r\n            const currentPromise = api().then( (res) =>{\r\n              \r\n              for (var i=0; i < res.data.length; i++)\r\n              {\r\n                res.data[i] = {...res.data[i], id : i + 1}\r\n              }  \r\n              \r\n              return res.data;\r\n            })\r\n\r\n            lastPromise.current = currentPromise;\r\n\r\n            currentPromise.then(\r\n              result => {\r\n                if (currentPromise === lastPromise.current) {\r\n                  setLoading(false)\r\n                  setData({bookings: result, cachedBookings: [...result], isFetching: false});\r\n                }\r\n              },\r\n              e => {\r\n                if (currentPromise === lastPromise.current) {\r\n                    setLoading(false)\r\n                    console.log(e);\r\n                    setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n                }\r\n              });\r\n        },\r\n        [refresh, selectedTab]);\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => {\r\n\r\n            return (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\r\n                   (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0) \r\n            ;\r\n  \r\n          });\r\n  \r\n  \r\n          setData({bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    setRefresh(!refresh);\r\n\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n  }\r\n\r\n  const handleCheckChanged = (event, row) =>\r\n  {\r\n    if (event.target.checked)\r\n    {\r\n      setSelectedBooking(row);\r\n    }\r\n    else\r\n    {\r\n      setSelectedBooking(null);\r\n    }\r\n  }\r\n\r\n  const matchRecords = (event) => {\r\n\r\n    setMatching(true);\r\n\r\n    BookService.getBookingById(selectedBooking._id).then(res => {\r\n      setSelectedBooking(res.data);\r\n    });\r\n\r\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then (res => {\r\n\r\n      if (res.data.status === 'OK'){\r\n        setMatching(false);\r\n        setMatched(true);\r\n      }\r\n\r\n    }).catch(err =>\r\n      {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const getProgress = (status) =>\r\n  {\r\n    console.log(`status : ${status}`);\r\n\r\n    if (status === 'downloadFailed')\r\n      return 10 ;\r\n    else if (status === 'downloading') \r\n      return 30 ;  \r\n    else if (status === 'downloadSuccess') \r\n      return 70 ;\r\n    else if (status === 'sent')\r\n      return 100;   \r\n    else\r\n      return 0;\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n\r\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\r\n\r\n  }, [sendingStatus]);\r\n\r\n  const resendFilesClicked = (event) =>\r\n  {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus('downloadFailed');\r\n    setSendJustToPCR(true);\r\n\r\n\r\n    BookService.regenerateFiles(smartLinkId).then( res => {\r\n\r\n      interval = setInterval(() => {\r\n             \r\n       // setProgress(sendingCounter);\r\n\r\n       // setProgress(getProgress(sendingStatus));\r\n\r\n       BookService.getLinkDetails(smartLinkId).then( res => {\r\n \r\n         setSendingStatus(res.data.status);\r\n \r\n         if (res.data.status === 'sent')\r\n         {\r\n           setSending(false);\r\n           setSent(true);\r\n           setRefresh(!refresh);\r\n           clearInterval(interval);\r\n         }\r\n       });\r\n \r\n     }, 1000);\r\n\r\n   }).catch(err => {\r\n     console.log(err);\r\n     setSending(false);\r\n   });\r\n\r\n\r\n  }\r\n \r\n  const resendEmailsClicked = (event) => {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus('downloadFailed');\r\n \r\n\r\n    BookService.resendEmails(smartLinkId).then( res => {\r\n\r\n       interval = setInterval(() => {\r\n        \r\n       \r\n\r\n        // setProgress(sendingCounter);\r\n\r\n        // setProgress(getProgress(sendingStatus));\r\n\r\n        BookService.getLinkDetails(smartLinkId).then( res => {\r\n  \r\n          setSendingStatus(res.data.status);\r\n  \r\n          if (res.data.status === 'sent')\r\n          {\r\n            setSending(false);\r\n            setSent(true);\r\n            setRefresh(!refresh);\r\n            clearInterval(interval);\r\n          }\r\n        });\r\n  \r\n      }, 1000);\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setSending(false);\r\n    });\r\n\r\n  \r\n\r\n  }\r\n\r\n  const cancelResendEmailsClicked = (event) => {\r\n    setMatched(false);\r\n  }\r\n\r\n  const downloadLabReport = (id) =>\r\n  {\r\n       PDFService.downloadPdfLabReport(id).then( (res) => \r\n       {       \r\n         const file = new Blob(\r\n           [res.data], \r\n           {type: 'application/pdf'});\r\n\r\n         const fileURL = URL.createObjectURL(file);   \r\n         window.open(fileURL, \"_blank\");\r\n\r\n       \r\n\r\n       }).catch( (err) =>\r\n       {\r\n           console.log(err);\r\n       });\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={5}>\r\n            <div style={{textAlign:\"left\", paddingLeft:\"10px\"}}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                        <Grid item>\r\n                                <span style={{paddingRight: \"15px\", color: \"#555\"}}> <WarningIcon style={{fontSize:\"2.2rem\"}}/> </span>\r\n                        </Grid>\r\n                        <Grid item>\r\n                              <span style={{fontSize: '1.4rem', fontWeight:\"600\", color: \"#444\"}}> Unmatched Records </span>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Refresh\" placement=\"right\">\r\n                                <IconButton\r\n                                  color=\"primary\"\r\n                                  className={classes.refreshButton}\r\n                                  onClick={refreshClicked}\r\n                                >\r\n                                  <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                  </Grid>\r\n                </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <ToggleButtonGroup\r\n            value={selectedTab}\r\n            style={{ marginBottom: \"10px\" }}\r\n            exclusive\r\n            onChange={handleTabChanged}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\r\n              UnResolved\r\n            </ToggleButton>\r\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\r\n              Archived\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <Dialog\r\n        maxWidth=\"lg\"\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"draggable-dialog-title\">\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <WbIncandescentIcon\r\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <div\r\n                style={{\r\n                  color: \"#2f942e\",\r\n                  paddingBottom: \"12px\",\r\n                  fontWeight: \"800\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                SMART MATCH{\" \"}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            style={{\r\n              height: \"600px\",\r\n              // width: \"1200px\",\r\n            }}\r\n          >\r\n            {(!likelyBookings || !smartLinkDetails) && (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <LoaderSpinner\r\n                      style={{ marginTop: \"170px\" }}\r\n                      type=\"Grid\"\r\n                      color=\"#2f942e\"\r\n                      height={100}\r\n                      width={100}\r\n                      timeout={0} //3 secs\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        color: \"#2f942e\",\r\n                        paddingBottom: \"12px\",\r\n                        fontWeight: \"800\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      SEARCHING ...{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {likelyBookings && likelyBookings.length === 0 && (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        color: \"#2f942e\",\r\n                        paddingBottom: \"12px\",\r\n                        fontWeight: \"800\",\r\n                        marginTop: \"230px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      SORRY, NO RECORDS FOUND !{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"stretch\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"1.1rem\",\r\n                        fontWeight: \"600\",\r\n                        color: \"#2f942e\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      LAB RECORD :\r\n                    </div>\r\n\r\n                    <Grid\r\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                      spacing={4}\r\n                    >\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>Forename:</span>\r\n                        <span className={classes.infoData}>\r\n                          {smartLinkDetails.forename}\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>Surname:</span>\r\n                        <span className={classes.infoData}>\r\n                          {smartLinkDetails.surname}\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>D.O.B:</span>\r\n                        <span className={classes.infoData}>\r\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>Test Date:</span>\r\n                        <span className={classes.infoData}>\r\n                          {FormatDateFromString(smartLinkDetails.testDate)}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"1.1rem\",\r\n                        fontWeight: \"600\",\r\n                        color: \"#2f942e\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      BEST MATCHES :\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Select</TableCell>\r\n                          <TableCell>Match</TableCell>\r\n                          <TableCell>Forename</TableCell>\r\n                          <TableCell>Surname</TableCell>\r\n                          <TableCell>D.O.B</TableCell>\r\n                          <TableCell>Email</TableCell>\r\n                          <TableCell>Test Date</TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {likelyBookings.map((row) => (\r\n                          <TableRow key={row._id}>\r\n                            <TableCell>\r\n                              <Tooltip\r\n                                title={\r\n                                  row.birthDate !== smartLinkDetails.birthDate\r\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\r\n                                    : \"\"\r\n                                }\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        selectedBooking &&\r\n                                        selectedBooking._id === row._id\r\n                                      }\r\n                                      disabled={\r\n                                        matched || matching\r\n                                      }\r\n                                      onChange={(event) =>\r\n                                        handleCheckChanged(event, row)\r\n                                      }\r\n                                      name=\"checkedA\"\r\n                                    />\r\n                                  }\r\n                                  label=\"\"\r\n                                />\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                            <TableCell\r\n                              style={{\r\n                                fontWeight: \"800\",\r\n                                color: \"#2f942e\",\r\n                                fontSize: \"1.1rem\",\r\n                              }}\r\n                            >{`${row.likelihood} %`}</TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                row.forenameCapital ===\r\n                                smartLinkDetails.forename\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\r\n                              }\r\n                            >\r\n                              {row.forenameCapital}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                row.surnameCapital === smartLinkDetails.surname\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\r\n                              }\r\n                            >\r\n                              {row.surnameCapital}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                row.birthDate === smartLinkDetails.birthDate\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"red\" }\r\n                              }\r\n                            >\r\n                              <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                spacing={1}\r\n                              >\r\n                                <Grid item>\r\n                                  {row.birthDate !==\r\n                                    smartLinkDetails.birthDate && (\r\n                                    <span style={{ textAlign: \"center\" }}>\r\n                                      <ReportProblemIcon />\r\n                                    </span>\r\n                                  )}\r\n                                </Grid>\r\n                                {FormatDateFromString(row.birthDate)}\r\n                                <Grid item></Grid>\r\n                              </Grid>\r\n                            </TableCell>\r\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                dateformat(\r\n                                  row.samplingTimeStamp,\r\n                                  \"yyyy-mm-dd\"\r\n                                ) === smartLinkDetails.testDate\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"red\" }\r\n                              }\r\n                            >\r\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                disabled = {sending}\r\n                                onClick={(event) =>\r\n                                  seeDetailsClicked(event, row)\r\n                                }\r\n                              >\r\n                                See Details\r\n                              </Button>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  spacing = {1}\r\n                  alignItems=\"center\"\r\n                >\r\n\r\n                {!matched && (\r\n                  <React.Fragment>\r\n                        <Grid item>\r\n                          <Button\r\n                            disabled = {!selectedBooking || matching}\r\n                            className={classes.matchButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick = {matchRecords}\r\n                          >\r\n                            GO Match THE Records\r\n                          </Button>\r\n                        </Grid>\r\n\r\n                        {!selectedBooking && (\r\n                            <Grid item>\r\n                              <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\r\n                          </Grid>\r\n                        )}\r\n\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                {matched && !sent && !sending && (\r\n                  <React.Fragment>\r\n\r\n                    <Grid item>\r\n            \r\n                         <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\"> Success — The Records are Matched Now !</Alert>\r\n                    \r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n\r\n                      <div style={{paddingTop:\"5px\", fontSize:\"1rem\", fontWeight: \"500\", color: \"#555\"}}>\r\n                         Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\r\n                      </div>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                          <Button\r\n                            disabled = {sending || sent}\r\n                            className={classes.resendButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick = {resendEmailsClicked}\r\n                          >\r\n                            YES ! RESEND THE EMAILS\r\n                          </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                          <Button\r\n                            disabled = {sending || sent}\r\n                            className={classes.cancelButton}\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick = {cancelResendEmailsClicked}\r\n                          >\r\n                            NO ! NOT NOW\r\n                          </Button>\r\n                    </Grid>\r\n\r\n                    \r\n                    <Grid item>\r\n                          <Button\r\n                            disabled = {sending || sent}\r\n                            className={classes.resendFilesButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick = {resendFilesClicked}\r\n                          >\r\n                            Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\r\n                          </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n            \r\n                         <Alert style={{marginTop:\"10px\",  paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"warning\">\r\n                            Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\r\n                          </Alert>\r\n       \r\n                   </Grid>\r\n\r\n\r\n\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                        {matched && (sending || sent) && ( \r\n                          <Grid item>\r\n\r\n                            <div style={{paddingTop: \"50px\", color: \"#2f942e\" , fontWeight:\"600\", fontSize: \"1rem\"}}>\r\n                                 {sending && !sent && (\r\n                                   'Sending ...'\r\n                                 )}\r\n\r\n                                 {sent && !sendJustToPCR && (\r\n                                     <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\">\r\n                                          Success! — The LAB Report {selectedBooking.certificate? ' and Certificate ': ' ' }  Successfully Sent.\r\n                                     </Alert>\r\n                                 )}\r\n\r\n                                {sent && sendJustToPCR && (\r\n                                     <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\">\r\n                                          Success! — The LAB Report {selectedBooking.certificate? ' and Certificate ': ' ' }  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\r\n                                     </Alert>\r\n                                 )}\r\n\r\n\r\n\r\n                                 \r\n                            </div>\r\n                            \r\n                          </Grid>\r\n                          \r\n                        )}\r\n\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n\r\n\r\n              {matched && (sending || sent) && (\r\n                  <React.Fragment>\r\n\r\n                      <div style={{marginTop:\"10px\", width:\"50%\", marginLeft: \"27%\"}}>\r\n                        \r\n                           <LinearProgressWithLabel variant=\"determinate\" color=\"primary\"  value={sendingProgress} />     \r\n\r\n                      </div>\r\n\r\n                      <div style={{paddingTop: \"30px\", color: \"#2f942e\" , fontWeight:\"600\", fontSize: \"1rem\",  marginLeft: \"45%\"}}>\r\n                            {sending && !sent && (\r\n                                   'PLEASE WAIT ...'\r\n                                 )}     \r\n                                  \r\n                    </div>\r\n\r\n                  </React.Fragment>\r\n                )}\r\n\r\n\r\n          </div>\r\n\r\n          <BookingDialog\r\n            booking={seeDetailsBooking}\r\n            open={seeDetailsDialogOpen}\r\n            onClose={handleCloseSeeDetaisDialog}\r\n            deleteButtonDisabled={true}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 100;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (isPast || disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.calendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, calendarCache : [...state.calendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled || isPast) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 && !disableDay)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 && !disableDay)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { Badge } from '@material-ui/core';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 5;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        if (isPast)\r\n        {\r\n            setBookingsCount(-2);\r\n            return;\r\n        }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.calendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, calendarCache : [...state.calendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 && !isPast)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div  onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div  onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 && !isPast)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                            dayClicked = {dayClicked}\r\n                                            key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                            date={dateformat(day,'yyyy-mm-dd')}\r\n                                            time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\nimport BookingDialog from '../BookingDialog';\r\nimport { setRef } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        height : \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        justifyItems: \"flex-start\",\r\n        paddingLeft : \"10px\"\r\n\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"10%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n    bookingBox: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#ebedf7\",\r\n        color: \"#3f51b5\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#3f51b5\",\r\n            color: \"#ebedf7\"\r\n          },\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst DayViewCell = ({key, date, time}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookings, setBookings] = React.useState(null);\r\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n    const [refresh, setRefresh] = React.useState(true); \r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n    }, [date]);\r\n\r\n    useEffect( () => \r\n    {\r\n        if (bookings) {\r\n\r\n\r\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\r\n            {\r\n                const search = state.dayViewCalFilter.trim().toUpperCase();\r\n                setFilteredBookings( bookings.filter(booking => booking.forenameCapital.indexOf(search) >= 0\r\n                                                            ||  booking.surnameCapital.indexOf(search) >= 0\r\n                                                            ||  `${booking.forenameCapital} ${booking.surnameCapital}`.indexOf(search) >= 0\r\n                    \r\n                    ));\r\n            }\r\n            else\r\n            {\r\n                setFilteredBookings([...bookings]);\r\n            }\r\n        }\r\n\r\n    }, [state.dayViewCalFilter, bookings]);\r\n\r\n\r\n    useEffect ( () => {\r\n       \r\n        const fetchData = async () =>\r\n        {\r\n            if (!date || date.length <= 0 || !time || time.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n         \r\n            if (isPast)\r\n            {\r\n                setBookings([]);\r\n                return;\r\n            }\r\n    \r\n            setBookings(null);\r\n    \r\n            var res = state.calendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n            if (!res || openDialog)\r\n            {\r\n                res = await BookService.getBookingsByDateStrandTime(date, time);\r\n                setState(state => ({...state, calendarCache : [...state.calendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }\r\n          \r\n          \r\n            if (res.data.status === 'OK')\r\n            {\r\n                setBookings(res.data.bookings);\r\n            }   \r\n        }\r\n\r\n        if (openDialog)\r\n        {\r\n            setState(state => ({...state, calendarCache : state.calendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, calendarCache : state.calendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, calendarCache : state.calendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\r\n        }\r\n\r\n         fetchData();\r\n     \r\n    }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n    const bookingCliked = (event, booking) =>\r\n    {\r\n        setSelectedBooking(booking);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n\r\n    const getBookingsBox = (_bookings) =>\r\n    {\r\n        if (_bookings === null) \r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookings.length > 0 && !isPast)\r\n        {\r\n           return (\r\n                _bookings.map(booking => (\r\n\r\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={classes.bookingBox} onClick={event => bookingCliked(event,booking)}>\r\n\r\n                        {`${booking.forenameCapital}-${booking.surnameCapital}`.substring(0,15)}\r\n\r\n                    </div>\r\n\r\n                ))\r\n\r\n           );\r\n        }\r\n    }\r\n\r\n\r\n    const handleCloseDialog = () =>\r\n    {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\r\n\r\n              {getBookingsBox(filteredBookings)}\r\n\r\n            </div>\r\n\r\n            <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n            />\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n  };\r\n\r\n \r\n  \r\nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, calendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, calendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n            <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 100;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 )\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 5;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\nimport BookingDialog from '../BookingDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        height : \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        justifyItems: \"flex-start\",\r\n        paddingLeft : \"10px\"\r\n\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"10%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n    bookingBox: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#ebedf7\",\r\n        color: \"#3f51b5\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#3f51b5\",\r\n            color: \"#ebedf7\"\r\n          },\r\n    },\r\n\r\n    bookingBoxSampleTaken: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#0066cc\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#0059b3\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n    bookingBoxPositive: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#d40b0b\",\r\n        color: \"#fff2f2\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#bf0000\",\r\n            color: \"#fff\"\r\n          },\r\n    },\r\n\r\n    bookingBoxReportSent: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#009900\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#006e00\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n  \r\n\r\n  }));\r\n\r\n\r\n\r\nconst DayViewCell = ({key, date, time}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookings, setBookings] = React.useState(null);\r\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n    const [refresh, setRefresh] = React.useState(true); \r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n    }, [date]);\r\n\r\n    useEffect( () => \r\n    {\r\n        if (bookings) {\r\n\r\n\r\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\r\n            {\r\n                const search = state.dayViewCalFilter.trim().toUpperCase();\r\n                setFilteredBookings( bookings.filter(booking => booking.forenameCapital.indexOf(search) >= 0\r\n                                                            ||  booking.surnameCapital.indexOf(search) >= 0\r\n                                                            ||  `${booking.forenameCapital} ${booking.surnameCapital}`.indexOf(search) >= 0\r\n                    \r\n                    ));\r\n            }\r\n            else\r\n            {\r\n                setFilteredBookings([...bookings]);\r\n            }\r\n        }\r\n\r\n    }, [state.dayViewCalFilter, bookings]);\r\n \r\n\r\n\r\n    useEffect ( () => {\r\n       \r\n        const fetchData = async () =>\r\n        {\r\n            if (!date || date.length <= 0 || !time || time.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n         \r\n            // if (isPast)\r\n            // {\r\n            //     setBookings([]);\r\n            //     return;\r\n            // }\r\n    \r\n            setBookings(null);\r\n    \r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n            if (!res || openDialog)\r\n            {\r\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }\r\n          \r\n          \r\n            if (res.data.status === 'OK')\r\n            {\r\n                setBookings(res.data.bookings);\r\n            }   \r\n        }\r\n\r\n        if (openDialog)\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\r\n        }\r\n\r\n         fetchData();\r\n     \r\n    }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n    const bookingCliked = (event, booking) =>\r\n    {\r\n        setSelectedBooking(booking);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    \r\n\r\n    const getBookingClass = (status) =>\r\n    {\r\n        switch (status) {\r\n\r\n            case 'sample_taken':\r\n                return classes.bookingBoxSampleTaken;\r\n            case 'positive':\r\n                return classes.bookingBoxPositive;\r\n            case 'report_sent':\r\n            case 'report_cert_sent':\r\n                return classes.bookingBoxReportSent;     \r\n\r\n            default : \r\n                return classes.bookingBox;\r\n        }\r\n    }\r\n\r\n    const getBookingsBox = (_bookings) =>\r\n    {\r\n        if (_bookings === null) \r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookings.length > 0)\r\n        {\r\n           return (\r\n                _bookings.map(booking => (\r\n\r\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={getBookingClass(booking.status)} onClick={event => bookingCliked(event,booking)}>\r\n\r\n                        {`${booking.forenameCapital}-${booking.surnameCapital}`.substring(0,15)}\r\n\r\n                    </div>\r\n\r\n                ))\r\n\r\n           );\r\n        }\r\n    }\r\n\r\n\r\n    const handleCloseDialog = () =>\r\n    {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getBookingsBox(filteredBookings)}\r\n\r\n            </div>\r\n\r\n            <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n            />\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n  };\r\n\r\n \r\n  \r\nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken,\r\n       'Content-Type': 'application/json',\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n\r\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/gynae/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gynae/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getShouldRefundsCount = () =>\r\n   {\r\n      return API.get(`/api/gynae/book/getshouldrefundscount?`);\r\n   }\r\n\r\n   \r\n\r\n   static refundBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gynae/payment/refundpayment`, {bookingId: bookingId});\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static changeToPatientAttended = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/changetopatientattended?id=${id}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gynae/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/gynae/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/gynae/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/gynae/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/gynae/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/gynae/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/gynae/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n    static downloadCovidForm1 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadCovidForm2 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfResult = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfCert = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfLabReport = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n}","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PayDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [price, setPrice] = useState(\"\");\r\n  const [priceError, setPriceError] = useState(false);\r\n\r\n\r\n  const priceChanged = (event) =>\r\n  {\r\n    setPrice(event.target.value)\r\n    setPriceError(false)\r\n  }\r\n\r\n  const paymentMethodChanged = (event) => {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    props.handleClose();\r\n    setPaymentMethod(\"credit card\");\r\n    setPrice('')\r\n    setCorporate(corporates[0]);\r\n    setSaving(false);\r\n  };\r\n\r\n  const corporateChanged = (event) => {\r\n    setCorporate(event.target.value);\r\n  };\r\n\r\n  const payClicked = async () => {\r\n\r\n\r\n    if (!price || price.trim().length === 0 || price === '0')\r\n    {\r\n      setPriceError(true)\r\n      return\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n  \r\n\r\n    try {\r\n      await BookService.payBooking(\r\n        props.booking._id,\r\n        price,\r\n        paymentMethod,\r\n        paymentMethod === \"corporate\" ? corporate : \"\"\r\n      );\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <CreditCardIcon\r\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    PAY the CHARGE{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"300px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                  <TextField\r\n                                autoFocus\r\n                                error={priceError}\r\n                                label=\"OTC Charges\"\r\n                                value={price}\r\n                                fullWidth\r\n                                required\r\n                                onChange={priceChanged}\r\n                                name=\"product-price\"\r\n                                id=\"product-price-id\"\r\n                                InputProps={{\r\n                                  inputComponent: NumberFormatCustom,\r\n                                  startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                      £\r\n                                    </InputAdornment>\r\n                                  ),\r\n                                }}\r\n                              />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <div style={{ fontSize: \"17px\" }}>\r\n                      {\" \"}\r\n                      How do you want to pay?{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        aria-label=\"paymentMethod\"\r\n                        name=\"paymentMethod\"\r\n                        value={paymentMethod}\r\n                        onChange={paymentMethodChanged}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"credit card\"\r\n                          control={<Radio />}\r\n                          label=\"Credit Card\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"cash\"\r\n                          control={<Radio />}\r\n                          label=\"Cash\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"corporate\"\r\n                          control={<Radio />}\r\n                          label=\"Corporate\"\r\n                        />\r\n                      </RadioGroup>\r\n\r\n                      {paymentMethod === \"corporate\" && (\r\n                        <FormControl\r\n                          style={{ marginTop: \"10px\" }}\r\n                          className={classes.formControl}\r\n                        >\r\n                          <Select\r\n                            labelId=\"select-corporate\"\r\n                            id=\"select-corporate-id\"\r\n                            value={corporate}\r\n                            onChange={corporateChanged}\r\n                          >\r\n                            {corporates.map((element) => (\r\n                              <MenuItem\r\n                                value={element}\r\n                              >{`${element}`}</MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      )}\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item></Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={payClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Pay\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  DialogContentText,\r\n  FormControlLabel,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport PDFService from \"./services/PDFService\";\r\n\r\nimport { calculatePrice } from \"./PriceCalculator\";\r\n\r\nimport bookingService from \"./services/BookService\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BookService from \"./services/BookService\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  FormatDateFromString,\r\n  RevertFormatDateFromString,\r\n} from \"./DateFormatter\";\r\nimport PayDialog from \"./PayDialog\";\r\n\r\n\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor: \"#373737\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor: \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#333\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n    listStyle: \"none\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  li: {\r\n    marginBottom: \"15px\",\r\n  },\r\n\r\n  icon: {\r\n    marginRight: \"8px\",\r\n  },\r\n\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  lineThrough: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails: {\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\",\r\n  },\r\n\r\n  infoData: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  Accordion: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#222\",\r\n  },\r\n\r\n  AccordionDeleted: {\r\n    backgroundColor: \"#aaa\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  DownloadForm: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n\r\n  infoDataCharges: {\r\n    fontSize: \"18px\",\r\n    color: \"green\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  infoDataChargesHigher: {\r\n    fontSize: \"18px\",\r\n    color: \"red\",\r\n    fontWeight: \"600\",\r\n  },\r\n  BookedLabel: {\r\n    color: \"#606060\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    color: \"#0066aa\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  PositiveLabel: {\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\",\r\n  },\r\n\r\n  EditButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  ResendEmailsButton: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  PayButton: {\r\n    marginLeft: \"70px\",\r\n    width: \"300px\",\r\n  },\r\n\r\n  PayLabel: {\r\n    marginLeft: \"20px\",\r\n\r\n    color: \"#2f942e\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  RestoreButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#eee\",\r\n    color: \"#333\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  DeleteButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\",\r\n    },\r\n\r\n    padding: \"10px\",\r\n  },\r\n\r\n  SaveButton: {\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor: \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  CancelButton: {\r\n    marginBottom: \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  checkIconSmall: {\r\n    color: \"green\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  centeredLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#alert-dialog-slide-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\r\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\r\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\r\n  const [deleteMode, setDeleteMode] = React.useState({\r\n    delete: false,\r\n    person: null,\r\n  });\r\n  const [restoreMode, setRestoreMode] = React.useState({\r\n    restore: false,\r\n    person: null,\r\n  });\r\n\r\n  const [saving, setSaving] = React.useState(false);\r\n  const [deleting, setDeleting] = React.useState(false);\r\n  const [restoring, setRestoring] = React.useState(false);\r\n\r\n  const [validationError, setValidationError] = React.useState({});\r\n\r\n  const [bookingDate, setBookingDate] = React.useState(\"\");\r\n  const [bookingTime, setBookingTime] = React.useState(\"\");\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [tel, setTel] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [service, setService] = React.useState(\"\");\r\n\r\n  const [refreshData, setRefreshData] = React.useState(false);\r\n\r\n  const [booking, setBooking] = React.useState(null);\r\n\r\n  const [recordChanged, setRecordChanged] = React.useState(false);\r\n\r\n  const [fieldChanged, setFieldChanged] = React.useState(false);\r\n\r\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\r\n\r\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\r\n\r\n  const handleCloseTimeStampDialog = () => {\r\n    setOpenTimeStampDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseUndoPayDialog = () => {\r\n    setOpenUndoPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseResendDialog = () => {\r\n    setOpenResendDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleClosePayDialog = () => {\r\n    setOpenPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseRefundDialog = () => {\r\n    setOpenRefundDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (booking) {\r\n      const isChanged =\r\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\r\n        bookingTime !== booking.bookingTime ||\r\n        fullname !== booking.fullname ||\r\n        email !== booking.email ||\r\n        tel !== booking.phone ||\r\n        service !== booking.service ||\r\n        notes !== booking.notes;\r\n\r\n      setRecordChanged(isChanged);\r\n    }\r\n  }, [fieldChanged]);\r\n\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      setTimeout(() => {\r\n        setEditMode({ edit: false, person: null });\r\n        setRecordChanged(false);\r\n      }, 500);\r\n    }\r\n  }, [props.open]);\r\n\r\n  const bookingDateChanged = (event) => {\r\n    setBookingDate(event.target.value);\r\n    setValidationError({ ...validationError, bookingDateError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const bookingTimeChanged = (event) => {\r\n    setBookingTime(event.target.value);\r\n    setValidationError({ ...validationError, bookingTimeError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const telChanged = (event) => {\r\n    setTel(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const serviceChanged = (event) => {\r\n    setService(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    if (status === \"booked\") {\r\n      return <div className={classes.BookedLabel}> Booking Made </div>;\r\n    } else if (status === \"patient_attended\") {\r\n      return (\r\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\r\n      );\r\n    } else {\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const handleEditModeChanged = (edit, person) => {\r\n    if (edit) {\r\n      setFullname(person.fullname);\r\n      setBookingDate(FormatDateFromString(person.bookingDate));\r\n      setBookingTime(person.bookingTime.toUpperCase());\r\n      setEmail(person.email);\r\n      setTel(person.phone);\r\n      setService(person.service);\r\n      if (person.notes) {\r\n        setNotes(person.notes);\r\n      }\r\n\r\n      setEditMode({ edit: edit, person: person });\r\n    } else if (!edit && !person) {\r\n      setEditMode({ edit: edit, person: person });\r\n      setRecordChanged(false);\r\n    } else if (!edit && person) {\r\n      const booking = {};\r\n      const bookingId = person._id;\r\n      booking.email = email;\r\n      booking.phone = tel;\r\n      booking.fullname = fullname;\r\n      booking.notes = notes;\r\n      booking.service = service;\r\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n      booking.bookingTime = bookingTime;\r\n      booking.bookingRef = person.bookingRef;\r\n\r\n      if (validateBooking(booking)) {\r\n        updateBooking({ bookingId: bookingId, person: booking });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateDate = (str) => {\r\n    var error = false;\r\n    if (!str || str.length !== 10) {\r\n      error = true;\r\n    }\r\n\r\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n      if (!result) {\r\n        error = true;\r\n      }\r\n\r\n      const year = parseInt(str.substr(0, 4));\r\n      const month = parseInt(str.substr(5, 2));\r\n      const day = parseInt(str.substr(8, 2));\r\n\r\n      if (year < 1900) {\r\n        error = true;\r\n      }\r\n\r\n      if (month < 1 || month > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (day > 31) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateTime = (str) => {\r\n    var error = false;\r\n\r\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n    if (!result) {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const hour = parseInt(str.substr(0, 2));\r\n      const minute = parseInt(str.substr(3, 2));\r\n\r\n      if (hour < 0 || hour > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (minute < 0 || minute > 59) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateBooking = (booking) => {\r\n    var error = false;\r\n\r\n    if (!validateDate(booking.bookingDate)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingDateError: true });\r\n    }\r\n\r\n    if (!validateTime(booking.bookingTime)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingTimeError: true });\r\n    }\r\n    return !error;\r\n  };\r\n\r\n  const updateBooking = (payload) => {\r\n    setSaving(true);\r\n    bookingService\r\n      .updateBooking(payload)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteBooking = (id) => {\r\n    setDeleting(true);\r\n    bookingService\r\n      .deleteBooking(id)\r\n      .then((res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const restoreBooking = (id) => {\r\n    setRestoring(true);\r\n    bookingService\r\n      .unDeleteBooking(id)\r\n      .then((res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteModeChanged = (del, person) => {\r\n    if (del) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && !person) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && person) {\r\n      deleteBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n    if (restore) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && !person) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && person) {\r\n      restoreBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const changeBackToBookingMade = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeBackToBookingMade(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const changeToPatientAttended = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeToPatientAttended(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const Pay = (event, id) => {\r\n    setSelectedBooking(booking);\r\n    setOpenPayDialog(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      BookService.getBookingById(props.booking._id)\r\n        .then((res) => {\r\n          setBooking(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n    }\r\n  }, [refreshData, state.bookingPayChanged]);\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      setBooking(props.booking);\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const undoPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.unPayBooking(booking._id);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n  };\r\n\r\n  const refundPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.refundBooking(booking._id);\r\n      setSaving(false);\r\n      updateShouldRefundsCount()\r\n      setOpenRefundDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenRefundDialog(false);\r\n    }\r\n  };\r\n\r\n  const updateShouldRefundsCount = async () =>\r\n  {\r\n    try{\r\n      const res = await BookService.getShouldRefundsCount()\r\n      if (res && res.data && res.data.status === \"OK\")\r\n      {\r\n        setState(state => ({...state, shouldRefunsCount: res.data.count}))\r\n      }\r\n    }\r\n    catch(ex)\r\n    {\r\n      console.error(ex)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"sm\"\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={props.onClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle\r\n              id=\"alert-dialog-slide-title\"\r\n              style={\r\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\r\n              }\r\n            >\r\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\r\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(\r\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\r\n                      );\r\n                      setCopied(true);\r\n                      setTimeout(() => {\r\n                        setCopied(false);\r\n                      }, 1500);\r\n                    }}\r\n                    aria-label=\"delete\"\r\n                    className={classes.margin}\r\n                    size=\"small\"\r\n                  >\r\n                    <FileCopyOutlinedIcon\r\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\r\n                      fontSize=\"14px\"\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <span\r\n                  hidden={!copied}\r\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\r\n                >\r\n                  {\" \"}\r\n                  Copied{\" \"}\r\n                </span>\r\n              </div>\r\n\r\n              {/* {booking.tr && (\r\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\r\n                     TR\r\n                </div>\r\n\r\n              )} */}\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={\r\n                      booking.deleted\r\n                        ? {\r\n                            paddingBottom: \"5px\",\r\n                            textDecoration: \"line-through\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {`${booking.fullname}`}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {booking.deleted && (\r\n                  <Grid item>\r\n                    <Tooltip title=\"This record has been deleted.\">\r\n                      <DeleteIcon\r\n                        style={\r\n                          booking.tr\r\n                            ? {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#fff\",\r\n                                fontSize: 25,\r\n                              }\r\n                            : {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#333\",\r\n                                fontSize: 25,\r\n                              }\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  // height: \"550px\",\r\n                  paddingTop: \"0px\",\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={12} key={`panel0`}>\r\n                  <div className={classes.infoDetails}>\r\n                    <ul className={classes.ul}>\r\n                      {/* Restore Functionality ******************************************* */}\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"500\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to restore this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !booking.deleted ||\r\n                          (restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.RestoreButton}\r\n                        >\r\n                          Restore This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Restore this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/*  ******************************************************************* */}\r\n\r\n                      {/* Edit Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          deleteMode.delete ||\r\n                          (editMode.edit && editMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleEditModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.EditButton}\r\n                        >\r\n                          Edit Booking Info\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={saving || !recordChanged}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={saving}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      {/* Delete Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to delete this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          props.deleteButtonDisabled ||\r\n                          booking.deleted ||\r\n                          editMode.edit ||\r\n                          (deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        {booking.OTCCharges > 0 && (\r\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\r\n                            <div>\r\n                            <Button\r\n                              disabled={booking.OTCCharges > 0}\r\n                              type=\"button\"\r\n                              fullWidth\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                handleDeleteModeChanged(true, booking);\r\n                              }}\r\n                              className={classes.DeleteButton}\r\n                            >\r\n                              Delete This Record\r\n                            </Button>\r\n                            </div>\r\n                          </Tooltip>\r\n                        )}\r\n                        {booking.OTCCharges === 0 && (\r\n                          <Button\r\n                            disabled={booking.OTCCharges > 0}\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleDeleteModeChanged(true, booking);\r\n                            }}\r\n                            className={classes.DeleteButton}\r\n                          >\r\n                            Delete This Record\r\n                          </Button>\r\n                        )}\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Delete this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>BOOKED DATE</span>\r\n\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {FormatDateFromString(booking.bookingDate)}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            error={validationError.bookingDateError}\r\n                            className={classes.TextBox}\r\n                            value={bookingDate}\r\n                            onChange={bookingDateChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>BOOKED TIME</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.bookingTime.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            error={validationError.bookingTimeError}\r\n                            className={classes.TextBox}\r\n                            value={bookingTime}\r\n                            onChange={bookingTimeChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>FULLNAME</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.fullname}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={fullname}\r\n                            onChange={fullnameChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>EMAIL</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.email}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={email}\r\n                            onChange={emailChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>TEL</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.phone?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={tel}\r\n                            onChange={telChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>SERVICE</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.service}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={service}\r\n                            onChange={serviceChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>NOTES</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.notes}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={notes}\r\n                            onChange={notesChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\r\n                        {getStatusLabel(booking.status)}\r\n                        {booking.status === \"patient_attended\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeBackToBookingMade(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change Back To Booking Made\r\n                            </Button>\r\n                          )}\r\n                        {booking.status === \"booked\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"default\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeToPatientAttended(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change To Patient Attended\r\n                            </Button>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <div\r\n                          style={{\r\n                            borderTop: \"1px solid #ddd\",\r\n                            paddingTop: \"20px\",\r\n                          }}\r\n                        >\r\n                          <span className={classes.infoTitle}>\r\n                            ONLINE DEPOSIT\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className={\r\n                              !booking.deposit || booking.deposit === 0\r\n                                ? classes.infoDataChargesHigher\r\n                                : classes.infoDataCharges\r\n                            }\r\n                          >{`£${booking.deposit.toLocaleString(\r\n                            \"en-GB\"\r\n                          )}`}</span>\r\n                          {!(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                            !booking.paid &&\r\n                            booking.deleted &&\r\n                            booking.deposit > 0 && (\r\n                              <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                className={classes.PayButton}\r\n                                onClick={(event) => setOpenRefundDialog(true)}\r\n                              >\r\n                                Refund Deposit\r\n                              </Button>\r\n                            )}\r\n                          {!(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                            booking.refund && (\r\n                              <React.Fragment>\r\n                                <span className={classes.PayLabel}>\r\n                                  {\" \"}\r\n                                  <CheckIcon\r\n                                    className={classes.checkIconSmall}\r\n                                  />{\" \"}\r\n                                  Refund Done\r\n                                  {booking.paidBy === \"corporate\"\r\n                                    ? ` \"${booking.corporate}\" `\r\n                                    : \"\"}\r\n                                </span>\r\n                              </React.Fragment>\r\n                            )}\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>OTC CHARGES</span>{\" \"}\r\n                        <span\r\n                          style={{ paddingLeft: \"15px\" }}\r\n                          className={\r\n                            !booking.OTCCharges || booking.OTCCharges === 0\r\n                              ? classes.infoDataChargesHigher\r\n                              : classes.infoDataCharges\r\n                          }\r\n                        >{`£${booking.OTCCharges.toLocaleString(\r\n                          \"en-GB\"\r\n                        )}`}</span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.paid &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              className={classes.PayButton}\r\n                              onClick={(event) => Pay(event, booking._id)}\r\n                            >\r\n                              Pay\r\n                            </Button>\r\n                          )}\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          booking.paid && (\r\n                            <React.Fragment>\r\n                              <span className={classes.PayLabel}>\r\n                                {\" \"}\r\n                                <CheckIcon\r\n                                  className={classes.checkIconSmall}\r\n                                />{\" \"}\r\n                                Paid by {booking.paidBy}\r\n                                {booking.paidBy === \"corporate\"\r\n                                  ? ` \"${booking.corporate}\" `\r\n                                  : \"\"}\r\n                              </span>\r\n\r\n                              <Tooltip title=\"Undo Payment\">\r\n                                <IconButton\r\n                                  onClick={() => setOpenUndoPayDialog(true)}\r\n                                >\r\n                                  <UndoIcon style={{ color: \"red\" }} />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <div\r\n                          style={{\r\n                            borderTop: \"1px solid #ddd\",\r\n                            paddingTop: \"10px\",\r\n                          }}\r\n                        >\r\n                          <span className={classes.infoTitle}>\r\n                            TOTAL CHARGES\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className={\r\n                              !booking.OTCCharges || booking.OTCCharges === 0\r\n                                ? classes.infoDataChargesHigher\r\n                                : classes.infoDataCharges\r\n                            }\r\n                          >{`£${(\r\n                            booking.deposit + booking.OTCCharges\r\n                          ).toLocaleString(\"en-GB\")}`}</span>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving || deleting || restoring}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n\r\n            <PayDialog\r\n              booking={selectedBooking}\r\n              open={openPayDialog}\r\n              handleClose={handleClosePayDialog}\r\n            />\r\n\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openUndoPayDialog}\r\n            onClose={handleCloseUndoPayDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Undo Payment\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to undo payment for this booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\r\n                Yes, Undo Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openRefundDialog}\r\n            onClose={handleCloseRefundDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Refund Deposit\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to refund deposit payment for this booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button onClick={refundPaymentClicked} color=\"secondary\" autoFocus>\r\n                Yes, Refund Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BookingDialog from './BookingDialog';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as dateformat from 'dateformat';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PriceCalculator from './PriceCalculator';\r\nimport { corporates } from './Corporates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel:{\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color : \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\"\r\n  },\r\n\r\n  ExportToExcelButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n   \r\n  },\r\n\r\n  ExportToExcelButtonInline:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n    cursor: \"pointer\",\r\n    padding: \"10px\"\r\n   \r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n},\r\n\r\nth: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntd: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntopSelect: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 80,\r\n},\r\n\r\nnotifyIcon:{\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor : \"rgb(220, 0, 78)\",\r\n  marginLeft: \"10px\"\r\n}\r\n\r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else if (str === 'live')\r\n  {\r\n    return `Live Bookings`;\r\n  }else if (str === 'completed')\r\n  {\r\n    return `Completed Bookings`;\r\n  }else if (str === 'positive')\r\n  {\r\n    return `Positive Results`;\r\n  }else if (str === 'deleted')\r\n  {\r\n    return `Deleted Records`;\r\n  }else if (str === 'late')\r\n  {\r\n    return `40 Hours Late`;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n}\r\n\r\nconst getTableIcon = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'old')\r\n  {\r\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'future')\r\n  {\r\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'recent')\r\n  {\r\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'live')\r\n  {\r\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'completed')\r\n  {\r\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'positive')\r\n  {\r\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\r\n  }else if (str === 'deleted')\r\n  {\r\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'late')\r\n  {\r\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [topCount, setTopCount] = React.useState(25)\r\n  const topCountChanged = (event) =>\r\n  {\r\n    setTopCount(event.target.value)\r\n    loadData(event.target.value)\r\n  }\r\n  \r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () =>\r\n  {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  }\r\n\r\n\r\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const[chkDate, setChkDate] = useState(true);\r\n  const[chkForename, setChkForename] = useState(true);\r\n  const[chkSurname, setChkSurname] = useState(true);\r\n  const[chkDOB, setChkDOB] = useState(true);\r\n  const[chkEmail, setChkEmail] = useState(true);\r\n  const[chkTel, setChkTel] = useState(true);\r\n  const[chkCertificate, setChkCertidicate] = useState(true);\r\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const[chkextRef, setChkExtRef] = useState(true);\r\n  const[chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) =>\r\n  {\r\n    setJustCorporate(event.target.checked);\r\n  }\r\n  \r\n\r\n  const chkDateChanged = (event) =>\r\n  {\r\n    setChkDate(event.target.checked);\r\n  }\r\n\r\n  const chkForenameChanged = (event) =>\r\n  {\r\n    setChkForename(event.target.checked);\r\n  }\r\n\r\n  const chkSurnameChanged = (event) =>\r\n  {\r\n    setChkSurname(event.target.checked);\r\n  }\r\n\r\n  const chkDOBChanged = (event) =>\r\n  {\r\n    setChkDOB(event.target.checked);\r\n  }\r\n\r\n  const chkEmailChanged = (event) =>\r\n  {\r\n    setChkEmail(event.target.checked);\r\n  }\r\n\r\n  const chkTelChanged = (event) =>\r\n  {\r\n    setChkTel(event.target.checked);\r\n  }\r\n\r\n  const chkCertificateChanged = (event) =>\r\n  {\r\n    setChkCertidicate(event.target.checked);\r\n  }\r\n\r\n  const chkAntiBodyTestChanged = (event) =>\r\n  {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  }\r\n\r\n  const chkextRefChanged = (event) =>\r\n  {\r\n    setChkExtRef(event.target.checked);\r\n  }\r\n\r\n  const chkPriceChanged = (event) =>\r\n  {\r\n    setChkPrice(event.target.checked);\r\n  }\r\n\r\n\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === 'recent')\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n\r\n           <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n\r\n          \r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n        if (!params.value)\r\n        {\r\n           return ( \r\n              <React.Fragment>                    \r\n                    <CloseIcon className={classes.closeIcon}/>                        \r\n              </React.Fragment>\r\n           );\r\n        }\r\n        else\r\n        {\r\n           if (params.getValue('paidBy') === 'credit card')\r\n           {\r\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'cash')\r\n           {\r\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'corporate')\r\n           {\r\n             return ( <BusinessIcon className={classes.checkIcon}/> );\r\n           }\r\n           else\r\n           {\r\n             return '';  \r\n           }\r\n        }\r\n  }\r\n },\r\n\r\n\r\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \r\n        return formatTimeStamp(params.value);\r\n        }\r\n      },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n          }\r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink}\r\n              //  onClick={\r\n              //   () => {\r\n              //     console.log(params.value);\r\n  \r\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n              //     setState(state => ({...state, ref : params.value}));\r\n              //     setState(state => ({...state, refError : false})); \r\n              //     setState(state => ({...state, foundRecords : []}));\r\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n              //   }\r\n              // }\r\n              \r\n              >\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n      { field: 'email', headerName: 'Email', width: 200 },\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'service', headerName: 'Service', width: 250 },\r\n      { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n\r\n  }\r\n  else\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n            <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n               if (!params.value)\r\n               {\r\n                  return ( \r\n                    <React.Fragment>\r\n                                <CloseIcon className={classes.closeIcon}/> \r\n                                {parseInt(params.getValue('deposit')) > 0 && (\r\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\r\n                                )}\r\n\r\n                               \r\n                    </React.Fragment>\r\n                     \r\n                        \r\n                  \r\n                  \r\n                  );\r\n               }\r\n               else\r\n               {\r\n                  if (params.getValue('paidBy') === 'credit card')\r\n                  {\r\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'cash')\r\n                  {\r\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'corporate')\r\n                  {\r\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else\r\n                  {\r\n                    return '';  \r\n                  }\r\n               }\r\n         }\r\n        },\r\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n          return FormatDateFromString(params.value);\r\n      }\r\n   },\r\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n    return params.getValue('bookingTime');\r\n  }},\r\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n      if (params.value === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}>  BM </span>\r\n        );\r\n    \r\n      }else if (params.value === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> PA </span>\r\n        );\r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n  },\r\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n    return (\r\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n          <Link className={classes.RefLink}\r\n          //  onClick={\r\n          //   () => {\r\n          //     console.log(params.value);\r\n\r\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n          //     setState(state => ({...state, ref : params.value}));\r\n          //     setState(state => ({...state, refError : false})); \r\n          //     setState(state => ({...state, foundRecords : []}));\r\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n          //   }\r\n          // }\r\n          \r\n          >\r\n            {params.value}\r\n          </Link>\r\n      </Tooltip>\r\n\r\n    );\r\n  }},\r\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n  { field: 'email', headerName: 'Email', width: 200 },\r\n  { field: 'phone', headerName: 'Tel', width: 150 },\r\n  { field: 'service', headerName: 'Service', width: 250 },\r\n  { field: 'notes', headerName: 'Notes', width: 500 },\r\n\r\n    \r\n    ];\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n  \r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) =>\r\n  {\r\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n    if (todayStr === timeStampStr)\r\n    {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    }\r\n    else\r\n    {\r\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  }\r\n\r\n  const loadData = (top) =>\r\n  {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === 'today')\r\n    {\r\n      api = BookService.getTodayBookings;\r\n    }else if (props.date === 'old')\r\n    {\r\n      api = BookService.getOldBookings;\r\n    }else if (props.date === 'future')\r\n    {\r\n      api = BookService.getFutureBookings;\r\n    }else if (props.date === 'recent')\r\n    {\r\n      api = BookService.getRecentBookingsAll;\r\n    }\r\n    else if (props.date === 'deleted')\r\n    {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n     \r\n    setData({bookings: [], cachedBookings: [], isFetching: true});\r\n   \r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top).then( (res) =>{\r\n      // console.log(res)\r\n      for (var i=0; i < res.data.length; i++)\r\n      {\r\n        res.data[i] = {...res.data[i], id : i + 1}\r\n      }  \r\n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\r\n      // return res.data;\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n            setTopCount(25)\r\n            loadData(25)\r\n        },\r\n        [props.date]);\r\n\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => \r\n\r\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n             || (element.service.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n               \r\n              \r\n          );\r\n  \r\n  \r\n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n  \r\n      useEffect(() => {\r\n\r\n       loadData(topCount)\r\n    \r\n      }, [state.bookingDialogDataChanged]);    \r\n\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  }    \r\n  \r\n  const openDetailsDialog = (event, id) =>\r\n  {\r\n    const booking = data.bookings.find(element => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n\r\n  }\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    loadData(topCount)\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) =>\r\n  {\r\n    setOpenDialogExcel(true);\r\n  }\r\n\r\n  const isTopSelectHidden = (date)=>\r\n  {\r\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.showCreateExcel && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {/* {FormatDateFromString(booking.birthDate)} */}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n} ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\n\r\nconst emptyData = [\r\n  createData('09:00', 0),\r\n  createData('10:00', 0),\r\n  createData('11:00', 0),\r\n  createData('12:00', 0),\r\n  createData('13:00', 0),\r\n  createData('14:00', 0),\r\n  createData('15:00', 0),\r\n  createData('16:00', 0),\r\n  createData('17:00', 0),\r\n  createData('18:00', undefined),\r\n\r\n];\r\n\r\nconst getCount = (data, str) =>\r\n{\r\n  if (!data)\r\n    return 0;\r\n\r\n  var count = 0;\r\n  for (var i=0; i < data.length; i++)\r\n  {\r\n    if (data[i]._id.substr(0,2) === str)\r\n    {\r\n      count += data[i].count;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  const [data, setData] = React.useState(emptyData);\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n      var result = [];\r\n      try\r\n      {\r\n          setLoading(true)\r\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\r\n          setLoading(false)\r\n          const data = res.data.result;\r\n          result.push(createData('09:00', getCount(data,'09')));\r\n          result.push(createData('10:00', getCount(data,'10')));\r\n          result.push(createData('11:00', getCount(data,'11')));\r\n          result.push(createData('12:00', getCount(data,'12')));\r\n          result.push(createData('13:00', getCount(data,'13')));\r\n          result.push(createData('14:00', getCount(data,'14')));\r\n          result.push(createData('15:00', getCount(data,'15')));\r\n          result.push(createData('16:00', getCount(data,'16')));\r\n          result.push(createData('17:00', getCount(data,'17')));\r\n          result.push(createData('18:00', undefined));\r\n \r\n           setData(result);\r\n      }\r\n      catch(err){\r\n        setLoading(false)\r\n        console.error(err);\r\n      }\r\n\r\n    }\r\n  \r\n   fetchData();\r\n\r\n  }, [] );\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\r\nimport * as dateformat from \"dateformat\";\r\nimport BookService from \"./services/BookService\";\r\nimport BookingDialog from \"./BookingDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    margin: \"5px\",\r\n    padding: \"5px\",\r\n    maxWidth: \"90px\",\r\n    minHeight: \"30px\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    align: \"center\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n});\r\n\r\nconst isWeekend = (date) => {\r\n\r\n  return date.getDay() === 1|| date.getDay() === 2 || date.getDay() === 3 || date.getDay() === 6 || date.getDay() === 0 ; \r\n};\r\n\r\nconst isThursday = (date) =>\r\n{\r\n    return (date.getDay() === 4) /// Thursday\r\n}\r\n\r\nconst isFriday = (date) =>\r\n{\r\n    return (date.getDay() === 5) /// Friday\r\n}\r\n\r\n\r\nconst getCurrentTimeSlot = (now) => {\r\n  \r\n  if (isWeekend(now)) {\r\n    return null;\r\n  }\r\n\r\n\r\n  var min = now.getMinutes();\r\n  var hour = now.getHours();\r\n\r\n  if (isThursday(now) && hour < 13)\r\n  {\r\n    return null\r\n  }\r\n\r\n  if (isFriday(now) && hour >= 13)\r\n  {\r\n    return null\r\n  }\r\n\r\n  if (hour < 10 || hour >= 18) return null;\r\n\r\n  if (hour === 10 && min < 45) {\r\n    return \"10:00 AM\";\r\n  }\r\n\r\n  if ((hour === 10 && min >= 45) || (hour === 11 && min < 30)) {\r\n    return \"10:45 AM\";\r\n  }\r\n\r\n  if ((hour === 11 && min >= 30) || (hour === 12 && min < 15)) {\r\n    return \"11:30 AM\";\r\n  }\r\n\r\n  if (hour === 12 && min >= 15) {\r\n    return \"12:15 AM\";\r\n  }\r\n\r\n  if (hour === 13 && min < 45) {\r\n    return \"01:00 PM\";\r\n  }\r\n\r\n  if ((hour === 13 && min >= 45) || (hour === 14 && min < 30)) {\r\n    return \"01:45 PM\";\r\n  }\r\n\r\n  if ((hour === 14 && min >= 30) || (hour === 15 && min < 15)) {\r\n    return \"02:30 PM\";\r\n  }\r\n\r\n  if (hour === 15 && min >= 15) {\r\n    return \"03:15 PM\";\r\n  }\r\n\r\n  if (hour === 16 && min < 45) {\r\n    return \"04:00 PM\";\r\n  }\r\n\r\n  if ((hour === 16 && min >= 45) || (hour === 17 && min < 30)) {\r\n    return \"04:45 PM\";\r\n  }\r\n\r\n  if (hour === 17 && min >= 30) {\r\n    return \"05:30 PM\";\r\n  }\r\n};\r\n\r\nconst getCurrentTimeSlotLabel = (timeStr) => {\r\n  if (!timeStr) {\r\n    return \"Closed\";\r\n  }\r\n\r\n  let endTimeStr = \"\";\r\n  switch (timeStr) {\r\n    case \"10:00 AM\":\r\n      endTimeStr = \"10:45 AM\";\r\n      break;\r\n    case \"10:45 AM\":\r\n      endTimeStr = \"11:30 AM\";\r\n      break;\r\n    case \"11:30 AM\":\r\n      endTimeStr = \"12:15 PM\";\r\n      break;\r\n    case \"12:15 PM\":\r\n      endTimeStr = \"01:00 PM\";\r\n      break;\r\n    case \"01:00 PM\":\r\n      endTimeStr = \"01:45 PM\";\r\n      break;\r\n    case \"01:45 PM\":\r\n      endTimeStr = \"02:30 PM\";\r\n      break;\r\n    case \"02:30 PM\":\r\n      endTimeStr = \"03:15 PM\";\r\n      break;\r\n    case \"03:15 PM\":\r\n      endTimeStr = \"04:00 PM\";\r\n      break;\r\n    case \"04:00 PM\":\r\n      endTimeStr = \"04:45 PM\";\r\n      break;\r\n    case \"04:45 PM\":\r\n      endTimeStr = \"05:30 PM\";\r\n      break;\r\n    case \"05:30 PM\":\r\n      endTimeStr = \"06:10 PM\";\r\n      break;\r\n    default:\r\n      endTimeStr = \"\";\r\n      break;\r\n  }\r\n\r\n  return `${timeStr} - ${endTimeStr}`;\r\n};\r\n\r\nexport default function CurrentVisits() {\r\n  const classes = useStyles();\r\n\r\n  const [current, setCurrent] = React.useState(new Date());\r\n  const [bookings, setBookings] = React.useState([]);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentTimeSlot = getCurrentTimeSlot(current);\r\n    if (!currentTimeSlot) return;\r\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\r\n    setLoading(true);\r\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.status === \"OK\") {\r\n          setBookings([...res.data.bookings]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }, [current]);\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings && _bookings.length > 0) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={0}\r\n          >\r\n            {_bookings.map((booking) => (\r\n              <Grid item>\r\n                <div\r\n                  className={classes.bookingBox}\r\n                  onClick={(event) => bookingCliked(event, booking)}\r\n                >\r\n                  <span style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\r\n                  </span>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(current, \"dd mmmm, yyyy\")}\r\n      </Typography>\r\n\r\n      {getBookingsBox(bookings)}\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\r\n  }\r\n\r\n  const loadData = () => \r\n  {\r\n    setData({bookings: data.bookings, isFetching: true});\r\n    setLoading(true)\r\n    BookService.getRecentBookings().then( (res) =>{\r\n      setLoading(false)\r\n        setData({bookings: res.data, isFetching: false});\r\n\r\n    }).catch( (err) => {\r\n      setLoading(false)\r\n        console.log(err);\r\n        setData({bookings: data.bookings, isFetching: false});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n          loadData();\r\n        },\r\n        [refresh]);   \r\n\r\n\r\n   useEffect( () => {\r\n     loadData();\r\n     const interval = setInterval(() => {\r\n       setRefresh(refresh => !refresh);\r\n     }, 30000);\r\n\r\n     return () =>\r\n     {\r\n       clearInterval(interval)\r\n     }\r\n     \r\n   }, []) ;    \r\n\r\n   const formatTimeStamp = (timeStamp) =>\r\n   {\r\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n     if (todayStr === timeStampStr)\r\n     {\r\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n     }\r\n     else\r\n     {\r\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n     }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Fullname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>Tel</TableCell>\r\n            <TableCell>Service</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\r\n              <TableCell>{row.fullname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{row.tel}</TableCell>\r\n              <TableCell>{row.service}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport CurrentVisits from './CurrentVisits';\r\n\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport BookingView from './BookingView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Current Visits */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <CurrentVisits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Bookings */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n  },\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#555\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\" ,\r\n    width: \"400px\"    \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n      \r\n    },\r\n    width: \"400px\"   \r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState('panel0');\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [fullname, setFullname] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [service, setService] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const fullnameChanged = (event) =>\r\n    {\r\n      setFullname(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const serviceChanged = (event) =>\r\n    {\r\n      setService(event.target.value);\r\n    }\r\n\r\n    const notesChanged = (event) =>\r\n    {\r\n      setNotes(event.target.value);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setFullname(person.fullname);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime);\r\n         setEmail(person.email);\r\n         setTel(person.phone);\r\n         setService(person.service)\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes);\r\n         }\r\n        \r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.fullname = fullname;\r\n          booking.notes = notes;\r\n          booking.service = service;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const changeBackToBookingMade = (event, id) =>\r\n   {\r\n     setSaving(true);\r\n     bookingService.changeBackToBookingMade(id).then(res => {\r\n       setSaving(false);\r\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n     }).catch(err => {\r\n       console.log(err);\r\n       setSaving(false);\r\n     })\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                      {person.deleted && (\r\n                          <Tooltip  title=\"This record has been deleted.\">\r\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.fullname}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n\r\n\r\n                        <ul className={classes.ul}>\r\n\r\n                        {/* Restore Functionality ******************************************* */}  \r\n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\r\n                                Are you sure you want to restore this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\r\n                                 <Button\r\n\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\r\n                                    className={classes.RestoreButton}\r\n                                 >\r\n                                   Restore This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Restore this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n                           {/*  ******************************************************************* */}\r\n\r\n                              {/* Edit Functionality ******************************************* */}\r\n\r\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                            \r\n                            {/* ****************************************************************************************** */}\r\n\r\n\r\n                            {/* Delete Functionality ******************************************* */}\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\r\n                                Are you sure you want to delete this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\r\n                                    className={classes.DeleteButton}\r\n                                 >\r\n                                   Delete This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Delete this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                                 \r\n                            {/* ****************************************************************************************** */}\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                   {FormatDateFromString(person.bookingDate) }\r\n                                  </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={fullname}\r\n                                                      onChange = {fullnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SERVICE</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={service}\r\n                                                      onChange = {serviceChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>NOTES</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={notes}\r\n                                                      onChange = {notesChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> \r\n                                {getStatusLabel(person.status)} \r\n                            </li>\r\n      \r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\nimport { width } from '@material-ui/system';\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\",\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n//   useEffect( () =>\r\n//   {\r\n//      findRecords();\r\n//   }, [state.findRecords]);\r\n\r\n useEffect ( () => {\r\n    setState(state => ({...state, foundRecords : []}));\r\n }, [])\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 10;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 )\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 1;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '10:00 AM',\r\n    '10:45 AM', \r\n    '11:30 AM', \r\n    '12:15 PM',\r\n    '01:00 PM',\r\n    '01:45 PM',\r\n    '02:30 PM',\r\n    '03:15 PM',\r\n    '04:00 PM',\r\n    '04:45 PM',\r\n    '05:30 PM',\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\nimport BookingDialog from '../BookingDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        height : \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        justifyItems: \"flex-start\",\r\n        paddingLeft : \"10px\"\r\n\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"10%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n    bookingBox: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#ebedf7\",\r\n        color: \"#3f51b5\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#3f51b5\",\r\n            color: \"#ebedf7\"\r\n          },\r\n    },\r\n\r\n    bookingBoxSampleTaken: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#0066cc\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#0059b3\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n    bookingBoxPositive: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#d40b0b\",\r\n        color: \"#fff2f2\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#bf0000\",\r\n            color: \"#fff\"\r\n          },\r\n    },\r\n\r\n    bookingBoxReportSent: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#009900\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#006e00\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n  \r\n\r\n  }));\r\n\r\n\r\n\r\nconst DayViewCell = ({key, date, time}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookings, setBookings] = React.useState(null);\r\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n    const [refresh, setRefresh] = React.useState(true); \r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n    }, [date]);\r\n\r\n    useEffect( () => \r\n    {\r\n        if (bookings) {\r\n\r\n\r\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\r\n            {\r\n                const search = state.dayViewCalFilter.trim().toUpperCase();\r\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\r\n                                                          \r\n                    \r\n                    ));\r\n            }\r\n            else\r\n            {\r\n                setFilteredBookings([...bookings]);\r\n            }\r\n        }\r\n\r\n    }, [state.dayViewCalFilter, bookings]);\r\n \r\n\r\n\r\n    useEffect ( () => {\r\n       \r\n        const fetchData = async () =>\r\n        {\r\n            if (!date || date.length <= 0 || !time || time.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n         \r\n            // if (isPast)\r\n            // {\r\n            //     setBookings([]);\r\n            //     return;\r\n            // }\r\n    \r\n            setBookings(null);\r\n    \r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n            if (!res || openDialog)\r\n            {\r\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }\r\n          \r\n          \r\n            if (res.data.status === 'OK')\r\n            {\r\n                setBookings(res.data.bookings);\r\n            }   \r\n        }\r\n\r\n        if (openDialog)\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\r\n        }\r\n\r\n         fetchData();\r\n     \r\n    }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n    const bookingCliked = (event, booking) =>\r\n    {\r\n        setSelectedBooking(booking);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    \r\n\r\n    const getBookingClass = (status) =>\r\n    {\r\n        switch (status) {\r\n\r\n            case 'patient_attended':\r\n                return classes.bookingBoxSampleTaken;\r\n            default : \r\n                return classes.bookingBox;\r\n        }\r\n    }\r\n\r\n    const getBookingsBox = (_bookings) =>\r\n    {\r\n        if (_bookings === null) \r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookings.length > 0)\r\n        {\r\n           return (\r\n                _bookings.map(booking => (\r\n\r\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={getBookingClass(booking.status)} onClick={event => bookingCliked(event,booking)}>\r\n\r\n                        {`${booking.fullname}`.substring(0,15)}\r\n\r\n                    </div>\r\n\r\n                ))\r\n           );\r\n        }\r\n    }\r\n\r\n\r\n    const handleCloseDialog = () =>\r\n    {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getBookingsBox(filteredBookings)}\r\n\r\n            </div>\r\n\r\n            <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n            />\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n  };\r\n\r\n \r\n  \r\nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\n\r\n\r\n\r\nconst rows = [\r\n    '10:00 AM',\r\n    '10:45 AM', \r\n    '11:30 AM', \r\n    '12:15 PM',\r\n    '01:00 PM',\r\n    '01:45 PM',\r\n    '02:30 PM',\r\n    '03:15 PM',\r\n    '04:00 PM',\r\n    '04:45 PM',\r\n    '05:30 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\n\r\nimport * as dateformat from \"dateformat\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function TodayBookingView() {\r\n  const classes = useStyles();\r\n  \r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    const today = dateformat(new Date(), 'yyyy-mm-dd')\r\n    try{\r\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(today)\r\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(today)\r\n      \r\n      const pcr =  parseInt(res1.data.count)\r\n      const gynae = parseInt(res2.data.count)\r\n\r\n      const _data = [\r\n        {clinic: \"PCR\", count: pcr},\r\n        {clinic: \"Gynae\", count: gynae},\r\n        {clinic: \"Total\", count: pcr+gynae}\r\n      ]\r\n\r\n      setData(_data)\r\n\r\n      setLoading(false);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today Bookings</Title>\r\n      {data && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Clinic</TableCell>\r\n              <TableCell>Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.clinic}</TableCell>\r\n                <TableCell>{row.count}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\n\r\nimport * as dateformat from \"dateformat\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function TomorrowBookingView() {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    const today = new Date()\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000)\r\n\r\n    const tomorrowStr = dateformat(tomorrow, 'yyyy-mm-dd')\r\n    try{\r\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(tomorrowStr)\r\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(tomorrowStr)\r\n      \r\n      const pcr =  parseInt(res1.data.count)\r\n      const gynae = parseInt(res2.data.count)\r\n\r\n      const _data = [\r\n        {clinic: \"PCR\", count: pcr},\r\n        {clinic: \"Gynae\", count: gynae},\r\n        {clinic: \"Total\", count: pcr+gynae}\r\n      ]\r\n\r\n      setData(_data)\r\n\r\n      setLoading(false);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Tomorrow Bookings</Title>\r\n      {data && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Clinic</TableCell>\r\n              <TableCell>Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.clinic}</TableCell>\r\n                <TableCell>{row.count}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\n\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function TotalBookingView() {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n   \r\n    try{\r\n      const res1 = await PCRBookService.getAllBookingsCountAll()\r\n      const res2 = await GynaeBookService.getAllBookingsCountAll()\r\n      \r\n      const pcr =  parseInt(res1.data.count)\r\n      const gynae = parseInt(res2.data.count)\r\n\r\n      const _data = [\r\n        {clinic: \"PCR\", count: pcr},\r\n        {clinic: \"Gynae\", count: gynae},\r\n        {clinic: \"Total\", count: pcr+gynae}\r\n      ]\r\n\r\n      setData(_data)\r\n\r\n      setLoading(false);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n    \r\n\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Total Bookings</Title>\r\n      {data && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Clinic</TableCell>\r\n              <TableCell>Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.clinic}</TableCell>\r\n                <TableCell>{row.count}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countLabel: {\r\n   position: \"absolute\",\r\n   top: \"65px\",\r\n   left: \"44%\",\r\n   fontSize: \"3rem\",\r\n  },\r\n\r\n  countLabelRed: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.secondary.main\r\n   },\r\n\r\n   Icon: {\r\n    fontSize: \"2rem\"\r\n\r\n  },\r\n\r\n  IconRed: {\r\n   fontSize: \"2rem\",\r\n  //  color: theme.palette.secondary.main,\r\n  },\r\n\r\n  TitleRed:{\r\n    // color: theme.palette.secondary.main,\r\n  }\r\n\r\n\r\n}));\r\n\r\nexport default function LateBookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await PCRBookService.getLateBookings();\r\n\r\n      setData(res.data.length);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"relative\" }}>\r\n        {loading && (\r\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n            <LinearProgress color=\"primary\" />\r\n          </div>\r\n        )}\r\n        <Title>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <div style={{ paddingTop: \"5px\" }}>\r\n                <HourglassEmptyIcon className={data === 0 ? classes.Icon : classes.IconRed } />\r\n              </div>\r\n            </Grid>\r\n            <Grid item style={{ textAlign: \"left\" }}>\r\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\r\n                  PCR 40-Hours Late\r\n              </span>\r\n           \r\n            </Grid>\r\n          </Grid>\r\n\r\n          {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\r\n        </Title>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countLabel: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n  },\r\n\r\n  countLabelRed: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n\r\n  Icon: {\r\n    fontSize: \"2rem\",\r\n  },\r\n\r\n  IconRed: {\r\n    fontSize: \"2rem\",\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n\r\n  TitleRed: {\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function UnmatchedBookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await PCRBookService.getUnmatchedRecords();\r\n\r\n      setData(res.data.length);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"relative\" }}>\r\n        {loading && (\r\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n            <LinearProgress color=\"primary\" />\r\n          </div>\r\n        )}\r\n        <Title>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <div style={{ paddingTop: \"5px\" }}>\r\n                <ReportProblemOutlinedIcon\r\n                  className={data === 0 ? classes.Icon : classes.IconRed}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item style={{ textAlign: \"left\" }}>\r\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\r\n                PCR Unmatched Records\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {data !== null && (\r\n            <div\r\n              className={\r\n                data === 0 ? classes.countLabel : classes.countLabelRed\r\n              }\r\n            >\r\n              {data}\r\n            </div>\r\n          )}\r\n        </Title>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countLabel: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n  },\r\n\r\n  countLabelRed: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n\r\n  Icon: {\r\n    fontSize: \"2rem\",\r\n  },\r\n\r\n  IconRed: {\r\n    fontSize: \"2rem\",\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n\r\n  TitleRed: {\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function ShouldRefundBookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await GynaeBookService.getShouldRefundsCount()\r\n      setData(res.data.count);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"relative\" }}>\r\n        {loading && (\r\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n            <LinearProgress color=\"primary\" />\r\n          </div>\r\n        )}\r\n        <Title>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <div style={{ paddingTop: \"5px\" }}>\r\n                <ReportProblemOutlinedIcon\r\n                  className={data === 0 ? classes.Icon : classes.IconRed}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item style={{ textAlign: \"left\" }}>\r\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\r\n                Gynae Waiting for Refunds\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {data !== null && (\r\n            <div\r\n              className={\r\n                data === 0 ? classes.countLabel : classes.countLabelRed\r\n              }\r\n            >\r\n              {data}\r\n            </div>\r\n          )}\r\n        </Title>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\n\r\nimport TodayBookingView from \"./TodayBookingView\" \r\nimport TomorrowBookingView from \"./TomorrowBookingView\";\r\nimport TotalBookingView from \"./TotalBookingView\";\r\nimport LateBookingView from \"./LateBookingView\";\r\nimport UnmatchedBookingView from \"./UnmatchedBookingView\";\r\nimport ShouldRefundBookingView from \"./ShouldRefundBookingView\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 220,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>       \r\n       \r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <TodayBookingView />\r\n          </Paper>\r\n        </Grid>\r\n      \r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <TomorrowBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <TotalBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <LateBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <UnmatchedBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <ShouldRefundBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\n\r\n/// PCR ------------------\r\nimport FindByRef from \"./PCR/FindByRef\";\r\nimport BookingTable from \"./PCR/BookingTable\";\r\nimport DashboardPreview from \"./PCR/DashboardPreview\";\r\nimport UnmatchedRecords from \"./PCR/UnmatchedRecords\";\r\nimport CalendarView from \"./PCR/calendar/CalendarView\";\r\nimport AdminCalendarView from \"./PCR/calendar-admin/CalendarView\";\r\n//-----------------------\r\n\r\n/// Gynae -------------------\r\nimport GynaeBookingTable from \"./Gynae/BookingTable\";\r\nimport GynaeDashboardPreview from \"./Gynae/DashboardPreview\"\r\nimport GynaeFindByRef from \"./Gynae/FindByRef\"\r\nimport GynaeCalendarView from \"./Gynae/calendar-admin/CalendarView\"\r\n//----------------------------\r\n\r\n\r\n// Admin ----------------\r\nimport AdminDashBoardPreview from \"./DashboardPreview\"\r\n\r\n//---------------\r\n\r\nexport const MenuList_Admin = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n];\r\n\r\nexport const MenuList_Gynae = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `oldBookings`,\r\n    title: `Old Bookings`,\r\n    icon: <HistoryIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 5,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const MenuList_PCR = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `liveBookings`,\r\n    title: `Live Bookings`,\r\n    icon: <LiveTvIcon />,\r\n  },\r\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\r\n  {\r\n    index: 5,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: `completedBookings`,\r\n    title: `Completed Bookings`,\r\n    icon: <PlaylistAddCheckIcon />,\r\n  },\r\n  {\r\n    index: 8,\r\n    id: `positiveBookings`,\r\n    title: `Positive Results`,\r\n    icon: <AddCircleOutlineIcon />,\r\n  },\r\n  {\r\n    index: 9,\r\n    id: `latebookings`,\r\n    title: `40 Hours Late`,\r\n    icon: <HourglassEmptyIcon />,\r\n  },\r\n  {\r\n    index: 10,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n  {\r\n    index: 11,\r\n    id: `unmatchedRecords`,\r\n    title: `Unmatched Records`,\r\n    icon: <WarningIcon />,\r\n  },\r\n  {\r\n    index: 12,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n  {\r\n    index: 13,\r\n    id: `adminCalendarView`,\r\n    title: `Admin Calendar`,\r\n    icon: <EventNoteIcon />,\r\n  },\r\n  { index: 14, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const getMenuContent = (role, index) => {\r\n  if (role === \"pcr\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <DashboardPreview />;\r\n      case 1:\r\n        return <BookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <BookingTable date=\"today\" />;\r\n      case 3:\r\n        return <BookingTable date=\"live\" />;\r\n      case 4:\r\n        return <BookingTable date=\"old\" />;\r\n      case 5:\r\n        return <BookingTable date=\"future\" />;\r\n      case 6:\r\n        return <BookingTable date=\"all\" />;\r\n      case 7:\r\n        return <BookingTable date=\"completed\" />;\r\n      case 8:\r\n        return <BookingTable date=\"positive\" />;\r\n      case 9:\r\n        return <BookingTable date=\"late\" />;\r\n      case 10:\r\n        return <BookingTable date=\"deleted\" />;\r\n      case 11:\r\n        return <UnmatchedRecords />;\r\n      case 12:\r\n        return <CalendarView />;\r\n      case 13:\r\n        return <AdminCalendarView />;\r\n      case 14:\r\n        return <FindByRef />;\r\n\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"gynae\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <GynaeDashboardPreview/>;\r\n      case 1:\r\n        return <GynaeBookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <GynaeBookingTable date=\"today\" />;\r\n      case 3:\r\n        return <GynaeBookingTable date=\"old\" />;\r\n      case 4:\r\n        return <GynaeBookingTable date=\"future\" />;\r\n      case 5:\r\n        return <GynaeBookingTable date=\"all\" />;\r\n      case 6:\r\n        return <GynaeBookingTable date=\"deleted\" />;\r\n      case 7:\r\n         return <GynaeCalendarView/>\r\n      case 8:\r\n          return <GynaeFindByRef/>     \r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"admin\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <AdminDashBoardPreview/>;\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else {\r\n    return `Page Not Found!`;\r\n  }\r\n};\r\n\r\nexport const getMenuRole = (role) => {\r\n  switch (role) {\r\n    case \"admin\":\r\n      return MenuList_Admin;\r\n    case \"pcr\":\r\n      return MenuList_PCR;\r\n    case \"gynae\":\r\n      return MenuList_Gynae;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport const getMenuId = (role, index) => {\r\n  const MenuList = getMenuRole(role);\r\n  for (var i = 0; i < MenuList.length; i++) {\r\n    if (MenuList[i].index === index) {\r\n      return MenuList[i].id;\r\n    }\r\n  }\r\n\r\n  return `Page Not Found!`;\r\n};\r\n\r\nexport const getMenuIndex = (role, id) => {\r\n  const MenuList = getMenuRole(role);\r\n  for (var i = 0; i < MenuList.length; i++) {\r\n    if (MenuList[i].id === id) {\r\n      return MenuList[i].index;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n","export const getRole = () => {\r\n    return sessionStorage.getItem('medexadmin-role')\r\n}\r\n\r\nexport const setRole = (role) => {\r\n    return sessionStorage.setItem('medexadmin-role', role)\r\n}\r\n\r\nexport const clearRole = (role) => {\r\n    return sessionStorage.removeItem('medexadmin-role')\r\n}","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport logoImage from \"./images/logo.png\"\r\n\r\nimport {\r\n  Grid,\r\n  AppBar,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Paper,\r\n  Backdrop,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { IconButton, Toolbar } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport Copyright from \"./CopyRight\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserService from \"./services/UserService\";\r\nimport { getMenuId } from \"./MenuList\";\r\n\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { borderRadius } from \"@material-ui/system\";\r\nimport { setRole } from \"./Role\";\r\nimport { getGlobalPath } from \"./GlobalPath\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/bg.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    // margin: theme.spacing(15, 2),\r\n    padding: theme.spacing(4,4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    position: \"relative\"\r\n    // border: `2px solid ${theme.palette.primary.main}`,\r\n    // borderRadius: \"8px\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color: \"#f5f5f5\",\r\n  },\r\n\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  alert: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  pageBg:{\r\n    paddingTop: theme.spacing(15),\r\n   \r\n    background: \"linear-gradient(3deg, rgba(2,0,36,1) 0%, rgba(9,77,121,1) 35%, rgba(0,212,255,1) 100%)\",\r\n    height: \"100vh\",\r\n    margin: 0,\r\n    padding:0,\r\n  },\r\n\r\n  appbarCenter: {\r\n    position: \"absolute\",\r\n    // width: \"260px\",\r\n    top: \"-40px\",\r\n    right: \"0\",\r\n    marginLeft: \"-145px\",\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px 20px 15px 20px\",\r\n    borderRadius: \"8px\"\r\n  },\r\n\r\n  logoImage: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    marginLeft: \"0px\",\r\n  },\r\n\r\n  appbarTitle: {\r\n    color: \"#00a1c5\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    marginRight: \"15px\",\r\n  },\r\n\r\n  adminPanelLabel: {\r\n    color: theme.palette.primary.main, \r\n    marginBottom:\"20px\"\r\n  }\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\r\n\r\n\r\n  let history = useHistory();\r\n\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const [username, setUsername] = React.useState(\"\");\r\n\r\n  const [saveChecked, setSaveChecked] = React.useState(false);\r\n\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const [error, setError] = React.useState(null);\r\n  const [submiting, setSubmiting] = React.useState(false);\r\n\r\n  const signIn = () => {\r\n    setSubmiting(true);\r\n\r\n    UserService.signIn({\r\n      username: username,\r\n      password: password,\r\n    })\r\n      .then((res) => {\r\n        setSubmiting(false);\r\n        if (res.data.status === \"OK\") {\r\n          setError(null);\r\n          const token = res.data.token;\r\n          if (saveChecked) {\r\n            localStorage.setItem(\"medexadmin-auth-token\", token);\r\n          } else {\r\n            sessionStorage.setItem(\"medexadmin-auth-token\", token);\r\n          }\r\n\r\n          setState((state) => ({ ...state, signedIn: true }));\r\n          setRole(res.data.roles[0])\r\n          setState((state) => ({ ...state, currentMenuIndex: 0 }));\r\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 0)}`));\r\n        } else if (res.data.status === \"FAILED\") {\r\n          setError(res.data.error);\r\n        } else {\r\n          setError(\"Sorry, something went wrong, please try again.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setSubmiting(false);\r\n        console.error(err);\r\n        setError(\"Sorry, something went wrong, please try again.\");\r\n      });\r\n  };\r\n\r\n  const usernameChanged = (event) => {\r\n    setUsername(event.target.value);\r\n    setError(null);\r\n  };\r\n\r\n  const passwordChanged = (event) => {\r\n    setPassword(event.target.value);\r\n    setError(null);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const saveCheckedChanged = (event) => {\r\n    setSaveChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.pageBg}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n\r\n        <Paper elevation={20}>\r\n          <div className={classes.paper}>\r\n            <div className={classes.appbarCenter}>\r\n              <span className={classes.appbarTitle}>\r\n                Medical Express Clinic\r\n              </span>\r\n\r\n              <img\r\n                className={classes.logoImage}\r\n                src={getGlobalPath(\"/images/logo.png\")}\r\n                alt=\"logo image\"\r\n              />\r\n            </div>\r\n\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              className={classes.adminPanelLabel}\r\n            >\r\n              Admin Panel\r\n            </Typography>\r\n\r\n            {error && (\r\n              <div className={classes.alert}>\r\n                <Alert severity=\"error\">\r\n                  {\" \"}\r\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\r\n                    {error}\r\n                  </div>\r\n                </Alert>\r\n              </div>\r\n            )}\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"email\"\r\n              autoComplete=\"username\"\r\n              value={username}\r\n              onChange={usernameChanged}\r\n              on\r\n              autoFocus\r\n            />\r\n            <FormControl\r\n              fullWidth\r\n              required\r\n              className={clsx(classes.margin, classes.textField)}\r\n              variant=\"outlined\"\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  signIn();\r\n                }\r\n              }}\r\n            >\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                {\" \"}\r\n                Password{\" \"}\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                name=\"outlined-adornment-password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={passwordChanged}\r\n                autoComplete=\"current-password\"\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      tabindex=\"-1\"\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={100}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControlLabel\r\n              style={{ textAlign: \"left\", width: \"100%\" }}\r\n              control={\r\n                <Checkbox\r\n                  value=\"remember\"\r\n                  color=\"secondary\"\r\n                  checked={saveChecked}\r\n                  onChange={saveCheckedChanged}\r\n                />\r\n              }\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={signIn}\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n\r\n        <Backdrop className={classes.backdrop} open={submiting}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <CircularProgress color=\"inherit\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\r\n                {\" \"}\r\n                {/* Please wait ...{\" \"} */}\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </Backdrop>\r\n\r\n        <Box mt={5} style={{ color: \"#eee\" }}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Badge,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  ListItemIcon,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { getMenuRole, getMenuId } from \"./MenuList\";\r\nimport { border, borderBottom } from \"@material-ui/system\";\r\nimport { getGlobalPath } from \"./GlobalPath\";\r\n\r\nimport GyaneBookService from \"./Gynae/services/BookService\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n\r\n  icon: {\r\n    fontSize: \"1rem\",\r\n    color: \"#777\",\r\n    cursor: \"pointer\",\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"8px\",\r\n    borderBottom: \"1px solid #eee\",\r\n  },\r\n\r\n  iconSelected: {\r\n    color: \"#fff\",\r\n    backgroundColor:  theme.palette.primary.main,\r\n    transition: \"all 0.1s ease-in-out\"\r\n  },\r\n\r\n  menuText: {\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"500\"\r\n  },\r\n\r\n  Badge:{\r\n    backgroundColor: \"rgb(220, 0, 78)\",\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    textAlign:\"center\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"0.85rem\",\r\n    lineHeight: \"0.85rem\",\r\n    padding:\"7px\",\r\n    marginTop:\"9px\",\r\n    width:\"28px\"\r\n\r\n  }\r\n}));\r\n\r\nexport default function MyMenu() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const updateShouldRefundsCount = async () =>\r\n  {\r\n    try{\r\n      const res = await GyaneBookService.getShouldRefundsCount()\r\n      if (res && res.data && res.data.status === \"OK\")\r\n      {\r\n        setState(state => ({...state, shouldRefunsCount: res.data.count}))\r\n      }\r\n    }\r\n    catch(ex)\r\n    {\r\n      console.error(ex)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(state.currentMenuIndex);\r\n    updateShouldRefundsCount()\r\n  }, [state.currentMenuIndex]);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setState((state) => ({ ...state, currentMenuIndex: index }));\r\n\r\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List>\r\n        {state.role &&\r\n          getMenuRole(state.role).map(\r\n            (item) =>\r\n              !item.hidden && (\r\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\r\n                // <ListItemIcon>\r\n                //     {item.icon}\r\n                // </ListItemIcon>\r\n                // <ListItemText primary={`${item.title}`} />\r\n                // </ListItem>\r\n                <React.Fragment key={`${item.id}`}>\r\n                  <div\r\n                    key={`${item.id}`}\r\n                    className={clsx(\r\n                      classes.icon,\r\n                      selectedIndex === item.index && classes.iconSelected\r\n                    )}\r\n                    onClick={(event) => handleListItemClick(event, item.index)}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                      spacing={3}\r\n                      style={{paddingLeft:\"15px\"}}\r\n                    >\r\n                      <Grid item>{item.icon}</Grid>\r\n\r\n                      <Grid item style={{textAlign:\"left\"}}>\r\n                        <span\r\n                          className={classes.menuText}\r\n                        >{`${item.title}`}</span>{\" \"}\r\n                      </Grid>\r\n\r\n                      {state.role === \"gynae\" && item.id === \"deletedBookings\" && state.shouldRefunsCount > 0 && (\r\n                        <span className={classes.Badge}> {state.shouldRefunsCount} </span>\r\n                      )}\r\n\r\n                    </Grid>\r\n                  </div>\r\n                </React.Fragment>\r\n              )\r\n          )}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport MyMenu from \"./Menu\";\r\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\r\n\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Copyright from \"./CopyRight\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport dateformat from \"dateformat\";\r\nimport { getRole, setRole, clearRole } from \"./Role\";\r\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst StyledMenu = withStyles((theme) => ({\r\n  paper: {\r\n    marginTop: \"10px\",\r\n    // marginRight: \"5px\",\r\n    width: \"270px\",\r\n    height: \"240px\",\r\n    border: `1px solid #ddd`,\r\n    borderRadius: \"10px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n}))((props) => (\r\n  <Menu\r\n    elevation={4}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuApps = withStyles((theme) => ({\r\n  paper: {\r\n    marginTop: \"5px\",\r\n    // marginRight: \"5px\",\r\n    width: \"275px\",\r\n    height: \"240px\",\r\n    border: `1px solid #ddd`,\r\n    borderRadius: \"10px\",\r\n    padding: \"10px\",\r\n  },\r\n}))((props) => (\r\n  <Menu\r\n    elevation={4}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    // marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"hidden\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      opacity: 0.9,\r\n    },\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n\r\n  appbarTitle: {\r\n    color: \"#00a1c5\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    marginRight: \"15px\",\r\n  },\r\n\r\n  appbarCenter: {\r\n    position: \"fixed\",\r\n    width: \"260px\",\r\n    top: \"10px\",\r\n    left: \"50%\",\r\n    marginLeft: \"-130px\",\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n    display: \"flex\",\r\n  },\r\n\r\n  logoImage: {\r\n    width: \"36px\",\r\n    height: \"36px\",\r\n    marginLeft: \"0px\",\r\n  },\r\n\r\n  userAvatar: {\r\n    backgroundColor: \"#fff\",\r\n    borderColor: \"#aaa\",\r\n    border: \"1px solid\",\r\n    color: \"#aaa\",\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  userAvatarSelected: {\r\n    backgroundColor: \"#fff\",\r\n    borderColor: theme.palette.primary.main,\r\n    border: \"1px solid\",\r\n    color: theme.palette.primary.main,\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  userAvatarBig: {\r\n    backgroundColor: \"#fff\",\r\n    borderColor: theme.palette.primary.main,\r\n    border: \"1px solid\",\r\n    color: theme.palette.primary.main,\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n  },\r\n\r\n  appBarText: {\r\n    color: \"#888\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  appBarAppsIcon: {\r\n    // color: \"#888\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"1.8rem\",\r\n  },\r\n\r\n  appBarAppsIconSelected: {\r\n    cursor: \"pointer\",\r\n    fontSize: \"1.8rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  usernameLabel: {\r\n    fontSize: \"1.2rem\",\r\n    color: theme.palette.primary.main,\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  lastLoginLabel: {\r\n    color: \"#777\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  appsLogo: {\r\n    width: \"70px\",\r\n    height: \"70px\",\r\n  },\r\n\r\n  appsBox: {\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    padding: \"2px\",\r\n    borderBottom: `5px solid #fff`,\r\n    borderRadius: \"5px\",\r\n    // border: \"2px solid #fff\",\r\n    \"&:hover\": {\r\n      //      border: `2px solid ${theme.palette.primary.main}`,\r\n      //      borderRadius: \"10px\",\r\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\r\n      transition: \"all 0.1s ease-in-out\",\r\n    },\r\n  },\r\n\r\n  appsBoxSelected: {\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    padding: \"2px\",\r\n    borderBottom: `5px solid${theme.palette.primary.light}`,\r\n    borderRadius: \"5px\",\r\n    // border: \"2px solid #fff\",\r\n    \"&:hover\": {\r\n      //      border: `2px solid ${theme.palette.primary.main}`,\r\n      //      borderRadius: \"10px\",\r\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\r\n      transition: \"all 0.1s ease-in-out\",\r\n    },\r\n  },\r\n\r\n  appsAdminLabel: {\r\n    color: \"#0264d4\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsPCRLabel: {\r\n    color: \"#4faef7\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsGynaeLabel: {\r\n    color: \"#e83caf\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsInToolbar: {\r\n    position: \"fixed\",\r\n    left: \"60px\",\r\n    top: \"-5px\",\r\n    height: \"65px\",\r\n    width: \"200px\",\r\n    overflow: \"hidden\",\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n\r\n  const [open, setOpen] = React.useState(isMobile ? false : true);\r\n\r\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\r\n\r\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\r\n  const handleUserAvatarClick = (event) => {\r\n    setAnchorUserAvatar(event.currentTarget);\r\n  };\r\n  const handleUserAvatarClose = () => {\r\n    setAnchorUserAvatar(null);\r\n  };\r\n\r\n  const [anchorApps, setAnchorApps] = React.useState(null);\r\n  const handleAppsClick = (event) => {\r\n    setAnchorApps(event.currentTarget);\r\n  };\r\n  const handleAppsClose = () => {\r\n    setAnchorApps(null);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  let location = useLocation();\r\n  React.useEffect(() => {\r\n    if (!state.role) return;\r\n    const index = getMenuIndex(\r\n      state.role,\r\n      getMenuIdFromGlobalPath(location.pathname)\r\n    );\r\n    setState((state) => ({ ...state, currentMenuIndex: index }));\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCurrentMenuIndex(state.currentMenuIndex);\r\n    if (isMobile) {\r\n      setOpen(false);\r\n    }\r\n  }, [state.currentMenuIndex]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"medexadmin-auth-token\");\r\n    sessionStorage.removeItem(\"medexadmin-auth-token\");\r\n    clearRole();\r\n\r\n    setState((state) => ({ signedIn: false }));\r\n    history.replace(\"./login\");\r\n  };\r\n\r\n  const appsClicked = (role) => {\r\n    setRole(role);\r\n    setState((state) => ({ ...state, role: role }));\r\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\r\n    handleAppsClose();\r\n  };\r\n\r\n  const getAppsLogo = (role) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/admin.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        );\r\n      case \"pcr\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/corona.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        );\r\n\r\n      case \"gynae\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/woman.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getAppsLabel = (role) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\r\n      case \"pcr\":\r\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\r\n      case \"gynae\":\r\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.userId && state.role && (\r\n        <React.Fragment>\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\r\n              position=\"absolute\"\r\n              className={clsx(\r\n                classes.appBar,\r\n                false && open && classes.appBarShift\r\n              )}\r\n            >\r\n              <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  className={clsx(classes.menuButton)}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n\r\n                <div className={classes.appsInToolbar}>\r\n                  <Grid container direction=\"row\" alignItems=\"center\">\r\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"8px\" }}>\r\n                        {getAppsLabel(state.role)}\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n                <div className={classes.appbarCenter}>\r\n                  {!isMobile && (\r\n                    <React.Fragment>\r\n                      <span className={classes.appbarTitle}>\r\n                        Medical Express Clinic\r\n                      </span>\r\n\r\n                      <img\r\n                        className={classes.logoImage}\r\n                        src={getGlobalPath(\"/images/logo.png\")}\r\n                        alt=\"logo image\"\r\n                      />\r\n                    </React.Fragment>\r\n                  )}\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    width: \"100%\",\r\n                    paddingLeft: \"2%\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row-reverse\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <Avatar\r\n                        className={\r\n                          anchorUserAvatar\r\n                            ? classes.userAvatarSelected\r\n                            : classes.userAvatar\r\n                        }\r\n                        onClick={handleUserAvatarClick}\r\n                      >\r\n                        <IconButton>\r\n                          <PersonOutlineIcon />\r\n                        </IconButton>\r\n                      </Avatar>\r\n                    </Grid>\r\n\r\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\r\n                      <Grid item>\r\n                        <IconButton onClick={handleAppsClick}>\r\n                          <AppsIcon\r\n                            className={\r\n                              anchorApps\r\n                                ? classes.appBarAppsIconSelected\r\n                                : classes.appBarAppsIcon\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            <StyledMenu\r\n              id=\"user-avatar-menu\"\r\n              anchorEl={anchorUserAvatar}\r\n              keepMounted\r\n              open={Boolean(anchorUserAvatar)}\r\n              onClose={handleUserAvatarClose}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Avatar className={classes.userAvatarBig}>\r\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\r\n                  </Avatar>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div className={classes.usernameLabel}>\r\n                    {\" \"}\r\n                    {state.userId?.username}{\" \"}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item>\r\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\r\n                    Logged in at :\r\n                  </span>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div className={classes.lastLoginLabel}>\r\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Button\r\n                    onClick={handleLogout}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      marginTop: \"30px\",\r\n                      width: \"150px\",\r\n                      borderRadius: \"30px\",\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </StyledMenu>\r\n\r\n            <StyledMenuApps\r\n              id=\"apps-menu\"\r\n              anchorEl={anchorApps}\r\n              keepMounted\r\n              open={Boolean(anchorApps)}\r\n              onClose={handleAppsClose}\r\n            >\r\n              <Grid container spacing={1}>\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"admin\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"admin\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"pcr\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"pcr\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"gynae\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"gynae\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </StyledMenuApps>\r\n\r\n            <Drawer\r\n              variant={isMobile ? \"temporary\" : \"persistent\"}\r\n              classes={{\r\n                paper: clsx(\r\n                  classes.drawerPaper,\r\n                  !open && classes.drawerPaperClose\r\n                ),\r\n              }}\r\n              open={open}\r\n            >\r\n              <div className={classes.toolbarIcon}>\r\n                <React.Fragment>\r\n                  <img\r\n                    className={classes.logoImage}\r\n                    src={getGlobalPath(\"/images/logo.png\")} \r\n                    alt=\"logo image\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                  />\r\n                  <span className={classes.appbarTitle}>\r\n                    <span style={{ fontSize: \"0.9rem\" }}>Medical Express</span>\r\n                  </span>\r\n                </React.Fragment>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n\r\n              <MyMenu />\r\n            </Drawer>\r\n\r\n            <main className={classes.content}>\r\n              <div className={classes.appBarSpacer} />\r\n              <Container\r\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\r\n                className={classes.container}\r\n              >\r\n                {getMenuContent(state.role, currentMenuIndex)}\r\n              </Container>\r\n            </main>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UserService from \"./services/UserService\";\r\n\r\nexport async function getUserIdFromToken(token)\r\n{\r\n    try{\r\n       const res  = await UserService.checkToken({token: token})\r\n       if (res.data.status === 'OK')\r\n        {\r\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\r\n        }\r\n       else\r\n        {\r\n            return null\r\n        }\r\n    }\r\n    catch(err)\r\n    {\r\n        return null\r\n    }\r\n  \r\n}","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GlobalState from './GlobalState';\r\n\r\n\r\n\r\n\r\nimport SignIn from './SignIn';\r\nimport Dashboard from './Dashboard';\r\n\r\nimport { useLocation, useHistory} from \"react-router-dom\";\r\nimport { getUserIdFromToken } from './TokenVerifier';\r\nimport UserService from './services/UserService';\r\nimport { getMenuId } from './MenuList';\r\nimport { getRole, setRole } from './Role';\r\nimport { getGlobalPath } from './GlobalPath';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    appBar: {\r\n        position: 'static',\r\n        backgroundColor: \"#333\",\r\n        color: \"#fff\",\r\n        //alignItems: 'center'\r\n    \r\n      },\r\n\r\n      signOutButton:{\r\n        color: \"#fff\",\r\n        marginRight : \"20px\",\r\n        fontWeight: \"500\"\r\n      },\r\n\r\n      title: {\r\n        flexGrow : 1\r\n      }\r\n\r\n\r\n}));\r\n\r\nexport default function Navigator() {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [loaded, setLoaded] = React.useState(false)\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSignOut = () =>\r\n    {\r\n      setState(state => ({...state, signedIn: false}));\r\n\r\n    }\r\n\r\n    let location = useLocation();\r\n\r\n    React.useEffect(() => {\r\n\r\n      const checkToken = async () =>\r\n      {\r\n        const authToken = localStorage.getItem('medexadmin-auth-token') || sessionStorage.getItem('medexadmin-auth-token');\r\n        UserService.setToken(authToken)\r\n\r\n         if (!authToken)\r\n        {\r\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\r\n          setLoaded(true)\r\n          history.push(getGlobalPath('/login'));\r\n        }\r\n        else\r\n        {\r\n           const userId = await getUserIdFromToken(authToken);\r\n           if (!userId)\r\n           {\r\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\r\n              history.push(getGlobalPath('/login'));\r\n           }\r\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\r\n           {\r\n            if (!getRole())\r\n            {\r\n             setRole(userId.roles[0])\r\n            }\r\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\r\n            \r\n             history.push(getGlobalPath(`/${getMenuId(getRole(),0)}`));\r\n           }\r\n           else\r\n           {\r\n              if (!getRole())\r\n              {\r\n               setRole(userId.roles[0])\r\n              }\r\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\r\n           }\r\n\r\n           setLoaded(true)\r\n        }\r\n      }\r\n\r\n      checkToken();\r\n   \r\n    }, [location.pathname]);\r\n\r\n    const getComponentFromState = () =>\r\n    {\r\n\r\n      if (state.signedIn)\r\n      {\r\n        return <Dashboard/>\r\n      }\r\n      else\r\n      {\r\n          return <SignIn/>    \r\n      }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            {\r\n              loaded && (\r\n                getComponentFromState()\r\n              )\r\n            }\r\n        \r\n        </React.Fragment>\r\n    );\r\n}","import React, { Fragment, Suspense, lazy } from \"react\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport theme from \"./theme\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport Navigator from './Navigator';\r\n\r\n\r\n\r\n\r\n// Configure JSS\r\n\r\n\r\nfunction App() {\r\n  const [state, setState] = React.useState({currentMenuIndex:0});\r\n\r\n  return (\r\n    <GlobalState.Provider value={[state, setState]}>\r\n      <BrowserRouter>\r\n        <MuiThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <GlobalStyles />\r\n\r\n       \r\n\r\n              <Navigator/>\r\n\r\n       \r\n\r\n\r\n        </MuiThemeProvider>\r\n      </BrowserRouter>\r\n    </GlobalState.Provider>\r\n  );\r\n}\r\n\r\nserviceWorker.register();\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}"],"sourceRoot":""}