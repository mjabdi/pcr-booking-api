{"version":3,"sources":["PCR/PriceCalculator.js","Gynae/PriceCalculator.js","GP/PriceCalculator.js","STD/PriceCalculator.js","Admin/DateFormatter.js","Admin/PriceCalculator.js","PCR/DateFormatter.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","CopyRight.js","GlobalPath.js","services/api.js","services/UserService.js","PCR/services/api.js","PCR/services/BookService.js","PCR/services/PDFService.js","PCR/PersonsBox.js","PCR/FindByRef.js","PCR/ResendEmailsDialog.js","PCR/Corporates.js","PCR/PayDialog.js","PCR/TimeStampDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","PCR/BookingDialog.js","PCR/BookingTable.js","PCR/Title.js","PCR/Chart.js","PCR/CurrentVisits.js","PCR/BookingView.js","PCR/ResultsTimeReport.js","PCR/DashboardPreview.js","PCR/UnmatchedRecords.js","PCR/calendar-admin/MonthViewCell.js","PCR/calendar-admin/calendar-util.js","PCR/calendar-admin/MonthView.js","PCR/calendar-admin/WeekViewCell.js","PCR/calendar-admin/WeekView.js","PCR/calendar-admin/DayViewCell.js","PCR/calendar-admin/DayView.js","PCR/calendar-admin/CalendarView.js","Gynae/services/api.js","Gynae/services/BookService.js","Gynae/services/PDFService.js","Gynae/Corporates.js","Gynae/PayDialog.js","Gynae/BookingDialog.js","Gynae/BookingTable.js","Gynae/Title.js","Gynae/Chart.js","Gynae/CurrentVisits.js","Gynae/BookingView.js","Gynae/DashboardPreview.js","Gynae/PersonsBox.js","Gynae/FindByRef.js","Gynae/calendar-admin/MonthViewCell.js","Gynae/calendar-admin/calendar-util.js","Gynae/calendar-admin/MonthView.js","Gynae/calendar-admin/WeekViewCell.js","Gynae/calendar-admin/WeekView.js","Gynae/NewBookingDialog.js","Gynae/calendar-admin/DayViewCell.js","Gynae/calendar-admin/DayView.js","Gynae/calendar-admin/CalendarView.js","GP/services/api.js","GP/services/BookService.js","GP/services/PDFService.js","GP/Corporates.js","GP/PayDialog.js","GP/BookingDialog.js","GP/BookingTable.js","GP/Title.js","GP/Chart.js","GP/CurrentVisits.js","GP/BookingView.js","GP/DashboardPreview.js","GP/PersonsBox.js","GP/FindByRef.js","GP/calendar-admin/MonthViewCell.js","GP/calendar-admin/calendar-util.js","GP/calendar-admin/MonthView.js","GP/calendar-admin/WeekViewCell.js","GP/calendar-admin/WeekView.js","GP/NewBookingDialog.js","GP/calendar-admin/DayViewCell.js","GP/calendar-admin/DayView.js","GP/calendar-admin/CalendarView.js","STD/services/api.js","STD/services/BookService.js","STD/services/PDFService.js","STD/Corporates.js","STD/PayDialog.js","STD/BookingDialog.js","STD/BookingTable.js","STD/Title.js","STD/Chart.js","STD/CurrentVisits.js","STD/BookingView.js","STD/DashboardPreview.js","STD/PersonsBox.js","STD/FindByRef.js","STD/calendar-admin/MonthViewCell.js","STD/calendar-admin/calendar-util.js","STD/calendar-admin/MonthView.js","STD/calendar-admin/WeekViewCell.js","STD/calendar-admin/WeekView.js","STD/NewBookingDialog.js","STD/calendar-admin/DayViewCell.js","STD/calendar-admin/DayView.js","STD/calendar-admin/CalendarView.js","Title.js","TodayBookingView.js","TomorrowBookingView.js","TotalBookingView.js","LateBookingView.js","UnmatchedBookingView.js","ShouldRefundBookingView.js","Role.js","DashboardPreview.js","Admin/services/api.js","Admin/services/BookService.js","Admin/FindByRef.js","Admin/BookingDialog.js","Admin/Corporates.js","Admin/BookingTable.js","Admin/calendar-admin/MonthViewCell.js","Admin/calendar-admin/calendar-util.js","Admin/calendar-admin/MonthView.js","Admin/calendar-admin/WeekViewCell.js","Admin/calendar-admin/WeekView.js","Admin/NewBookingDialog.js","Admin/calendar-admin/DayViewCell.js","Admin/calendar-admin/DayView.js","Admin/calendar-admin/CalendarView.js","MenuList.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","Gynae/DateFormatter.js","GP/DateFormatter.js","STD/DateFormatter.js"],"names":["calculatePrice","person","price","tr","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","FormatDateFromString","str","substr","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","secondary","contrastText","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","Copyright","Typography","variant","align","Link","href","Date","getFullYear","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","payBooking","bookingId","paymentMethod","corporate","unPayBooking","getTestsTimeReport","axiosRetry","retries","retryDelay","retryCount","get","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","resendEmailsWithBookingId","regenerateFilesWithBookingId","resendEmails","linkId","regenerateFiles","matchRecords","findBestMatches","getLinkDetails","getLinkDetailsWithBookingId","findBookingByRefBirthDate","bookingRef","birthDate","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getAllTRBookings","getLateBookings","getDeletedBookings","getLiveBookings","getCompletedBookings","getPositiveBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","getUnmatchedRecords","getUnmatchedRecordsArchived","archiveRecord","unArchiveRecord","PDFService","downloadCovidForm1","responseType","Accept","downloadCovidForm2","downloadPdfResult","downloadPdfCert","downloadPdfLabReport","useStyles","makeStyles","box","padding","borderRadius","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","textDecoration","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","infoTitle","fontWeight","infoData","title","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","BookedLabel","borderLeft","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","PositiveLabel","EditButton","RestoreButton","DeleteButton","SaveButton","CancelButton","TextBox","checkIcon","closeIcon","centeredLabel","alignItems","PersonsBox","classes","useContext","setState","useState","expanded","setExpanded","edit","editMode","setEditMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","saving","setSaving","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","gender","setGender","setTitle","forename","setForename","surname","setSurnme","email","setEmail","dob","setDOB","tel","setTel","postCode","setPostCode","address","setAddress","notes","setNotes","passport","setPassport","passport2","setPassport2","setCertificate","setAntiBodyTest","bookingDateChanged","event","target","value","bookingDateError","bookingTimeChanged","bookingTimeError","genderChanged","titleChanged","forenameChanged","surnameChanged","emailChanged","dobChanged","dobError","telChanged","postCodeChanged","addressChanged","passportChanged","passport2Changed","certificateChanged","checked","antiBodyTestChanged","handleEditModeChanged","forenameCapital","surnameCapital","toUpperCase","phone","passportNumber","passportNumber2","booking","_id","validateBooking","validateDate","charAt","test","year","parseInt","month","day","err","hour","minute","validateTime","bookingService","res","RefreshPersonInfo","handleDeleteModeChanged","del","handleRestoreModeChanged","Fragment","Grid","container","direction","justify","className","foundRecords","map","index","status","panel","item","deleted","onChange","isExpanded","AccordionSummary","expandIcon","aria-controls","Tooltip","style","AccordionDetails","hidden","Button","type","fullWidth","onClick","disabled","TextField","inputProps","FormControlLabel","formControl","control","Checkbox","name","label","startIcon","file","Blob","data","fileURL","URL","createObjectURL","open","isBoolean","param","TextMaskCustom","props","inputRef","other","inputElement","mask","showMask","flexDirection","avatar","form","Find","Clear","NoRecordsFound","FindByRef","initialFocus","focus","setFocus","autoFocus","key","onFocus","onBlur","useFocus","focusProps","useEffect","clearField","refError","findRecords","indexOf","submiting","CssBaseline","component","FormControl","pattern","helperText","size","InputProps","inputComponent","onKeyPress","onTouchTap","Alert","severity","interval","refreshButton","RefLink","cursor","archiveButton","smartMatchButton","matchButton","resendButton","resendFilesButton","cancelButton","BorderLinearProgress","colorPrimary","bar","LinearProgress","LinearProgressWithLabel","Box","mr","minWidth","Math","round","PaperComponent","handle","cancel","Paper","ResendEmailsDialog","sending","setSending","sent","setSent","sendJustToPCR","setSendJustToPCR","sendingStatus","setSendingStatus","sendingProgress","setSendingProgress","setError","prevProgress","Dialog","onClose","clearInterval","handleClose","aria-labelledby","DialogTitle","Divider","DialogContent","setInterval","link","setTimeout","corporates","backdrop","zIndex","drawer","PayDialog","setPaymentMethod","setCorporate","payClicked","a","bookingPayChanged","RadioGroup","aria-label","Radio","Select","labelId","element","MenuItem","bottom","right","Backdrop","CircularProgress","addMinutes","date","minutes","getTime","itemTitle","itemData","TimeStampDialog","linkTimeStamp","setLinkTimeStamp","filename","timeStamp","dateformat","setHours","bookingTimeNormalized","setMinutes","setSeconds","setMilliseconds","getDateFromBooking","samplingTimeStamp","DialogActions","CalendarColors","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","InvoiceDialog","defaultCode","setCode","setCodeError","description","setDescription","descriptionError","setDescriptionError","items","setItems","setPrice","priceError","setPriceError","allCodes","setAllCodes","invoice","fetchAllCodes","defaultCodes","result","refresh","validateItem","validateItem2","getGrandTotal","_items","total","forEach","parseFloat","saveClikced","formData","JSON","parse","fullname","dateAttended","grandTotal","Autocomplete","newValue","options","getOptionLabel","option","toLocaleString","currency","renderInput","params","startAdornment","InputAdornment","overflowY","IconButton","temp","splice","removeItem","justifyContent","multiline","rows","placeholder","ResendEmailsButton","PayButton","PayLabel","checkIconSmall","printInvoiceButton","editInvoiceButton","Transition","forwardRef","Slide","BookingDialog","copied","setCopied","openResendDialog","setOpenResendDialog","openPayDialog","setOpenPayDialog","selectedBooking","setSelectedBooking","refreshData","setRefreshData","setBooking","recordChanged","setRecordChanged","fieldChanged","setFieldChanged","openUndoPayDialog","setOpenUndoPayDialog","openTimeStampDialog","setOpenTimeStampDialog","handleCloseUndoPayDialog","isChanged","bookingDialogDataChanged","undoPaymentClicked","setInvoice","invoiceLoaded","setInvoiceLoaded","openInvoiceDialog","setOpenInvoiceDialog","emailSentInvoice","setEmailSentInvoice","fetchInvoice","OpenInvoiceDialog","TransitionComponent","keepMounted","aria-describedby","top","left","role","clipboard","writeText","transition","deleteButtonDisabled","selfIsolate","postCodeSI","addressSI","NHSNumber","ethnicity","arrivalDate","flightNumber","lastDepartedDate","travellingFrom","_email","paid","paidBy","_booking","push","getDefaultCodes","DialogContentText","HideNowRows","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","fromDate","setFromDate","untilDate","setUntilDate","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","field","headerName","renderCell","getValue","openDetailsDialog","valueFormatter","formatTimeStamp","valueGetter","placement","bookings","cachedBookings","isFetching","setData","setSelectedRow","seeDetailsDialogOpen","setSeeDetailsDialogOpen","filter","setFilter","useRef","todayStr","timeStampStr","loadData","api","trim","filteredData","toLowerCase","find","page","setPage","userId","username","faFileExcel","autoComplete","InputLabel","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","Switch","utils","DateFnsUtils","autoOk","disableToolbar","format","KeyboardButtonProps","sheet","buttonText","extRef","PriceCalculator","Title","gutterBottom","children","createData","amount","emptyData","undefined","getCount","count","Chart","useTheme","loading","setLoading","fetchData","ResponsiveContainer","LineChart","XAxis","dataKey","stroke","YAxis","Label","angle","textAnchor","fill","Line","dot","depositContext","flex","bookingBox","boxShadow","getCurrentTimeSlot","now","min","getMinutes","getHours","pm","minStr","hourStr","pmStr","timeStr","getDay","getCurrentTimeSlotLabel","endTimeStr","CurrentVisits","current","setCurrent","setBookings","openDialog","setOpenDialog","currentTimeSlot","bookingCliked","_bookings","substring","getBookingsBox","seeMore","BookingView","setRefresh","Table","TableHead","TableRow","TableCell","TableBody","preventDefault","currentMenuIndex","getMenuIndex","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","dominantBaseline","ReportLabels","AverageLabel","less12Label","less24Label","less36Label","ResultsTimeReport","report","setReport","setOpen","lessThan12","lessThan24","lessThan36","PieChart","Pie","labelLine","entry","Cell","avg","lessThan12Percent","lessThan24Percent","lessThan36Percent","lessThan48","lessThan48Percent","overflow","fixedHeight","DashboardPreview","fixedHeightPaper","clsx","downloadPDFButton","UnmatchedRecords","selectedTab","disableId","smartMatchClicked","downloadLabReport","setDisableId","setSeletedTab","smartLinkId","setSmartLinkId","smartLinkDetails","setSmartLinkDetails","likelyBookings","setLikelyBookings","seeDetailsBooking","setSeeDetailsBooking","matching","setMatching","matched","setMatched","matchedBookings","lastPromise","currentPromise","e","ToggleButtonGroup","exclusive","ToggleButton","timeout","testDate","handleCheckChanged","likelihood","seeDetailsClicked","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","MonthViewCell","cellIndex","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","getMonth","AdminCalendarCache","record","method","query","fecthData","_bookingsCount","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","disableShrink","MAX_BOOKING_COUNT","percent","getBookingsCountGauge","CalendarUtil","getMonthRange","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","isPast","CancelToken","WeekView","dates","replace","overflowX","bookingBoxSampleTaken","bookingBoxPositive","bookingBoxReportSent","DayViewCell","filteredBookings","setFilteredBookings","dayViewCalFilter","search","getBookingClass","borderTop","titleLabel","titleLabelToday","DayView","monthNames","fontColor","CalendarView","setMonth","setYear","setDay","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","removeFilter","today","dayofWeek","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","onMouseDown","changeDepositBooking","deposit","addNewBooking","sendRegFormEmail","getShouldRefundsCount","manualRefundBooking","refundBooking","changeToPatientAttended","downloadGynaeRegForm","required","PriceLabelPaid","PriceLabelNotPaid","emailSent","setEmailSent","openRefundDialog","setOpenRefundDialog","setFullname","service","setService","handleCloseRefundDialog","refundPaymentClicked","updateShouldRefundsCount","shouldRefunsCount","manualRefund","depositChanged","OTCCharges","paymentInfo","textTransform","refund","notifyIcon","showCreateExcel","isThursday","isFriday","slotMinStr","slotHourStr","fullnameChanged","serviceChanged","notesChanged","CalendarIcon","DateTimeLabel","Packages","packageName","NewBookingDialog","fullnameError","setFullnameError","setPhone","setDeposit","saveClicked","otem","bookingBoxNew","openDialogAddNew","setOpenDialogAddNew","addNewBookingClicked","downloadGPRegForm","downloadSTDRegForm","estimatedPrice","IndivisualTests","comboSTDChecks","serviceError","setServiceError","indivisualArray","setIndivisualArray","comboArray","setComboArray","findIndex","IndivisualTestsChanged","comboSTDChecksChanged","TodayBookingView","PCRBookService","res1","GynaeBookService","res2","GPBookService","res3","STDBookService","res4","pcr","gynae","gp","std","clinic","TomorrowBookingView","tomorrow","tomorrowStr","TotalBookingView","countLabel","countLabelRed","Icon","IconRed","TitleRed","LateBookingView","UnmatchedBookingView","ShouldRefundBookingView","getRole","sessionStorage","getItem","setRole","setItem","fixedHeightSmall","fixedHeightPaperSmall","history","useHistory","getMenuId","boxTitle","getPersonBox","clinicTitle","PCRLabel","GynaeLabel","GPLabel","STDLabel","getClassforClinic","PCRGauge","GynaeGauge","GPGauge","STDGauge","DayLabelContainer","getPCRClinicBar","getGynaeClinicBar","getGPClinicBar","getSTDClinicBar","selectedClinics","getClinicBar","BoxDisabled","BoxGynae","BoxGP","BoxSTD","timeDisabled","clinicClicked","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","openDialogGP","setOpenDialogGP","openDialogGynae","setOpenDialogGynae","openDialogSTD","setOpenDialogSTD","getBookingBorderClass","Clinics","MenuList_Admin","MenuList_Gynae","MenuList_GP","MenuList_STD","MenuList_PCR","MenuList_PCRLAB","getMenuContent","getMenuRole","MenuList","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","password","setPassword","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setSubmiting","localStorage","signedIn","roles","elevation","src","alt","Avatar","lineHeight","on","textField","htmlFor","OutlinedInput","tabindex","Visibility","VisibilityOff","labelWidth","mt","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","GyaneBookService","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","appBar","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","opacity","drawerPaperClose","appBarSpacer","content","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsInToolbar","Dashboard","isMobile","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","globalPath","split","getMenuIdFromGlobalPath","pathname","scrollTo","appsClicked","getAppsLogo","getAppsLabel","AppBar","Toolbar","edge","currentTarget","anchorEl","lastLoginTimeStamp","Drawer","getUserIdFromToken","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","process","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89c0242e.chunk.js","sourcesContent":["\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}","\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n\r\n    if (person.tr)\r\n    {\r\n        price = 250;\r\n    }\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += (99 + 50);\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\nimport { enGB } from '@material-ui/core/locale';\r\n\r\n\r\nconst black = \"#212121\";\r\nconst darkBlack = \"rgb(36, 40, 44)\";\r\nconst background = \"#f9f9f9\";\r\n\r\nconst warningLight = \"rgba(253, 200, 69, .3)\";\r\nconst warningMain = \"rgba(253, 200, 69, .5)\";\r\nconst warningDark = \"rgba(253, 200, 69, .7)\";\r\n\r\n// border\r\nconst borderWidth = 2;\r\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\r\n\r\n// breakpoints\r\nconst xl = 1920;\r\nconst lg = 1280;\r\nconst md = 960;\r\nconst sm = 600;\r\nconst xs = 0;\r\n\r\n// spacing\r\nconst spacing = 8;\r\n\r\nconst theme = createMuiTheme({\r\n\r\n  palette: {\r\n\r\n    primary: { main: \"#00a1c5\",\r\n               light: \"#5bd5f0\"\r\n              //  dark: \"#0288D1\",\r\n              //  light: \"#B3E5FC\"\r\n\r\n      },\r\n    secondary: { main: \"#f68529\", contrastText:\"#fff\" },\r\n    common: {\r\n      black,\r\n      darkBlack\r\n    },\r\n    warning: {\r\n      light: warningLight,\r\n      main: warningMain,\r\n      dark: warningDark\r\n    },\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n    background: {\r\n      default: background\r\n    },\r\n    spacing\r\n  },\r\n  breakpoints: {\r\n    // Define custom breakpoint values.\r\n    // These will apply to Material-UI components that use responsive\r\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\r\n    // theme breakpoint functions `up`, `down`, and `between` to create\r\n    // media queries for these breakpoints\r\n    values: {\r\n      xl,\r\n      lg,\r\n      md,\r\n      sm,\r\n      xs\r\n    }\r\n  },\r\n  border: {\r\n    borderColor: borderColor,\r\n    borderWidth: borderWidth\r\n  },\r\n  overrides: {\r\n    MuiExpansionPanel: {\r\n      root: {\r\n        position: \"static\"\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        paddingLeft: spacing * 2,\r\n        paddingRight: spacing * 2,\r\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\r\n        [`@media (max-width:  ${sm}px)`]: {\r\n          paddingLeft: spacing,\r\n          paddingRight: spacing\r\n        }\r\n      }\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: borderColor,\r\n        height: borderWidth\r\n      }\r\n    },\r\n    MuiPrivateNotchedOutline: {\r\n      root: {\r\n        borderWidth: borderWidth\r\n      }\r\n    },\r\n    MuiListItem: {\r\n      divider: {\r\n        borderBottom: `${borderWidth}px solid ${borderColor}`\r\n      }\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        width: \"100%\",\r\n        maxWidth: 430,\r\n        marginLeft: spacing,\r\n        marginRight: spacing\r\n      }\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        backgroundColor: darkBlack,\r\n        fontSize: \"0.7rem\"\r\n      }\r\n    },\r\n    MuiExpansionPanelDetails: {\r\n      root: {\r\n        [`@media (max-width:  ${sm}px)`]: {\r\n          paddingLeft: spacing,\r\n          paddingRight: spacing\r\n        }\r\n      }\r\n    }\r\n  },\r\n \r\n}, enGB);\r\n\r\nexport default responsiveFontSizes(theme);\r\n","import { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    /**\r\n     * Disable the focus outline, which is default on some browsers like\r\n     * chrome when focusing elements\r\n     */\r\n    \"*:focus\": {\r\n      outline: 0\r\n    },\r\n    \".text-white\": {\r\n      color: theme.palette.common.white\r\n    },\r\n    \".listItemLeftPadding\": {\r\n      paddingTop: `${theme.spacing(1.75)}px !important`,\r\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\r\n      paddingLeft: `${theme.spacing(4)}px !important`,\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        paddingLeft: `${theme.spacing(4)}px !important`\r\n      },\r\n      \"@media (max-width:  420px)\": {\r\n        paddingLeft: `${theme.spacing(1)}px !important`\r\n      }\r\n    },\r\n    \".container\": {\r\n      width: \"100%\",\r\n      paddingRight: theme.spacing(4),\r\n      paddingLeft: theme.spacing(4),\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        maxWidth: 540\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        maxWidth: 720\r\n      },\r\n      [theme.breakpoints.up(\"lg\")]: {\r\n        maxWidth: 1170\r\n      }\r\n    },\r\n    \".row\": {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      marginRight: -theme.spacing(2),\r\n      marginLeft: -theme.spacing(2)\r\n    },\r\n    \".container-fluid\": {\r\n      width: \"100%\",\r\n      paddingRight: theme.spacing(2),\r\n      paddingLeft: theme.spacing(2),\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      maxWidth: 1370\r\n    },\r\n    \".lg-mg-top\": {\r\n      marginTop: `${theme.spacing(20)}px !important`,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        marginTop: `${theme.spacing(18)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginTop: `${theme.spacing(16)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        marginTop: `${theme.spacing(14)}px !important`\r\n      }\r\n    },\r\n    \".lg-mg-bottom\": {\r\n      marginBottom: `${theme.spacing(20)}px !important`,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        marginBottom: `${theme.spacing(18)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginBottom: `${theme.spacing(16)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        marginBottom: `${theme.spacing(14)}px !important`\r\n      }\r\n    },\r\n    \".lg-p-top\": {\r\n      paddingTop: `${theme.spacing(20)}px !important`,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        paddingTop: `${theme.spacing(18)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        paddingTop: `${theme.spacing(16)}px !important`\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        paddingTop: `${theme.spacing(14)}px !important`\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nfunction globalStyles() {\r\n  return null;\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(globalStyles);\r\n","/* eslint-disable */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'; \r\nconst GlobalState = React.createContext([{}, () => {}]); \r\nexport default GlobalState;","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"#\">\r\n          Medical Express Clinic\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n  ","\r\n\r\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\r\n\r\nexport const backendAPI = 'https://www.travelpcrtest.com/'\r\n// export const backendAPI = 'http://localhost:9090/'\r\n\r\nexport function getGlobalPath(path){\r\n    return '/medicalexpressclinic/admin' + path\r\n    // return path\r\n}\r\n\r\nexport function getMenuIdFromGlobalPath(globalPath){\r\n    try{\r\n       \r\n        var split = globalPath.split('/')\r\n        if (split && split.length > 0)\r\n        {\r\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\r\n        }\r\n        else\r\n        {\r\n            return ''\r\n        }\r\n    }\r\n    catch(err)\r\n    {\r\n        return ''\r\n    }\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n\r\n  headers : {\r\n      'Authorization' : authToken\r\n  }\r\n});","import API from './api';\r\n\r\nexport default class UserService{\r\n\r\n    static setToken = (token) =>\r\n    {\r\n        this.token = token\r\n    }\r\n  \r\n    static signIn = (payload) =>\r\n    {\r\n        return  API.post('/api/medex/user/signin', payload)\r\n    }\r\n\r\n    static checkToken = (payload) =>\r\n    {\r\n        return  API.post('/api/medex/user/checktoken', payload)\r\n    }\r\n\r\n}\r\n","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n\r\n   static payBooking = (bookingId, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getTestsTimeReport = () =>\r\n   {\r\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\r\n         return retryCount * 1000;\r\n       } });\r\n      return API.get(`/api/book/getteststimereport`);\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static resendEmailsWithBookingId = (bookingId) =>\r\n   {\r\n      return API.post(`/api/book/resendemailswithbookingid?id=${bookingId}`);\r\n   }\r\n\r\n   static regenerateFilesWithBookingId  = (bookingId) =>\r\n   {\r\n      return API.post(`/api/book/regeneratefileswithbookingid?id=${bookingId}`);\r\n   }\r\n\r\n\r\n   static resendEmails  = (linkId) =>\r\n   {\r\n      return API.post(`/api/book/resendemails?id=${linkId}`);\r\n   }\r\n\r\n   static regenerateFiles  = (linkId) =>\r\n   {\r\n      return API.post(`/api/book/regeneratefiles?id=${linkId}`);\r\n   }\r\n\r\n   static matchRecords  = (bookingId, linkId) =>\r\n   {\r\n      return API.post(`/api/book/matchrecords?bookingid=${bookingId}&linkid=${linkId}`);\r\n   }\r\n\r\n   static findBestMatches = (id) =>\r\n   {\r\n      return API.get(`/api/book/getbestmatchedbookings?id=${id}`);\r\n   } \r\n\r\n   static getLinkDetails = (id) =>\r\n   {\r\n      return API.get(`/api/book/getlinkdetails?id=${id}`);\r\n   } \r\n\r\n   static getLinkDetailsWithBookingId = (id) =>\r\n   {\r\n      return API.get(`/api/book/getlinkdetailswithbookingid?id=${id}`);\r\n   } \r\n\r\n\r\n\r\n   static findBookingByRefBirthDate = (bookingRef, birthDate) =>\r\n   {\r\n      return API.get(`/api/book/getbookingsbyrefandbirthdate?ref=${bookingRef}&birthdate=${birthDate}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getAllTRBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/book/getalltrbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getLateBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getlatebookings`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getLiveBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getlivebookings`);\r\n    }\r\n\r\n    static getCompletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getcompletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getPositiveBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getpositivebookings`);\r\n    }\r\n\r\n\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n\r\n    static getUnmatchedRecords= () =>\r\n    {\r\n       return API.get(`/api/book/getunmatchedrecords`);\r\n    }\r\n\r\n    static getUnmatchedRecordsArchived= () =>\r\n    {\r\n       return API.get(`/api/book/getunmatchedrecordsarchived`);\r\n    }\r\n\r\n    static archiveRecord = (id) =>\r\n    {\r\n       return API.post(`/api/book/archiverecord?id=${id}`);\r\n    }\r\n\r\n    static unArchiveRecord = (id) =>\r\n    {\r\n       return API.post(`/api/book/unarchiverecord?id=${id}`);\r\n    }\r\n\r\n\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n    static downloadCovidForm1 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadCovidForm2 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfResult = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfCert = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfLabReport = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\"   \r\n  },\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#555\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\"   \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\"\r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState('panel0');\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [gender, setGender] = React.useState('');\r\n    const [title, setTitle] = React.useState('');\r\n    const [forename, setForename] = React.useState('');\r\n    const [surname, setSurnme] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [dob, setDOB] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [postCode, setPostCode] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n    const [passport, setPassport] = React.useState('');\r\n    const [passport2, setPassport2] = React.useState('');\r\n    const [certificate, setCertificate] = React.useState(false);\r\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const genderChanged = (event) =>\r\n    {\r\n      setGender(event.target.value);\r\n    }\r\n\r\n    const titleChanged = (event) =>\r\n    {\r\n      setTitle(event.target.value);\r\n    }\r\n\r\n    const forenameChanged = (event) =>\r\n    {\r\n      setForename(event.target.value);\r\n    }\r\n\r\n    const surnameChanged = (event) =>\r\n    {\r\n      setSurnme(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const dobChanged = (event) =>\r\n    {\r\n      setDOB(event.target.value);\r\n      setValidationError({...validationError, dobError : false});\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const postCodeChanged = (event) =>\r\n    {\r\n      setPostCode(event.target.value);\r\n    }\r\n\r\n    const addressChanged = (event) =>\r\n    {\r\n      setAddress(event.target.value);\r\n    }\r\n\r\n    const passportChanged = (event) =>\r\n    {\r\n      setPassport(event.target.value);\r\n    }\r\n\r\n    const passport2Changed = (event) =>\r\n    {\r\n      setPassport2(event.target.value);\r\n    }\r\n\r\n    const certificateChanged = (event) =>\r\n    {\r\n      setCertificate(event.target.checked);\r\n    }\r\n\r\n    const antiBodyTestChanged = (event) =>\r\n    {\r\n      setAntiBodyTest(event.target.checked);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }else if (status === 'sample_taken')\r\n      {\r\n        return (\r\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\r\n        );\r\n    \r\n      }else if (status === 'report_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\r\n        );\r\n    \r\n      }else if (status === 'report_cert_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportCertSentLabel}> {`Report & Certificate Sent`} </span>\r\n        );\r\n      }\r\n      else if (status === 'positive')\r\n      {\r\n        return (\r\n          <span  className={classes.PositiveLabel}> {`POSITIVE`} </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n   const downloadForm1 = (id) =>\r\n   {\r\n       PDFService.downloadCovidForm1(id).then( (res) => \r\n       {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n       }).catch( (err) =>\r\n       {\r\n           console.log(err);\r\n       });\r\n   }\r\n\r\n   const downloadForm2 = (id) =>\r\n   {\r\n        PDFService.downloadCovidForm2(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadLabResults = (id) =>\r\n   {\r\n        PDFService.downloadPdfResult(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadCertificate = (id) =>\r\n   {\r\n        PDFService.downloadPdfCert(id).then( (res) => \r\n        {\r\n          const file = new Blob(\r\n            [res.data], \r\n            {type: 'application/pdf'});\r\n\r\n          const fileURL = URL.createObjectURL(file);   \r\n          window.open(fileURL, \"_blank\");\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setForename(person.forenameCapital);\r\n         setSurnme(person.surnameCapital);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime.toUpperCase());\r\n         setGender(person.gender.toUpperCase());\r\n         setTitle(person.title.toUpperCase());\r\n         setEmail(person.email.toUpperCase());\r\n         setDOB(FormatDateFromString(person.birthDate));\r\n         setTel(person.phone.toUpperCase());\r\n         setPostCode(person.postCode.toUpperCase());\r\n         setAddress(person.address.toUpperCase());\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber)\r\n         {\r\n           setPassport(person.passportNumber.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber2)\r\n         {\r\n           setPassport2(person.passportNumber2.toUpperCase());\r\n         }\r\n        \r\n         setCertificate(person.certificate);\r\n         setAntiBodyTest(person.antiBodyTest);\r\n\r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.certificate = certificate;\r\n          booking.antiBodyTest = antiBodyTest;\r\n          booking.gender = gender;\r\n          booking.title = title;\r\n          booking.birthDate = RevertFormatDateFromString(dob);\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.postCode = postCode;\r\n          booking.address = address;\r\n          booking.passportNumber = passport;\r\n          booking.passportNumber2 = passport2;\r\n          booking.forename = forename;\r\n          booking.surname = surname;\r\n          booking.notes = notes;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateDate(booking.birthDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, dobError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const changeBackToBookingMade = (event, id) =>\r\n   {\r\n     setSaving(true);\r\n     bookingService.changeBackToBookingMade(id).then(res => {\r\n       setSaving(false);\r\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n     }).catch(err => {\r\n       console.log(err);\r\n       setSaving(false);\r\n     })\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                      {person.deleted && (\r\n                          <Tooltip  title=\"This record has been deleted.\">\r\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.forenameCapital} ${person.surnameCapital}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n\r\n\r\n                        <ul className={classes.ul}>\r\n\r\n                        {/* Restore Functionality ******************************************* */}  \r\n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\r\n                                Are you sure you want to restore this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\r\n                                    className={classes.RestoreButton}\r\n                                 >\r\n                                   Restore This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Restore this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n                           {/*  ******************************************************************* */}\r\n\r\n                              {/* Edit Functionality ******************************************* */}\r\n\r\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                            \r\n                            {/* ****************************************************************************************** */}\r\n\r\n\r\n                            {/* Delete Functionality ******************************************* */}\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\r\n                                Are you sure you want to delete this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\r\n                                    className={classes.DeleteButton}\r\n                                 >\r\n                                   Delete This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Delete this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                                 \r\n                            {/* ****************************************************************************************** */}\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                   {FormatDateFromString(person.bookingDate) }\r\n                                  </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>GENDER</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.gender?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={gender}\r\n                                                      onChange = {genderChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>TITLE</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.title?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={title}\r\n                                                      onChange = {titleChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                             \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FORENAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.forenameCapital}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={forename}\r\n                                                      onChange = {forenameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SURNAME</span>\r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.surnameCapital}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={surname}\r\n                                                      onChange = {surnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>D.O.B</span>\r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                            {FormatDateFromString(person.birthDate) }\r\n                                          </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.dobError} \r\n                                                      className={classes.TextBox} \r\n                                                      value={dob}\r\n                                                      onChange = {dobChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>POST CODE</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.postCode?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={postCode}\r\n                                                      onChange = {postCodeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>ADDRESS</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.address?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={address}\r\n                                                      onChange = {addressChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>PASSPORT NO.</span>\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={passport}\r\n                                                      onChange = {passportChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SECOND PASSPORT NO.</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber2?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={passport2}\r\n                                                      onChange = {passport2Changed}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>REQUEST FOR CERTIFICATE</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.certificate ? ( <CheckIcon className={classes.checkIcon}/> ) :  <CloseIcon className={classes.closeIcon}/> }</span>\r\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                    <FormControlLabel className={classes.formControl} \r\n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={certificate} onChange={certificateChanged} />}\r\n                                          label=''\r\n                                        />\r\n                                </span>    \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>REQUEST FOR ANTIBODY TEST</span>\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.antiBodyTest ? <CheckIcon className={classes.checkIcon}/> :  <CloseIcon className={classes.closeIcon}/> }</span>  \r\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                    <FormControlLabel className={classes.formControl} \r\n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={antiBodyTest} onChange={antiBodyTestChanged} />}\r\n                                          label=''\r\n                                        />\r\n                                </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> \r\n                                {getStatusLabel(person.status)} \r\n                                \r\n                                {person.status === \"sample_taken\" &&\r\n                                          !(\r\n                                            editMode.edit && editMode.person._id === person._id\r\n                                          ) && (\r\n                                            <Button \r\n                                                  variant=\"outlined\"\r\n                                                  color=\"primary\"\r\n                                                  disabled = {saving}\r\n                                                  onClick = {event => changeBackToBookingMade(event,person._id)}\r\n\r\n                                                    >\r\n                                              Change Back To Booking Made\r\n                                            </Button>\r\n                                          )}\r\n\r\n                            </li>\r\n      \r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TOTAL CHARGES</span> <span className={calculatePrice(person) <= 199 ? classes.infoDataCharges : classes.infoDataChargesHigher}>{`£${calculatePrice(person)}`}</span>  \r\n                            </li>\r\n\r\n                            <li  hidden={person.deleted} >\r\n                                 <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadForm1(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Registration Form\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li  hidden={person.deleted}>\r\n                                  <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadForm2(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm2(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                    >\r\n                                    Download Lab Form\r\n                                 </Button>\r\n                            </li>\r\n\r\n                            <li hidden={ person.deleted || (person.status !== 'report_sent' && person.status !== 'report_cert_sent') }>\r\n                                 <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadLabResults(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Lab Results\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted || person.status !== 'report_cert_sent'}>\r\n                                 <Button\r\n                                    startIcon = {<PrintIcon/>}\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadCertificate(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Certificate\r\n                                </Button>\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n//   useEffect( () =>\r\n//   {\r\n//      findRecords();\r\n//   }, [state.findRecords]);\r\n\r\n useEffect ( () => {\r\n    setState(state => ({...state, foundRecords : []}));\r\n }, [])\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function ResendEmailsDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [sending, setSending] = React.useState(false);\r\n  const [sent, setSent] = React.useState(false);\r\n\r\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\r\n\r\n  const [sendingStatus, setSendingStatus] = React.useState(\"\");\r\n\r\n  const [sendingProgress, setSendingProgress] = React.useState(10);\r\n\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const getProgress = (status) => {\r\n    console.log(`status : ${status}`);\r\n\r\n    if (status === \"downloadFailed\") return 10;\r\n    else if (status === \"downloading\") return 30;\r\n    else if (status === \"downloadSuccess\") return 70;\r\n    else if (status === \"sent\") return 100;\r\n    else return 0;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSending(false);\r\n    setSent(false);\r\n    setError(false);\r\n    clearInterval(interval);\r\n    props.handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSendingProgress((prevProgress) =>\r\n      prevProgress >= 100 ? 100 : getProgress(sendingStatus)\r\n    );\r\n  }, [sendingStatus]);\r\n\r\n  const resendFilesClicked = (event) => {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus(\"downloadFailed\");\r\n    setSendJustToPCR(true);\r\n\r\n    BookService.regenerateFilesWithBookingId(props.booking._id)\r\n      .then((res) => {\r\n        interval = setInterval(() => {\r\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\r\n            (res) => {\r\n              if (res.data.status === \"OK\") {\r\n                setSendingStatus(res.data.link.status);\r\n\r\n                if (res.data.link.status === \"sent\") {\r\n                  setSending(false);\r\n                  setSent(true);\r\n                  clearInterval(interval);\r\n                }\r\n              } else if (res.data.status === \"FAILED\") {\r\n                setSending(false);\r\n                setSent(false);\r\n                clearInterval(interval);\r\n                setError(true);\r\n              }\r\n            }\r\n          );\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          setError(true);\r\n          clearInterval(interval);\r\n        }, 60000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSending(false);\r\n      });\r\n  };\r\n\r\n  const resendEmailsClicked = (event) => {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus(\"downloadFailed\");\r\n\r\n    BookService.resendEmailsWithBookingId(props.booking._id)\r\n      .then((res) => {\r\n        interval = setInterval(() => {\r\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\r\n            (res) => {\r\n              if (res.data.status === \"OK\") {\r\n                setSendingStatus(res.data.link.status);\r\n\r\n                if (res.data.link.status === \"sent\") {\r\n                  setSending(false);\r\n                  setSent(true);\r\n                  clearInterval(interval);\r\n                }\r\n              } else if (res.data.status === \"FAILED\") {\r\n                setSending(false);\r\n                setSent(false);\r\n                clearInterval(interval);\r\n                setError(true);\r\n              }\r\n            }\r\n          );\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n          setError(true);\r\n          clearInterval(interval);\r\n        }, 60000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSending(false);\r\n      });\r\n  };\r\n\r\n  const cancelResendEmailsClicked = (event) => {\r\n    props.handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <SendIcon style={{ color: \"#2f942e\", fontSize: \"2rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#2f942e\",\r\n                      paddingBottom: \"12px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    RESEND EMAILS{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"230px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  spacing={1}\r\n                  alignItems=\"center\"\r\n                >\r\n                  {!sent && !sending && (\r\n                    <React.Fragment>\r\n                      <Grid item>\r\n                        <div\r\n                          style={{\r\n                            paddingTop: \"5px\",\r\n                            fontSize: \"1rem\",\r\n                            fontWeight: \"500\",\r\n                            color: \"#555\",\r\n                          }}\r\n                        >\r\n                          Do you want to Resend the LAB Report{\" \"}\r\n                          {props.booking.certificate ? \" and Certificate\" : \"\"}{\" \"}\r\n                          Now?\r\n                        </div>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <Button\r\n                          disabled={sending || sent}\r\n                          className={classes.resendButton}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={resendEmailsClicked}\r\n                        >\r\n                          YES ! RESEND THE EMAILS\r\n                        </Button>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <Button\r\n                          disabled={sending || sent}\r\n                          className={classes.cancelButton}\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          onClick={cancelResendEmailsClicked}\r\n                        >\r\n                          NO ! NOT NOW\r\n                        </Button>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <Button\r\n                          disabled={sending || sent}\r\n                          className={classes.resendFilesButton}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={resendFilesClicked}\r\n                        >\r\n                          Just Generate The Files and send to\r\n                          pcrresults@medicalexpressclinic.co.uk\r\n                        </Button>\r\n                      </Grid>\r\n                    </React.Fragment>\r\n                  )}\r\n\r\n                  {error && !sending && !sent && (\r\n                    <Grid item>\r\n                      <Alert\r\n                        style={{\r\n                          marginTop: \"10px\",\r\n                          paddingLeft: \"50px\",\r\n                          paddingRight: \"50px\",\r\n                        }}\r\n                        severity=\"error\"\r\n                      >\r\n                        Error! — Something is wrong with this record!\r\n                      </Alert>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {(sending || sent) && (\r\n                    <Grid item>\r\n                      <div\r\n                        style={{\r\n                          paddingTop: \"50px\",\r\n                          color: \"#2f942e\",\r\n                          fontWeight: \"600\",\r\n                          fontSize: \"1rem\",\r\n                        }}\r\n                      >\r\n                        {sending && !sent && \"Sending ...\"}\r\n\r\n                        {sent && !sendJustToPCR && (\r\n                          <Alert\r\n                            style={{\r\n                              marginTop: \"10px\",\r\n                              paddingLeft: \"50px\",\r\n                              paddingRight: \"50px\",\r\n                            }}\r\n                            severity=\"success\"\r\n                          >\r\n                            Success! — The LAB Report{\" \"}\r\n                            {props.booking.certificate\r\n                              ? \" and Certificate \"\r\n                              : \" \"}{\" \"}\r\n                            Successfully Sent.\r\n                          </Alert>\r\n                        )}\r\n\r\n                        {sent && sendJustToPCR && (\r\n                          <Alert\r\n                            style={{\r\n                              marginTop: \"10px\",\r\n                              paddingLeft: \"50px\",\r\n                              paddingRight: \"50px\",\r\n                            }}\r\n                            severity=\"success\"\r\n                          >\r\n                            Success! — The LAB Report{\" \"}\r\n                            {props.booking.certificate\r\n                              ? \" and Certificate \"\r\n                              : \" \"}{\" \"}\r\n                            Successfully Sent Just to\r\n                            pcrresults@medicalexpressclinic.co.uk .\r\n                          </Alert>\r\n                        )}\r\n                      </div>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                {(sending || sent) && (\r\n                  <React.Fragment>\r\n                    <div\r\n                      style={{\r\n                        marginTop: \"10px\",\r\n                        width: \"50%\",\r\n                        marginLeft: \"27%\",\r\n                      }}\r\n                    >\r\n                      <LinearProgressWithLabel\r\n                        variant=\"determinate\"\r\n                        color=\"primary\"\r\n                        value={sendingProgress}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        paddingTop: \"30px\",\r\n                        color: \"#2f942e\",\r\n                        fontWeight: \"600\",\r\n                        fontSize: \"1rem\",\r\n                        marginLeft: \"45%\",\r\n                      }}\r\n                    >\r\n                      {sending && !sent && \"PLEASE WAIT ...\"}\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, {useEffect, useRef, useState} from 'react';\r\nimport BookService from './services/BookService';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Backdrop, Button, Checkbox, CircularProgress, Divider, FormControlLabel, Grid, InputLabel, Link, makeStyles, MenuItem, Select, TextField, Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { corporates } from './Corporates';\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  archiveButton: {\r\n\r\n  },\r\n\r\n  smartMatchButton: {\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    marginRight : \"10px\"\r\n    // padding: \"10px\"  \r\n  },\r\n\r\n  infoTitle:  {\r\n    fontWeight: \"400\"\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\"\r\n  },\r\n\r\n  matchButton:\r\n  {\r\n    marginTop: \"30px\",\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendButton:\r\n  {\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendFilesButton:{\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  cancelButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"90px\",\r\n    paddingRight: \"90px\"   \r\n  },\r\n  \r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n  \r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#2f942e',\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function PayDialog(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n  const [paymentMethod, setPaymentMethod] = useState('credit card');\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const paymentMethodChanged = (event) =>\r\n  {\r\n    setPaymentMethod(event.target.value);\r\n  }\r\n\r\n  const handleClose = () =>\r\n  {\r\n      if (saving)\r\n        return;\r\n\r\n      props.handleClose();  \r\n      setPaymentMethod('credit card');\r\n      setCorporate(corporates[0]);\r\n      setSaving(false);\r\n  }\r\n\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n\r\n  const payClicked = async () =>\r\n  {\r\n    setSaving(true);\r\n\r\n    try\r\n    {\r\n         await BookService.payBooking(props.booking._id,paymentMethod, paymentMethod === 'corporate' ? corporate : '');\r\n         setSaving(false);\r\n         setState(state => ({...state, bookingPayChanged : !state.bookingPayChanged ? true : false}));\r\n         handleClose();\r\n    }\r\n    catch(err)\r\n    {\r\n        console.error(err);\r\n        setSaving(false);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n        {props.booking && ( \r\n\r\n                <React.Fragment>\r\n<Dialog\r\nmaxWidth=\"800px\"\r\nopen={props.open}\r\nonClose={handleClose}\r\nPaperComponent={PaperComponent}\r\naria-labelledby=\"form-dialog-title\"\r\n>\r\n<DialogTitle id=\"draggable-dialog-title\">\r\n  <Grid\r\n    container\r\n    spacing={2}\r\n    direction=\"row\"\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n  >\r\n    <Grid item>\r\n      <CreditCardIcon\r\n        style={{ color: \"#f50057\", fontSize: \"3rem\" }}\r\n      />\r\n    </Grid>\r\n\r\n    <Grid item>\r\n      <div\r\n        style={{\r\n          color: \"#f50057\",\r\n          paddingBottom: \"10px\",\r\n          fontWeight: \"800\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        PAY the CHARGE{\" \"}\r\n      </div>\r\n    </Grid>\r\n  </Grid>\r\n\r\n  <Divider />\r\n</DialogTitle>\r\n<DialogContent>\r\n  <div\r\n    style={{\r\n      height: \"270px\",\r\n    \r\n    }}\r\n  >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          spacing = {2}\r\n          alignItems=\"flex-start\"\r\n        >\r\n            <Grid item>\r\n               <div style={{fontSize: \"17px\"}}> How do you want to pay? </div> \r\n            </Grid>\r\n\r\n            <Grid item>\r\n      \r\n            <FormControl component=\"fieldset\">\r\n                \r\n                <RadioGroup aria-label=\"paymentMethod\" name=\"paymentMethod\" value={paymentMethod} onChange={paymentMethodChanged}>\r\n                    <FormControlLabel value=\"credit card\" control={<Radio />} label=\"Credit Card\" />\r\n                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\r\n                    <FormControlLabel value=\"corporate\" control={<Radio />} label=\"Corporate\" />\r\n                </RadioGroup>\r\n\r\n                { paymentMethod === 'corporate' && (\r\n\r\n                        <FormControl style={{marginTop: \"10px\"}} className={classes.formControl}>\r\n                        <Select\r\n                            labelId=\"select-corporate\"\r\n                            id=\"select-corporate-id\"\r\n                            value={corporate}\r\n                            onChange={corporateChanged}\r\n                        >\r\n                        {\r\n                        corporates.map(element => (\r\n                                    <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                        ))\r\n                        }     \r\n\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                )}\r\n              \r\n\r\n                </FormControl>\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n        <Grid item>\r\n           \r\n    </Grid>\r\n\r\n    <div style={{position:\"absolute\", bottom:\"20px\", right:\"20px\"}}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"center\"\r\n                spacing = {1}\r\n            >\r\n               \r\n                <Grid item>\r\n                    <Button onClick={handleClose}  style= {{width : '100px'}} disabled={saving}>\r\n                        back\r\n                    </Button>\r\n                        \r\n                </Grid>\r\n                <Grid item>\r\n                    <Button \r\n                        onClick = {payClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style= {{width : '100px'}}\r\n                        disabled={saving}\r\n                    >\r\n                        Pay\r\n                    </Button>\r\n                </Grid>  \r\n          </Grid>\r\n\r\n    </div>\r\n\r\n    \r\n  </div>\r\n\r\n             <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n\r\n</DialogContent>\r\n</Dialog>\r\n\r\n\r\n\r\n\r\n</React.Fragment>\r\n\r\n\r\n        )}\r\n  \r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport dateformat from \"dateformat\";\r\n\r\nconst addMinutes = (date, minutes) => {\r\n  date = new Date(date);\r\n  return new Date(date.getTime() + minutes * 60 * 1000);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  itemTitle: {\r\n    fontWeight: \"500\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  itemData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"600\",\r\n    color: \"#127512\",\r\n  },\r\n}));\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function TimeStampDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [linkTimeStamp, setLinkTimeStamp] = React.useState(null);\r\n\r\n  const handleClose = () => {\r\n    setLinkTimeStamp(null);\r\n\r\n    props.handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      if (props.booking.filename && props.booking.filename.length > 0) {\r\n        BookService.getLinkDetailsWithBookingId(props.booking._id).then(\r\n          (res) => {\r\n            if (res.data.status === \"OK\") {\r\n              setLinkTimeStamp(res.data.link.timeStamp);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const getDateFromBooking = (booking) => {\r\n    let date = new Date(booking.bookingDate);\r\n    date.setHours(booking.bookingTimeNormalized.substr(0, 2));\r\n    date.setMinutes(booking.bookingTimeNormalized.substr(3, 2));\r\n    date.setSeconds(0);\r\n    date.setMilliseconds(0);\r\n    return date;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"sm\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <HistoryIcon style={{ color: \"#f50057\", fontSize: \"2rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"12px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Audit Trail{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"370px\",\r\n              \r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  spacing={4}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      PATIENT BOOKING TIMESTAMP :{\" \"}\r\n                    </span>\r\n                    <span className={classes.itemData}>\r\n                      {\" \"}\r\n                      {dateformat(props.booking.timeStamp, \"isoDateTime\")}{\" \"}\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      BOOKED DATE AND TIME :{\" \"}\r\n                    </span>\r\n                    <span className={classes.itemData}>\r\n                      {dateformat(\r\n                        getDateFromBooking(props.booking),\r\n                        \"isoDateTime\"\r\n                      )}\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP ATTENDED :{\" \"}\r\n                    </span>\r\n                    {props.booking.samplingTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          props.booking.samplingTimeStamp,\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - SAMPLE TAKEN :{\" \"}\r\n                    </span>\r\n                    {props.booking.samplingTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          addMinutes(props.booking.samplingTimeStamp, 5),\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - COLLECTED BY COURIER :{\" \"}\r\n                    </span>\r\n                    {props.booking.samplingTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          addMinutes(props.booking.samplingTimeStamp, 35),\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - RESULTS RECEIVED :{\" \"}\r\n                    </span>\r\n                    {linkTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(linkTimeStamp, \"isoDateTime\")}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <span className={classes.itemTitle}>\r\n                      TIMESTAMP - SENT TO PATIENT :{\" \"}\r\n                    </span>\r\n                    {linkTimeStamp ? (\r\n                      <span className={classes.itemData}>\r\n                        {\" \"}\r\n                        {dateformat(\r\n                          addMinutes(linkTimeStamp, 5),\r\n                          \"isoDateTime\"\r\n                        )}{\" \"}\r\n                      </span>\r\n                    ) : (\r\n                      <span className={classes.itemData}> - </span>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"default\">\r\n                Back\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","\r\n\r\nexport const CalendarColors = {\r\n    PCR_COLOR : \"#4faef7\",\r\n    GYNAE_COLOR : \"#e83caf\",\r\n    GP_COLOR :  \"#ff4f14\",\r\n    STD_COLOR : \"#d6733a\"\r\n}\r\n","import API from './api';\r\n\r\nexport default class InvoiceService{\r\n\r\n    static createInvoice = (payload) =>\r\n    {\r\n        return  API.post('/api/medex/invoice/createinvoice', payload)\r\n    }\r\n\r\n    static updateInvoice = (invoiceNumber, payload) =>\r\n    {\r\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\r\n    }\r\n\r\n    static deleteinvoice = (invoiceNumber) =>\r\n    {\r\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\r\n    }\r\n\r\n    static getInvoiceByBookingId = (bookingId) =>\r\n    {\r\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\r\n    }\r\n\r\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\r\n    {\r\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\r\n    }\r\n\r\n    static getCodeDetails = (code) =>\r\n    {\r\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\r\n    }\r\n\r\n    static getAllCodes = () =>\r\n    {\r\n        return API.get(`/api/medex/invoice/getallcodes`)\r\n    }\r\n\r\n    static downloadInvoice = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static emailInvoice = (id, email) =>\r\n    {\r\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\r\n    }\r\n\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport InvoiceService from \"./services/InvoiceService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  DialogActions,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function InvoiceDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\r\n\r\n  const [code, setCode] = useState(defaultCode);\r\n  const [codeError, setCodeError] = useState(false);\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(false);\r\n\r\n  const [notes, setNotes] = useState(\"\");\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n  };\r\n\r\n  const [items, setItems] = React.useState([]);\r\n\r\n  const [price, setPrice] = useState(\"\");\r\n  const [priceError, setPriceError] = useState(false);\r\n\r\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\r\n\r\n  const [allCodes, setAllCodes] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.invoice) {\r\n      setItems(props.invoice.items);\r\n      setNotes(props.invoice.notes || \"\");\r\n      setTitle(\"EDIT INVOICE\");\r\n    } else {\r\n      setTitle(\"INVOICE ISSUANCE\");\r\n    }\r\n\r\n    fetchAllCodes();\r\n\r\n    return () => {\r\n      setItems([]);\r\n    };\r\n  }, [props.invoice]);\r\n\r\n  useEffect(() => {\r\n    if (!props.invoice && props.defaultCodes) {\r\n      setItems(props.defaultCodes)\r\n    }\r\n\r\n    return () => {\r\n      setItems([]);\r\n    };\r\n  }, [props.defaultCodes]);\r\n\r\n\r\n\r\n  const fetchAllCodes = async () => {\r\n    try {\r\n      const res = await InvoiceService.getAllCodes();\r\n      setAllCodes(res.data.result);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const priceChanged = (event) => {\r\n    setPrice(event.target.value);\r\n    setPriceError(false);\r\n  };\r\n\r\n  const codeChanged = (event) => {\r\n    setCode(event.target.value?.toUpperCase());\r\n    setCodeError(false);\r\n  };\r\n\r\n  const descriptionChanged = (event) => {\r\n    setDescription(event.target.value);\r\n    setDescriptionError(false);\r\n  };\r\n\r\n  const handleClose = (refresh) => {\r\n    if (saving) return;\r\n\r\n    setPrice(\"\");\r\n    setCode(defaultCode);\r\n    setDescription(\"\");\r\n    setPriceError(false);\r\n    setCodeError(false);\r\n    setDescriptionError(false);\r\n    setItems([]);\r\n    setNotes(\"\");\r\n    setSaving(false);\r\n\r\n    props.handleClose(refresh);\r\n  };\r\n\r\n  const codeLeft = () => {\r\n    fetchCodeDetails();\r\n  };\r\n\r\n  const fetchCodeDetails = async () => {\r\n    try {\r\n      setDescription(\"...\");\r\n      const res = await InvoiceService.getCodeDetails(code);\r\n      if (res.data.status === \"OK\") {\r\n        const result = res.data.result;\r\n        if (result.length === 0) {\r\n          setCodeError(true);\r\n          setDescription(\"\");\r\n          setPrice(\"\");\r\n        } else if (result.length >= 1) {\r\n          setDescription(result[0].description);\r\n          setPrice(result[0].price);\r\n          setDescriptionError(false);\r\n          setPriceError(false);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const addItemClicked = () => {\r\n    if (!validateItem()) {\r\n      return;\r\n    }\r\n\r\n    setItems([\r\n      ...items,\r\n      { code: code.code, description: code.description, price: code.price },\r\n    ]);\r\n    setCode(defaultCode);\r\n  };\r\n\r\n  const addItemClicked2 = () => {\r\n    if (!validateItem2()) {\r\n      return;\r\n    }\r\n\r\n    setItems([...items, { code: \"\", description: description, price: price }]);\r\n    setDescription(\"\");\r\n    setPrice(\"\");\r\n  };\r\n\r\n  const validateItem = () => {\r\n    let error = false;\r\n    if (!code) return false;\r\n\r\n    if (!code.description || code.description.length === 0) {\r\n      error = true;\r\n    }\r\n    if (!code.price || code.price.length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateItem2 = () => {\r\n    let error = false;\r\n    if (!description || description.length === 0) {\r\n      setDescriptionError(true);\r\n      error = true;\r\n    }\r\n    if (!price || price.length === 0) {\r\n      setPriceError(true);\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const removeItem = (index) => {\r\n    let temp = [...items];\r\n    temp.splice(index, 1);\r\n    setItems(temp);\r\n  };\r\n\r\n  const getGrandTotal = (_items) => {\r\n    let total = 0;\r\n    _items.forEach((element) => {\r\n      total += parseFloat(element.price);\r\n    });\r\n\r\n    return total;\r\n  };\r\n\r\n  const saveClikced = async () => {\r\n    if (items.length === 0 && !props.invoice) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSaving(true);\r\n      let name = \"\";\r\n      let postCode = \"\";\r\n      let address = \"\";\r\n\r\n      if (props.booking.formData) {\r\n        const formData = JSON.parse(props.booking.formData)\r\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\r\n        postCode = formData.postCode;\r\n        address = formData.address;\r\n      } else if (props.booking.forename && props.booking.surname) {\r\n        name = `${props.booking.forename} ${props.booking.surname}`;\r\n        postCode = props.booking.postCode;\r\n        address = props.booking.address;\r\n      } else if (props.booking.fullname) {\r\n        name = `${props.booking.fullname}`;\r\n      }\r\n\r\n      const invoice = {\r\n        name: name,\r\n        date: new Date(),\r\n        dateAttended: new Date(props.booking.bookingDate),\r\n        items: items,\r\n        grandTotal: getGrandTotal(items),\r\n        bookingId: props.booking._id,\r\n        postCode: postCode,\r\n        address: address,\r\n        notes: notes,\r\n      };\r\n      if (!props.invoice) {\r\n        await InvoiceService.createInvoice(invoice);\r\n      } else if (items.length > 0) {\r\n        await InvoiceService.updateInvoice(\r\n          props.invoice.invoiceNumber,\r\n          invoice\r\n        );\r\n      } else {\r\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\r\n      }\r\n\r\n      setSaving(false);\r\n      handleClose(true);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            onClose={() => handleClose(false)}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#1cb2c9\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {`${title}`}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"700px\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  spacing={1}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item style={{ width: \"100%\" }}>\r\n                    <Grid container direction=\"row\" spacing={5}>\r\n                      <Grid item xs={10}>\r\n                        <Autocomplete\r\n                          id=\"code-auto-complete\"\r\n                          value={code}\r\n                          onChange={(event, newValue) => {\r\n                            setCode(newValue);\r\n                          }}\r\n                          options={allCodes}\r\n                          getOptionLabel={(option) =>\r\n                            `.${option.code} -- ${\r\n                              option.description\r\n                            } -- ${parseFloat(\r\n                              option.price\r\n                            ).toLocaleString(\"en-GB\", {\r\n                              style: \"currency\",\r\n                              currency: \"GBP\",\r\n                            })}`\r\n                          }\r\n                          style={{ width: \"750px\" }}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"System Codes\"\r\n                              helperText=\"Standard codes already defined in the system\"\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={2}>\r\n                        <Button\r\n                          onClick={addItemClicked}\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"15px\" }}\r\n                          disabled={saving}\r\n                        >\r\n                          + Add\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\r\n                    <Grid container direction=\"row\" spacing={5}>\r\n                      <Grid item xs={8}>\r\n                        <TextField\r\n                          error={descriptionError}\r\n                          value={description}\r\n                          onChange={descriptionChanged}\r\n                          fullWidth\r\n                          label=\"Description (Custom)\"\r\n                          name=\"desc\"\r\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\r\n                          id=\"desc-id\"\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={2}>\r\n                        <TextField\r\n                          error={priceError}\r\n                          value={price}\r\n                          onChange={priceChanged}\r\n                          fullWidth\r\n                          label=\"Price\"\r\n                          name=\"price\"\r\n                          id=\"price-id\"\r\n                          InputProps={{\r\n                            inputComponent: NumberFormatCustom,\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\">\r\n                                £\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={2}>\r\n                        <Button\r\n                          onClick={addItemClicked2}\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          style={{ marginTop: \"12px\" }}\r\n                          disabled={saving}\r\n                        >\r\n                          + Add\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#fff\",\r\n                      color: \"#1cb2c9\",\r\n                      fontWeight: \"500\",\r\n                      fontSize: \"0.95rem\",\r\n                      padding: \"5px 8px\",\r\n                      marginBottom: \"-15px\",\r\n                      marginLeft: \"10px\",\r\n                      zIndex: \"99\",\r\n                      marginTop: \"30px\",\r\n                    }}\r\n                  >\r\n                    Invoice Items\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"300px\",\r\n                      overflowY: \"scroll\",\r\n                      border: \"1px solid #ddd\",\r\n                      borderRadius: \"4px\",\r\n                      padding: \"25px\",\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Grid item>\r\n                      <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"flex-start\"\r\n                        spacing={2}\r\n                        alignItems=\"flex-start\"\r\n                      >\r\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\r\n                          <Grid container direction=\"row\" spacing={4}>\r\n                            <Grid item xs={2}>\r\n                              Code\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              Description\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              Price\r\n                            </Grid>\r\n                            <Grid item xs={3}></Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        {items.map((item, index) => (\r\n                          <Grid item style={{ width: \"100%\" }}>\r\n                            <Grid container direction=\"row\" spacing={4}>\r\n                              <Grid item xs={2}>\r\n                                {item.code}\r\n                              </Grid>\r\n                              <Grid item xs={5}>\r\n                                {item.description}\r\n                              </Grid>\r\n                              <Grid item xs={2}>\r\n                                {parseFloat(item.price).toLocaleString(\r\n                                  \"en-GB\",\r\n                                  { style: \"currency\", currency: \"GBP\" }\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={3}>\r\n                                <Tooltip title=\"Remove Item\">\r\n                                  <IconButton\r\n                                    style={{ marginTop: \"-15px\" }}\r\n                                    onClick={() => removeItem(index)}\r\n                                  >\r\n                                    <DeleteIcon color=\"primary\" />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        ))}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n\r\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\r\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\r\n                      Grand Total :{\" \"}\r\n                    </span>{\" \"}\r\n                    <span\r\n                      style={{\r\n                        fontWeight: \"500\",\r\n                        color: \"#1cb2c9\",\r\n                        marginLeft: \"10px\",\r\n                        fontSize: \"1rem\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\r\n                        style: \"currency\",\r\n                        currency: \"GBP\",\r\n                      })}{\" \"}\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\r\n                    <TextField\r\n                      value={notes}\r\n                      onChange={notesChanged}\r\n                      multiline\r\n                      rows={2}\r\n                      helperText=\"* notes will be printed on the invoice (optional)\"\r\n                      label=\"Notes\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\r\n                    ></TextField>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n              >\r\n                <Grid item>\r\n                  <Button\r\n                    onClick={() => handleClose(false)}\r\n                    style={{ width: \"100px\" }}\r\n                    disabled={saving}\r\n                  >\r\n                    back\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    onClick={saveClikced}\r\n                    variant=\"contained\"\r\n                    color=   {props.invoice ? 'secondary' : 'primary'}\r\n                    // style={{ width: \"100px\" }}\r\n                    disabled={saving}\r\n                  >\r\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Divider,\r\n  FormControlLabel,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport PDFService from \"./services/PDFService\";\r\n\r\nimport { calculatePrice } from \"./PriceCalculator\";\r\n\r\nimport bookingService from \"./services/BookService\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BookService from \"./services/BookService\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  FormatDateFromString,\r\n  RevertFormatDateFromString,\r\n} from \"./DateFormatter\";\r\nimport ResendEmailsDialog from \"./ResendEmailsDialog\";\r\nimport PayDialog from \"./PayDialog\";\r\n\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport TimeStampDialog from \"./TimeStampDialog\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\nimport InvoiceService from \"../services/InvoiceService\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport InvoiceDialog from \"../InvoiceDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor: \"#373737\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor: \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#333\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n    listStyle: \"none\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  li: {\r\n    marginBottom: \"15px\",\r\n  },\r\n\r\n  icon: {\r\n    marginRight: \"8px\",\r\n  },\r\n\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  lineThrough: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails: {\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\",\r\n  },\r\n\r\n  infoData: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  Accordion: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#222\",\r\n  },\r\n\r\n  AccordionDeleted: {\r\n    backgroundColor: \"#aaa\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  DownloadForm: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n\r\n  infoDataCharges: {\r\n    fontSize: \"18px\",\r\n    color: \"green\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  infoDataChargesHigher: {\r\n    fontSize: \"18px\",\r\n    color: \"red\",\r\n    fontWeight: \"600\",\r\n  },\r\n  BookedLabel: {\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  PositiveLabel: {\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\",\r\n  },\r\n\r\n  EditButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  ResendEmailsButton: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  PayButton: {\r\n    marginLeft: \"70px\",\r\n    width: \"300px\",\r\n  },\r\n\r\n  PayLabel: {\r\n    marginLeft: \"20px\",\r\n\r\n    color: \"#2f942e\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  RestoreButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#eee\",\r\n    color: \"#333\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  DeleteButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\",\r\n    },\r\n\r\n    padding: \"10px\",\r\n  },\r\n\r\n  SaveButton: {\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor: \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  CancelButton: {\r\n    marginBottom: \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n    marginBottom: \"-8px\",\r\n  },\r\n\r\n  checkIconSmall: {\r\n    color: \"green\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n    marginBottom: \"-8px\",\r\n  },\r\n\r\n  centeredLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  invoiceNumber: {\r\n    display: \"inline-block\",\r\n    fontWeight: \"500\",\r\n    width: \"80px\",\r\n    fontSize: \"1rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  printInvoiceButton: {\r\n    marginLeft: \"70px\",\r\n    fontSize: \"0.8rem\",\r\n    // width: \"300px\",\r\n  },\r\n\r\n  editInvoiceButton: {\r\n    marginLeft: \"10px\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#alert-dialog-slide-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const getDefaultCodes = (_booking) => {\r\n    const defaultCodes = [];\r\n    if (!_booking) return;\r\n\r\n    if (_booking.tr) {\r\n      defaultCodes.push({\r\n        code: \"PCRTR\",\r\n        description: \"PCR TEST TO RELEASE\",\r\n        price: 250,\r\n      });\r\n    } else {\r\n      defaultCodes.push({\r\n        code: \"PCR\",\r\n        description: \"PCR SWAB TEST\",\r\n        price: 199,\r\n      });\r\n      if (_booking.antiBodyTest) {\r\n        defaultCodes.push({\r\n          code: \"PCRA\",\r\n          description: \"PCR ANTIBODY TEST\",\r\n          price: 99,\r\n        });\r\n        defaultCodes.push({\r\n          code: \"PHLE\",\r\n          description: \"PHLEBOTOMY\",\r\n          price: 50,\r\n        });\r\n      }\r\n      if (_booking.certificate) {\r\n        defaultCodes.push({\r\n          code: \"PCRCERT\",\r\n          description: \"PCR FIT TO FLY CERTIFICATE\",\r\n          price: 50,\r\n        });\r\n      }\r\n    }\r\n    return defaultCodes;\r\n  };\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\r\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\r\n  const [deleteMode, setDeleteMode] = React.useState({\r\n    delete: false,\r\n    person: null,\r\n  });\r\n  const [restoreMode, setRestoreMode] = React.useState({\r\n    restore: false,\r\n    person: null,\r\n  });\r\n\r\n  const [saving, setSaving] = React.useState(false);\r\n  const [deleting, setDeleting] = React.useState(false);\r\n  const [restoring, setRestoring] = React.useState(false);\r\n\r\n  const [validationError, setValidationError] = React.useState({});\r\n\r\n  const [bookingDate, setBookingDate] = React.useState(\"\");\r\n  const [bookingTime, setBookingTime] = React.useState(\"\");\r\n\r\n  const [gender, setGender] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [forename, setForename] = React.useState(\"\");\r\n  const [surname, setSurnme] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [dob, setDOB] = React.useState(\"\");\r\n  const [tel, setTel] = React.useState(\"\");\r\n  const [postCode, setPostCode] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [passport, setPassport] = React.useState(\"\");\r\n  const [passport2, setPassport2] = React.useState(\"\");\r\n  const [certificate, setCertificate] = React.useState(false);\r\n  const [antiBodyTest, setAntiBodyTest] = React.useState(false);\r\n\r\n  const [refreshData, setRefreshData] = React.useState(false);\r\n\r\n  const [booking, setBooking] = React.useState(null);\r\n\r\n  const [recordChanged, setRecordChanged] = React.useState(false);\r\n\r\n  const [fieldChanged, setFieldChanged] = React.useState(false);\r\n\r\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\r\n\r\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\r\n\r\n  const handleCloseTimeStampDialog = () => {\r\n    setOpenTimeStampDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseUndoPayDialog = () => {\r\n    setOpenUndoPayDialog(false);\r\n  };\r\n\r\n  const handleCloseResendDialog = () => {\r\n    setOpenResendDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleClosePayDialog = () => {\r\n    setOpenPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (booking) {\r\n      const isChanged =\r\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\r\n        bookingTime !== booking.bookingTime ||\r\n        gender !== booking.gender ||\r\n        forename !== booking.forenameCapital ||\r\n        surname !== booking.surnameCapital ||\r\n        title !== booking.title ||\r\n        email !== booking.email ||\r\n        dob !== FormatDateFromString(booking.birthDate) ||\r\n        tel !== booking.phone ||\r\n        postCode !== booking.postCode ||\r\n        address !== booking.address ||\r\n        passport !== booking.passportNumber ||\r\n        passport2 !== booking.passportNumber2 ||\r\n        certificate !== booking.certificate ||\r\n        antiBodyTest !== booking.antiBodyTest;\r\n\r\n      setRecordChanged(isChanged);\r\n    }\r\n  }, [fieldChanged]);\r\n\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      setTimeout(() => {\r\n        setEditMode({ edit: false, person: null });\r\n        setRecordChanged(false);\r\n      }, 500);\r\n    }\r\n  }, [props.open]);\r\n\r\n  const bookingDateChanged = (event) => {\r\n    setBookingDate(event.target.value);\r\n    setValidationError({ ...validationError, bookingDateError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const bookingTimeChanged = (event) => {\r\n    setBookingTime(event.target.value);\r\n    setValidationError({ ...validationError, bookingTimeError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const genderChanged = (event) => {\r\n    setGender(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const titleChanged = (event) => {\r\n    setTitle(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const forenameChanged = (event) => {\r\n    setForename(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const surnameChanged = (event) => {\r\n    setSurnme(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const dobChanged = (event) => {\r\n    setDOB(event.target.value);\r\n    setValidationError({ ...validationError, dobError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const telChanged = (event) => {\r\n    setTel(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const postCodeChanged = (event) => {\r\n    setPostCode(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const addressChanged = (event) => {\r\n    setAddress(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const passportChanged = (event) => {\r\n    setPassport(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const passport2Changed = (event) => {\r\n    setPassport2(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const certificateChanged = (event) => {\r\n    setCertificate(event.target.checked);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const antiBodyTestChanged = (event) => {\r\n    setAntiBodyTest(event.target.checked);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    if (status === \"booked\") {\r\n      return <span className={classes.BookedLabel}> Booking Made </span>;\r\n    } else if (status === \"patient_attended\") {\r\n      return (\r\n        <span className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n      );\r\n    } else if (status === \"sample_taken\") {\r\n      return <span className={classes.SampleTakenLabel}> Sample Taken </span>;\r\n    } else if (status === \"report_sent\") {\r\n      return <span className={classes.ReportSentLabel}> Report Sent </span>;\r\n    } else if (status === \"report_cert_sent\") {\r\n      return (\r\n        <span className={classes.ReportCertSentLabel}>\r\n          {\" \"}\r\n          {`Report & Certificate Sent`}{\" \"}\r\n        </span>\r\n      );\r\n    } else if (status === \"positive\") {\r\n      return <span className={classes.PositiveLabel}> {`POSITIVE`} </span>;\r\n    } else {\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const downloadForm1 = (id) => {\r\n    PDFService.downloadCovidForm1(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const downloadForm2 = (id) => {\r\n    PDFService.downloadCovidForm2(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const downloadLabResults = (id) => {\r\n    PDFService.downloadPdfResult(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const downloadCertificate = (id) => {\r\n    PDFService.downloadPdfCert(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleEditModeChanged = (edit, person) => {\r\n    if (edit) {\r\n      setForename(person.forenameCapital);\r\n      setSurnme(person.surnameCapital);\r\n      setBookingDate(FormatDateFromString(person.bookingDate));\r\n      setBookingTime(person.bookingTime.toUpperCase());\r\n      setGender(person.gender.toUpperCase());\r\n      setTitle(person.title.toUpperCase());\r\n      setEmail(person.email.toUpperCase());\r\n      setDOB(FormatDateFromString(person.birthDate));\r\n      setTel(person.phone.toUpperCase());\r\n      setPostCode(person.postCode.toUpperCase());\r\n      setAddress(person.address.toUpperCase());\r\n      if (person.notes) {\r\n        setNotes(person.notes.toUpperCase());\r\n      } else {\r\n        setNotes(\"\");\r\n      }\r\n\r\n      if (person.passportNumber) {\r\n        setPassport(person.passportNumber.toUpperCase());\r\n      } else {\r\n        setPassport(\"\");\r\n      }\r\n\r\n      if (person.passportNumber2) {\r\n        setPassport2(person.passportNumber2.toUpperCase());\r\n      } else {\r\n        setPassport2(\"\");\r\n      }\r\n\r\n      setCertificate(person.certificate);\r\n      setAntiBodyTest(person.antiBodyTest);\r\n\r\n      setEditMode({ edit: edit, person: person });\r\n    } else if (!edit && !person) {\r\n      setEditMode({ edit: edit, person: person });\r\n      setRecordChanged(false);\r\n    } else if (!edit && person) {\r\n      const booking = {};\r\n      const bookingId = person._id;\r\n      booking.certificate = certificate;\r\n      booking.antiBodyTest = antiBodyTest;\r\n      booking.gender = gender;\r\n      booking.title = title;\r\n      booking.birthDate = RevertFormatDateFromString(dob);\r\n      booking.email = email;\r\n      booking.phone = tel;\r\n      booking.postCode = postCode;\r\n      booking.address = address;\r\n      booking.passportNumber = passport;\r\n      booking.passportNumber2 = passport2;\r\n      booking.forename = forename;\r\n      booking.surname = surname;\r\n      booking.notes = notes;\r\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n      booking.bookingTime = bookingTime;\r\n      booking.bookingRef = person.bookingRef;\r\n\r\n      if (validateBooking(booking)) {\r\n        updateBooking({ bookingId: bookingId, person: booking });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateDate = (str) => {\r\n    var error = false;\r\n    if (!str || str.length !== 10) {\r\n      error = true;\r\n    }\r\n\r\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n      if (!result) {\r\n        error = true;\r\n      }\r\n\r\n      const year = parseInt(str.substr(0, 4));\r\n      const month = parseInt(str.substr(5, 2));\r\n      const day = parseInt(str.substr(8, 2));\r\n\r\n      if (year < 1900) {\r\n        error = true;\r\n      }\r\n\r\n      if (month < 1 || month > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (day > 31) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateTime = (str) => {\r\n    var error = false;\r\n\r\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n    if (!result) {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const hour = parseInt(str.substr(0, 2));\r\n      const minute = parseInt(str.substr(3, 2));\r\n\r\n      if (hour < 0 || hour > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (minute < 0 || minute > 59) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateBooking = (booking) => {\r\n    var error = false;\r\n\r\n    if (!validateDate(booking.bookingDate)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingDateError: true });\r\n    }\r\n\r\n    if (!validateDate(booking.birthDate)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, dobError: true });\r\n    }\r\n\r\n    if (!validateTime(booking.bookingTime)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingTimeError: true });\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const updateBooking = (payload) => {\r\n    setSaving(true);\r\n    bookingService\r\n      .updateBooking(payload)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteBooking = (id) => {\r\n    setDeleting(true);\r\n    bookingService\r\n      .deleteBooking(id)\r\n      .then((res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const restoreBooking = (id) => {\r\n    setRestoring(true);\r\n    bookingService\r\n      .unDeleteBooking(id)\r\n      .then((res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteModeChanged = (del, person) => {\r\n    if (del) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && !person) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && person) {\r\n      deleteBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n    if (restore) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && !person) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && person) {\r\n      restoreBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const changeBackToBookingMade = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeBackToBookingMade(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const resendEmails = (event, id) => {\r\n    setSelectedBooking(booking);\r\n    setOpenResendDialog(true);\r\n  };\r\n\r\n  const Pay = (event, id) => {\r\n    setSelectedBooking(booking);\r\n    setOpenPayDialog(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      BookService.getBookingById(props.booking._id)\r\n        .then((res) => {\r\n          setBooking(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n    }\r\n  }, [refreshData, state.bookingPayChanged]);\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      setBooking(props.booking);\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const undoPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.unPayBooking(booking._id);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n  };\r\n\r\n  ///*** Invoice  ******************/\r\n\r\n  const [invoice, setInvoice] = React.useState(null);\r\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\r\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\r\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\r\n\r\n  const fetchInvoice = async () => {\r\n    try {\r\n      setInvoiceLoaded(false);\r\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\r\n      setInvoice(res.data.invoice);\r\n      setInvoiceLoaded(true);\r\n    } catch (err) {\r\n      setInvoiceLoaded(true);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.booking) {\r\n      fetchInvoice();\r\n    }\r\n  }, [props.booking, props.open]);\r\n\r\n  const handleCloseInvoiceDialog = (refresh) => {\r\n    setOpenInvoiceDialog(false);\r\n    setSelectedBooking(null);\r\n    fetchInvoice();\r\n  };\r\n\r\n  const OpenInvoiceDialog = () => {\r\n    setSelectedBooking(booking);\r\n    setInvoice(invoice);\r\n    setOpenInvoiceDialog(true);\r\n  };\r\n\r\n  const downloadInvoice = (id) => {\r\n    InvoiceService.downloadInvoice(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const sendInvoiceEmail = (id, _email) => {\r\n    setSaving(true);\r\n    setEmailSentInvoice(false);\r\n    InvoiceService.emailInvoice(id, _email)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSentInvoice(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  //***************************** */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={props.onClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle\r\n              id=\"alert-dialog-slide-title\"\r\n              style={\r\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\r\n              }\r\n            >\r\n              <div\r\n                style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}\r\n                hidden={state.role === \"pcrlab\"}\r\n              >\r\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(\r\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/pcr/${booking._id}`\r\n                      );\r\n                      setCopied(true);\r\n                      setTimeout(() => {\r\n                        setCopied(false);\r\n                      }, 1500);\r\n                    }}\r\n                    aria-label=\"delete\"\r\n                    className={classes.margin}\r\n                    size=\"small\"\r\n                  >\r\n                    <FileCopyOutlinedIcon\r\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\r\n                      fontSize=\"14px\"\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <span\r\n                  hidden={!copied}\r\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\r\n                >\r\n                  {\" \"}\r\n                  Copied{\" \"}\r\n                </span>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"25x\",\r\n                  right: \"60px\",\r\n                  backgroundColor: CalendarColors.PCR_COLOR,\r\n                  color: \"#fff\",\r\n                  padding: \"0px 5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                PCR\r\n              </div>\r\n\r\n              {booking.tr && (\r\n                <div style={{ position: \"absolute\", right: \"15px\" }}>TR</div>\r\n              )}\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={\r\n                      booking.deleted\r\n                        ? {\r\n                            paddingBottom: \"5px\",\r\n                            textDecoration: \"line-through\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {`${booking.forenameCapital} ${booking.surnameCapital}`}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {booking.deleted && (\r\n                  <Grid item>\r\n                    <Tooltip title=\"This record has been deleted.\">\r\n                      <DeleteIcon\r\n                        style={\r\n                          booking.tr\r\n                            ? {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#fff\",\r\n                                fontSize: 25,\r\n                              }\r\n                            : {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#333\",\r\n                                fontSize: 25,\r\n                              }\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  paddingTop: \"20px\",\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={12} key={`panel0`}>\r\n                  <div className={classes.infoDetails}>\r\n                    <ul className={classes.ul}>\r\n                      {/* Restore Functionality ******************************************* */}\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"500\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to restore this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !booking.deleted ||\r\n                          (restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.RestoreButton}\r\n                        >\r\n                          Restore This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Restore this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/*  ******************************************************************* */}\r\n\r\n                      {/* Edit Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          deleteMode.delete ||\r\n                          (editMode.edit &&\r\n                            editMode.person._id === booking._id) ||\r\n                          state.role === \"pcrlab\"\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleEditModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.EditButton}\r\n                        >\r\n                          Edit Booking Info\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={saving || !recordChanged}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={saving}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      {/* Delete Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to delete this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          props.deleteButtonDisabled ||\r\n                          booking.deleted ||\r\n                          editMode.edit ||\r\n                          (deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id) ||\r\n                          state.role === \"pcrlab\"\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.DeleteButton}\r\n                        >\r\n                          Delete This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Delete this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED DATE\r\n                            </span>\r\n\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {FormatDateFromString(booking.bookingDate)}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingDateError}\r\n                                className={classes.TextBox}\r\n                                value={bookingDate}\r\n                                onChange={bookingDateChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED TIME\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.bookingTime.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingTimeError}\r\n                                className={classes.TextBox}\r\n                                value={bookingTime}\r\n                                onChange={bookingTimeChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>GENDER</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.gender?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={gender}\r\n                                onChange={genderChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>TITLE</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.title?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={title}\r\n                                onChange={titleChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>FORENAME</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.forenameCapital}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={forename}\r\n                                onChange={forenameChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>SURNAME</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.surnameCapital}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={surname}\r\n                                onChange={surnameChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>EMAIL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.email?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={email}\r\n                                onChange={emailChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>D.O.B</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {FormatDateFromString(booking.birthDate)}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.dobError}\r\n                                className={classes.TextBox}\r\n                                value={dob}\r\n                                onChange={dobChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li className={classes.li}></li>\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>TEL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.phone?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={tel}\r\n                                onChange={telChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>POST CODE</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.postCode?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={postCode}\r\n                                onChange={postCodeChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>ADDRESS</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.address?.toUpperCase()}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={address}\r\n                            onChange={addressChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      {booking.selfIsolate && (\r\n                        <React.Fragment>\r\n                          <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>\r\n                              Self-Isolate Post Code\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.postCodeSI}\r\n                            </span>\r\n                          </li>\r\n                          <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>\r\n                              Self-Isolate Address\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.addressSI}\r\n                            </span>\r\n                          </li>\r\n                        </React.Fragment>\r\n                      )}\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              PASSPORT NO.\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.passportNumber?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={passport}\r\n                                onChange={passportChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n\r\n                          {!booking.tr && (\r\n                            <Grid item xs={6}>\r\n                              <span className={classes.infoTitle}>\r\n                                SECOND PASSPORT NO.\r\n                              </span>\r\n                              <span\r\n                                hidden={\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                }\r\n                                className={classes.infoData}\r\n                              >\r\n                                {booking.passportNumber2?.toUpperCase()}\r\n                              </span>\r\n                              <span\r\n                                hidden={\r\n                                  !(\r\n                                    editMode.edit &&\r\n                                    editMode.person._id === booking._id\r\n                                  )\r\n                                }\r\n                                className={classes.infoData}\r\n                              >\r\n                                <TextField\r\n                                  fullWidth\r\n                                  className={classes.TextBox}\r\n                                  value={passport2}\r\n                                  onChange={passport2Changed}\r\n                                  inputProps={{\r\n                                    style: {\r\n                                      padding: 0,\r\n                                    },\r\n                                  }}\r\n                                ></TextField>\r\n                              </span>\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              NHS Number\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.NHSNumber ?? \"-\"}\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>Ethnicity</span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.ethnicity}\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              Arrival Date\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.arrivalDate}\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              Flight Number\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.flightNumber}\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li hidden={!booking.tr} className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              Last Departed Date\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.lastDepartedDate}\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              Travelling From\r\n                            </span>{\" \"}\r\n                            <span className={classes.infoData}>\r\n                              {booking.travellingFrom}\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li hidden={booking.tr} className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              REQUEST FOR CERTIFICATE\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.certificate ? (\r\n                                <CheckIcon className={classes.checkIcon} />\r\n                              ) : (\r\n                                <CloseIcon className={classes.closeIcon} />\r\n                              )}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <FormControlLabel\r\n                                className={classes.formControl}\r\n                                control={\r\n                                  <Checkbox\r\n                                    className={classes.formControl}\r\n                                    color=\"secondary\"\r\n                                    name=\"certificate\"\r\n                                    checked={certificate}\r\n                                    onChange={certificateChanged}\r\n                                  />\r\n                                }\r\n                                label=\"\"\r\n                              />\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              REQUEST FOR ANTIBODY TEST\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.antiBodyTest ? (\r\n                                <CheckIcon className={classes.checkIcon} />\r\n                              ) : (\r\n                                <CloseIcon className={classes.closeIcon} />\r\n                              )}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <FormControlLabel\r\n                                className={classes.formControl}\r\n                                control={\r\n                                  <Checkbox\r\n                                    className={classes.formControl}\r\n                                    color=\"secondary\"\r\n                                    name=\"certificate\"\r\n                                    checked={antiBodyTest}\r\n                                    onChange={antiBodyTestChanged}\r\n                                  />\r\n                                }\r\n                                label=\"\"\r\n                              />\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\r\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\r\n                        {getStatusLabel(booking.status)}\r\n                        {state.role !== \"pcrlab\" &&\r\n                          booking.status === \"sample_taken\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              disabled={saving}\r\n                              onClick={(event) =>\r\n                                changeBackToBookingMade(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change Back To Booking Made\r\n                            </Button>\r\n                          )}\r\n                        {(booking.status === \"report_sent\" ||\r\n                          booking.status === \"report_cert_sent\" ||\r\n                          booking.status === \"positive\") &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          state.role !== \"pcrlab\" && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              className={classes.ResendEmailsButton}\r\n                              onClick={(event) =>\r\n                                resendEmails(event, booking._id)\r\n                              }\r\n                            >\r\n                              Resend emails\r\n                            </Button>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\r\n                        <Button\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadForm1(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Registration Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\r\n                        <Button\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadForm2(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm2(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Lab Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          state.role === \"pcrlab\" ||\r\n                          booking.deleted ||\r\n                          (booking.status !== \"report_sent\" &&\r\n                            booking.status !== \"report_cert_sent\" &&\r\n                            booking.status !== \"positive\")\r\n                        }\r\n                      >\r\n                        <Button\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadLabResults(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Lab Results\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          state.role === \"pcrlab\" ||\r\n                          booking.deleted ||\r\n                          (booking.status !== \"report_cert_sent\" &&\r\n                            booking.status !== \"positive\")\r\n                        }\r\n                      >\r\n                        <Button\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadCertificate(booking._id);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Certificate\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li hidden={state.role === \"pcrlab\"}>\r\n                        <Button\r\n                          startIcon={<HistoryIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            setSelectedBooking(booking);\r\n                            setOpenTimeStampDialog(true);\r\n                          }}\r\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Show Audit Trail\r\n                        </Button>\r\n                      </li>\r\n\r\n                     \r\n\r\n                      {state.role !== \"pcrlab\" && (\r\n                        <div>\r\n                           <Divider />\r\n                          <li\r\n                            className={classes.li}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            <span className={classes.infoTitle}>\r\n                              INVOICE # :{\" \"}\r\n                            </span>{\" \"}\r\n                            <span style={{ paddingLeft: \"0px\" }}>\r\n                              {!invoiceLoaded && (\r\n                                <span className={classes.invoiceNumber}>\r\n                                  {\" \"}\r\n                                  ...{\" \"}\r\n                                </span>\r\n                              )}\r\n                              {invoiceLoaded && invoice && (\r\n                                <span className={classes.invoiceNumber}>\r\n                                  {\" \"}\r\n                                  {invoice.invoiceNumber}{\" \"}\r\n                                </span>\r\n                              )}\r\n                              {invoiceLoaded && !invoice && (\r\n                                <span\r\n                                  className={classes.invoiceNumber}\r\n                                  style={{ color: \"red\", fontSize: \"0.9rem\" }}\r\n                                >\r\n                                  {\" \"}\r\n                                  N/A{\" \"}\r\n                                </span>\r\n                              )}\r\n                            </span>\r\n                            {!(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            ) &&\r\n                              !booking.deleted && (\r\n                                <React.Fragment>\r\n                                  {invoiceLoaded && !invoice && (\r\n                                    <Button\r\n                                      variant=\"outlined\"\r\n                                      color=\"primary\"\r\n                                      className={classes.PayButton}\r\n                                      onClick={() => OpenInvoiceDialog()}\r\n                                    >\r\n                                      Issue Invoice\r\n                                    </Button>\r\n                                  )}\r\n\r\n                                  {invoiceLoaded && invoice && (\r\n                                    <React.Fragment>\r\n                                      <Button\r\n                                        variant=\"outlined\"\r\n                                        startIcon={<PrintIcon />}\r\n                                        color=\"primary\"\r\n                                        className={classes.printInvoiceButton}\r\n                                        onClick={() =>\r\n                                          downloadInvoice(invoice._id)\r\n                                        }\r\n                                      >\r\n                                        Download Invoice\r\n                                      </Button>\r\n\r\n                                      <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.editInvoiceButton}\r\n                                        onClick={() => OpenInvoiceDialog()}\r\n                                      >\r\n                                        Edit Invoice\r\n                                      </Button>\r\n\r\n                                      <Button\r\n                                        disabled={\r\n                                          !booking.email ||\r\n                                          booking.email.length < 3\r\n                                        }\r\n                                        startIcon={<SendIcon />}\r\n                                        type=\"button\"\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => {\r\n                                          sendInvoiceEmail(\r\n                                            invoice._id,\r\n                                            booking.email\r\n                                          );\r\n                                        }}\r\n                                        style={{\r\n                                          position: \"relative\",\r\n                                          marginLeft: \"10px\",\r\n                                          paddingRight: \"130px\",\r\n                                          fontSize: \"0.8rem\",\r\n                                        }}\r\n                                      >\r\n                                        Send Invoice By Email\r\n                                        {emailSentInvoice && (\r\n                                          <div\r\n                                            style={{\r\n                                              position: \"absolute\",\r\n                                              right: \"10px\",\r\n                                              top: \"5px\",\r\n                                              color: \"#05ad19\",\r\n                                            }}\r\n                                          >\r\n                                            Email Sent\r\n                                          </div>\r\n                                        )}\r\n                                      </Button>\r\n                                    </React.Fragment>\r\n                                  )}\r\n                                </React.Fragment>\r\n                              )}\r\n                          </li>\r\n\r\n                          <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>\r\n                              TOTAL CHARGES\r\n                            </span>{\" \"}\r\n                            <span\r\n                              className={\r\n                                calculatePrice(booking) <= 199\r\n                                  ? classes.infoDataCharges\r\n                                  : classes.infoDataChargesHigher\r\n                              }\r\n                            >{`£${calculatePrice(booking)}`}</span>\r\n                            {!(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            ) &&\r\n                              !booking.paid &&\r\n                              !booking.deleted && (\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.PayButton}\r\n                                  onClick={(event) => Pay(event, booking._id)}\r\n                                >\r\n                                  Pay\r\n                                </Button>\r\n                              )}\r\n                            {!(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            ) &&\r\n                              booking.paid && (\r\n                                <React.Fragment>\r\n                                  <span className={classes.PayLabel}>\r\n                                    {\" \"}\r\n                                    <CheckIcon\r\n                                      className={classes.checkIconSmall}\r\n                                    />{\" \"}\r\n                                    Paid by {booking.paidBy}\r\n                                    {booking.paidBy === \"corporate\"\r\n                                      ? ` \"${booking.corporate}\" `\r\n                                      : \"\"}\r\n                                  </span>\r\n\r\n                                  <Tooltip title=\"Undo Payment\">\r\n                                    <IconButton\r\n                                      onClick={() => setOpenUndoPayDialog(true)}\r\n                                    >\r\n                                      <UndoIcon style={{ color: \"red\" }} />\r\n                                    </IconButton>\r\n                                  </Tooltip>\r\n                                </React.Fragment>\r\n                              )}\r\n                          </li>\r\n                        </div>\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving || deleting || restoring}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n\r\n            <ResendEmailsDialog\r\n              booking={selectedBooking}\r\n              open={openResendDialog}\r\n              handleClose={handleCloseResendDialog}\r\n            />\r\n            <PayDialog\r\n              booking={selectedBooking}\r\n              open={openPayDialog}\r\n              handleClose={handleClosePayDialog}\r\n            />\r\n\r\n            <InvoiceDialog\r\n              booking={selectedBooking}\r\n              invoice={invoice}\r\n              open={openInvoiceDialog}\r\n              defaultCodes={getDefaultCodes(props.booking)}\r\n              handleClose={handleCloseInvoiceDialog}\r\n            />\r\n\r\n            <TimeStampDialog\r\n              booking={selectedBooking}\r\n              open={openTimeStampDialog}\r\n              handleClose={handleCloseTimeStampDialog}\r\n            />\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openUndoPayDialog}\r\n            onClose={handleCloseUndoPayDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Undo Payment\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to undo payment for this booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\r\n                Yes, Undo Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BookingDialog from './BookingDialog';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as dateformat from 'dateformat';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PriceCalculator from './PriceCalculator';\r\nimport { corporates } from './Corporates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel:{\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color : \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\"\r\n  },\r\n\r\n  ExportToExcelButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n   \r\n  },\r\n\r\n  ExportToExcelButtonInline:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n    cursor: \"pointer\",\r\n    padding: \"10px\"\r\n   \r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n},\r\n\r\nth: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntd: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntopSelect: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 80,\r\n}\r\n\r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else if (str === 'live')\r\n  {\r\n    return `Live Bookings`;\r\n  }else if (str === 'completed')\r\n  {\r\n    return `Completed Bookings`;\r\n  }else if (str === 'positive')\r\n  {\r\n    return `Positive Results`;\r\n  }else if (str === 'deleted')\r\n  {\r\n    return `Deleted Records`;\r\n  }else if (str === 'late')\r\n  {\r\n    return `40 Hours Late`;\r\n  }else if (str === 'tr')\r\n  {\r\n    return `Test & Release Bookings`;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n}\r\n\r\nconst getTableIcon = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'old')\r\n  {\r\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'future')\r\n  {\r\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'recent')\r\n  {\r\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'live')\r\n  {\r\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'completed')\r\n  {\r\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'positive')\r\n  {\r\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\r\n  }else if (str === 'deleted')\r\n  {\r\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'late')\r\n  {\r\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [topCount, setTopCount] = React.useState(25)\r\n  const topCountChanged = (event) =>\r\n  {\r\n    setTopCount(event.target.value)\r\n    loadData(event.target.value)\r\n  }\r\n  \r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () =>\r\n  {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  }\r\n\r\n\r\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const[chkDate, setChkDate] = useState(true);\r\n  const[chkForename, setChkForename] = useState(true);\r\n  const[chkSurname, setChkSurname] = useState(true);\r\n  const[chkDOB, setChkDOB] = useState(true);\r\n  const[chkEmail, setChkEmail] = useState(true);\r\n  const[chkTel, setChkTel] = useState(true);\r\n  const[chkCertificate, setChkCertidicate] = useState(true);\r\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const[chkextRef, setChkExtRef] = useState(true);\r\n  const[chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) =>\r\n  {\r\n    setJustCorporate(event.target.checked);\r\n  }\r\n  \r\n\r\n  const chkDateChanged = (event) =>\r\n  {\r\n    setChkDate(event.target.checked);\r\n  }\r\n\r\n  const chkForenameChanged = (event) =>\r\n  {\r\n    setChkForename(event.target.checked);\r\n  }\r\n\r\n  const chkSurnameChanged = (event) =>\r\n  {\r\n    setChkSurname(event.target.checked);\r\n  }\r\n\r\n  const chkDOBChanged = (event) =>\r\n  {\r\n    setChkDOB(event.target.checked);\r\n  }\r\n\r\n  const chkEmailChanged = (event) =>\r\n  {\r\n    setChkEmail(event.target.checked);\r\n  }\r\n\r\n  const chkTelChanged = (event) =>\r\n  {\r\n    setChkTel(event.target.checked);\r\n  }\r\n\r\n  const chkCertificateChanged = (event) =>\r\n  {\r\n    setChkCertidicate(event.target.checked);\r\n  }\r\n\r\n  const chkAntiBodyTestChanged = (event) =>\r\n  {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  }\r\n\r\n  const chkextRefChanged = (event) =>\r\n  {\r\n    setChkExtRef(event.target.checked);\r\n  }\r\n\r\n  const chkPriceChanged = (event) =>\r\n  {\r\n    setChkPrice(event.target.checked);\r\n  }\r\n\r\n\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === 'recent')\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n\r\n           <React.Fragment>\r\n\r\n                {params.getValue('tr') ? \r\n                \r\n                  <span style={{ position:\"absolute\", fontSize:\"12px\", fontWeight:\"600\", color:\"#7e0082\"}}>\r\n                    TR\r\n                  </span> \r\n                \r\n                : \r\n                \r\n                ''}\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n\r\n          \r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \r\n        return formatTimeStamp(params.value);\r\n        }\r\n      },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n  \r\n          }else if (params.value === 'sample_taken')\r\n          {\r\n            return (\r\n              <span  className={classes.SampleTakenLabel}>  ST </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportSentLabel}>  RS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_cert_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportCertSentLabel}>  RCS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'positive')\r\n          {\r\n            return (\r\n              <span  className={classes.PositiveLabel}> POS </span>\r\n            );\r\n          }\r\n          \r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink}\r\n              //  onClick={\r\n              //   () => {\r\n              //     console.log(params.value);\r\n  \r\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n              //     setState(state => ({...state, ref : params.value}));\r\n              //     setState(state => ({...state, refError : false})); \r\n              //     setState(state => ({...state, foundRecords : []}));\r\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n              //   }\r\n              // }\r\n              \r\n              >\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'forenameCapital', headerName: 'Forename', width: 150 },\r\n      { field: 'surnameCapital', headerName: 'Surname', width: 150 },\r\n      { field: 'birthDate', headerName: 'D.O.B', width: 110, valueFormatter: (params) => { \r\n        return FormatDateFromString(params.value);\r\n         }\r\n      },\r\n      { field: 'email', headerName: 'Email', width: 200 , valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      }},\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'passportNumber', headerName: 'Passport No.', width: 250, \r\n      //  valueGetter: (params) => {\r\n      //   const pass2 = params.getValue('passportNumber2');\r\n      //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\r\n      //   {\r\n      //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\r\n      //   }\r\n      //   else\r\n      //   {\r\n      //     return params.getValue('passportNumber')?.toUpperCase();\r\n      //   }\r\n      // }\r\n    },\r\n      { field: 'certificate', headerName: 'Certificate', width: 120,  renderCell: (params) => {\r\n          return params.value ? (\r\n            <CheckIcon className={classes.checkIcon}/>\r\n          ) :\r\n          (\r\n            <CloseIcon className={classes.closeIcon}/> \r\n          );\r\n      } },\r\n      { field: 'antiBodyTest', headerName: 'Antibody Test', width: 120,  renderCell: (params) => {\r\n        return params.value ? (\r\n          <CheckIcon className={classes.checkIcon}/>\r\n        ) :\r\n        (\r\n        <  CloseIcon className={classes.closeIcon}/> \r\n        );\r\n    } },\r\n      { field: 'postCode', headerName: 'Post Code', width: 150, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      { field: 'address', headerName: 'Address', width: 500, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      // { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n\r\n  }\r\n  else\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n            <React.Fragment>\r\n\r\n                {params.getValue('tr') ? \r\n                \r\n                  <span style={{ position:\"absolute\", fontSize:\"12px\", fontWeight:\"600\", color:\"#7e0082\"}}>\r\n                    TR\r\n                  </span> \r\n                \r\n                : \r\n                \r\n                ''}\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n               if (!params.value)\r\n               {\r\n                  return ( <CloseIcon className={classes.closeIcon}/> );\r\n               }\r\n               else\r\n               {\r\n                  if (params.getValue('paidBy') === 'credit card')\r\n                  {\r\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'cash')\r\n                  {\r\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'corporate')\r\n                  {\r\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else\r\n                  {\r\n                    return '';  \r\n                  }\r\n               }\r\n         }\r\n        },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n  \r\n          }else if (params.value === 'sample_taken')\r\n          {\r\n            return (\r\n              <span  className={classes.SampleTakenLabel}>  ST </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportSentLabel}>  RS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'report_cert_sent')\r\n          {\r\n            return (\r\n              <span  className={classes.ReportCertSentLabel}>  RCS </span>\r\n            );\r\n  \r\n          }else if (params.value === 'positive')\r\n          {\r\n            return (\r\n              <span  className={classes.PositiveLabel}> POS </span>\r\n            );\r\n          }\r\n          \r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink} onClick={\r\n                () => {\r\n                  // console.log(params.value);\r\n  \r\n                  // setState(state => ({...state, currentMenuIndex: getMenuIndex(`findByRef`)}));\r\n                  // setState(state => ({...state, ref : params.value}));\r\n                  // setState(state => ({...state, refError : false})); \r\n                  // setState(state => ({...state, foundRecords : []}));\r\n                  // setState(state => ({...state, findRecords : !state.findRecords}));\r\n                }\r\n              }>\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'forenameCapital', headerName: 'Forename', width: 150 },\r\n      { field: 'surnameCapital', headerName: 'Surname', width: 150 },\r\n      { field: 'birthDate', headerName: 'D.O.B', width: 110, valueFormatter: (params) => { \r\n        return FormatDateFromString(params.value);\r\n         }\r\n      },\r\n      { field: 'email', headerName: 'Email', width: 200 , valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      }},\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'passportNumber', headerName: 'Passport No.', width: 250,  \r\n      // valueGetter: (params) => {\r\n      //   const pass2 = params.getValue('passportNumber2');\r\n      //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\r\n      //   {\r\n      //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\r\n      //   }\r\n      //   else\r\n      //   {\r\n      //     return params.getValue('passportNumber')?.toUpperCase();\r\n      //   }\r\n      // }\r\n    },\r\n      { field: 'certificate', headerName: 'Certificate', width: 120,  renderCell: (params) => {\r\n          return params.value ? (\r\n            <CheckIcon className={classes.checkIcon}/>\r\n          ) :\r\n          (\r\n            <CloseIcon className={classes.closeIcon}/> \r\n          );\r\n      } },\r\n      { field: 'antiBodyTest', headerName: 'Antibody Test', width: 120,  renderCell: (params) => {\r\n        return params.value ? (\r\n          <CheckIcon className={classes.checkIcon}/>\r\n        ) :\r\n        (\r\n        <  CloseIcon className={classes.closeIcon}/> \r\n        );\r\n    } },\r\n      { field: 'postCode', headerName: 'Post Code', width: 150, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      { field: 'address', headerName: 'Address', width: 500, valueFormatter : (params) => {\r\n        return params.value.toUpperCase();\r\n      } },\r\n      // { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const dateFormatter = str => {\r\n    return str;\r\n  };\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n  \r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) =>\r\n  {\r\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n    if (todayStr === timeStampStr)\r\n    {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    }\r\n    else\r\n    {\r\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  }\r\n\r\n  const loadData = (top) =>\r\n  {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === 'today')\r\n    {\r\n      api = BookService.getTodayBookings;\r\n    }else if (props.date === 'old')\r\n    {\r\n      api = BookService.getOldBookings;\r\n    }else if (props.date === 'future')\r\n    {\r\n      api = BookService.getFutureBookings;\r\n    }else if (props.date === 'recent')\r\n    {\r\n      api = BookService.getRecentBookingsAll;\r\n    }else if (props.date === 'live')\r\n    {\r\n      api = BookService.getLiveBookings;\r\n    }else if (props.date === 'completed')\r\n    {\r\n      api = BookService.getCompletedBookings;\r\n    }\r\n    else if (props.date === 'positive')\r\n    {\r\n      api = BookService.getPositiveBookings;\r\n    }\r\n    else if (props.date === 'deleted')\r\n    {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n    else if (props.date === 'late')\r\n    {\r\n      api = BookService.getLateBookings;\r\n    }\r\n    else if (props.date === 'tr')\r\n    {\r\n      api = BookService.getAllTRBookings;\r\n    }\r\n               \r\n    setData({bookings: [], cachedBookings: [], isFetching: true});\r\n   \r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top).then( (res) =>{\r\n      // console.log(res)\r\n      for (var i=0; i < res.data.length; i++)\r\n      {\r\n        res.data[i] = {...res.data[i], id : i + 1}\r\n      }  \r\n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\r\n      // return res.data;\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n            setTopCount(25)\r\n            loadData(25)\r\n        },\r\n        [props.date]);\r\n\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => \r\n\r\n             (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\r\n                   (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0) \r\n                  || (`${element.forename} ${element.surname}`.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n          );\r\n  \r\n  \r\n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n  \r\n      useEffect(() => {\r\n\r\n       loadData(topCount)\r\n    \r\n      }, [state.bookingDialogDataChanged]);    \r\n\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  }    \r\n  \r\n  const openDetailsDialog = (event, id) =>\r\n  {\r\n    const booking = data.bookings.find(element => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n\r\n  }\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    loadData(topCount)\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) =>\r\n  {\r\n    setOpenDialogExcel(true);\r\n  }\r\n\r\n  const isTopSelectHidden = (date)=>\r\n  {\r\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.userId.username === 'admin' && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                    <KeyboardDatePicker\r\n                        autoOk={true}\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        autoOk={true}\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {FormatDateFromString(booking.birthDate)}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n} ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\n\r\nconst emptyData = [\r\n  createData('09:00', 0),\r\n  createData('10:00', 0),\r\n  createData('11:00', 0),\r\n  createData('12:00', 0),\r\n  createData('13:00', 0),\r\n  createData('14:00', 0),\r\n  createData('15:00', 0),\r\n  createData('16:00', 0),\r\n  createData('17:00', 0),\r\n  createData('18:00', undefined),\r\n\r\n];\r\n\r\nconst getCount = (data, str) =>\r\n{\r\n  if (!data)\r\n    return 0;\r\n\r\n  var count = 0;\r\n  for (var i=0; i < data.length; i++)\r\n  {\r\n    if (data[i]._id.substr(0,2) === str)\r\n    {\r\n      count += data[i].count;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  const [data, setData] = React.useState(emptyData);\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n      var result = [];\r\n      try\r\n      {\r\n          setLoading(true)\r\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\r\n          setLoading(false)\r\n          const data = res.data.result;\r\n          result.push(createData('09:00', getCount(data,'09')));\r\n          result.push(createData('10:00', getCount(data,'10')));\r\n          result.push(createData('11:00', getCount(data,'11')));\r\n          result.push(createData('12:00', getCount(data,'12')));\r\n          result.push(createData('13:00', getCount(data,'13')));\r\n          result.push(createData('14:00', getCount(data,'14')));\r\n          result.push(createData('15:00', getCount(data,'15')));\r\n          result.push(createData('16:00', getCount(data,'16')));\r\n          result.push(createData('17:00', getCount(data,'17')));\r\n          result.push(createData('18:00', undefined));\r\n \r\n           setData(result);\r\n      }\r\n      catch(err){\r\n        setLoading(false)\r\n        console.error(err);\r\n      }\r\n\r\n    }\r\n  \r\n   fetchData();\r\n\r\n  }, [] );\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport { Grid, LinearProgress, Tooltip } from '@material-ui/core';\r\nimport * as dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport BookingDialog from './BookingDialog';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    margin: \"5px\",\r\n    padding: \"5px\",\r\n    maxWidth : \"90px\",\r\n    minHeight: \"30px\",\r\n    border : \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight : \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    borderRadius : \"5px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    align: \"center\",\r\n\r\n    \"&:hover\": {\r\n        background: \"#3f51b5\",\r\n        color: \"#ebedf7\"\r\n      },\r\n}\r\n\r\n\r\n});\r\n\r\nconst isWeekend = (date) =>\r\n{\r\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\r\n}\r\n\r\nconst getCurrentTimeSlot = (now) =>\r\n{\r\n    var min = now.getMinutes();\r\n    var hour = now.getHours();\r\n    var pm = (hour >= 12);\r\n    if (hour > 12)\r\n    {\r\n      hour = hour - 12;\r\n    }\r\n\r\n    if (min >= 0 && min < 15)\r\n    {\r\n      min = 0;\r\n    }else if (min >= 15 && min < 30)\r\n    {\r\n      min = 15;\r\n    }else if (min >= 30 && min < 45)\r\n    {\r\n      min = 30;\r\n    }else if (min >= 45)\r\n    {\r\n      min = 45;\r\n    }\r\n\r\n    const minStr = min < 10 ? `0${min}` : `${min}`;\r\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\r\n    const pmStr = pm ? 'PM' : 'AM';\r\n\r\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\r\n\r\n    if (isWeekend(now))\r\n    {\r\n      if (now.getHours() < 10 || now.getHours() >= 14)\r\n      {\r\n        return null;\r\n      }\r\n      else\r\n      {\r\n        return timeStr;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if (now.getHours() < 9 || now.getHours() >= 18)\r\n      {\r\n        return null;\r\n      }\r\n      else\r\n      {\r\n        return timeStr;\r\n      }\r\n\r\n    }\r\n}\r\n\r\nconst getCurrentTimeSlotLabel = (timeStr) =>\r\n{\r\n  if (!timeStr)\r\n  {\r\n    return 'Closed';\r\n  }\r\n\r\n  var hour = parseInt(timeStr.substr(0,2));\r\n  var minute = parseInt(timeStr.substr(3,2)); \r\n  var pm = timeStr.indexOf('PM') > 0;\r\n  if (minute !== 45)\r\n  {\r\n    minute += 15;\r\n  }\r\n  else{\r\n    minute = 0;\r\n    hour += 1;\r\n    if (hour >= 12)\r\n    {\r\n      pm = true;\r\n    }\r\n    if (hour > 12)\r\n    {\r\n      hour = hour - 12;\r\n    }\r\n  }\r\n\r\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\r\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\r\n  const pmStr = pm ? 'PM' : 'AM';\r\n\r\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\r\n\r\n  return `${timeStr} - ${endTimeStr}`;\r\n\r\n}\r\n\r\nexport default function CurrentVisits() {\r\n  const classes = useStyles();\r\n\r\n  const[current, setCurrent] = React.useState(new Date());\r\n  const [bookings, setBookings] = React.useState([]);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() => \r\n  {\r\n    const interval = setInterval(() => {  \r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval);\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => \r\n  {\r\n    const currentTimeSlot = getCurrentTimeSlot(current);\r\n    if (!currentTimeSlot)\r\n      return;\r\n    const todayStr = dateformat(current, 'yyyy-mm-dd');\r\n    setLoading(true)\r\n    BookService.getBookingsByDateStrandTime(todayStr,currentTimeSlot).then(res =>\r\n      {\r\n        setLoading(false)\r\n        if (res.data.status === 'OK')\r\n        {\r\n            setBookings([...res.data.bookings]);\r\n        }   \r\n\r\n      }).catch(err =>\r\n        {\r\n          setLoading(false)\r\n          console.log(err);\r\n        });\r\n\r\n  }, [current]);\r\n\r\n  const getBookingsBox = (_bookings) =>\r\n  {\r\n      if (_bookings && _bookings.length > 0)\r\n      {\r\n         return (\r\n\r\n          <div className={classes.root}>\r\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={0}>\r\n\r\n                  { _bookings.map(booking => (\r\n\r\n                    <Grid item>\r\n\r\n                        <div className={classes.bookingBox} onClick={event => bookingCliked(event,booking)}>\r\n\r\n                            <span style={{textAlign:\"center\"}}> {`${booking.surnameCapital}`.substring(0,10)} </span>\r\n\r\n                        </div>\r\n\r\n                  </Grid>\r\n\r\n                  ))}\r\n\r\n              \r\n            </Grid>\r\n\r\n          </div>\r\n         )\r\n             \r\n        }                   \r\n  }\r\n\r\n  const bookingCliked = (event, booking) =>\r\n  {\r\n      setSelectedBooking(booking);\r\n      setOpenDialog(true);\r\n  }\r\n\r\n  const handleCloseDialog = () =>\r\n  {\r\n      setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(current, 'dd mmmm, yyyy') } \r\n      </Typography>\r\n     \r\n        {getBookingsBox(bookings)}\r\n      \r\n\r\n      <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n      />\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('pcr',`recentBookings`)}));\r\n  }\r\n\r\n  const loadData = () => \r\n  {\r\n    setData({bookings: data.bookings, isFetching: true});\r\n    setLoading(true)\r\n    BookService.getRecentBookings().then( (res) =>{\r\n      setLoading(false)\r\n        setData({bookings: res.data, isFetching: false});\r\n\r\n    }).catch( (err) => {\r\n      setLoading(false)\r\n        console.log(err);\r\n        setData({bookings: data.bookings, isFetching: false});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n          loadData();\r\n        },\r\n        [refresh]);   \r\n\r\n\r\n   useEffect( () => {\r\n     loadData();\r\n     setInterval(() => {\r\n       setRefresh(refresh => !refresh);\r\n     }, 30000);\r\n   }, []) ;    \r\n\r\n   const formatTimeStamp = (timeStamp) =>\r\n   {\r\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n     if (todayStr === timeStampStr)\r\n     {\r\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n     }\r\n     else\r\n     {\r\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n     }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Surname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>D.O.B</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\r\n              <TableCell>{row.forename}</TableCell>\r\n              <TableCell>{row.surname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.birthDate)}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport { Dialog, DialogContent, DialogTitle, Grid, LinearProgress, Link, Table, TableBody, TableCell, TableHead, TableRow, Tooltip } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\n\r\nimport {\r\n    PieChart, Pie, Sector, Cell,\r\n  } from 'recharts';\r\n\r\n  const COLORS = ['#00b33e', '#0070e0', '#bb00c4'];\r\n\r\n  const RADIAN = Math.PI / 180;\r\n\r\n  const renderCustomizedLabel = ({\r\n    cx, cy, midAngle, innerRadius, outerRadius, value, index,\r\n  }) => {\r\n     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n    return (\r\n      <text x={x} y={y} fontSize=\"14px\" fontWeight=\"500\" fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                {`${value} `}\r\n      </text>\r\n    );\r\n  };\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  ReportLabels: {\r\n      position: \"absolute\",\r\n      top : \"80px\",\r\n      left: \"0px\"\r\n  },\r\n\r\n  AverageLabel: {\r\n    position: \"absolute\",\r\n    top : \"190px\",\r\n    right: \"30px\",\r\n    fontSize : \"12px\",\r\n    color : \"#0070e0\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  less12Label: {\r\n      fontSize : \"12px\",\r\n      color : \"#00b33e\",\r\n      fontWeight: \"600\",\r\n      paddingLeft : \"5px\",\r\n      borderLeft: \"5px solid #00b33e\",\r\n      marginBottom : \"10px\",\r\n  },\r\n\r\n  less24Label: {\r\n    fontSize : \"12px\",\r\n    color : \"#0070e0\",\r\n    fontWeight: \"600\",\r\n    paddingLeft : \"5px\",\r\n    borderLeft: \"5px solid #0070e0\",\r\n    marginBottom : \"10px\",\r\n    },\r\n\r\nless36Label: {\r\n    fontSize : \"12px\",\r\n    color : \"#bb00c4\",\r\n    fontWeight: \"600\",\r\n    paddingLeft : \"5px\",\r\n    borderLeft: \"5px solid #bb00c4\",\r\n    marginBottom : \"10px\",\r\n    },\r\n\r\n    seeMore :{\r\n        position: \"absolute\",\r\n        top : \"191px\",\r\n        left : \"2px\"\r\n    }\r\n\r\n});\r\n\r\n\r\nexport default function ResultsTimeReport() {\r\n  const classes = useStyles();\r\n\r\n  const[current, setCurrent] = React.useState(new Date());\r\n  const [report, setReport] = React.useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const handleClose = () =>\r\n  {\r\n      setOpen(false);\r\n  }\r\n\r\n  useEffect(() => \r\n  {\r\n    const interval = setInterval(() => {  \r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval);\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect( () => \r\n  {\r\n    \r\n    setLoading(true)\r\n    BookService.getTestsTimeReport().then(res =>\r\n      {\r\n        const result = [];  \r\n        setLoading(false)\r\n        if (res.data.status === 'OK')\r\n        {\r\n            setReport(res.data.result);\r\n            // console.log(res.data.result);\r\n            result.push({name: 'lessThan12', value : res.data.result.lessThan12 });\r\n            result.push({name: 'lessThan24', value : res.data.result.lessThan24 });\r\n            result.push({name: 'lessThan36', value : res.data.result.lessThan36 });\r\n         \r\n           // result.push({name: 'lessThan48', value : res.data.result.lessThan48 });\r\n            setData(result);\r\n        }   \r\n\r\n      }).catch(err =>\r\n        {\r\n          setLoading(false)\r\n          console.error(err);\r\n        });\r\n\r\n\r\n    } , [] );\r\n\r\n    const getReportLabels = () =>\r\n    {\r\n           return (\r\n\r\n                <div className={classes.ReportLabels}>\r\n                    <div className={classes.less12Label}> {`12 Hours`} </div>\r\n                    <div className={classes.less24Label}> {`24 Hours`} </div>\r\n                    <div className={classes.less36Label}> {`36 Hours`} </div>\r\n                </div>\r\n    \r\n            );\r\n    }\r\n\r\n    const getAverageLabel = () =>\r\n    {\r\n           return (\r\n\r\n                <div className={classes.AverageLabel}>\r\n                   avg = <span style={{fontSize:\"14px\"}}> {`${report.avg}`} </span> hours\r\n                </div>\r\n    \r\n            );\r\n    }\r\n\r\n    const seeMoreClicked = (event) => {\r\n        event.preventDefault();\r\n        setOpen(true);\r\n      }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    \r\n    <div style={{position: \"relative\"}}>\r\n    {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>PCR RESULTS SUMMARY</Title>\r\n\r\n      {data && (\r\n                <>\r\n\r\n                <PieChart width={250} height={150}>\r\n                    <Pie\r\n                        data={data}\r\n                        cx={170}\r\n                        cy={70}\r\n                        labelLine={false}\r\n                        label={renderCustomizedLabel}\r\n                        outerRadius={65}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                        >\r\n                        {\r\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                        }\r\n                    </Pie>\r\n                </PieChart>\r\n                \r\n\r\n                {getReportLabels()}\r\n                {getAverageLabel()}\r\n\r\n                <div className={classes.seeMore}>\r\n                            <Link color=\"primary\" href=\"#\" onClick={seeMoreClicked}>\r\n                                  See Details\r\n                            </Link>\r\n                  </div>\r\n\r\n\r\n                  <Dialog style={{padding: \"50px\"}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>  \r\n                      <DialogTitle style={{textAlign: \"center\"}} id=\"simple-dialog-title\">PCR Results Time Report</DialogTitle>\r\n                            <DialogContent>\r\n                            <Table>\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Recieved in Less Than</TableCell>        \r\n                                <TableCell>Count</TableCell>\r\n                                <TableCell>Percent</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key=\"row1\">\r\n                                    <TableCell>12 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan12}</TableCell>\r\n                                    <TableCell>{report.lessThan12Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row2\">\r\n                                    <TableCell>24 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan24}</TableCell>\r\n                                    <TableCell>{report.lessThan24Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row3\">\r\n                                    <TableCell>36 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan36}</TableCell>\r\n                                    <TableCell>{report.lessThan36Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row4\">\r\n                                    <TableCell>48 Hours</TableCell>\r\n                                    <TableCell>{report.lessThan48}</TableCell>\r\n                                    <TableCell>{report.lessThan48Percent} %</TableCell>\r\n                                </TableRow>\r\n                                <TableRow key=\"row4\">\r\n                                    <TableCell style={{fontWeight:\"800\"}}>Total Results Received : </TableCell>\r\n                                    <TableCell style={{fontWeight:\"600\"}}>{report.lessThan48 + report.lessThan36 + report.lessThan24 + report.lessThan12}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n\r\n\r\n\r\n                            \r\n                            </TableBody>\r\n                        </Table>\r\n                            </DialogContent>\r\n                </Dialog>\r\n    \r\n\r\n\r\n\r\n                </>\r\n      )}\r\n     \r\n     </div>\r\n\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport CurrentVisits from './CurrentVisits';\r\n\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport BookingView from './BookingView';\r\nimport ResultsTimeReport from './ResultsTimeReport';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Tests Summary */}\r\n                    <Grid item xs={12} md={4} lg={3}>\r\n                     <Paper className={fixedHeightPaper}>\r\n                        <ResultsTimeReport />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Current Visits */}\r\n                    <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <CurrentVisits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Bookings */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\nimport GlobalState from './../GlobalState';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport dateformat from 'dateformat';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport BookingDialog from './BookingDialog';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\nimport PDFService from './services/PDFService';\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  archiveButton: {\r\n\r\n  },\r\n\r\n  smartMatchButton: {\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    marginRight : \"10px\"\r\n    // padding: \"10px\"  \r\n  },\r\n\r\n  infoTitle:  {\r\n    fontWeight: \"400\"\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\"\r\n  },\r\n\r\n  matchButton:\r\n  {\r\n    marginTop: \"30px\",\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendButton:\r\n  {\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  resendFilesButton:{\r\n    marginTop: \"5px\",\r\n    marginBottom : \"5px\",\r\n    backgroundColor : \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"50px\",\r\n    paddingRight: \"50px\"   \r\n  },\r\n\r\n  cancelButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft : \"90px\",\r\n    paddingRight: \"90px\"   \r\n  },\r\n\r\n  downloadPDFButton:\r\n  {\r\n    marginLeft: \"50px\"\r\n  }\r\n  \r\n  \r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#2f942e',\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function UnmatchedRecords() {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n\r\n    { field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter : (params) =>\r\n      {\r\n        return FormatDateFromString(params.value);\r\n      }\r\n     },\r\n    { field: 'forename', headerName: 'Forename', width: 200 },\r\n    { field: 'surname', headerName: 'Surname', width: 200 },\r\n    { field: 'birthDate', headerName: 'D.O.B', width: 120 , valueFormatter : (params) =>\r\n    {\r\n      return FormatDateFromString(params.value);\r\n    }},\r\n    { field: '_id' , headerName:'Action', width: 500 , renderCell: (params) => {\r\n        if (selectedTab === 'unresolved')\r\n        {\r\n            return (\r\n              <React.Fragment>\r\n\r\n              <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<WbIncandescentIcon />}\r\n                    onClick = { event => smartMatchClicked(event,params.value)}\r\n                    className={classes.smartMatchButton}\r\n                    >\r\n                    smart match\r\n              </Button>\r\n\r\n              <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = { event => archiveRecord(event,params.value)}\r\n                    className={classes.archiveButton}\r\n                  >\r\n                    archive\r\n              </Button>\r\n\r\n\r\n              <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"                   \r\n                    color=\"primary\"\r\n                    onClick = { event => downloadLabReport(params.value)}\r\n                    className={classes.downloadPDFButton}\r\n                  >\r\n                    view pdf\r\n              </Button>\r\n\r\n\r\n              </React.Fragment>\r\n\r\n            );\r\n        }else\r\n        {\r\n            return (\r\n\r\n              <React.Fragment>\r\n\r\n                  <Button\r\n                        disabled = {params.value === disableId}\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<WbIncandescentIcon />}\r\n                        onClick = { event => smartMatchClicked(event,params.value)}\r\n                        className={classes.smartMatchButton}\r\n                        >\r\n                        smart match\r\n                  </Button>\r\n\r\n                    <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = { event => unArchiveRecord(event,params.value)}\r\n                    className={classes.archiveButton}\r\n                  >\r\n                    Undo\r\n                  </Button>\r\n\r\n                  <Button\r\n                    disabled = {params.value === disableId}\r\n                    type=\"button\"                   \r\n                    color=\"primary\"\r\n                    onClick = { event => downloadLabReport(params.value)}\r\n                    className={classes.downloadPDFButton}\r\n                  >\r\n                    view pdf\r\n                  </Button>\r\n\r\n              </React.Fragment>\r\n            );\r\n        }\r\n        \r\n    } },\r\n   \r\n  ];\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : false});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [disableId, setDisableId] = React.useState(null);\r\n\r\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\r\n\r\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\r\n\r\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\r\n\r\n  const [matching, setMatching] = React.useState(false);\r\n\r\n  const [matched, setMatched] = React.useState(false);\r\n\r\n  const [sending, setSending] = React.useState(false);\r\n  const [sent, setSent] = React.useState(false);\r\n\r\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\r\n\r\n  const [sendingStatus, setSendingStatus] = React.useState('');\r\n\r\n  const [sendingProgress, setSendingProgress] = React.useState(10);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n\r\n  const handleTabChanged = (event, value) => {\r\n      if (value && value.length)\r\n      {\r\n        setSeletedTab(value);\r\n      }\r\n   \r\n  };\r\n\r\n  const handleCloseDialog = () =>\r\n  {\r\n    setOpenDialog(false);\r\n    setTimeout(() => {\r\n      setSmartLinkId(null);\r\n      setSmartLinkDetails(null);\r\n      setLikelyBookings(null);\r\n      setSelectedBooking(null);\r\n      setMatched(false);\r\n      setMatching(false);\r\n      setSendingStatus(null);\r\n      setSending(false);\r\n      setSent(false);\r\n      clearInterval(interval);\r\n      setSendJustToPCR(false);\r\n    }, 100);\r\n  }\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSeeDetailsDialogOpen(false);\r\n    setTimeout(() => {\r\n      setSeeDetailsBooking(null);\r\n    }, 500);\r\n  }\r\n\r\n  const seeDetailsClicked = (event, row) =>\r\n  {\r\n    setSeeDetailsBooking(row);\r\n    setSeeDetailsDialogOpen(true);\r\n  }\r\n\r\n  const smartMatchClicked = (event, id) =>\r\n  {\r\n    setSmartLinkId(id);\r\n    setOpenDialog(true);\r\n    findBestMatches(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (smartLinkId)\r\n    {\r\n      findBestMatches(smartLinkId);\r\n      // console.log('refrshing....');\r\n\r\n    }\r\n\r\n\r\n  }, [state.bookingDialogDataChanged]);\r\n\r\n  const findBestMatches = (id) =>\r\n  {\r\n    BookService.getLinkDetails(id).then( res => {\r\n      setSmartLinkDetails(res.data);\r\n      console.log(res.data);\r\n    }).catch( err =>\r\n      {\r\n        console.log(err);\r\n      });\r\n\r\n    BookService.findBestMatches(id).then( res => {\r\n      setLikelyBookings(res.data.matchedBookings);\r\n    }).catch( err => {\r\n      console.log(err);\r\n      setLikelyBookings([]);\r\n    })\r\n  }\r\n\r\n  const archiveRecord = (event, id) =>\r\n  {\r\n      if (disableId)\r\n      {\r\n        return;\r\n      }\r\n        setDisableId(id);\r\n        \r\n        BookService.archiveRecord(id).then(\r\n            (res) => {\r\n                setDisableId(null);\r\n                setRefresh(!refresh);\r\n            }\r\n        ).catch( (err) => {\r\n            setDisableId(null);\r\n        })\r\n  }\r\n\r\n  const unArchiveRecord = (event, id) =>\r\n  {\r\n      if (disableId)\r\n      {\r\n        return;\r\n      }\r\n        setDisableId(id);\r\n        \r\n        BookService.unArchiveRecord(id).then(\r\n            (res) => {\r\n                setDisableId(null);\r\n                setRefresh(!refresh);\r\n            }\r\n        ).catch( (err) => {\r\n            setDisableId(null);\r\n        })\r\n  }\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  useEffect( () => {\r\n\r\n            var api = BookService.getUnmatchedRecords;\r\n            if (selectedTab === 'archived')\r\n            {\r\n                api = BookService.getUnmatchedRecordsArchived;\r\n            }\r\n            \r\n            setLoading(true)\r\n            \r\n            setData({bookings: [], cachedBookings: [], isFetching: true});\r\n            const currentPromise = api().then( (res) =>{\r\n              \r\n              for (var i=0; i < res.data.length; i++)\r\n              {\r\n                res.data[i] = {...res.data[i], id : i + 1}\r\n              }  \r\n              \r\n              return res.data;\r\n            })\r\n\r\n            lastPromise.current = currentPromise;\r\n\r\n            currentPromise.then(\r\n              result => {\r\n                if (currentPromise === lastPromise.current) {\r\n                  setLoading(false)\r\n                  setData({bookings: result, cachedBookings: [...result], isFetching: false});\r\n                }\r\n              },\r\n              e => {\r\n                if (currentPromise === lastPromise.current) {\r\n                    setLoading(false)\r\n                    console.log(e);\r\n                    setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n                }\r\n              });\r\n        },\r\n        [refresh, selectedTab]);\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => {\r\n\r\n            return (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\r\n                   (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0) \r\n            ;\r\n  \r\n          });\r\n  \r\n  \r\n          setData({bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    setRefresh(!refresh);\r\n\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n  }\r\n\r\n  const handleCheckChanged = (event, row) =>\r\n  {\r\n    if (event.target.checked)\r\n    {\r\n      setSelectedBooking(row);\r\n    }\r\n    else\r\n    {\r\n      setSelectedBooking(null);\r\n    }\r\n  }\r\n\r\n  const matchRecords = (event) => {\r\n\r\n    setMatching(true);\r\n\r\n    BookService.getBookingById(selectedBooking._id).then(res => {\r\n      setSelectedBooking(res.data);\r\n    });\r\n\r\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then (res => {\r\n\r\n      if (res.data.status === 'OK'){\r\n        setMatching(false);\r\n        setMatched(true);\r\n      }\r\n\r\n    }).catch(err =>\r\n      {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const getProgress = (status) =>\r\n  {\r\n    console.log(`status : ${status}`);\r\n\r\n    if (status === 'downloadFailed')\r\n      return 10 ;\r\n    else if (status === 'downloading') \r\n      return 30 ;  \r\n    else if (status === 'downloadSuccess') \r\n      return 70 ;\r\n    else if (status === 'sent')\r\n      return 100;   \r\n    else\r\n      return 0;\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n\r\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\r\n\r\n  }, [sendingStatus]);\r\n\r\n  const resendFilesClicked = (event) =>\r\n  {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus('downloadFailed');\r\n    setSendJustToPCR(true);\r\n\r\n\r\n    BookService.regenerateFiles(smartLinkId).then( res => {\r\n\r\n      interval = setInterval(() => {\r\n             \r\n       // setProgress(sendingCounter);\r\n\r\n       // setProgress(getProgress(sendingStatus));\r\n\r\n       BookService.getLinkDetails(smartLinkId).then( res => {\r\n \r\n         setSendingStatus(res.data.status);\r\n \r\n         if (res.data.status === 'sent')\r\n         {\r\n           setSending(false);\r\n           setSent(true);\r\n           setRefresh(!refresh);\r\n           clearInterval(interval);\r\n         }\r\n       });\r\n \r\n     }, 1000);\r\n\r\n   }).catch(err => {\r\n     console.log(err);\r\n     setSending(false);\r\n   });\r\n\r\n\r\n  }\r\n \r\n  const resendEmailsClicked = (event) => {\r\n    setSending(true);\r\n    setSendingProgress(0);\r\n    setSendingStatus('downloadFailed');\r\n \r\n\r\n    BookService.resendEmails(smartLinkId).then( res => {\r\n\r\n       interval = setInterval(() => {\r\n        \r\n       \r\n\r\n        // setProgress(sendingCounter);\r\n\r\n        // setProgress(getProgress(sendingStatus));\r\n\r\n        BookService.getLinkDetails(smartLinkId).then( res => {\r\n  \r\n          setSendingStatus(res.data.status);\r\n  \r\n          if (res.data.status === 'sent')\r\n          {\r\n            setSending(false);\r\n            setSent(true);\r\n            setRefresh(!refresh);\r\n            clearInterval(interval);\r\n          }\r\n        });\r\n  \r\n      }, 1000);\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setSending(false);\r\n    });\r\n\r\n  \r\n\r\n  }\r\n\r\n  const cancelResendEmailsClicked = (event) => {\r\n    setMatched(false);\r\n  }\r\n\r\n  const downloadLabReport = (id) =>\r\n  {\r\n       PDFService.downloadPdfLabReport(id).then( (res) => \r\n       {       \r\n         const file = new Blob(\r\n           [res.data], \r\n           {type: 'application/pdf'});\r\n\r\n         const fileURL = URL.createObjectURL(file);   \r\n         window.open(fileURL, \"_blank\");\r\n\r\n       \r\n\r\n       }).catch( (err) =>\r\n       {\r\n           console.log(err);\r\n       });\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={5}>\r\n            <div style={{textAlign:\"left\", paddingLeft:\"10px\"}}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                        <Grid item>\r\n                                <span style={{paddingRight: \"15px\", color: \"#555\"}}> <WarningIcon style={{fontSize:\"2.2rem\"}}/> </span>\r\n                        </Grid>\r\n                        <Grid item>\r\n                              <span style={{fontSize: '1.4rem', fontWeight:\"600\", color: \"#444\"}}> Unmatched Records </span>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Refresh\" placement=\"right\">\r\n                                <IconButton\r\n                                  color=\"primary\"\r\n                                  className={classes.refreshButton}\r\n                                  onClick={refreshClicked}\r\n                                >\r\n                                  <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                  </Grid>\r\n                </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <ToggleButtonGroup\r\n            value={selectedTab}\r\n            style={{ marginBottom: \"10px\" }}\r\n            exclusive\r\n            onChange={handleTabChanged}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\r\n              UnResolved\r\n            </ToggleButton>\r\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\r\n              Archived\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <Dialog\r\n        maxWidth=\"lg\"\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"draggable-dialog-title\">\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <WbIncandescentIcon\r\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <div\r\n                style={{\r\n                  color: \"#2f942e\",\r\n                  paddingBottom: \"12px\",\r\n                  fontWeight: \"800\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                SMART MATCH{\" \"}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Divider />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            style={{\r\n              height: \"600px\",\r\n              // width: \"1200px\",\r\n            }}\r\n          >\r\n            {(!likelyBookings || !smartLinkDetails) && (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <LoaderSpinner\r\n                      style={{ marginTop: \"170px\" }}\r\n                      type=\"Grid\"\r\n                      color=\"#2f942e\"\r\n                      height={100}\r\n                      width={100}\r\n                      timeout={0} //3 secs\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        color: \"#2f942e\",\r\n                        paddingBottom: \"12px\",\r\n                        fontWeight: \"800\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      SEARCHING ...{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {likelyBookings && likelyBookings.length === 0 && (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        color: \"#2f942e\",\r\n                        paddingBottom: \"12px\",\r\n                        fontWeight: \"800\",\r\n                        marginTop: \"230px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      SORRY, NO RECORDS FOUND !{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"stretch\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"1.1rem\",\r\n                        fontWeight: \"600\",\r\n                        color: \"#2f942e\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      LAB RECORD :\r\n                    </div>\r\n\r\n                    <Grid\r\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                      spacing={4}\r\n                    >\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>Forename:</span>\r\n                        <span className={classes.infoData}>\r\n                          {smartLinkDetails.forename}\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>Surname:</span>\r\n                        <span className={classes.infoData}>\r\n                          {smartLinkDetails.surname}\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>D.O.B:</span>\r\n                        <span className={classes.infoData}>\r\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        <span className={classes.infoTitle}>Test Date:</span>\r\n                        <span className={classes.infoData}>\r\n                          {FormatDateFromString(smartLinkDetails.testDate)}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"1.1rem\",\r\n                        fontWeight: \"600\",\r\n                        color: \"#2f942e\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      BEST MATCHES :\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Select</TableCell>\r\n                          <TableCell>Match</TableCell>\r\n                          <TableCell>Forename</TableCell>\r\n                          <TableCell>Surname</TableCell>\r\n                          <TableCell>D.O.B</TableCell>\r\n                          <TableCell>Email</TableCell>\r\n                          <TableCell>Test Date</TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {likelyBookings.map((row) => (\r\n                          <TableRow key={row._id}>\r\n                            <TableCell>\r\n                              <Tooltip\r\n                                title={\r\n                                  row.birthDate !== smartLinkDetails.birthDate\r\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\r\n                                    : \"\"\r\n                                }\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={\r\n                                        selectedBooking &&\r\n                                        selectedBooking._id === row._id\r\n                                      }\r\n                                      disabled={\r\n                                        matched || matching\r\n                                      }\r\n                                      onChange={(event) =>\r\n                                        handleCheckChanged(event, row)\r\n                                      }\r\n                                      name=\"checkedA\"\r\n                                    />\r\n                                  }\r\n                                  label=\"\"\r\n                                />\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                            <TableCell\r\n                              style={{\r\n                                fontWeight: \"800\",\r\n                                color: \"#2f942e\",\r\n                                fontSize: \"1.1rem\",\r\n                              }}\r\n                            >{`${row.likelihood} %`}</TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                row.forenameCapital ===\r\n                                smartLinkDetails.forename\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\r\n                              }\r\n                            >\r\n                              {row.forenameCapital}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                row.surnameCapital === smartLinkDetails.surname\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\r\n                              }\r\n                            >\r\n                              {row.surnameCapital}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                row.birthDate === smartLinkDetails.birthDate\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"red\" }\r\n                              }\r\n                            >\r\n                              <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                                spacing={1}\r\n                              >\r\n                                <Grid item>\r\n                                  {row.birthDate !==\r\n                                    smartLinkDetails.birthDate && (\r\n                                    <span style={{ textAlign: \"center\" }}>\r\n                                      <ReportProblemIcon />\r\n                                    </span>\r\n                                  )}\r\n                                </Grid>\r\n                                {FormatDateFromString(row.birthDate)}\r\n                                <Grid item></Grid>\r\n                              </Grid>\r\n                            </TableCell>\r\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\r\n                            <TableCell\r\n                              style={\r\n                                dateformat(\r\n                                  row.samplingTimeStamp,\r\n                                  \"yyyy-mm-dd\"\r\n                                ) === smartLinkDetails.testDate\r\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\r\n                                  : { fontWeight: \"800\", color: \"red\" }\r\n                              }\r\n                            >\r\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                disabled = {sending}\r\n                                onClick={(event) =>\r\n                                  seeDetailsClicked(event, row)\r\n                                }\r\n                              >\r\n                                See Details\r\n                              </Button>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  spacing = {1}\r\n                  alignItems=\"center\"\r\n                >\r\n\r\n                {!matched && (\r\n                  <React.Fragment>\r\n                        <Grid item>\r\n                          <Button\r\n                            disabled = {!selectedBooking || matching}\r\n                            className={classes.matchButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick = {matchRecords}\r\n                          >\r\n                            GO Match THE Records\r\n                          </Button>\r\n                        </Grid>\r\n\r\n                        {!selectedBooking && (\r\n                            <Grid item>\r\n                              <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\r\n                          </Grid>\r\n                        )}\r\n\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                {matched && !sent && !sending && (\r\n                  <React.Fragment>\r\n\r\n                    <Grid item>\r\n            \r\n                         <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\"> Success — The Records are Matched Now !</Alert>\r\n                    \r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n\r\n                      <div style={{paddingTop:\"5px\", fontSize:\"1rem\", fontWeight: \"500\", color: \"#555\"}}>\r\n                         Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\r\n                      </div>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                          <Button\r\n                            disabled = {sending || sent}\r\n                            className={classes.resendButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick = {resendEmailsClicked}\r\n                          >\r\n                            YES ! RESEND THE EMAILS\r\n                          </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                          <Button\r\n                            disabled = {sending || sent}\r\n                            className={classes.cancelButton}\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick = {cancelResendEmailsClicked}\r\n                          >\r\n                            NO ! NOT NOW\r\n                          </Button>\r\n                    </Grid>\r\n\r\n                    \r\n                    <Grid item>\r\n                          <Button\r\n                            disabled = {sending || sent}\r\n                            className={classes.resendFilesButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick = {resendFilesClicked}\r\n                          >\r\n                            Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\r\n                          </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n            \r\n                         <Alert style={{marginTop:\"10px\",  paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"warning\">\r\n                            Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\r\n                          </Alert>\r\n       \r\n                   </Grid>\r\n\r\n\r\n\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                        {matched && (sending || sent) && ( \r\n                          <Grid item>\r\n\r\n                            <div style={{paddingTop: \"50px\", color: \"#2f942e\" , fontWeight:\"600\", fontSize: \"1rem\"}}>\r\n                                 {sending && !sent && (\r\n                                   'Sending ...'\r\n                                 )}\r\n\r\n                                 {sent && !sendJustToPCR && (\r\n                                     <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\">\r\n                                          Success! — The LAB Report {selectedBooking.certificate? ' and Certificate ': ' ' }  Successfully Sent.\r\n                                     </Alert>\r\n                                 )}\r\n\r\n                                {sent && sendJustToPCR && (\r\n                                     <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\">\r\n                                          Success! — The LAB Report {selectedBooking.certificate? ' and Certificate ': ' ' }  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\r\n                                     </Alert>\r\n                                 )}\r\n\r\n\r\n\r\n                                 \r\n                            </div>\r\n                            \r\n                          </Grid>\r\n                          \r\n                        )}\r\n\r\n                </Grid>\r\n              </React.Fragment>\r\n            )}\r\n\r\n\r\n              {matched && (sending || sent) && (\r\n                  <React.Fragment>\r\n\r\n                      <div style={{marginTop:\"10px\", width:\"50%\", marginLeft: \"27%\"}}>\r\n                        \r\n                           <LinearProgressWithLabel variant=\"determinate\" color=\"primary\"  value={sendingProgress} />     \r\n\r\n                      </div>\r\n\r\n                      <div style={{paddingTop: \"30px\", color: \"#2f942e\" , fontWeight:\"600\", fontSize: \"1rem\",  marginLeft: \"45%\"}}>\r\n                            {sending && !sent && (\r\n                                   'PLEASE WAIT ...'\r\n                                 )}     \r\n                                  \r\n                    </div>\r\n\r\n                  </React.Fragment>\r\n                )}\r\n\r\n\r\n          </div>\r\n\r\n          <BookingDialog\r\n            booking={seeDetailsBooking}\r\n            open={seeDetailsDialogOpen}\r\n            onClose={handleCloseSeeDetaisDialog}\r\n            deleteButtonDisabled={true}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 100;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 )\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 5;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\nimport BookingDialog from '../BookingDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        height : \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        justifyItems: \"flex-start\",\r\n        paddingLeft : \"10px\"\r\n\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"10%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n    bookingBox: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#ebedf7\",\r\n        color: \"#3f51b5\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#3f51b5\",\r\n            color: \"#ebedf7\"\r\n          },\r\n    },\r\n\r\n    bookingBoxSampleTaken: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#0066cc\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#0059b3\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n    bookingBoxPositive: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#d40b0b\",\r\n        color: \"#fff2f2\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#bf0000\",\r\n            color: \"#fff\"\r\n          },\r\n    },\r\n\r\n    bookingBoxReportSent: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#009900\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#006e00\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n  \r\n\r\n  }));\r\n\r\n\r\n\r\nconst DayViewCell = ({key, date, time}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookings, setBookings] = React.useState(null);\r\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n    const [refresh, setRefresh] = React.useState(true); \r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n    }, [date]);\r\n\r\n    useEffect( () => \r\n    {\r\n        if (bookings) {\r\n\r\n\r\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\r\n            {\r\n                const search = state.dayViewCalFilter.trim().toUpperCase();\r\n                setFilteredBookings( bookings.filter(booking => booking.forenameCapital.indexOf(search) >= 0\r\n                                                            ||  booking.surnameCapital.indexOf(search) >= 0\r\n                                                            ||  `${booking.forenameCapital} ${booking.surnameCapital}`.indexOf(search) >= 0\r\n                    \r\n                    ));\r\n            }\r\n            else\r\n            {\r\n                setFilteredBookings([...bookings]);\r\n            }\r\n        }\r\n\r\n    }, [state.dayViewCalFilter, bookings]);\r\n \r\n\r\n\r\n    useEffect ( () => {\r\n       \r\n        const fetchData = async () =>\r\n        {\r\n            if (!date || date.length <= 0 || !time || time.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n         \r\n            // if (isPast)\r\n            // {\r\n            //     setBookings([]);\r\n            //     return;\r\n            // }\r\n    \r\n            setBookings(null);\r\n    \r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n            if (!res || openDialog)\r\n            {\r\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }\r\n          \r\n          \r\n            if (res.data.status === 'OK')\r\n            {\r\n                setBookings(res.data.bookings);\r\n            }   \r\n        }\r\n\r\n        if (openDialog)\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\r\n        }\r\n\r\n         fetchData();\r\n     \r\n    }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n    const bookingCliked = (event, booking) =>\r\n    {\r\n        setSelectedBooking(booking);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    \r\n\r\n    const getBookingClass = (status) =>\r\n    {\r\n        switch (status) {\r\n\r\n            case 'sample_taken':\r\n                return classes.bookingBoxSampleTaken;\r\n            case 'positive':\r\n                return classes.bookingBoxPositive;\r\n            case 'report_sent':\r\n            case 'report_cert_sent':\r\n                return classes.bookingBoxReportSent;     \r\n\r\n            default : \r\n                return classes.bookingBox;\r\n        }\r\n    }\r\n\r\n    const getBookingsBox = (_bookings) =>\r\n    {\r\n        if (_bookings === null) \r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookings.length > 0)\r\n        {\r\n           return (\r\n                _bookings.map(booking => (\r\n\r\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={getBookingClass(booking.status)} onClick={event => bookingCliked(event,booking)}>\r\n\r\n                        {`${booking.forenameCapital}-${booking.surnameCapital}`.substring(0,15)}\r\n\r\n                    </div>\r\n\r\n                ))\r\n\r\n           );\r\n        }\r\n    }\r\n\r\n\r\n    const handleCloseDialog = () =>\r\n    {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getBookingsBox(filteredBookings)}\r\n\r\n            </div>\r\n\r\n            <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n            />\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n  };\r\n\r\n \r\n  \r\nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken,\r\n       'Content-Type': 'application/json',\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n   static changeDepositBooking = (bookingId, deposit) => {\r\n      return API.post(`/api/gynae/book/changedepositbooking?id=${bookingId}&deposit=${deposit}`);\r\n   }\r\n\r\n   static addNewBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gynae/book/addnewbooking`, payload);\r\n   }\r\n\r\n   static sendRegFormEmail = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gynae/book/sendregformemail?id=${bookingId}`);\r\n   }\r\n\r\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/gynae/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gynae/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getShouldRefundsCount = () =>\r\n   {\r\n      return API.get(`/api/gynae/book/getshouldrefundscount?`);\r\n   }\r\n\r\n   static manualRefundBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gynae/payment/manualrefundpayment`, {bookingId: bookingId});\r\n   }\r\n\r\n   static refundBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gynae/payment/refundpayment`, {bookingId: bookingId});\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gynae/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static changeToPatientAttended = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/changetopatientattended?id=${id}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gynae/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/gynae/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gynae/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/gynae/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/gynae/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/gynae/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/gynae/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/gynae/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gynae/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n\r\n    static downloadGynaeRegForm = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadgynaeregform?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n    static downloadCovidForm1 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadCovidForm2 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfResult = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfCert = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfLabReport = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n}","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PayDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [price, setPrice] = useState(\"\");\r\n  const [priceError, setPriceError] = useState(false);\r\n\r\n  useEffect( () => {\r\n    if (props.price)\r\n    {\r\n      setPrice(`${props.price}`)\r\n    }else\r\n    {\r\n      setPrice('')\r\n    }\r\n  }, [props.price, props.open])\r\n\r\n  const priceChanged = (event) =>\r\n  {\r\n    setPrice(event.target.value)\r\n    setPriceError(false)\r\n  }\r\n\r\n  const paymentMethodChanged = (event) => {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    props.handleClose();\r\n    setPaymentMethod(\"credit card\");\r\n    setPrice('')\r\n    setCorporate(corporates[0]);\r\n    setSaving(false);\r\n  };\r\n\r\n  const corporateChanged = (event) => {\r\n    setCorporate(event.target.value);\r\n  };\r\n\r\n  const payClicked = async () => {\r\n\r\n\r\n    if (!price || price.trim().length === 0 || price === '0')\r\n    {\r\n      setPriceError(true)\r\n      return\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n  \r\n\r\n    try {\r\n      await BookService.payBooking(\r\n        props.booking._id,\r\n        price,\r\n        paymentMethod,\r\n        paymentMethod === \"corporate\" ? corporate : \"\"\r\n      );\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <CreditCardIcon\r\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    PAY the CHARGE{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"300px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                  <TextField\r\n                                autoFocus\r\n                                error={priceError}\r\n                                label=\"OTC Charges\"\r\n                                value={price}\r\n                                fullWidth\r\n                                required\r\n                                onChange={priceChanged}\r\n                                name=\"product-price\"\r\n                                id=\"product-price-id\"\r\n                                InputProps={{\r\n                                  inputComponent: NumberFormatCustom,\r\n                                  startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                      £\r\n                                    </InputAdornment>\r\n                                  ),\r\n                                }}\r\n                              />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <div style={{ fontSize: \"17px\" }}>\r\n                      {\" \"}\r\n                      How do you want to pay?{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        aria-label=\"paymentMethod\"\r\n                        name=\"paymentMethod\"\r\n                        value={paymentMethod}\r\n                        onChange={paymentMethodChanged}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"credit card\"\r\n                          control={<Radio />}\r\n                          label=\"Credit Card\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"cash\"\r\n                          control={<Radio />}\r\n                          label=\"Cash\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"corporate\"\r\n                          control={<Radio />}\r\n                          label=\"Corporate\"\r\n                        />\r\n                      </RadioGroup>\r\n\r\n                      {paymentMethod === \"corporate\" && (\r\n                        <FormControl\r\n                          style={{ marginTop: \"10px\" }}\r\n                          className={classes.formControl}\r\n                        >\r\n                          <Select\r\n                            labelId=\"select-corporate\"\r\n                            id=\"select-corporate-id\"\r\n                            value={corporate}\r\n                            onChange={corporateChanged}\r\n                          >\r\n                            {corporates.map((element) => (\r\n                              <MenuItem\r\n                                value={element}\r\n                              >{`${element}`}</MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      )}\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item></Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={payClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Pay\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Divider,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Switch,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport PDFService from \"./services/PDFService\";\r\n\r\nimport { calculatePrice } from \"./PriceCalculator\";\r\n\r\nimport bookingService from \"./services/BookService\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BookService from \"./services/BookService\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  FormatDateFromString,\r\n  RevertFormatDateFromString,\r\n} from \"./DateFormatter\";\r\nimport PayDialog from \"./PayDialog\";\r\n\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\nimport InvoiceService from \"../services/InvoiceService\";\r\nimport InvoiceDialog from \"../InvoiceDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor: \"#373737\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor: \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#333\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n    listStyle: \"none\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  li: {\r\n    marginBottom: \"15px\",\r\n  },\r\n\r\n  icon: {\r\n    marginRight: \"8px\",\r\n  },\r\n\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  lineThrough: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails: {\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\",\r\n  },\r\n\r\n  infoData: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  Accordion: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#222\",\r\n  },\r\n\r\n  AccordionDeleted: {\r\n    backgroundColor: \"#aaa\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  DownloadForm: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n\r\n  infoDataCharges: {\r\n    fontSize: \"18px\",\r\n    color: \"green\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  infoDataChargesHigher: {\r\n    fontSize: \"18px\",\r\n    color: \"red\",\r\n    fontWeight: \"600\",\r\n  },\r\n  BookedLabel: {\r\n    color: \"#606060\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    color: \"#0066aa\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  PositiveLabel: {\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\",\r\n  },\r\n\r\n  EditButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  ResendEmailsButton: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  PayButton: {\r\n    marginLeft: \"70px\",\r\n    width: \"300px\",\r\n  },\r\n\r\n  PayLabel: {\r\n    marginLeft: \"20px\",\r\n\r\n    color: \"#2f942e\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  RestoreButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#eee\",\r\n    color: \"#333\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  DeleteButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\",\r\n    },\r\n\r\n    padding: \"10px\",\r\n  },\r\n\r\n  SaveButton: {\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor: \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  CancelButton: {\r\n    marginBottom: \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  checkIconSmall: {\r\n    color: \"green\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  centeredLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  PriceLabelPaid: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  PriceLabelNotPaid: {\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  invoiceNumber: {\r\n    display: \"inline-block\",\r\n    fontWeight: \"500\",\r\n    width: \"72px\",\r\n    fontSize: \"1rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  printInvoiceButton: {\r\n    marginLeft: \"70px\",\r\n    fontSize: \"0.8rem\",\r\n    // width: \"300px\",\r\n  },\r\n\r\n  editInvoiceButton: {\r\n    marginLeft: \"10px\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#alert-dialog-slide-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const [emailSent, setEmailSent] = React.useState(false);\r\n\r\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\r\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\r\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\r\n  const [deleteMode, setDeleteMode] = React.useState({\r\n    delete: false,\r\n    person: null,\r\n  });\r\n  const [restoreMode, setRestoreMode] = React.useState({\r\n    restore: false,\r\n    person: null,\r\n  });\r\n\r\n  const [saving, setSaving] = React.useState(false);\r\n  const [deleting, setDeleting] = React.useState(false);\r\n  const [restoring, setRestoring] = React.useState(false);\r\n\r\n  const [validationError, setValidationError] = React.useState({});\r\n\r\n  const [bookingDate, setBookingDate] = React.useState(\"\");\r\n  const [bookingTime, setBookingTime] = React.useState(\"\");\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [tel, setTel] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [service, setService] = React.useState(\"\");\r\n\r\n  const [refreshData, setRefreshData] = React.useState(false);\r\n\r\n  const [booking, setBooking] = React.useState(null);\r\n\r\n  const [recordChanged, setRecordChanged] = React.useState(false);\r\n\r\n  const [fieldChanged, setFieldChanged] = React.useState(false);\r\n\r\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\r\n\r\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\r\n\r\n  const handleCloseUndoPayDialog = () => {\r\n    setOpenUndoPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleClosePayDialog = () => {\r\n    setOpenPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseRefundDialog = () => {\r\n    setOpenRefundDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (booking) {\r\n      const isChanged =\r\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\r\n        bookingTime !== booking.bookingTime ||\r\n        fullname !== booking.fullname ||\r\n        email !== booking.email ||\r\n        tel !== booking.phone ||\r\n        service !== booking.service ||\r\n        notes !== booking.notes;\r\n\r\n      setRecordChanged(isChanged);\r\n    }\r\n  }, [fieldChanged]);\r\n\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      setTimeout(() => {\r\n        setEditMode({ edit: false, person: null });\r\n        setRecordChanged(false);\r\n      }, 500);\r\n    }\r\n  }, [props.open]);\r\n\r\n  const bookingDateChanged = (event) => {\r\n    setBookingDate(event.target.value);\r\n    setValidationError({ ...validationError, bookingDateError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const bookingTimeChanged = (event) => {\r\n    setBookingTime(event.target.value);\r\n    setValidationError({ ...validationError, bookingTimeError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const telChanged = (event) => {\r\n    setTel(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const serviceChanged = (event) => {\r\n    setService(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    if (status === \"booked\") {\r\n      return <div className={classes.BookedLabel}> Booking Made </div>;\r\n    } else if (status === \"patient_attended\") {\r\n      return (\r\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\r\n      );\r\n    } else {\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const handleEditModeChanged = (edit, person) => {\r\n    if (edit) {\r\n      setFullname(person.fullname);\r\n      setBookingDate(FormatDateFromString(person.bookingDate));\r\n      setBookingTime(person.bookingTime.toUpperCase());\r\n      setEmail(person.email);\r\n      setTel(person.phone);\r\n      setService(person.service);\r\n      if (person.notes) {\r\n        setNotes(person.notes);\r\n      }\r\n\r\n      setEditMode({ edit: edit, person: person });\r\n    } else if (!edit && !person) {\r\n      setEditMode({ edit: edit, person: person });\r\n      setRecordChanged(false);\r\n    } else if (!edit && person) {\r\n      const booking = {};\r\n      const bookingId = person._id;\r\n      booking.email = email;\r\n      booking.phone = tel;\r\n      booking.fullname = fullname;\r\n      booking.notes = notes;\r\n      booking.service = service;\r\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n      booking.bookingTime = bookingTime;\r\n      booking.bookingRef = person.bookingRef;\r\n\r\n      if (validateBooking(booking)) {\r\n        updateBooking({ bookingId: bookingId, person: booking });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateDate = (str) => {\r\n    var error = false;\r\n    if (!str || str.length !== 10) {\r\n      error = true;\r\n    }\r\n\r\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n      if (!result) {\r\n        error = true;\r\n      }\r\n\r\n      const year = parseInt(str.substr(0, 4));\r\n      const month = parseInt(str.substr(5, 2));\r\n      const day = parseInt(str.substr(8, 2));\r\n\r\n      if (year < 1900) {\r\n        error = true;\r\n      }\r\n\r\n      if (month < 1 || month > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (day > 31) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateTime = (str) => {\r\n    var error = false;\r\n\r\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n    if (!result) {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const hour = parseInt(str.substr(0, 2));\r\n      const minute = parseInt(str.substr(3, 2));\r\n\r\n      if (hour < 0 || hour > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (minute < 0 || minute > 59) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateBooking = (booking) => {\r\n    var error = false;\r\n\r\n    if (!validateDate(booking.bookingDate)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingDateError: true });\r\n    }\r\n\r\n    if (!validateTime(booking.bookingTime)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingTimeError: true });\r\n    }\r\n    return !error;\r\n  };\r\n\r\n  const updateBooking = (payload) => {\r\n    setSaving(true);\r\n    bookingService\r\n      .updateBooking(payload)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteBooking = (id) => {\r\n    setDeleting(true);\r\n    bookingService\r\n      .deleteBooking(id)\r\n      .then((res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const restoreBooking = (id) => {\r\n    setRestoring(true);\r\n    bookingService\r\n      .unDeleteBooking(id)\r\n      .then((res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteModeChanged = (del, person) => {\r\n    if (del) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && !person) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && person) {\r\n      deleteBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n    if (restore) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && !person) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && person) {\r\n      restoreBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const changeBackToBookingMade = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeBackToBookingMade(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const changeToPatientAttended = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeToPatientAttended(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const Pay = (event, id) => {\r\n    setSelectedBooking(booking);\r\n    setOpenPayDialog(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      BookService.getBookingById(props.booking._id)\r\n        .then((res) => {\r\n          setBooking(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n    }\r\n  }, [refreshData, state.bookingPayChanged]);\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      setBooking(props.booking);\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const undoPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.unPayBooking(booking._id);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n  };\r\n\r\n  const refundPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.refundBooking(booking._id);\r\n      setSaving(false);\r\n      updateShouldRefundsCount();\r\n      setOpenRefundDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenRefundDialog(false);\r\n    }\r\n  };\r\n\r\n  const updateShouldRefundsCount = async () => {\r\n    try {\r\n      const res = await BookService.getShouldRefundsCount();\r\n      if (res && res.data && res.data.status === \"OK\") {\r\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\r\n      }\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  };\r\n\r\n  const downloadRegForm = (id) => {\r\n    PDFService.downloadGynaeRegForm(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const sendRegForm = (id) => {\r\n    setSaving(true);\r\n    setEmailSent(false);\r\n    BookService.sendRegFormEmail(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSent(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const manualRefund = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.manualRefundBooking(booking._id);\r\n      setSaving(false);\r\n      updateShouldRefundsCount();\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenRefundDialog(false);\r\n    }\r\n  };\r\n\r\n  const depositChanged = async (event) => {\r\n    const checked = event.target.checked;\r\n    const deposit = checked ? 100 : 0;\r\n    setSaving(true);\r\n    try {\r\n      await BookService.changeDepositBooking(booking._id, deposit);\r\n      setSaving(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const onClose = () => {\r\n    setEmailSent(false);\r\n    setEmailSentInvoice(false);\r\n    setInvoice(null);\r\n    props.onClose();\r\n  };\r\n\r\n  ///*** Invoice  ******************/\r\n\r\n  const [invoice, setInvoice] = React.useState(null);\r\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\r\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\r\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\r\n\r\n  const fetchInvoice = async () => {\r\n    try {\r\n      setInvoiceLoaded(false);\r\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\r\n      setInvoice(res.data.invoice);\r\n      setInvoiceLoaded(true);\r\n    } catch (err) {\r\n      setInvoiceLoaded(true);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.booking) {\r\n      fetchInvoice();\r\n    }\r\n  }, [props.booking, props.open]);\r\n\r\n  const handleCloseInvoiceDialog = (refresh) => {\r\n    setOpenInvoiceDialog(false);\r\n    setSelectedBooking(null);\r\n    fetchInvoice();\r\n  };\r\n\r\n  const OpenInvoiceDialog = () => {\r\n    setSelectedBooking(booking);\r\n    setInvoice(invoice);\r\n    setOpenInvoiceDialog(true);\r\n  };\r\n\r\n  const downloadInvoice = (id) => {\r\n    InvoiceService.downloadInvoice(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const sendInvoiceEmail = (id, _email) => {\r\n    setSaving(true);\r\n    setEmailSentInvoice(false);\r\n    InvoiceService.emailInvoice(id, _email)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSentInvoice(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  //***************************** */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={onClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle\r\n              id=\"alert-dialog-slide-title\"\r\n              style={\r\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\r\n              }\r\n            >\r\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\r\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(\r\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\r\n                      );\r\n                      setCopied(true);\r\n                      setTimeout(() => {\r\n                        setCopied(false);\r\n                      }, 1500);\r\n                    }}\r\n                    aria-label=\"delete\"\r\n                    className={classes.margin}\r\n                    size=\"small\"\r\n                  >\r\n                    <FileCopyOutlinedIcon\r\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\r\n                      fontSize=\"14px\"\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <span\r\n                  hidden={!copied}\r\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\r\n                >\r\n                  {\" \"}\r\n                  Copied{\" \"}\r\n                </span>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"25x\",\r\n                  right: \"60px\",\r\n                  backgroundColor: CalendarColors.GYNAE_COLOR,\r\n                  color: \"#fff\",\r\n                  padding: \"0px 5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                GYNAE\r\n              </div>\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={\r\n                      booking.deleted\r\n                        ? {\r\n                            paddingBottom: \"5px\",\r\n                            textDecoration: \"line-through\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {`${booking.fullname}`}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {booking.deleted && (\r\n                  <Grid item>\r\n                    <Tooltip title=\"This record has been deleted.\">\r\n                      <DeleteIcon\r\n                        style={\r\n                          booking.tr\r\n                            ? {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#fff\",\r\n                                fontSize: 25,\r\n                              }\r\n                            : {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#333\",\r\n                                fontSize: 25,\r\n                              }\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  // height: \"550px\",\r\n                  paddingTop: \"0px\",\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={12} key={`panel0`}>\r\n                  <div className={classes.infoDetails}>\r\n                    <ul className={classes.ul}>\r\n                      {/* Restore Functionality ******************************************* */}\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"500\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to restore this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !booking.deleted ||\r\n                          (restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.RestoreButton}\r\n                        >\r\n                          Restore This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Restore this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/*  ******************************************************************* */}\r\n\r\n                      {/* Edit Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          deleteMode.delete ||\r\n                          (editMode.edit && editMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleEditModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.EditButton}\r\n                        >\r\n                          Edit Booking Info\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={saving || !recordChanged}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={saving}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      {/* Delete Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to delete this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          props.deleteButtonDisabled ||\r\n                          booking.deleted ||\r\n                          editMode.edit ||\r\n                          (deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        {booking.OTCCharges > 0 && (\r\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\r\n                            <div>\r\n                              <Button\r\n                                disabled={booking.OTCCharges > 0}\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  handleDeleteModeChanged(true, booking);\r\n                                }}\r\n                                className={classes.DeleteButton}\r\n                              >\r\n                                Delete This Record\r\n                              </Button>\r\n                            </div>\r\n                          </Tooltip>\r\n                        )}\r\n                        {booking.OTCCharges === 0 && (\r\n                          <Button\r\n                            disabled={booking.OTCCharges > 0}\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleDeleteModeChanged(true, booking);\r\n                            }}\r\n                            className={classes.DeleteButton}\r\n                          >\r\n                            Delete This Record\r\n                          </Button>\r\n                        )}\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Delete this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED DATE\r\n                            </span>\r\n\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {FormatDateFromString(booking.bookingDate)}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingDateError}\r\n                                className={classes.TextBox}\r\n                                value={bookingDate}\r\n                                onChange={bookingDateChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED TIME\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.bookingTime.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingTimeError}\r\n                                className={classes.TextBox}\r\n                                value={bookingTime}\r\n                                onChange={bookingTimeChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.fullname}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={fullname}\r\n                                onChange={fullnameChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>EMAIL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.email}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={email}\r\n                                onChange={emailChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\r\n                        <span className={classes.infoTitle}>SERVICE</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.service}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={service}\r\n                            onChange={serviceChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>TEL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.phone?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={tel}\r\n                                onChange={telChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>NOTES</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.notes}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={notes}\r\n                                onChange={notesChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\r\n                        {getStatusLabel(booking.status)}\r\n                        {booking.status === \"patient_attended\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeBackToBookingMade(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change Back To Booking Made\r\n                            </Button>\r\n                          )}\r\n                        {booking.status === \"booked\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"default\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeToPatientAttended(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change To Patient Attended\r\n                            </Button>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted || editMode.edit}>\r\n                        <Button\r\n                          disabled={!booking.formData}\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadRegForm(booking._id);\r\n                          }}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Registration Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted || editMode.edit || booking.formData\r\n                        }\r\n                      >\r\n                        <Button\r\n                          disabled={!booking.email || booking.email.length < 3}\r\n                          startIcon={<SendIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            sendRegForm(booking._id);\r\n                          }}\r\n                          className={classes.DownloadForm}\r\n                          style={{ position: \"relative\" }}\r\n                        >\r\n                          Send Registration Form Email\r\n                          {emailSent && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                right: \"10px\",\r\n                                top: \"5px\",\r\n                                color: \"#05ad19\",\r\n                              }}\r\n                            >\r\n                              Email Sent\r\n                            </div>\r\n                          )}\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <Divider />\r\n\r\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\r\n                        <span style={{ paddingLeft: \"0px\" }}>\r\n                          {!invoiceLoaded && (\r\n                            <span className={classes.invoiceNumber}> ... </span>\r\n                          )}\r\n                          {invoiceLoaded && invoice && (\r\n                            <span className={classes.invoiceNumber}>\r\n                              {\" \"}\r\n                              {invoice.invoiceNumber}{\" \"}\r\n                            </span>\r\n                          )}\r\n                          {invoiceLoaded && !invoice && (\r\n                            <span\r\n                              className={classes.invoiceNumber}\r\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\r\n                            >\r\n                              {\" \"}\r\n                              N/A{\" \"}\r\n                            </span>\r\n                          )}\r\n                        </span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.deleted && (\r\n                            <React.Fragment>\r\n                              {invoiceLoaded && !invoice && (\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  className={classes.PayButton}\r\n                                  onClick={() => OpenInvoiceDialog()}\r\n                                >\r\n                                  Issue Invoice\r\n                                </Button>\r\n                              )}\r\n\r\n                              {invoiceLoaded && invoice && (\r\n                                <React.Fragment>\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<PrintIcon />}\r\n                                    color=\"primary\"\r\n                                    className={classes.printInvoiceButton}\r\n                                    onClick={() => downloadInvoice(invoice._id)}\r\n                                  >\r\n                                    Download Invoice\r\n                                  </Button>\r\n\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.editInvoiceButton}\r\n                                    onClick={() => OpenInvoiceDialog()}\r\n                                  >\r\n                                    Edit Invoice\r\n                                  </Button>\r\n\r\n                                  <Button\r\n                                    disabled={\r\n                                      !booking.email || booking.email.length < 3\r\n                                    }\r\n                                    startIcon={<SendIcon />}\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      sendInvoiceEmail(\r\n                                        invoice._id,\r\n                                        booking.email\r\n                                      );\r\n                                    }}\r\n                                    style={{\r\n                                      position: \"relative\",\r\n                                      marginLeft: \"10px\",\r\n                                      paddingRight: \"130px\",\r\n                                      fontSize: \"0.8rem\",\r\n                                    }}\r\n                                  >\r\n                                    Send Invoice By Email\r\n                                    {emailSentInvoice && (\r\n                                      <div\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          right: \"10px\",\r\n                                          top: \"5px\",\r\n                                          color: \"#05ad19\",\r\n                                        }}\r\n                                      >\r\n                                        Email Sent\r\n                                      </div>\r\n                                    )}\r\n                                  </Button>\r\n                                </React.Fragment>\r\n                              )}\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <div\r\n                          style={{\r\n                            borderTop: \"1px solid #ddd\",\r\n                            paddingTop: \"20px\",\r\n                          }}\r\n                        >\r\n                          <span className={classes.infoTitle}>\r\n                            {booking.paymentInfo ? \"ONLINE\" : \"PHONE\"} DEPOSIT\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className={\r\n                              !booking.deposit || booking.deposit === 0\r\n                                ? classes.infoDataChargesHigher\r\n                                : classes.infoDataCharges\r\n                            }\r\n                          >{`£${booking.deposit.toLocaleString(\r\n                            \"en-GB\"\r\n                          )}`}</span>\r\n                          {!(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                            !booking.paid &&\r\n                            booking.deleted &&\r\n                            booking.deposit > 0 &&\r\n                            booking.paymentInfo && (\r\n                              <Button\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                className={classes.PayButton}\r\n                                onClick={(event) => setOpenRefundDialog(true)}\r\n                              >\r\n                                Refund Deposit\r\n                              </Button>\r\n                            )}\r\n                          {!(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                            !booking.paid &&\r\n                            booking.deleted &&\r\n                            booking.deposit > 0 &&\r\n                            !booking.paymentInfo && (\r\n                              <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                className={classes.PayButton}\r\n                                onClick={(event) => manualRefund()}\r\n                              >\r\n                                <span style={{ textTransform: \"capitalize\" }}>\r\n                                  I made the refund manually\r\n                                </span>\r\n                              </Button>\r\n                            )}\r\n                          {!(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                            // !booking.paid &&\r\n                            !booking.deleted &&\r\n                            // booking.deposit > 0 &&\r\n                            !booking.paymentInfo && (\r\n                              <FormControlLabel\r\n                                style={{ marginLeft: \"90px\" }}\r\n                                control={\r\n                                  <Switch\r\n                                    color=\"primary\"\r\n                                    checked={booking.deposit > 0}\r\n                                    onChange={depositChanged}\r\n                                    name=\"deposit\"\r\n                                  />\r\n                                }\r\n                                label={\r\n                                  booking.deposit > 0 ? (\r\n                                    <span className={classes.PriceLabelPaid}>\r\n                                      £100 Deposit Paid\r\n                                    </span>\r\n                                  ) : (\r\n                                    <span className={classes.PriceLabelNotPaid}>\r\n                                      £100 Deposit Not Paid\r\n                                    </span>\r\n                                  )\r\n                                }\r\n                              />\r\n                            )}\r\n                          {!(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                            booking.refund && (\r\n                              <React.Fragment>\r\n                                <span className={classes.PayLabel}>\r\n                                  {\" \"}\r\n                                  <CheckIcon\r\n                                    className={classes.checkIconSmall}\r\n                                  />{\" \"}\r\n                                  Refund Done\r\n                                  {booking.paidBy === \"corporate\"\r\n                                    ? ` \"${booking.corporate}\" `\r\n                                    : \"\"}\r\n                                </span>\r\n                              </React.Fragment>\r\n                            )}\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <span className={classes.infoTitle}>OTC CHARGES</span>{\" \"}\r\n                        <span\r\n                          style={{ paddingLeft: \"15px\" }}\r\n                          className={\r\n                            !booking.OTCCharges || booking.OTCCharges === 0\r\n                              ? classes.infoDataChargesHigher\r\n                              : classes.infoDataCharges\r\n                          }\r\n                        >{`£${booking.OTCCharges.toLocaleString(\r\n                          \"en-GB\"\r\n                        )}`}</span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.paid &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              className={classes.PayButton}\r\n                              onClick={(event) => Pay(event, booking._id)}\r\n                            >\r\n                              Pay\r\n                            </Button>\r\n                          )}\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          booking.paid && (\r\n                            <React.Fragment>\r\n                              <span className={classes.PayLabel}>\r\n                                {\" \"}\r\n                                <CheckIcon\r\n                                  className={classes.checkIconSmall}\r\n                                />{\" \"}\r\n                                Paid by {booking.paidBy}\r\n                                {booking.paidBy === \"corporate\"\r\n                                  ? ` \"${booking.corporate}\" `\r\n                                  : \"\"}\r\n                              </span>\r\n\r\n                              <Tooltip title=\"Undo Payment\">\r\n                                <IconButton\r\n                                  onClick={() => setOpenUndoPayDialog(true)}\r\n                                >\r\n                                  <UndoIcon style={{ color: \"red\" }} />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <div\r\n                          style={{\r\n                            borderTop: \"1px solid #ddd\",\r\n                            paddingTop: \"10px\",\r\n                          }}\r\n                        >\r\n                          <span className={classes.infoTitle}>\r\n                            TOTAL CHARGES\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className={\r\n                              !booking.OTCCharges || booking.OTCCharges === 0\r\n                                ? classes.infoDataChargesHigher\r\n                                : classes.infoDataCharges\r\n                            }\r\n                          >{`£${(\r\n                            booking.deposit + booking.OTCCharges\r\n                          ).toLocaleString(\"en-GB\")}`}</span>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving || deleting || restoring}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n\r\n            <PayDialog\r\n              booking={selectedBooking}\r\n              open={openPayDialog}\r\n              price={invoice ? invoice.grandTotal - booking.deposit : null}\r\n              handleClose={handleClosePayDialog}\r\n            />\r\n\r\n            <InvoiceDialog\r\n              booking={selectedBooking}\r\n              invoice={invoice}\r\n              open={openInvoiceDialog}\r\n              handleClose={handleCloseInvoiceDialog}\r\n            />\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openUndoPayDialog}\r\n            onClose={handleCloseUndoPayDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Undo Payment\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to undo payment for this booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\r\n                Yes, Undo Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openRefundDialog}\r\n            onClose={handleCloseRefundDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Refund Deposit\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to refund deposit payment for this\r\n                booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button\r\n                onClick={refundPaymentClicked}\r\n                color=\"secondary\"\r\n                autoFocus\r\n              >\r\n                Yes, Refund Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BookingDialog from './BookingDialog';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as dateformat from 'dateformat';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PriceCalculator from './PriceCalculator';\r\nimport { corporates } from './Corporates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel:{\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color : \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\"\r\n  },\r\n\r\n  ExportToExcelButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n   \r\n  },\r\n\r\n  ExportToExcelButtonInline:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n    cursor: \"pointer\",\r\n    padding: \"10px\"\r\n   \r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n},\r\n\r\nth: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntd: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntopSelect: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 80,\r\n},\r\n\r\nnotifyIcon:{\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor : \"rgb(220, 0, 78)\",\r\n  marginLeft: \"10px\"\r\n}\r\n\r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else if (str === 'live')\r\n  {\r\n    return `Live Bookings`;\r\n  }else if (str === 'completed')\r\n  {\r\n    return `Completed Bookings`;\r\n  }else if (str === 'positive')\r\n  {\r\n    return `Positive Results`;\r\n  }else if (str === 'deleted')\r\n  {\r\n    return `Deleted Records`;\r\n  }else if (str === 'late')\r\n  {\r\n    return `40 Hours Late`;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n}\r\n\r\nconst getTableIcon = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'old')\r\n  {\r\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'future')\r\n  {\r\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'recent')\r\n  {\r\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'live')\r\n  {\r\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'completed')\r\n  {\r\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'positive')\r\n  {\r\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\r\n  }else if (str === 'deleted')\r\n  {\r\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'late')\r\n  {\r\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [topCount, setTopCount] = React.useState(25)\r\n  const topCountChanged = (event) =>\r\n  {\r\n    setTopCount(event.target.value)\r\n    loadData(event.target.value)\r\n  }\r\n  \r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () =>\r\n  {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  }\r\n\r\n\r\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const[chkDate, setChkDate] = useState(true);\r\n  const[chkForename, setChkForename] = useState(true);\r\n  const[chkSurname, setChkSurname] = useState(true);\r\n  const[chkDOB, setChkDOB] = useState(true);\r\n  const[chkEmail, setChkEmail] = useState(true);\r\n  const[chkTel, setChkTel] = useState(true);\r\n  const[chkCertificate, setChkCertidicate] = useState(true);\r\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const[chkextRef, setChkExtRef] = useState(true);\r\n  const[chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) =>\r\n  {\r\n    setJustCorporate(event.target.checked);\r\n  }\r\n  \r\n\r\n  const chkDateChanged = (event) =>\r\n  {\r\n    setChkDate(event.target.checked);\r\n  }\r\n\r\n  const chkForenameChanged = (event) =>\r\n  {\r\n    setChkForename(event.target.checked);\r\n  }\r\n\r\n  const chkSurnameChanged = (event) =>\r\n  {\r\n    setChkSurname(event.target.checked);\r\n  }\r\n\r\n  const chkDOBChanged = (event) =>\r\n  {\r\n    setChkDOB(event.target.checked);\r\n  }\r\n\r\n  const chkEmailChanged = (event) =>\r\n  {\r\n    setChkEmail(event.target.checked);\r\n  }\r\n\r\n  const chkTelChanged = (event) =>\r\n  {\r\n    setChkTel(event.target.checked);\r\n  }\r\n\r\n  const chkCertificateChanged = (event) =>\r\n  {\r\n    setChkCertidicate(event.target.checked);\r\n  }\r\n\r\n  const chkAntiBodyTestChanged = (event) =>\r\n  {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  }\r\n\r\n  const chkextRefChanged = (event) =>\r\n  {\r\n    setChkExtRef(event.target.checked);\r\n  }\r\n\r\n  const chkPriceChanged = (event) =>\r\n  {\r\n    setChkPrice(event.target.checked);\r\n  }\r\n\r\n\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === 'recent')\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n\r\n           <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n\r\n          \r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n        if (!params.value)\r\n        {\r\n           return ( \r\n              <React.Fragment>                    \r\n                    <CloseIcon className={classes.closeIcon}/>                        \r\n              </React.Fragment>\r\n           );\r\n        }\r\n        else\r\n        {\r\n           if (params.getValue('paidBy') === 'credit card')\r\n           {\r\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'cash')\r\n           {\r\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'corporate')\r\n           {\r\n             return ( <BusinessIcon className={classes.checkIcon}/> );\r\n           }\r\n           else\r\n           {\r\n             return '';  \r\n           }\r\n        }\r\n  }\r\n },\r\n\r\n\r\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \r\n        return formatTimeStamp(params.value);\r\n        }\r\n      },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n          }\r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink}\r\n              //  onClick={\r\n              //   () => {\r\n              //     console.log(params.value);\r\n  \r\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n              //     setState(state => ({...state, ref : params.value}));\r\n              //     setState(state => ({...state, refError : false})); \r\n              //     setState(state => ({...state, foundRecords : []}));\r\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n              //   }\r\n              // }\r\n              \r\n              >\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n      { field: 'email', headerName: 'Email', width: 200 },\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'service', headerName: 'Service', width: 250 },\r\n      { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n\r\n  }\r\n  else\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n            <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n               if (!params.value)\r\n               {\r\n                  return ( \r\n                    <React.Fragment>\r\n                                <CloseIcon className={classes.closeIcon}/> \r\n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\r\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\r\n                                )}\r\n\r\n                               \r\n                    </React.Fragment>\r\n                     \r\n                        \r\n                  \r\n                  \r\n                  );\r\n               }\r\n               else\r\n               {\r\n                  if (params.getValue('paidBy') === 'credit card')\r\n                  {\r\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'cash')\r\n                  {\r\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'corporate')\r\n                  {\r\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else\r\n                  {\r\n                    return '';  \r\n                  }\r\n               }\r\n         }\r\n        },\r\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n          return FormatDateFromString(params.value);\r\n      }\r\n   },\r\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n    return params.getValue('bookingTime');\r\n  }},\r\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n      if (params.value === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}>  BM </span>\r\n        );\r\n    \r\n      }else if (params.value === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> PA </span>\r\n        );\r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n  },\r\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n    return (\r\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n          <Link className={classes.RefLink}\r\n          //  onClick={\r\n          //   () => {\r\n          //     console.log(params.value);\r\n\r\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n          //     setState(state => ({...state, ref : params.value}));\r\n          //     setState(state => ({...state, refError : false})); \r\n          //     setState(state => ({...state, foundRecords : []}));\r\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n          //   }\r\n          // }\r\n          \r\n          >\r\n            {params.value}\r\n          </Link>\r\n      </Tooltip>\r\n\r\n    );\r\n  }},\r\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n  { field: 'email', headerName: 'Email', width: 200 },\r\n  { field: 'phone', headerName: 'Tel', width: 150 },\r\n  { field: 'service', headerName: 'Service', width: 250 },\r\n  { field: 'notes', headerName: 'Notes', width: 500 },\r\n\r\n    \r\n    ];\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n  \r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) =>\r\n  {\r\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n    if (todayStr === timeStampStr)\r\n    {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    }\r\n    else\r\n    {\r\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  }\r\n\r\n  const loadData = (top) =>\r\n  {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === 'today')\r\n    {\r\n      api = BookService.getTodayBookings;\r\n    }else if (props.date === 'old')\r\n    {\r\n      api = BookService.getOldBookings;\r\n    }else if (props.date === 'future')\r\n    {\r\n      api = BookService.getFutureBookings;\r\n    }else if (props.date === 'recent')\r\n    {\r\n      api = BookService.getRecentBookingsAll;\r\n    }\r\n    else if (props.date === 'deleted')\r\n    {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n     \r\n    setData({bookings: [], cachedBookings: [], isFetching: true});\r\n   \r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top).then( (res) =>{\r\n      // console.log(res)\r\n      for (var i=0; i < res.data.length; i++)\r\n      {\r\n        res.data[i] = {...res.data[i], id : i + 1}\r\n      }  \r\n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\r\n      // return res.data;\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n            setTopCount(25)\r\n            loadData(25)\r\n        },\r\n        [props.date]);\r\n\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => \r\n\r\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n             || (element.service.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n               \r\n              \r\n          );\r\n  \r\n  \r\n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n  \r\n      useEffect(() => {\r\n\r\n       loadData(topCount)\r\n    \r\n      }, [state.bookingDialogDataChanged]);    \r\n\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  }    \r\n  \r\n  const openDetailsDialog = (event, id) =>\r\n  {\r\n    const booking = data.bookings.find(element => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n\r\n  }\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    loadData(topCount)\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) =>\r\n  {\r\n    setOpenDialogExcel(true);\r\n  }\r\n\r\n  const isTopSelectHidden = (date)=>\r\n  {\r\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.showCreateExcel && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {/* {FormatDateFromString(booking.birthDate)} */}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n} ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\n\r\nconst emptyData = [\r\n  createData('09:00', 0),\r\n  createData('10:00', 0),\r\n  createData('11:00', 0),\r\n  createData('12:00', 0),\r\n  createData('13:00', 0),\r\n  createData('14:00', 0),\r\n  createData('15:00', 0),\r\n  createData('16:00', 0),\r\n  createData('17:00', 0),\r\n  createData('18:00', undefined),\r\n\r\n];\r\n\r\nconst getCount = (data, str) =>\r\n{\r\n  if (!data)\r\n    return 0;\r\n\r\n  var count = 0;\r\n  for (var i=0; i < data.length; i++)\r\n  {\r\n    if (data[i]._id.substr(0,2) === str)\r\n    {\r\n      count += data[i].count;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  const [data, setData] = React.useState(emptyData);\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n      var result = [];\r\n      try\r\n      {\r\n          setLoading(true)\r\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\r\n          setLoading(false)\r\n          const data = res.data.result;\r\n          result.push(createData('09:00', getCount(data,'09')));\r\n          result.push(createData('10:00', getCount(data,'10')));\r\n          result.push(createData('11:00', getCount(data,'11')));\r\n          result.push(createData('12:00', getCount(data,'12')));\r\n          result.push(createData('13:00', getCount(data,'13')));\r\n          result.push(createData('14:00', getCount(data,'14')));\r\n          result.push(createData('15:00', getCount(data,'15')));\r\n          result.push(createData('16:00', getCount(data,'16')));\r\n          result.push(createData('17:00', getCount(data,'17')));\r\n          result.push(createData('18:00', undefined));\r\n \r\n           setData(result);\r\n      }\r\n      catch(err){\r\n        setLoading(false)\r\n        console.error(err);\r\n      }\r\n\r\n    }\r\n  \r\n   fetchData();\r\n\r\n  }, [] );\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\r\nimport * as dateformat from \"dateformat\";\r\nimport BookService from \"./services/BookService\";\r\nimport BookingDialog from \"./BookingDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    margin: \"5px\",\r\n    padding: \"5px\",\r\n    maxWidth: \"90px\",\r\n    minHeight: \"30px\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    align: \"center\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n});\r\n\r\nconst isWeekend = (date) => {\r\n  return (\r\n    date.getDay() === 1 ||\r\n    date.getDay() === 2 ||\r\n    date.getDay() === 3 ||\r\n    date.getDay() === 6 ||\r\n    date.getDay() === 0\r\n  );\r\n};\r\n\r\nconst isThursday = (date) => {\r\n  return date.getDay() === 4; /// Thursday\r\n};\r\n\r\nconst isFriday = (date) => {\r\n  return date.getDay() === 5; /// Friday\r\n};\r\n\r\nconst getCurrentTimeSlot = (now) => {\r\n  if (isWeekend(now)) {\r\n    return null;\r\n  }\r\n\r\n  var min = now.getMinutes();\r\n  var hour = now.getHours();\r\n\r\n  if (isThursday(now) && hour < 13) {\r\n    return null;\r\n  }\r\n\r\n  if (isFriday(now) && hour >= 13) {\r\n    return null;\r\n  }\r\n\r\n  if (hour < 10 || hour >= 18) return null;\r\n\r\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\r\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\r\n\r\n  if (hour > 12) hour = hour - 12;\r\n\r\n  const slotHourStr = `0${hour}`;\r\n\r\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\r\n};\r\n\r\nconst getCurrentTimeSlotLabel = (timeStr) => {\r\n  if (!timeStr) {\r\n    return \"Closed\";\r\n  }\r\n\r\n  let endTimeStr = \"\";\r\n  switch (timeStr) {\r\n    case \"10:00 AM\":\r\n      endTimeStr = \"10:30 AM\";\r\n      break;\r\n    case \"10:30 AM\":\r\n      endTimeStr = \"11:00 AM\";\r\n      break;\r\n    case \"11:00 AM\":\r\n      endTimeStr = \"11:30 AM\";\r\n      break;\r\n    case \"11:30 AM\":\r\n      endTimeStr = \"12:00 PM\";\r\n      break;\r\n    case \"12:00 PM\":\r\n      endTimeStr = \"12:30 PM\";\r\n      break;\r\n    case \"12:30 PM\":\r\n      endTimeStr = \"01:00 PM\";\r\n      break;\r\n    case \"01:00 PM\":\r\n      endTimeStr = \"01:30 PM\";\r\n      break;\r\n    case \"01:30 PM\":\r\n      endTimeStr = \"02:00 PM\";\r\n      break;\r\n    case \"02:00 PM\":\r\n      endTimeStr = \"02:30 PM\";\r\n      break;\r\n    case \"02:30 PM\":\r\n      endTimeStr = \"03:00 PM\";\r\n      break;\r\n    case \"03:00 PM\":\r\n      endTimeStr = \"03:30 PM\";\r\n      break;\r\n    case \"03:30 PM\":\r\n      endTimeStr = \"04:00 PM\";\r\n      break;\r\n    case \"04:00 PM\":\r\n      endTimeStr = \"04:30 PM\";\r\n      break;\r\n    case \"04:30 PM\":\r\n      endTimeStr = \"05:00 PM\";\r\n      break;\r\n    case \"05:00 PM\":\r\n      endTimeStr = \"05:30 PM\";\r\n      break;\r\n    case \"05:30 PM\":\r\n      endTimeStr = \"06:00 PM\";\r\n      break;\r\n\r\n    default:\r\n      endTimeStr = \"\";\r\n      break;\r\n  }\r\n\r\n  return `${timeStr} - ${endTimeStr}`;\r\n};\r\n\r\nexport default function CurrentVisits() {\r\n  const classes = useStyles();\r\n\r\n  const [current, setCurrent] = React.useState(new Date());\r\n  const [bookings, setBookings] = React.useState([]);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentTimeSlot = getCurrentTimeSlot(current);\r\n    if (!currentTimeSlot) return;\r\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\r\n    setLoading(true);\r\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.status === \"OK\") {\r\n          setBookings([...res.data.bookings]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }, [current]);\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings && _bookings.length > 0) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={0}\r\n          >\r\n            {_bookings.map((booking) => (\r\n              <Grid item>\r\n                <div\r\n                  className={classes.bookingBox}\r\n                  onClick={(event) => bookingCliked(event, booking)}\r\n                >\r\n                  <span style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\r\n                  </span>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(current, \"dd mmmm, yyyy\")}\r\n      </Typography>\r\n\r\n      {getBookingsBox(bookings)}\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\r\n  }\r\n\r\n  const loadData = () => \r\n  {\r\n    setData({bookings: data.bookings, isFetching: true});\r\n    setLoading(true)\r\n    BookService.getRecentBookings().then( (res) =>{\r\n      setLoading(false)\r\n        setData({bookings: res.data, isFetching: false});\r\n\r\n    }).catch( (err) => {\r\n      setLoading(false)\r\n        console.log(err);\r\n        setData({bookings: data.bookings, isFetching: false});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n          loadData();\r\n        },\r\n        [refresh]);   \r\n\r\n\r\n   useEffect( () => {\r\n     loadData();\r\n     const interval = setInterval(() => {\r\n       setRefresh(refresh => !refresh);\r\n     }, 30000);\r\n\r\n     return () =>\r\n     {\r\n       clearInterval(interval)\r\n     }\r\n     \r\n   }, []) ;    \r\n\r\n   const formatTimeStamp = (timeStamp) =>\r\n   {\r\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n     if (todayStr === timeStampStr)\r\n     {\r\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n     }\r\n     else\r\n     {\r\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n     }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Fullname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>Tel</TableCell>\r\n            <TableCell>Service</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\r\n              <TableCell>{row.fullname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{row.phone}</TableCell>\r\n              <TableCell>{row.service}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport CurrentVisits from './CurrentVisits';\r\n\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport BookingView from './BookingView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Current Visits */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <CurrentVisits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Bookings */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n  },\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#555\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\" ,\r\n    width: \"400px\"    \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n      \r\n    },\r\n    width: \"400px\"   \r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState('panel0');\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [fullname, setFullname] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [service, setService] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const fullnameChanged = (event) =>\r\n    {\r\n      setFullname(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const serviceChanged = (event) =>\r\n    {\r\n      setService(event.target.value);\r\n    }\r\n\r\n    const notesChanged = (event) =>\r\n    {\r\n      setNotes(event.target.value);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setFullname(person.fullname);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime);\r\n         setEmail(person.email);\r\n         setTel(person.phone);\r\n         setService(person.service)\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes);\r\n         }\r\n        \r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.fullname = fullname;\r\n          booking.notes = notes;\r\n          booking.service = service;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const changeBackToBookingMade = (event, id) =>\r\n   {\r\n     setSaving(true);\r\n     bookingService.changeBackToBookingMade(id).then(res => {\r\n       setSaving(false);\r\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n     }).catch(err => {\r\n       console.log(err);\r\n       setSaving(false);\r\n     })\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                      {person.deleted && (\r\n                          <Tooltip  title=\"This record has been deleted.\">\r\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.fullname}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n\r\n\r\n                        <ul className={classes.ul}>\r\n\r\n                        {/* Restore Functionality ******************************************* */}  \r\n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\r\n                                Are you sure you want to restore this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\r\n                                 <Button\r\n\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\r\n                                    className={classes.RestoreButton}\r\n                                 >\r\n                                   Restore This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Restore this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n                           {/*  ******************************************************************* */}\r\n\r\n                              {/* Edit Functionality ******************************************* */}\r\n\r\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                            \r\n                            {/* ****************************************************************************************** */}\r\n\r\n\r\n                            {/* Delete Functionality ******************************************* */}\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\r\n                                Are you sure you want to delete this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\r\n                                    className={classes.DeleteButton}\r\n                                 >\r\n                                   Delete This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Delete this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                                 \r\n                            {/* ****************************************************************************************** */}\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                   {FormatDateFromString(person.bookingDate) }\r\n                                  </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={fullname}\r\n                                                      onChange = {fullnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SERVICE</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={service}\r\n                                                      onChange = {serviceChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>NOTES</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={notes}\r\n                                                      onChange = {notesChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> \r\n                                {getStatusLabel(person.status)} \r\n                            </li>\r\n      \r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\nimport { width } from '@material-ui/system';\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\",\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n//   useEffect( () =>\r\n//   {\r\n//      findRecords();\r\n//   }, [state.findRecords]);\r\n\r\n useEffect ( () => {\r\n    setState(state => ({...state, foundRecords : []}));\r\n }, [])\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 10;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 )\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\",\r\n        cursor: \"pointer\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 1;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))}>\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '10:00 AM',\r\n    '10:30 AM', \r\n    '11:00 AM', \r\n    '11:30 AM', \r\n    '12:00 PM',\r\n    '12:30 PM',\r\n    '01:00 PM',\r\n    '01:30 PM',\r\n    '02:00 PM',\r\n    '02:30 PM',\r\n    '03:00 PM',\r\n    '03:30 PM',\r\n    '04:00 PM',\r\n    '04:30 PM',\r\n    '05:00 PM',\r\n    '05:30 PM',\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { validate } from \"email-validator\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  CalendarIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  DateTimeLabel: {\r\n    fontWeight: \"500\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  PriceLabelPaid:{\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"600\"\r\n  },\r\n\r\n  PriceLabelNotPaid:{\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: \"600\"\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst Packages = [\r\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\r\n  { packageName: `Coil Fitting/Coil Removal` },\r\n  { packageName: `Well Woman Check` },\r\n  { packageName: `Sexual Health Screening` },\r\n  { packageName: `Pre-pregnancy/Fertility check` },\r\n  { packageName: `Gynaecological Ultrasound` },\r\n  { packageName: `HPV Vaccination` },\r\n  { packageName: `Cervical / Pap Smear` },\r\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\r\n];\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function NewBookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [fullnameError, setFullnameError] = React.useState(false);\r\n\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [service, setService] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n\r\n  const [deposit, setDeposit] = React.useState(false);\r\n\r\n  const depositChanged = (event) => {\r\n    setDeposit(event.target.checked);\r\n  };\r\n\r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFullnameError(false);\r\n  };\r\n\r\n  const phoneChanged = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const serviceChanged = (event) => {\r\n    setService(event.target.value);\r\n  };\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    setFullname(\"\");\r\n    setFullnameError(false);\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    setService(\"\");\r\n    setNotes(\"\");\r\n    setDeposit(false);\r\n\r\n    props.handleClose();\r\n    setSaving(false);\r\n  };\r\n\r\n  const validateBooking = () => {\r\n    let error = false;\r\n    if (!fullname || fullname.trim().length < 1) {\r\n      setFullnameError(true);\r\n      error = true;\r\n    }\r\n    return !error;\r\n  };\r\n\r\n  const saveClicked = async () => {\r\n    if (!validateBooking()) {\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n    try {\r\n      await BookService.addNewBooking({\r\n        bookingDate: props.date,\r\n        bookingTime: props.time,\r\n        fullname: fullname,\r\n        phone: phone,\r\n        email: email,\r\n        service: service,\r\n        notes: notes,\r\n        deposit: deposit ? 100 : 0,\r\n      });\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.date && props.time && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\" style={{position:\"relative\"}}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    ADD New Booking{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GYNAE_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\r\n                    GYNAE\r\n              </div>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"480px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"stretch\"\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                    >\r\n                      <Grid item>\r\n                        <DateRangeIcon className={classes.CalendarIcon} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <span className={classes.DateTimeLabel}>\r\n                          {props.date} , {props.time}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      autoFocus\r\n                      error={fullnameError}\r\n                      label=\"Full Name\"\r\n                      value={fullname}\r\n                      required\r\n                      onChange={fullnameChanged}\r\n                      name=\"fullname\"\r\n                      id=\"fullname-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Telephone\"\r\n                      value={phone}\r\n                      onChange={phoneChanged}\r\n                      name=\"phone\"\r\n                      id=\"phone-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email\"\r\n                      value={email}\r\n                      onChange={emailChanged}\r\n                      name=\"email\"\r\n                      id=\"email-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl className={classes.formControl} fullWidth>\r\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\r\n                      <Select\r\n                        fullWidth\r\n                        labelId=\"service-label-id\"\r\n                        id=\"service-id\"\r\n                        value={service}\r\n                        onChange={serviceChanged}\r\n                      >\r\n                        {Packages.map((item) => (\r\n                          <MenuItem value={item.packageName}>\r\n                            {item.packageName}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Notes\"\r\n                      value={notes}\r\n                      onChange={notesChanged}\r\n                      name=\"notes\"\r\n                      id=\"notes-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid otem xs={12} style={{marginTop:\"15px\"}}>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          color=\"primary\"\r\n                          checked={deposit}\r\n                          onChange={depositChanged}\r\n                          name=\"deposit\"\r\n                        />\r\n                      }\r\n                      label={deposit ? <span className={classes.PriceLabelPaid}>£100 Deposit Paid</span> : <span className={classes.PriceLabelNotPaid}>£100 Deposit Not Paid</span>}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={saveClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport dateformat from \"dateformat\";\r\nimport BookService from \"../services/BookService\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport GlobalState from \"../../GlobalState\";\r\nimport BookingDialog from \"../BookingDialog\";\r\nimport NewBookingDialog from \"../NewBookingDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    width: \"100%\",\r\n    height: \"50px\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyItems: \"flex-start\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ContainerPast: {\r\n    width: \"100%\",\r\n    paddingTop: \"50px\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n\r\n  DayLabel: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#555\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  DayLabelDisabled: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#ddd\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  LoadingProgress: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: \"40%\",\r\n  },\r\n\r\n  BookingCountGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"5%\",\r\n    left: \"8%\",\r\n    width: \"85%\",\r\n    height: \"8%\",\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n\r\n  bookingBoxNew: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #ddd\",\r\n    color: \"#ccc\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#fff\",\r\n\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    transition: \"all 0.5s ease\",\r\n    borderRadius: \"4px\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.secondary.main,\r\n      borderColor:  theme.palette.secondary.main,\r\n    },\r\n  },\r\n\r\n  bookingBoxSampleTaken: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#eee\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#0059b3\",\r\n      color: \"#fafafa\",\r\n    },\r\n  },\r\n\r\n  bookingBoxPositive: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#d40b0b\",\r\n    color: \"#fff2f2\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#bf0000\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  bookingBoxReportSent: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#009900\",\r\n    color: \"#eee\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#006e00\",\r\n      color: \"#fafafa\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DayViewCell = ({ key, date, time }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [bookings, setBookings] = React.useState(null);\r\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(true);\r\n\r\n  const [isPast, setIsPast] = React.useState(false);\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\r\n    setIsPast(date < todayStr);\r\n  }, [date]);\r\n\r\n  useEffect(() => {\r\n    if (bookings) {\r\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\r\n        const search = state.dayViewCalFilter.trim().toUpperCase();\r\n        setFilteredBookings(\r\n          bookings.filter(\r\n            (booking) =>\r\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\r\n          )\r\n        );\r\n      } else {\r\n        setFilteredBookings([...bookings]);\r\n      }\r\n    }\r\n  }, [state.dayViewCalFilter, bookings]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      // if (isPast)\r\n      // {\r\n      //     setBookings([]);\r\n      //     return;\r\n      // }\r\n\r\n      setBookings(null);\r\n\r\n      var res = state.AdminCalendarCache?.find(\r\n        (record) =>\r\n          record.method === \"getBookingsByDateStrandTime\" &&\r\n          record.query === `${date}${time}`\r\n      )?.res;\r\n      if (!res || openDialog || openDialogAddNew) {\r\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n        setState((state) => ({\r\n          ...state,\r\n          AdminCalendarCache: [\r\n            ...state.AdminCalendarCache,\r\n            {\r\n              method: \"getBookingsByDateStrandTime\",\r\n              query: `${date}${time}`,\r\n              res: res,\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n\r\n      if (res.data.status === \"OK\") {\r\n        setBookings(res.data.bookings);\r\n      }\r\n    };\r\n\r\n    if (openDialog || openDialogAddNew) {\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsByDateStrandTime\" &&\r\n              record.query === `${date}${time}`\r\n            )\r\n        ),\r\n      }));\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsCountByDateStrandTime\" &&\r\n              record.query === `${date}${time}`\r\n            )\r\n        ),\r\n      }));\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsCountByDateStr\" &&\r\n              record.query === date\r\n            )\r\n        ),\r\n      }));\r\n    }\r\n\r\n    fetchData();\r\n  }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const getBookingClass = (status) => {\r\n    switch (status) {\r\n      case \"patient_attended\":\r\n        return classes.bookingBoxSampleTaken;\r\n      default:\r\n        return classes.bookingBox;\r\n    }\r\n  };\r\n\r\n  const addNewBookingClicked = () =>\r\n  {\r\n      setOpenDialogAddNew(true)\r\n  }\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings === null) {\r\n      return (\r\n        <div className={classes.LoadingProgress}>\r\n          <CircularProgress disableShrink />\r\n        </div>\r\n      );\r\n    } else if (_bookings.length >= 0) {\r\n      return (\r\n        <React.Fragment>\r\n          {_bookings.map((booking) => (\r\n            <div\r\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\r\n              className={getBookingClass(booking.status)}\r\n              onClick={(event) => bookingCliked(event, booking)}\r\n            >\r\n              {`${booking.fullname}`.substring(0, 15)}\r\n            </div>\r\n          ))}\r\n\r\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCloseDialogAddNew = () => {\r\n    setOpenDialogAddNew(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.Container}>\r\n        {getBookingsBox(filteredBookings)}\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n\r\n      <NewBookingDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogAddNew}\r\n        handleClose={handleCloseDialogAddNew}\r\n        />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nDayViewCell.propTypes = {\r\n  key: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DayViewCell;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\n\r\n\r\n\r\nconst rows = [\r\n    '10:00 AM',\r\n    '10:30 AM', \r\n    '11:00 AM', \r\n    '11:30 AM', \r\n    '12:00 PM',\r\n    '12:30 PM',\r\n    '01:00 PM',\r\n    '01:30 PM',\r\n    '02:00 PM',\r\n    '02:30 PM',\r\n    '03:00 PM',\r\n    '03:30 PM',\r\n    '04:00 PM',\r\n    '04:30 PM',\r\n    '05:00 PM',\r\n    '05:30 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken,\r\n       'Content-Type': 'application/json',\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n\r\n   static addNewBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gp/book/addnewbooking`, payload);\r\n   }\r\n\r\n\r\n   static sendRegFormEmail = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\r\n   }\r\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getShouldRefundsCount = () =>\r\n   {\r\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\r\n   }\r\n\r\n   \r\n\r\n   static refundBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/gp/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gp/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gp/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gp/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static changeToPatientAttended = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/gp/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/gp/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/gp/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gp/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/gp/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gp/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gp/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/gp/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/gp/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n\r\n    static downloadGPRegForm = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PayDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [price, setPrice] = useState(\"\");\r\n  const [priceError, setPriceError] = useState(false);\r\n\r\n  useEffect( () => {\r\n    if (props.price)\r\n    {\r\n      setPrice(`${props.price}`)\r\n    }else\r\n    {\r\n      setPrice('')\r\n    }\r\n  }, [props.price, props.open])\r\n\r\n\r\n  const priceChanged = (event) =>\r\n  {\r\n    setPrice(event.target.value)\r\n    setPriceError(false)\r\n  }\r\n\r\n  const paymentMethodChanged = (event) => {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    props.handleClose();\r\n    setPaymentMethod(\"credit card\");\r\n    setPrice('')\r\n    setCorporate(corporates[0]);\r\n    setSaving(false);\r\n  };\r\n\r\n  const corporateChanged = (event) => {\r\n    setCorporate(event.target.value);\r\n  };\r\n\r\n  const payClicked = async () => {\r\n\r\n\r\n    if (!price || price.trim().length === 0 || price === '0')\r\n    {\r\n      setPriceError(true)\r\n      return\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n  \r\n\r\n    try {\r\n      await BookService.payBooking(\r\n        props.booking._id,\r\n        price,\r\n        paymentMethod,\r\n        paymentMethod === \"corporate\" ? corporate : \"\"\r\n      );\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <CreditCardIcon\r\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    PAY the CHARGE{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"300px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                  <TextField\r\n                                autoFocus\r\n                                error={priceError}\r\n                                label=\"TOTAL Charges\"\r\n                                value={price}\r\n                                fullWidth\r\n                                required\r\n                                onChange={priceChanged}\r\n                                name=\"product-price\"\r\n                                id=\"product-price-id\"\r\n                                InputProps={{\r\n                                  inputComponent: NumberFormatCustom,\r\n                                  startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                      £\r\n                                    </InputAdornment>\r\n                                  ),\r\n                                }}\r\n                              />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <div style={{ fontSize: \"17px\" }}>\r\n                      {\" \"}\r\n                      How do you want to pay?{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        aria-label=\"paymentMethod\"\r\n                        name=\"paymentMethod\"\r\n                        value={paymentMethod}\r\n                        onChange={paymentMethodChanged}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"credit card\"\r\n                          control={<Radio />}\r\n                          label=\"Credit Card\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"cash\"\r\n                          control={<Radio />}\r\n                          label=\"Cash\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"corporate\"\r\n                          control={<Radio />}\r\n                          label=\"Corporate\"\r\n                        />\r\n                      </RadioGroup>\r\n\r\n                      {paymentMethod === \"corporate\" && (\r\n                        <FormControl\r\n                          style={{ marginTop: \"10px\" }}\r\n                          className={classes.formControl}\r\n                        >\r\n                          <Select\r\n                            labelId=\"select-corporate\"\r\n                            id=\"select-corporate-id\"\r\n                            value={corporate}\r\n                            onChange={corporateChanged}\r\n                          >\r\n                            {corporates.map((element) => (\r\n                              <MenuItem\r\n                                value={element}\r\n                              >{`${element}`}</MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      )}\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item></Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={payClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Pay\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Divider,\r\n  FormControlLabel,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport PDFService from \"./services/PDFService\";\r\n\r\nimport { calculatePrice } from \"./PriceCalculator\";\r\n\r\nimport bookingService from \"./services/BookService\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BookService from \"./services/BookService\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  FormatDateFromString,\r\n  RevertFormatDateFromString,\r\n} from \"./DateFormatter\";\r\nimport PayDialog from \"./PayDialog\";\r\n\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\nimport InvoiceDialog from \"../InvoiceDialog\";\r\nimport InvoiceService from \"../services/InvoiceService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor: \"#373737\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor: \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#333\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n    listStyle: \"none\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  li: {\r\n    marginBottom: \"15px\",\r\n  },\r\n\r\n  icon: {\r\n    marginRight: \"8px\",\r\n  },\r\n\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  lineThrough: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails: {\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\",\r\n  },\r\n\r\n  infoData: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  Accordion: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#222\",\r\n  },\r\n\r\n  AccordionDeleted: {\r\n    backgroundColor: \"#aaa\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  DownloadForm: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n\r\n  infoDataCharges: {\r\n    fontSize: \"18px\",\r\n    color: \"green\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  infoDataChargesHigher: {\r\n    fontSize: \"18px\",\r\n    color: \"red\",\r\n    fontWeight: \"600\",\r\n  },\r\n  BookedLabel: {\r\n    color: \"#606060\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    color: \"#0066aa\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  PositiveLabel: {\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\",\r\n  },\r\n\r\n  EditButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  ResendEmailsButton: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  PayButton: {\r\n    marginLeft: \"70px\",\r\n    width: \"300px\",\r\n  },\r\n\r\n  printInvoiceButton: {\r\n    marginLeft: \"70px\",\r\n    fontSize: \"0.8rem\",\r\n    // width: \"300px\",\r\n  },\r\n\r\n  editInvoiceButton: {\r\n    marginLeft: \"10px\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n\r\n  PayLabel: {\r\n    marginLeft: \"20px\",\r\n\r\n    color: \"#2f942e\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  RestoreButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#eee\",\r\n    color: \"#333\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  DeleteButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\",\r\n    },\r\n\r\n    padding: \"10px\",\r\n  },\r\n\r\n  SaveButton: {\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor: \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  CancelButton: {\r\n    marginBottom: \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  checkIconSmall: {\r\n    color: \"green\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  centeredLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  invoiceNumber: {\r\n    display: \"inline-block\",\r\n    fontWeight: \"500\",\r\n    width: \"72px\",\r\n    fontSize: \"1rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#alert-dialog-slide-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const [emailSent, setEmailSent] = React.useState(false);\r\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\r\n\r\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\r\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\r\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\r\n\r\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\r\n  const [deleteMode, setDeleteMode] = React.useState({\r\n    delete: false,\r\n    person: null,\r\n  });\r\n  const [restoreMode, setRestoreMode] = React.useState({\r\n    restore: false,\r\n    person: null,\r\n  });\r\n\r\n  const [saving, setSaving] = React.useState(false);\r\n  const [deleting, setDeleting] = React.useState(false);\r\n  const [restoring, setRestoring] = React.useState(false);\r\n\r\n  const [validationError, setValidationError] = React.useState({});\r\n\r\n  const [bookingDate, setBookingDate] = React.useState(\"\");\r\n  const [bookingTime, setBookingTime] = React.useState(\"\");\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [tel, setTel] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [service, setService] = React.useState(\"\");\r\n\r\n  const [refreshData, setRefreshData] = React.useState(false);\r\n\r\n  const [booking, setBooking] = React.useState(null);\r\n\r\n  const [recordChanged, setRecordChanged] = React.useState(false);\r\n\r\n  const [fieldChanged, setFieldChanged] = React.useState(false);\r\n\r\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\r\n\r\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\r\n\r\n  const [invoice, setInvoice] = React.useState(null);\r\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\r\n\r\n  const fetchInvoice = async () => {\r\n    try {\r\n      setInvoiceLoaded(false);\r\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\r\n      setInvoice(res.data.invoice);\r\n      setInvoiceLoaded(true);\r\n    } catch (err) {\r\n      setInvoiceLoaded(true);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.booking) {\r\n      fetchInvoice();\r\n    }\r\n  }, [props.booking, props.open]);\r\n\r\n  const handleCloseTimeStampDialog = () => {\r\n    setOpenTimeStampDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseUndoPayDialog = () => {\r\n    setOpenUndoPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseResendDialog = () => {\r\n    setOpenResendDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleClosePayDialog = () => {\r\n    setOpenPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseRefundDialog = () => {\r\n    setOpenRefundDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseInvoiceDialog = (refresh) => {\r\n    setOpenInvoiceDialog(false);\r\n    setSelectedBooking(null);\r\n    fetchInvoice();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (booking) {\r\n      const isChanged =\r\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\r\n        bookingTime !== booking.bookingTime ||\r\n        fullname !== booking.fullname ||\r\n        email !== booking.email ||\r\n        tel !== booking.phone ||\r\n        notes !== booking.notes;\r\n\r\n      setRecordChanged(isChanged);\r\n    }\r\n  }, [fieldChanged]);\r\n\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      setTimeout(() => {\r\n        setEditMode({ edit: false, person: null });\r\n        setRecordChanged(false);\r\n      }, 500);\r\n    }\r\n  }, [props.open]);\r\n\r\n  const bookingDateChanged = (event) => {\r\n    setBookingDate(event.target.value);\r\n    setValidationError({ ...validationError, bookingDateError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const bookingTimeChanged = (event) => {\r\n    setBookingTime(event.target.value);\r\n    setValidationError({ ...validationError, bookingTimeError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const telChanged = (event) => {\r\n    setTel(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const serviceChanged = (event) => {\r\n    setService(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    if (status === \"booked\") {\r\n      return <div className={classes.BookedLabel}> Booking Made </div>;\r\n    } else if (status === \"patient_attended\") {\r\n      return (\r\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\r\n      );\r\n    } else {\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const handleEditModeChanged = (edit, person) => {\r\n    if (edit) {\r\n      setFullname(person.fullname);\r\n      setBookingDate(FormatDateFromString(person.bookingDate));\r\n      setBookingTime(person.bookingTime.toUpperCase());\r\n      setEmail(person.email);\r\n      setTel(person.phone);\r\n      if (person.notes) {\r\n        setNotes(person.notes);\r\n      }\r\n\r\n      setEditMode({ edit: edit, person: person });\r\n    } else if (!edit && !person) {\r\n      setEditMode({ edit: edit, person: person });\r\n      setRecordChanged(false);\r\n    } else if (!edit && person) {\r\n      const booking = {};\r\n      const bookingId = person._id;\r\n      booking.email = email;\r\n      booking.phone = tel;\r\n      booking.fullname = fullname;\r\n      booking.notes = notes;\r\n      booking.service = service;\r\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n      booking.bookingTime = bookingTime;\r\n      booking.bookingRef = person.bookingRef;\r\n\r\n      if (validateBooking(booking)) {\r\n        updateBooking({ bookingId: bookingId, person: booking });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateDate = (str) => {\r\n    var error = false;\r\n    if (!str || str.length !== 10) {\r\n      error = true;\r\n    }\r\n\r\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n      if (!result) {\r\n        error = true;\r\n      }\r\n\r\n      const year = parseInt(str.substr(0, 4));\r\n      const month = parseInt(str.substr(5, 2));\r\n      const day = parseInt(str.substr(8, 2));\r\n\r\n      if (year < 1900) {\r\n        error = true;\r\n      }\r\n\r\n      if (month < 1 || month > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (day > 31) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateTime = (str) => {\r\n    var error = false;\r\n\r\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n    if (!result) {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const hour = parseInt(str.substr(0, 2));\r\n      const minute = parseInt(str.substr(3, 2));\r\n\r\n      if (hour < 0 || hour > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (minute < 0 || minute > 59) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateBooking = (booking) => {\r\n    var error = false;\r\n\r\n    if (!validateDate(booking.bookingDate)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingDateError: true });\r\n    }\r\n\r\n    if (!validateTime(booking.bookingTime)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingTimeError: true });\r\n    }\r\n    return !error;\r\n  };\r\n\r\n  const updateBooking = (payload) => {\r\n    setSaving(true);\r\n    bookingService\r\n      .updateBooking(payload)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteBooking = (id) => {\r\n    setDeleting(true);\r\n    bookingService\r\n      .deleteBooking(id)\r\n      .then((res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const restoreBooking = (id) => {\r\n    setRestoring(true);\r\n    bookingService\r\n      .unDeleteBooking(id)\r\n      .then((res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteModeChanged = (del, person) => {\r\n    if (del) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && !person) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && person) {\r\n      deleteBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n    if (restore) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && !person) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && person) {\r\n      restoreBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const changeBackToBookingMade = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeBackToBookingMade(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const changeToPatientAttended = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeToPatientAttended(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const Pay = () => {\r\n    setSelectedBooking(booking);\r\n    setOpenPayDialog(true);\r\n  };\r\n\r\n  const OpenInvoiceDialog = () => {\r\n    setSelectedBooking(booking);\r\n    setInvoice(invoice);\r\n    setOpenInvoiceDialog(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      BookService.getBookingById(props.booking._id)\r\n        .then((res) => {\r\n          setBooking(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n    }\r\n  }, [refreshData, state.bookingPayChanged]);\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      setBooking(props.booking);\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const undoPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.unPayBooking(booking._id);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n  };\r\n\r\n  const refundPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.refundBooking(booking._id);\r\n      setSaving(false);\r\n      updateShouldRefundsCount();\r\n      setOpenRefundDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenRefundDialog(false);\r\n    }\r\n  };\r\n\r\n  const updateShouldRefundsCount = async () => {\r\n    try {\r\n      const res = await BookService.getShouldRefundsCount();\r\n      if (res && res.data && res.data.status === \"OK\") {\r\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\r\n      }\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  };\r\n\r\n  const downloadRegForm = (id) => {\r\n    PDFService.downloadGPRegForm(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const downloadInvoice = (id) => {\r\n    InvoiceService.downloadInvoice(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const sendRegForm = (id) => {\r\n    setSaving(true);\r\n    setEmailSent(false);\r\n    BookService.sendRegFormEmail(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSent(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const sendInvoiceEmail = (id, _email) => {\r\n    setSaving(true);\r\n    setEmailSentInvoice(false);\r\n    InvoiceService.emailInvoice(id, _email)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSentInvoice(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const onClose = () => {\r\n    setEmailSent(false);\r\n    setEmailSentInvoice(false);\r\n    setInvoice(null);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={onClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle\r\n              id=\"alert-dialog-slide-title\"\r\n              style={\r\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\r\n              }\r\n            >\r\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\r\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(\r\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\r\n                      );\r\n                      setCopied(true);\r\n                      setTimeout(() => {\r\n                        setCopied(false);\r\n                      }, 1500);\r\n                    }}\r\n                    aria-label=\"delete\"\r\n                    className={classes.margin}\r\n                    size=\"small\"\r\n                  >\r\n                    <FileCopyOutlinedIcon\r\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\r\n                      fontSize=\"14px\"\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <span\r\n                  hidden={!copied}\r\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\r\n                >\r\n                  {\" \"}\r\n                  Copied{\" \"}\r\n                </span>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"25x\",\r\n                  right: \"60px\",\r\n                  backgroundColor: CalendarColors.GP_COLOR,\r\n                  color: \"#fff\",\r\n                  padding: \"0px 5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                GP\r\n              </div>\r\n\r\n              {/* {booking.tr && (\r\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\r\n                     TR\r\n                </div>\r\n\r\n              )} */}\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={\r\n                      booking.deleted\r\n                        ? {\r\n                            paddingBottom: \"5px\",\r\n                            textDecoration: \"line-through\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {`${booking.fullname}`}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {booking.deleted && (\r\n                  <Grid item>\r\n                    <Tooltip title=\"This record has been deleted.\">\r\n                      <DeleteIcon\r\n                        style={\r\n                          booking.tr\r\n                            ? {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#fff\",\r\n                                fontSize: 25,\r\n                              }\r\n                            : {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#333\",\r\n                                fontSize: 25,\r\n                              }\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  // height: \"550px\",\r\n                  paddingTop: \"0px\",\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={12} key={`panel0`}>\r\n                  <div className={classes.infoDetails}>\r\n                    <ul className={classes.ul}>\r\n                      {/* Restore Functionality ******************************************* */}\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"500\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to restore this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !booking.deleted ||\r\n                          (restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.RestoreButton}\r\n                        >\r\n                          Restore This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Restore this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/*  ******************************************************************* */}\r\n\r\n                      {/* Edit Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          deleteMode.delete ||\r\n                          (editMode.edit && editMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleEditModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.EditButton}\r\n                        >\r\n                          Edit Booking Info\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={saving || !recordChanged}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={saving}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      {/* Delete Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to delete this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          props.deleteButtonDisabled ||\r\n                          booking.deleted ||\r\n                          editMode.edit ||\r\n                          (deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        {booking.OTCCharges > 0 && (\r\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\r\n                            <div>\r\n                              <Button\r\n                                disabled={booking.OTCCharges > 0}\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  handleDeleteModeChanged(true, booking);\r\n                                }}\r\n                                className={classes.DeleteButton}\r\n                              >\r\n                                Delete This Record\r\n                              </Button>\r\n                            </div>\r\n                          </Tooltip>\r\n                        )}\r\n                        {booking.OTCCharges === 0 && (\r\n                          <Button\r\n                            disabled={booking.OTCCharges > 0}\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleDeleteModeChanged(true, booking);\r\n                            }}\r\n                            className={classes.DeleteButton}\r\n                          >\r\n                            Delete This Record\r\n                          </Button>\r\n                        )}\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Delete this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED DATE\r\n                            </span>\r\n\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {FormatDateFromString(booking.bookingDate)}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingDateError}\r\n                                className={classes.TextBox}\r\n                                value={bookingDate}\r\n                                onChange={bookingDateChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED TIME\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.bookingTime.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingTimeError}\r\n                                className={classes.TextBox}\r\n                                value={bookingTime}\r\n                                onChange={bookingTimeChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.fullname}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={fullname}\r\n                                onChange={fullnameChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>EMAIL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.email}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={email}\r\n                                onChange={emailChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>TEL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.phone?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={tel}\r\n                                onChange={telChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>NOTES</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.notes}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={notes}\r\n                                onChange={notesChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\r\n                        {getStatusLabel(booking.status)}\r\n                        {booking.status === \"patient_attended\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeBackToBookingMade(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change Back To Booking Made\r\n                            </Button>\r\n                          )}\r\n                        {booking.status === \"booked\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"default\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeToPatientAttended(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change To Patient Attended\r\n                            </Button>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted || editMode.edit}>\r\n                        <Button\r\n                          disabled={!booking.formData}\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadRegForm(booking._id);\r\n                          }}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Registration Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted || editMode.edit || booking.formData\r\n                        }\r\n                      >\r\n                        <Button\r\n                          disabled={!booking.email || booking.email.length < 3}\r\n                          startIcon={<SendIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            sendRegForm(booking._id);\r\n                          }}\r\n                          className={classes.DownloadForm}\r\n                          style={{ position: \"relative\" }}\r\n                        >\r\n                          Send Registration Form Email\r\n                          {emailSent && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                right: \"10px\",\r\n                                top: \"5px\",\r\n                                color: \"#05ad19\",\r\n                              }}\r\n                            >\r\n                              Email Sent\r\n                            </div>\r\n                          )}\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <Divider />\r\n\r\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\r\n                        <span style={{ paddingLeft: \"0px\" }}>\r\n                          {!invoiceLoaded && (\r\n                            <span className={classes.invoiceNumber}> ... </span>\r\n                          )}\r\n                          {invoiceLoaded && invoice && (\r\n                            <span className={classes.invoiceNumber}>\r\n                              {\" \"}\r\n                              {invoice.invoiceNumber}{\" \"}\r\n                            </span>\r\n                          )}\r\n                          {invoiceLoaded && !invoice && (\r\n                            <span\r\n                              className={classes.invoiceNumber}\r\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\r\n                            >\r\n                              {\" \"}\r\n                              N/A{\" \"}\r\n                            </span>\r\n                          )}\r\n                        </span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.deleted && (\r\n                            <React.Fragment>\r\n                              {invoiceLoaded && !invoice && (\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  className={classes.PayButton}\r\n                                  onClick={() => OpenInvoiceDialog()}\r\n                                >\r\n                                  Issue Invoice\r\n                                </Button>\r\n                              )}\r\n\r\n                              {invoiceLoaded && invoice && (\r\n                                <React.Fragment>\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<PrintIcon />}\r\n                                    color=\"primary\"\r\n                                    className={classes.printInvoiceButton}\r\n                                    onClick={() => downloadInvoice(invoice._id)}\r\n                                  >\r\n                                    Download Invoice\r\n                                  </Button>\r\n\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.editInvoiceButton}\r\n                                    onClick={() => OpenInvoiceDialog()}\r\n                                  >\r\n                                    Edit Invoice\r\n                                  </Button>\r\n\r\n                                  <Button\r\n                                    disabled={\r\n                                      !booking.email || booking.email.length < 3\r\n                                    }\r\n                                    startIcon={<SendIcon />}\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      sendInvoiceEmail(\r\n                                        invoice._id,\r\n                                        booking.email\r\n                                      );\r\n                                    }}\r\n                                    style={{\r\n                                      position: \"relative\",\r\n                                      marginLeft: \"10px\",\r\n                                      paddingRight: \"130px\",\r\n                                      fontSize: \"0.8rem\",\r\n                                    }}\r\n                                  >\r\n                                    Send Invoice By Email\r\n                                    {emailSentInvoice && (\r\n                                      <div\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          right: \"10px\",\r\n                                          top: \"5px\",\r\n                                          color: \"#05ad19\",\r\n                                        }}\r\n                                      >\r\n                                        Email Sent\r\n                                      </div>\r\n                                    )}\r\n                                  </Button>\r\n                                </React.Fragment>\r\n                              )}\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\r\n                        <span\r\n                          style={{ paddingLeft: \"15px\" }}\r\n                          className={\r\n                            !booking.OTCCharges || booking.OTCCharges === 0\r\n                              ? classes.infoDataChargesHigher\r\n                              : classes.infoDataCharges\r\n                          }\r\n                        >{`£${booking.OTCCharges.toLocaleString(\r\n                          \"en-GB\"\r\n                        )}`}</span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.paid &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              className={classes.PayButton}\r\n                              onClick={(event) => Pay()}\r\n                            >\r\n                              Pay\r\n                            </Button>\r\n                          )}\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          booking.paid && (\r\n                            <React.Fragment>\r\n                              <span className={classes.PayLabel}>\r\n                                {\" \"}\r\n                                <CheckIcon\r\n                                  className={classes.checkIconSmall}\r\n                                />{\" \"}\r\n                                Paid by {booking.paidBy}\r\n                                {booking.paidBy === \"corporate\"\r\n                                  ? ` \"${booking.corporate}\" `\r\n                                  : \"\"}\r\n                              </span>\r\n\r\n                              <Tooltip title=\"Undo Payment\">\r\n                                <IconButton\r\n                                  onClick={() => setOpenUndoPayDialog(true)}\r\n                                >\r\n                                  <UndoIcon style={{ color: \"red\" }} />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n\r\n                      {/* <li className={classes.li}>\r\n                        <div\r\n                          style={{\r\n                            borderTop: \"1px solid #ddd\",\r\n                            paddingTop: \"10px\",\r\n                          }}\r\n                        >\r\n                          <span className={classes.infoTitle}>\r\n                            TOTAL CHARGES\r\n                          </span>{\" \"}\r\n                          <span\r\n                            className={\r\n                              !booking.OTCCharges || booking.OTCCharges === 0\r\n                                ? classes.infoDataChargesHigher\r\n                                : classes.infoDataCharges\r\n                            }\r\n                          >{`£${(\r\n                            booking.deposit + booking.OTCCharges\r\n                          ).toLocaleString(\"en-GB\")}`}</span>\r\n                        </div>\r\n                      </li> */}\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving || deleting || restoring}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n\r\n            <PayDialog\r\n              booking={selectedBooking}\r\n              open={openPayDialog}\r\n              price={invoice ? invoice.grandTotal : null}\r\n              handleClose={handleClosePayDialog}\r\n            />\r\n\r\n            <InvoiceDialog\r\n              booking={selectedBooking}\r\n              invoice={invoice}\r\n              open={openInvoiceDialog}\r\n              handleClose={handleCloseInvoiceDialog}\r\n            />\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openUndoPayDialog}\r\n            onClose={handleCloseUndoPayDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Undo Payment\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to undo payment for this booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\r\n                Yes, Undo Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openRefundDialog}\r\n            onClose={handleCloseRefundDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Refund Deposit\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to refund deposit payment for this\r\n                booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button\r\n                onClick={refundPaymentClicked}\r\n                color=\"secondary\"\r\n                autoFocus\r\n              >\r\n                Yes, Refund Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BookingDialog from './BookingDialog';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as dateformat from 'dateformat';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PriceCalculator from './PriceCalculator';\r\nimport { corporates } from './Corporates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel:{\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color : \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\"\r\n  },\r\n\r\n  ExportToExcelButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n   \r\n  },\r\n\r\n  ExportToExcelButtonInline:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n    cursor: \"pointer\",\r\n    padding: \"10px\"\r\n   \r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n},\r\n\r\nth: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntd: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntopSelect: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 80,\r\n},\r\n\r\nnotifyIcon:{\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor : \"rgb(220, 0, 78)\",\r\n  marginLeft: \"10px\"\r\n}\r\n\r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else if (str === 'live')\r\n  {\r\n    return `Live Bookings`;\r\n  }else if (str === 'completed')\r\n  {\r\n    return `Completed Bookings`;\r\n  }else if (str === 'positive')\r\n  {\r\n    return `Positive Results`;\r\n  }else if (str === 'deleted')\r\n  {\r\n    return `Deleted Records`;\r\n  }else if (str === 'late')\r\n  {\r\n    return `40 Hours Late`;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n}\r\n\r\nconst getTableIcon = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'old')\r\n  {\r\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'future')\r\n  {\r\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'recent')\r\n  {\r\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'live')\r\n  {\r\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'completed')\r\n  {\r\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'positive')\r\n  {\r\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\r\n  }else if (str === 'deleted')\r\n  {\r\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'late')\r\n  {\r\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [topCount, setTopCount] = React.useState(25)\r\n  const topCountChanged = (event) =>\r\n  {\r\n    setTopCount(event.target.value)\r\n    loadData(event.target.value)\r\n  }\r\n  \r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () =>\r\n  {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  }\r\n\r\n\r\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const[chkDate, setChkDate] = useState(true);\r\n  const[chkForename, setChkForename] = useState(true);\r\n  const[chkSurname, setChkSurname] = useState(true);\r\n  const[chkDOB, setChkDOB] = useState(true);\r\n  const[chkEmail, setChkEmail] = useState(true);\r\n  const[chkTel, setChkTel] = useState(true);\r\n  const[chkCertificate, setChkCertidicate] = useState(true);\r\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const[chkextRef, setChkExtRef] = useState(true);\r\n  const[chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) =>\r\n  {\r\n    setJustCorporate(event.target.checked);\r\n  }\r\n  \r\n\r\n  const chkDateChanged = (event) =>\r\n  {\r\n    setChkDate(event.target.checked);\r\n  }\r\n\r\n  const chkForenameChanged = (event) =>\r\n  {\r\n    setChkForename(event.target.checked);\r\n  }\r\n\r\n  const chkSurnameChanged = (event) =>\r\n  {\r\n    setChkSurname(event.target.checked);\r\n  }\r\n\r\n  const chkDOBChanged = (event) =>\r\n  {\r\n    setChkDOB(event.target.checked);\r\n  }\r\n\r\n  const chkEmailChanged = (event) =>\r\n  {\r\n    setChkEmail(event.target.checked);\r\n  }\r\n\r\n  const chkTelChanged = (event) =>\r\n  {\r\n    setChkTel(event.target.checked);\r\n  }\r\n\r\n  const chkCertificateChanged = (event) =>\r\n  {\r\n    setChkCertidicate(event.target.checked);\r\n  }\r\n\r\n  const chkAntiBodyTestChanged = (event) =>\r\n  {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  }\r\n\r\n  const chkextRefChanged = (event) =>\r\n  {\r\n    setChkExtRef(event.target.checked);\r\n  }\r\n\r\n  const chkPriceChanged = (event) =>\r\n  {\r\n    setChkPrice(event.target.checked);\r\n  }\r\n\r\n\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === 'recent')\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n\r\n           <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n\r\n          \r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n        if (!params.value)\r\n        {\r\n           return ( \r\n              <React.Fragment>                    \r\n                    <CloseIcon className={classes.closeIcon}/>                        \r\n              </React.Fragment>\r\n           );\r\n        }\r\n        else\r\n        {\r\n           if (params.getValue('paidBy') === 'credit card')\r\n           {\r\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'cash')\r\n           {\r\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'corporate')\r\n           {\r\n             return ( <BusinessIcon className={classes.checkIcon}/> );\r\n           }\r\n           else\r\n           {\r\n             return '';  \r\n           }\r\n        }\r\n  }\r\n },\r\n\r\n\r\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \r\n        return formatTimeStamp(params.value);\r\n        }\r\n      },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n          }\r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink}\r\n              //  onClick={\r\n              //   () => {\r\n              //     console.log(params.value);\r\n  \r\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n              //     setState(state => ({...state, ref : params.value}));\r\n              //     setState(state => ({...state, refError : false})); \r\n              //     setState(state => ({...state, foundRecords : []}));\r\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n              //   }\r\n              // }\r\n              \r\n              >\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n      { field: 'email', headerName: 'Email', width: 200 },\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n\r\n  }\r\n  else\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n            <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n               if (!params.value)\r\n               {\r\n                  return ( \r\n                    <React.Fragment>\r\n                                <CloseIcon className={classes.closeIcon}/> \r\n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\r\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\r\n                                )}\r\n\r\n                               \r\n                    </React.Fragment>\r\n                     \r\n                        \r\n                  \r\n                  \r\n                  );\r\n               }\r\n               else\r\n               {\r\n                  if (params.getValue('paidBy') === 'credit card')\r\n                  {\r\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'cash')\r\n                  {\r\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'corporate')\r\n                  {\r\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else\r\n                  {\r\n                    return '';  \r\n                  }\r\n               }\r\n         }\r\n        },\r\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n          return FormatDateFromString(params.value);\r\n      }\r\n   },\r\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n    return params.getValue('bookingTime');\r\n  }},\r\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n      if (params.value === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}>  BM </span>\r\n        );\r\n    \r\n      }else if (params.value === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> PA </span>\r\n        );\r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n  },\r\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n    return (\r\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n          <Link className={classes.RefLink}\r\n          //  onClick={\r\n          //   () => {\r\n          //     console.log(params.value);\r\n\r\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n          //     setState(state => ({...state, ref : params.value}));\r\n          //     setState(state => ({...state, refError : false})); \r\n          //     setState(state => ({...state, foundRecords : []}));\r\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n          //   }\r\n          // }\r\n          \r\n          >\r\n            {params.value}\r\n          </Link>\r\n      </Tooltip>\r\n\r\n    );\r\n  }},\r\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n  { field: 'email', headerName: 'Email', width: 200 },\r\n  { field: 'phone', headerName: 'Tel', width: 150 },\r\n  { field: 'notes', headerName: 'Notes', width: 500 },\r\n\r\n    \r\n    ];\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n  \r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) =>\r\n  {\r\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n    if (todayStr === timeStampStr)\r\n    {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    }\r\n    else\r\n    {\r\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  }\r\n\r\n  const loadData = (top) =>\r\n  {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === 'today')\r\n    {\r\n      api = BookService.getTodayBookings;\r\n    }else if (props.date === 'old')\r\n    {\r\n      api = BookService.getOldBookings;\r\n    }else if (props.date === 'future')\r\n    {\r\n      api = BookService.getFutureBookings;\r\n    }else if (props.date === 'recent')\r\n    {\r\n      api = BookService.getRecentBookingsAll;\r\n    }\r\n    else if (props.date === 'deleted')\r\n    {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n     \r\n    setData({bookings: [], cachedBookings: [], isFetching: true});\r\n   \r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top).then( (res) =>{\r\n      // console.log(res)\r\n      for (var i=0; i < res.data.length; i++)\r\n      {\r\n        res.data[i] = {...res.data[i], id : i + 1}\r\n      }  \r\n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\r\n      // return res.data;\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n            setTopCount(25)\r\n            loadData(25)\r\n        },\r\n        [props.date]);\r\n\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => \r\n\r\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n             || (element.service.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n               \r\n              \r\n          );\r\n  \r\n  \r\n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n  \r\n      useEffect(() => {\r\n\r\n       loadData(topCount)\r\n    \r\n      }, [state.bookingDialogDataChanged]);    \r\n\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  }    \r\n  \r\n  const openDetailsDialog = (event, id) =>\r\n  {\r\n    const booking = data.bookings.find(element => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n\r\n  }\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    loadData(topCount)\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) =>\r\n  {\r\n    setOpenDialogExcel(true);\r\n  }\r\n\r\n  const isTopSelectHidden = (date)=>\r\n  {\r\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.showCreateExcel && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {/* {FormatDateFromString(booking.birthDate)} */}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n} ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\n\r\nconst emptyData = [\r\n  createData('09:00', 0),\r\n  createData('10:00', 0),\r\n  createData('11:00', 0),\r\n  createData('12:00', 0),\r\n  createData('13:00', 0),\r\n  createData('14:00', 0),\r\n  createData('15:00', 0),\r\n  createData('16:00', 0),\r\n  createData('17:00', 0),\r\n  createData('18:00', undefined),\r\n\r\n];\r\n\r\nconst getCount = (data, str) =>\r\n{\r\n  if (!data)\r\n    return 0;\r\n\r\n  var count = 0;\r\n  for (var i=0; i < data.length; i++)\r\n  {\r\n    if (data[i]._id.substr(0,2) === str)\r\n    {\r\n      count += data[i].count;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  const [data, setData] = React.useState(emptyData);\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n      var result = [];\r\n      try\r\n      {\r\n          setLoading(true)\r\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\r\n          setLoading(false)\r\n          const data = res.data.result;\r\n          result.push(createData('09:00', getCount(data,'09')));\r\n          result.push(createData('10:00', getCount(data,'10')));\r\n          result.push(createData('11:00', getCount(data,'11')));\r\n          result.push(createData('12:00', getCount(data,'12')));\r\n          result.push(createData('13:00', getCount(data,'13')));\r\n          result.push(createData('14:00', getCount(data,'14')));\r\n          result.push(createData('15:00', getCount(data,'15')));\r\n          result.push(createData('16:00', getCount(data,'16')));\r\n          result.push(createData('17:00', getCount(data,'17')));\r\n          result.push(createData('18:00', undefined));\r\n \r\n           setData(result);\r\n      }\r\n      catch(err){\r\n        setLoading(false)\r\n        console.error(err);\r\n      }\r\n\r\n    }\r\n  \r\n   fetchData();\r\n\r\n  }, [] );\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\r\nimport * as dateformat from \"dateformat\";\r\nimport BookService from \"./services/BookService\";\r\nimport BookingDialog from \"./BookingDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    margin: \"5px\",\r\n    padding: \"5px\",\r\n    maxWidth: \"90px\",\r\n    minHeight: \"30px\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    align: \"center\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n});\r\n\r\nconst isWeekend = (date) => {\r\n  return (\r\n    date.getDay() === 1 ||\r\n    date.getDay() === 2 ||\r\n    date.getDay() === 3 ||\r\n    date.getDay() === 6 ||\r\n    date.getDay() === 0\r\n  );\r\n};\r\n\r\nconst isThursday = (date) => {\r\n  return date.getDay() === 4; /// Thursday\r\n};\r\n\r\nconst isFriday = (date) => {\r\n  return date.getDay() === 5; /// Friday\r\n};\r\n\r\nconst getCurrentTimeSlot = (now) => {\r\n \r\n\r\n  var min = now.getMinutes();\r\n  var hour = now.getHours();\r\n\r\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\r\n    return null;\r\n  }\r\n\r\n  if (hour >= 18 || hour < 10) {\r\n    return null;\r\n  }\r\n\r\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\r\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\r\n\r\n  if (hour > 12) hour = hour - 12;\r\n\r\n  const slotHourStr = `0${hour}`;\r\n\r\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\r\n};\r\n\r\nconst getCurrentTimeSlotLabel = (timeStr) => {\r\n  if (!timeStr) {\r\n    return \"Closed\";\r\n  }\r\n\r\n  let endTimeStr = \"\";\r\n  switch (timeStr) {\r\n    case \"10:00 AM\":\r\n      endTimeStr = \"10:30 AM\";\r\n      break;\r\n    case \"10:30 AM\":\r\n      endTimeStr = \"11:00 AM\";\r\n      break;\r\n    case \"11:00 AM\":\r\n      endTimeStr = \"11:30 AM\";\r\n      break;\r\n    case \"11:30 AM\":\r\n      endTimeStr = \"12:00 PM\";\r\n      break;\r\n    case \"12:00 PM\":\r\n      endTimeStr = \"12:30 PM\";\r\n      break;\r\n    case \"12:30 PM\":\r\n      endTimeStr = \"01:00 PM\";\r\n      break;\r\n    case \"01:00 PM\":\r\n      endTimeStr = \"01:30 PM\";\r\n      break;\r\n    case \"01:30 PM\":\r\n      endTimeStr = \"02:00 PM\";\r\n      break;\r\n    case \"02:00 PM\":\r\n      endTimeStr = \"02:30 PM\";\r\n      break;\r\n    case \"02:30 PM\":\r\n      endTimeStr = \"03:00 PM\";\r\n      break;\r\n    case \"03:00 PM\":\r\n      endTimeStr = \"03:30 PM\";\r\n      break;\r\n    case \"03:30 PM\":\r\n      endTimeStr = \"04:00 PM\";\r\n      break;\r\n    case \"04:00 PM\":\r\n      endTimeStr = \"04:30 PM\";\r\n      break;\r\n    case \"04:30 PM\":\r\n      endTimeStr = \"05:00 PM\";\r\n      break;\r\n    case \"05:00 PM\":\r\n      endTimeStr = \"05:30 PM\";\r\n      break;\r\n    case \"05:30 PM\":\r\n      endTimeStr = \"06:00 PM\";\r\n      break;\r\n\r\n    default:\r\n      endTimeStr = \"\";\r\n      break;\r\n  }\r\n\r\n  return `${timeStr} - ${endTimeStr}`;\r\n};\r\n\r\nexport default function CurrentVisits() {\r\n  const classes = useStyles();\r\n\r\n  const [current, setCurrent] = React.useState(new Date());\r\n  const [bookings, setBookings] = React.useState([]);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentTimeSlot = getCurrentTimeSlot(current);\r\n    if (!currentTimeSlot) return;\r\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\r\n    setLoading(true);\r\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.status === \"OK\") {\r\n          setBookings([...res.data.bookings]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }, [current]);\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings && _bookings.length > 0) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={0}\r\n          >\r\n            {_bookings.map((booking) => (\r\n              <Grid item>\r\n                <div\r\n                  className={classes.bookingBox}\r\n                  onClick={(event) => bookingCliked(event, booking)}\r\n                >\r\n                  <span style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\r\n                  </span>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(current, \"dd mmmm, yyyy\")}\r\n      </Typography>\r\n\r\n      {getBookingsBox(bookings)}\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\r\n  }\r\n\r\n  const loadData = () => \r\n  {\r\n    setData({bookings: data.bookings, isFetching: true});\r\n    setLoading(true)\r\n    BookService.getRecentBookings().then( (res) =>{\r\n      setLoading(false)\r\n        setData({bookings: res.data, isFetching: false});\r\n\r\n    }).catch( (err) => {\r\n      setLoading(false)\r\n        console.log(err);\r\n        setData({bookings: data.bookings, isFetching: false});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n          loadData();\r\n        },\r\n        [refresh]);   \r\n\r\n\r\n   useEffect( () => {\r\n     loadData();\r\n     const interval = setInterval(() => {\r\n       setRefresh(refresh => !refresh);\r\n     }, 30000);\r\n\r\n     return () =>\r\n     {\r\n       clearInterval(interval)\r\n     }\r\n     \r\n   }, []) ;    \r\n\r\n   const formatTimeStamp = (timeStamp) =>\r\n   {\r\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n     if (todayStr === timeStampStr)\r\n     {\r\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n     }\r\n     else\r\n     {\r\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n     }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Fullname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>Tel</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\r\n              <TableCell>{row.fullname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{row.phone}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport CurrentVisits from './CurrentVisits';\r\n\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport BookingView from './BookingView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Current Visits */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <CurrentVisits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Bookings */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n  },\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#555\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\" ,\r\n    width: \"400px\"    \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n      \r\n    },\r\n    width: \"400px\"   \r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState('panel0');\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [fullname, setFullname] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [service, setService] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const fullnameChanged = (event) =>\r\n    {\r\n      setFullname(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const serviceChanged = (event) =>\r\n    {\r\n      setService(event.target.value);\r\n    }\r\n\r\n    const notesChanged = (event) =>\r\n    {\r\n      setNotes(event.target.value);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setFullname(person.fullname);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime);\r\n         setEmail(person.email);\r\n         setTel(person.phone);\r\n         setService(person.service)\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes);\r\n         }\r\n        \r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.fullname = fullname;\r\n          booking.notes = notes;\r\n          booking.service = service;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const changeBackToBookingMade = (event, id) =>\r\n   {\r\n     setSaving(true);\r\n     bookingService.changeBackToBookingMade(id).then(res => {\r\n       setSaving(false);\r\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n     }).catch(err => {\r\n       console.log(err);\r\n       setSaving(false);\r\n     })\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                      {person.deleted && (\r\n                          <Tooltip  title=\"This record has been deleted.\">\r\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.fullname}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n\r\n\r\n                        <ul className={classes.ul}>\r\n\r\n                        {/* Restore Functionality ******************************************* */}  \r\n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\r\n                                Are you sure you want to restore this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\r\n                                 <Button\r\n\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\r\n                                    className={classes.RestoreButton}\r\n                                 >\r\n                                   Restore This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Restore this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n                           {/*  ******************************************************************* */}\r\n\r\n                              {/* Edit Functionality ******************************************* */}\r\n\r\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                            \r\n                            {/* ****************************************************************************************** */}\r\n\r\n\r\n                            {/* Delete Functionality ******************************************* */}\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\r\n                                Are you sure you want to delete this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\r\n                                    className={classes.DeleteButton}\r\n                                 >\r\n                                   Delete This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Delete this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                                 \r\n                            {/* ****************************************************************************************** */}\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                   {FormatDateFromString(person.bookingDate) }\r\n                                  </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={fullname}\r\n                                                      onChange = {fullnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SERVICE</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={service}\r\n                                                      onChange = {serviceChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>NOTES</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={notes}\r\n                                                      onChange = {notesChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> \r\n                                {getStatusLabel(person.status)} \r\n                            </li>\r\n      \r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\nimport { width } from '@material-ui/system';\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\",\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n//   useEffect( () =>\r\n//   {\r\n//      findRecords();\r\n//   }, [state.findRecords]);\r\n\r\n useEffect ( () => {\r\n    setState(state => ({...state, foundRecords : []}));\r\n }, [])\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 10;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 )\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\",\r\n        cursor: \"pointer\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 1;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '10:00 AM',\r\n    '10:30 AM', \r\n    '11:00 AM', \r\n    '11:30 AM', \r\n    '12:00 PM',\r\n    '12:30 PM',\r\n    '01:00 PM',\r\n    '01:30 PM',\r\n    '02:00 PM',\r\n    '02:30 PM',\r\n    '03:00 PM',\r\n    '03:30 PM',\r\n    '04:00 PM',\r\n    '04:30 PM',\r\n    '05:00 PM',\r\n    '05:30 PM',\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { validate } from \"email-validator\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  CalendarIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  DateTimeLabel: {\r\n    fontWeight: \"500\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  PriceLabelPaid:{\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"600\"\r\n  },\r\n\r\n  PriceLabelNotPaid:{\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: \"600\"\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst Packages = [\r\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\r\n  { packageName: `Coil Fitting/Coil Removal` },\r\n  { packageName: `Well Woman Check` },\r\n  { packageName: `Sexual Health Screening` },\r\n  { packageName: `Pre-pregnancy/Fertility check` },\r\n  { packageName: `Gynaecological Ultrasound` },\r\n  { packageName: `HPV Vaccination` },\r\n  { packageName: `Cervical / Pap Smear` },\r\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\r\n];\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function NewBookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [fullnameError, setFullnameError] = React.useState(false);\r\n\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n\r\n  \r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFullnameError(false);\r\n  };\r\n\r\n  const phoneChanged = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    setFullname(\"\");\r\n    setFullnameError(false);\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    setNotes(\"\");\r\n    \r\n    props.handleClose();\r\n    setSaving(false);\r\n  };\r\n\r\n  const validateBooking = () => {\r\n    let error = false;\r\n    if (!fullname || fullname.trim().length < 1) {\r\n      setFullnameError(true);\r\n      error = true;\r\n    }\r\n    return !error;\r\n  };\r\n\r\n  const saveClicked = async () => {\r\n    if (!validateBooking()) {\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n    try {\r\n      await BookService.addNewBooking({\r\n        bookingDate: props.date,\r\n        bookingTime: props.time,\r\n        fullname: fullname,\r\n        phone: phone,\r\n        email: email,\r\n        notes: notes,\r\n      });\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.date && props.time && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    ADD New Booking{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GP_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\r\n                    GP\r\n              </div>\r\n\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"400px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"stretch\"\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                    >\r\n                      <Grid item>\r\n                        <DateRangeIcon className={classes.CalendarIcon} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <span className={classes.DateTimeLabel}>\r\n                          {props.date} , {props.time}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      autoFocus\r\n                      error={fullnameError}\r\n                      label=\"Full Name\"\r\n                      value={fullname}\r\n                      required\r\n                      onChange={fullnameChanged}\r\n                      name=\"fullname\"\r\n                      id=\"fullname-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Telephone\"\r\n                      value={phone}\r\n                      onChange={phoneChanged}\r\n                      name=\"phone\"\r\n                      id=\"phone-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email\"\r\n                      value={email}\r\n                      onChange={emailChanged}\r\n                      name=\"email\"\r\n                      id=\"email-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Notes\"\r\n                      value={notes}\r\n                      onChange={notesChanged}\r\n                      name=\"notes\"\r\n                      id=\"notes-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                </Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={saveClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport dateformat from \"dateformat\";\r\nimport BookService from \"../services/BookService\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport GlobalState from \"../../GlobalState\";\r\nimport BookingDialog from \"../BookingDialog\";\r\nimport NewBookingDialog from \"../NewBookingDialog\";\r\nimport clsx from \"clsx\";\r\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    width: \"100%\",\r\n    height: \"50px\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyItems: \"flex-start\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ContainerPast: {\r\n    width: \"100%\",\r\n    paddingTop: \"50px\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n\r\n  DayLabel: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#555\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  DayLabelDisabled: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#ddd\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  LoadingProgress: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: \"40%\",\r\n  },\r\n\r\n  BookingCountGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"5%\",\r\n    left: \"8%\",\r\n    width: \"85%\",\r\n    height: \"8%\",\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n\r\n  bookingBoxNew: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #ddd\",\r\n    color: \"#ccc\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#fff\",\r\n\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    transition: \"all 0.5s ease\",\r\n    borderRadius: \"4px\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.secondary.main,\r\n      borderColor: theme.palette.secondary.main,\r\n    },\r\n  },\r\n\r\n  bookingBoxSampleTaken: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#eee\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#0059b3\",\r\n      color: \"#fafafa\",\r\n    },\r\n  },\r\n\r\n  bookingBoxPositive: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#d40b0b\",\r\n    color: \"#fff2f2\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#bf0000\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  bookingBoxReportSent: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#009900\",\r\n    color: \"#eee\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#006e00\",\r\n      color: \"#fafafa\",\r\n    },\r\n  },\r\n\r\n\r\n\r\n}));\r\n\r\nconst DayViewCell = ({ key, date, time }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [bookings, setBookings] = React.useState(null);\r\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(true);\r\n\r\n  const [isPast, setIsPast] = React.useState(false);\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\r\n    setIsPast(date < todayStr);\r\n  }, [date]);\r\n\r\n  useEffect(() => {\r\n    if (bookings) {\r\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\r\n        const search = state.dayViewCalFilter.trim().toUpperCase();\r\n        setFilteredBookings(\r\n          bookings.filter(\r\n            (booking) =>\r\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\r\n          )\r\n        );\r\n      } else {\r\n        setFilteredBookings([...bookings]);\r\n      }\r\n    }\r\n  }, [state.dayViewCalFilter, bookings]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      // if (isPast)\r\n      // {\r\n      //     setBookings([]);\r\n      //     return;\r\n      // }\r\n\r\n      setBookings(null);\r\n\r\n      var res = state.AdminCalendarCache?.find(\r\n        (record) =>\r\n          record.method === \"getBookingsByDateStrandTime\" &&\r\n          record.query === `${date}${time}`\r\n      )?.res;\r\n      if (!res || openDialog || openDialogAddNew) {\r\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n        setState((state) => ({\r\n          ...state,\r\n          AdminCalendarCache: [\r\n            ...state.AdminCalendarCache,\r\n            {\r\n              method: \"getBookingsByDateStrandTime\",\r\n              query: `${date}${time}`,\r\n              res: res,\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n\r\n      if (res.data.status === \"OK\") {\r\n        setBookings(res.data.bookings);\r\n      }\r\n    };\r\n\r\n    if (openDialog || openDialogAddNew) {\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsByDateStrandTime\" &&\r\n              record.query === `${date}${time}`\r\n            )\r\n        ),\r\n      }));\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsCountByDateStrandTime\" &&\r\n              record.query === `${date}${time}`\r\n            )\r\n        ),\r\n      }));\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsCountByDateStr\" &&\r\n              record.query === date\r\n            )\r\n        ),\r\n      }));\r\n    }\r\n\r\n    fetchData();\r\n  }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const getBookingClass = (status) => {\r\n    switch (status) {\r\n      case \"patient_attended\":\r\n        return classes.bookingBoxSampleTaken;\r\n      default:\r\n        return classes.bookingBox;\r\n    }\r\n  };\r\n\r\n  const addNewBookingClicked = () => {\r\n    setOpenDialogAddNew(true);\r\n  };\r\n\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings === null) {\r\n      return (\r\n        <div className={classes.LoadingProgress}>\r\n          <CircularProgress disableShrink />\r\n        </div>\r\n      );\r\n    } else if (_bookings.length >= 0) {\r\n      return (\r\n        <React.Fragment>\r\n          {_bookings.map((booking) => (\r\n            <div\r\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\r\n              className={\r\n                getBookingClass(booking.status)\r\n                }\r\n              onClick={(event) => bookingCliked(event, booking)}\r\n            >\r\n              {`${booking.fullname}`.substring(0, 15)}\r\n            </div>\r\n          ))}\r\n\r\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\r\n            {\" \"}\r\n            + Add New Booking\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCloseDialogAddNew = () => {\r\n    setOpenDialogAddNew(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.Container}>\r\n        {getBookingsBox(filteredBookings)}\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n\r\n      <NewBookingDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogAddNew}\r\n        handleClose={handleCloseDialogAddNew}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nDayViewCell.propTypes = {\r\n  key: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DayViewCell;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\n\r\n\r\n\r\nconst rows = [\r\n    '10:00 AM',\r\n    '10:30 AM', \r\n    '11:00 AM', \r\n    '11:30 AM', \r\n    '12:00 PM',\r\n    '12:30 PM',\r\n    '01:00 PM',\r\n    '01:30 PM',\r\n    '02:00 PM',\r\n    '02:30 PM',\r\n    '03:00 PM',\r\n    '03:30 PM',\r\n    '04:00 PM',\r\n    '04:30 PM',\r\n    '05:00 PM',\r\n    '05:30 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken,\r\n       'Content-Type': 'application/json',\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n\r\n   static addNewBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/std/book/addnewbooking`, payload);\r\n   }\r\n   \r\n   static sendRegFormEmail = (bookingId) =>\r\n   {\r\n      return API.post(`/api/std/book/sendregformemail?id=${bookingId}`);\r\n   }\r\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/std/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/std/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getShouldRefundsCount = () =>\r\n   {\r\n      return API.get(`/api/std/book/getshouldrefundscount?`);\r\n   }\r\n\r\n   \r\n\r\n   static refundBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/std/payment/refundpayment`, {bookingId: bookingId});\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/std/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/std/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/std/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/std/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/std/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/std/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/std/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/std/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/std/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static changeToPatientAttended = (id) =>\r\n   {\r\n      return API.post(`/api/std/book/changetopatientattended?id=${id}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/std/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/std/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/std/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/std/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/std/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/std/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/std/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/std/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/std/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/std/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/std/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/std/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/std/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n\r\n    static downloadSTDRegForm = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadstdregform?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n}","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function PayDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [price, setPrice] = useState(\"\");\r\n  const [priceError, setPriceError] = useState(false);\r\n\r\n  useEffect( () => {\r\n    if (props.price)\r\n    {\r\n      setPrice(`${props.price}`)\r\n    }else\r\n    {\r\n      setPrice('')\r\n    }\r\n  }, [props.price, props.open])\r\n\r\n  const priceChanged = (event) =>\r\n  {\r\n    setPrice(event.target.value)\r\n    setPriceError(false)\r\n  }\r\n\r\n  const paymentMethodChanged = (event) => {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    props.handleClose();\r\n    setPaymentMethod(\"credit card\");\r\n    setPrice('')\r\n    setCorporate(corporates[0]);\r\n    setSaving(false);\r\n  };\r\n\r\n  const corporateChanged = (event) => {\r\n    setCorporate(event.target.value);\r\n  };\r\n\r\n  const payClicked = async () => {\r\n\r\n\r\n    if (!price || price.trim().length === 0 || price === '0')\r\n    {\r\n      setPriceError(true)\r\n      return\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n  \r\n\r\n    try {\r\n      await BookService.payBooking(\r\n        props.booking._id,\r\n        price,\r\n        paymentMethod,\r\n        paymentMethod === \"corporate\" ? corporate : \"\"\r\n      );\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <CreditCardIcon\r\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    PAY the CHARGE{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"300px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"space-between\"\r\n                  spacing={2}\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid item>\r\n                  <TextField\r\n                                autoFocus\r\n                                error={priceError}\r\n                                label=\"TOTAL Charges\"\r\n                                value={price}\r\n                                fullWidth\r\n                                required\r\n                                onChange={priceChanged}\r\n                                name=\"product-price\"\r\n                                id=\"product-price-id\"\r\n                                InputProps={{\r\n                                  inputComponent: NumberFormatCustom,\r\n                                  startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                      £\r\n                                    </InputAdornment>\r\n                                  ),\r\n                                }}\r\n                              />\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <div style={{ fontSize: \"17px\" }}>\r\n                      {\" \"}\r\n                      How do you want to pay?{\" \"}\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        aria-label=\"paymentMethod\"\r\n                        name=\"paymentMethod\"\r\n                        value={paymentMethod}\r\n                        onChange={paymentMethodChanged}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"credit card\"\r\n                          control={<Radio />}\r\n                          label=\"Credit Card\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"cash\"\r\n                          control={<Radio />}\r\n                          label=\"Cash\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"corporate\"\r\n                          control={<Radio />}\r\n                          label=\"Corporate\"\r\n                        />\r\n                      </RadioGroup>\r\n\r\n                      {paymentMethod === \"corporate\" && (\r\n                        <FormControl\r\n                          style={{ marginTop: \"10px\" }}\r\n                          className={classes.formControl}\r\n                        >\r\n                          <Select\r\n                            labelId=\"select-corporate\"\r\n                            id=\"select-corporate-id\"\r\n                            value={corporate}\r\n                            onChange={corporateChanged}\r\n                          >\r\n                            {corporates.map((element) => (\r\n                              <MenuItem\r\n                                value={element}\r\n                              >{`${element}`}</MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      )}\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item></Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={payClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Pay\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GlobalState from \"../GlobalState\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Divider,\r\n  FormControlLabel,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport PDFService from \"./services/PDFService\";\r\n\r\nimport { calculatePrice } from \"./PriceCalculator\";\r\n\r\nimport bookingService from \"./services/BookService\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BookService from \"./services/BookService\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  FormatDateFromString,\r\n  RevertFormatDateFromString,\r\n} from \"./DateFormatter\";\r\nimport PayDialog from \"./PayDialog\";\r\n\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\n\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\nimport InvoiceService from \"../services/InvoiceService\";\r\nimport InvoiceDialog from \"../InvoiceDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor: \"#373737\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor: \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\",\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#333\",\r\n    padding: \"1px\",\r\n    borderRadius: \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n    listStyle: \"none\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  li: {\r\n    marginBottom: \"15px\",\r\n  },\r\n\r\n  icon: {\r\n    marginRight: \"8px\",\r\n  },\r\n\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  lineThrough: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails: {\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\",\r\n  },\r\n\r\n  infoData: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  Accordion: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#222\",\r\n  },\r\n\r\n  AccordionDeleted: {\r\n    backgroundColor: \"#aaa\",\r\n    color: \"#555\",\r\n  },\r\n\r\n  DownloadForm: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n\r\n  infoDataCharges: {\r\n    fontSize: \"18px\",\r\n    color: \"green\",\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  infoDataChargesHigher: {\r\n    fontSize: \"18px\",\r\n    color: \"red\",\r\n    fontWeight: \"600\",\r\n  },\r\n  BookedLabel: {\r\n    color: \"#606060\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    color: \"#0066aa\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\",\r\n    width: \"150px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\",\r\n  },\r\n\r\n  PositiveLabel: {\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\",\r\n  },\r\n\r\n  EditButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  ResendEmailsButton: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  PayButton: {\r\n    marginLeft: \"70px\",\r\n    width: \"300px\",\r\n  },\r\n\r\n  PayLabel: {\r\n    marginLeft: \"20px\",\r\n\r\n    color: \"#2f942e\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  RestoreButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#eee\",\r\n    color: \"#333\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  DeleteButton: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\",\r\n    },\r\n\r\n    padding: \"10px\",\r\n  },\r\n\r\n  SaveButton: {\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor: \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  CancelButton: {\r\n    marginBottom: \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  checkIconSmall: {\r\n    color: \"green\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  centeredLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  invoiceNumber: {\r\n    display: \"inline-block\",\r\n    fontWeight: \"500\",\r\n    width: \"72px\",\r\n    fontSize: \"1rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  printInvoiceButton: {\r\n    marginLeft: \"70px\",\r\n    fontSize: \"0.8rem\",\r\n    // width: \"300px\",\r\n  },\r\n\r\n  editInvoiceButton: {\r\n    marginLeft: \"10px\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#alert-dialog-slide-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const [emailSent, setEmailSent] = React.useState(false);\r\n\r\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\r\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\r\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\r\n  const [deleteMode, setDeleteMode] = React.useState({\r\n    delete: false,\r\n    person: null,\r\n  });\r\n  const [restoreMode, setRestoreMode] = React.useState({\r\n    restore: false,\r\n    person: null,\r\n  });\r\n\r\n  const [saving, setSaving] = React.useState(false);\r\n  const [deleting, setDeleting] = React.useState(false);\r\n  const [restoring, setRestoring] = React.useState(false);\r\n\r\n  const [validationError, setValidationError] = React.useState({});\r\n\r\n  const [bookingDate, setBookingDate] = React.useState(\"\");\r\n  const [bookingTime, setBookingTime] = React.useState(\"\");\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [tel, setTel] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [service, setService] = React.useState(\"\");\r\n\r\n  const [refreshData, setRefreshData] = React.useState(false);\r\n\r\n  const [booking, setBooking] = React.useState(null);\r\n\r\n  const [recordChanged, setRecordChanged] = React.useState(false);\r\n\r\n  const [fieldChanged, setFieldChanged] = React.useState(false);\r\n\r\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\r\n\r\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\r\n\r\n  const handleCloseTimeStampDialog = () => {\r\n    setOpenTimeStampDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseUndoPayDialog = () => {\r\n    setOpenUndoPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseResendDialog = () => {\r\n    setOpenResendDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleClosePayDialog = () => {\r\n    setOpenPayDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  const handleCloseRefundDialog = () => {\r\n    setOpenRefundDialog(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (booking) {\r\n      const isChanged =\r\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\r\n        bookingTime !== booking.bookingTime ||\r\n        fullname !== booking.fullname ||\r\n        email !== booking.email ||\r\n        tel !== booking.phone ||\r\n        notes !== booking.notes ||\r\n        service !== booking.packageName;\r\n\r\n      setRecordChanged(isChanged);\r\n    }\r\n  }, [fieldChanged]);\r\n\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      setTimeout(() => {\r\n        setEditMode({ edit: false, person: null });\r\n        setRecordChanged(false);\r\n      }, 500);\r\n    }\r\n  }, [props.open]);\r\n\r\n  const bookingDateChanged = (event) => {\r\n    setBookingDate(event.target.value);\r\n    setValidationError({ ...validationError, bookingDateError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const bookingTimeChanged = (event) => {\r\n    setBookingTime(event.target.value);\r\n    setValidationError({ ...validationError, bookingTimeError: false });\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const telChanged = (event) => {\r\n    setTel(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const serviceChanged = (event) => {\r\n    setService(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n    setFieldChanged(!fieldChanged);\r\n  };\r\n\r\n  const getStatusLabel = (status) => {\r\n    if (status === \"booked\") {\r\n      return <div className={classes.BookedLabel}> Booking Made </div>;\r\n    } else if (status === \"patient_attended\") {\r\n      return (\r\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\r\n      );\r\n    } else {\r\n      return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const handleEditModeChanged = (edit, person) => {\r\n    if (edit) {\r\n      setFullname(person.fullname);\r\n      setBookingDate(FormatDateFromString(person.bookingDate));\r\n      setBookingTime(person.bookingTime.toUpperCase());\r\n      setEmail(person.email);\r\n      setTel(person.phone);\r\n      setService(person.packageName);\r\n      if (person.notes) {\r\n        setNotes(person.notes);\r\n      }\r\n\r\n      setEditMode({ edit: edit, person: person });\r\n    } else if (!edit && !person) {\r\n      setEditMode({ edit: edit, person: person });\r\n      setRecordChanged(false);\r\n    } else if (!edit && person) {\r\n      const booking = {};\r\n      const bookingId = person._id;\r\n      booking.email = email;\r\n      booking.phone = tel;\r\n      booking.fullname = fullname;\r\n      booking.notes = notes;\r\n      booking.packageName = service;\r\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n      booking.bookingTime = bookingTime;\r\n      booking.bookingRef = person.bookingRef;\r\n\r\n      if (validateBooking(booking)) {\r\n        updateBooking({ bookingId: bookingId, person: booking });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateDate = (str) => {\r\n    var error = false;\r\n    if (!str || str.length !== 10) {\r\n      error = true;\r\n    }\r\n\r\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n      if (!result) {\r\n        error = true;\r\n      }\r\n\r\n      const year = parseInt(str.substr(0, 4));\r\n      const month = parseInt(str.substr(5, 2));\r\n      const day = parseInt(str.substr(8, 2));\r\n\r\n      if (year < 1900) {\r\n        error = true;\r\n      }\r\n\r\n      if (month < 1 || month > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (day > 31) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateTime = (str) => {\r\n    var error = false;\r\n\r\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n    if (!result) {\r\n      error = true;\r\n    }\r\n\r\n    try {\r\n      const hour = parseInt(str.substr(0, 2));\r\n      const minute = parseInt(str.substr(3, 2));\r\n\r\n      if (hour < 0 || hour > 12) {\r\n        error = true;\r\n      }\r\n\r\n      if (minute < 0 || minute > 59) {\r\n        error = true;\r\n      }\r\n    } catch (err) {\r\n      error = true;\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const validateBooking = (booking) => {\r\n    var error = false;\r\n\r\n    if (!validateDate(booking.bookingDate)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingDateError: true });\r\n    }\r\n\r\n    if (!validateTime(booking.bookingTime)) {\r\n      error = true;\r\n      setValidationError({ ...validationError, bookingTimeError: true });\r\n    }\r\n    return !error;\r\n  };\r\n\r\n  const updateBooking = (payload) => {\r\n    setSaving(true);\r\n    bookingService\r\n      .updateBooking(payload)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setSaving(false);\r\n        setEditMode({ edit: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteBooking = (id) => {\r\n    setDeleting(true);\r\n    bookingService\r\n      .deleteBooking(id)\r\n      .then((res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setDeleting(false);\r\n        setDeleteMode({ delete: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const restoreBooking = (id) => {\r\n    setRestoring(true);\r\n    bookingService\r\n      .unDeleteBooking(id)\r\n      .then((res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({ restore: false, person: null });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteModeChanged = (del, person) => {\r\n    if (del) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && !person) {\r\n      setDeleteMode({ delete: del, person: person });\r\n    } else if (!del && person) {\r\n      deleteBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n    if (restore) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && !person) {\r\n      setRestoreMode({ restore: restore, person: person });\r\n    } else if (!restore && person) {\r\n      restoreBooking(person._id);\r\n    }\r\n  };\r\n\r\n  const changeBackToBookingMade = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeBackToBookingMade(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const changeToPatientAttended = (event, id) => {\r\n    setSaving(true);\r\n    BookService.changeToPatientAttended(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        setRefreshData(!refreshData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const Pay = (event, id) => {\r\n    setSelectedBooking(booking);\r\n    setOpenPayDialog(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      BookService.getBookingById(props.booking._id)\r\n        .then((res) => {\r\n          setBooking(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n    }\r\n  }, [refreshData, state.bookingPayChanged]);\r\n\r\n  useEffect(() => {\r\n    if (props.booking) {\r\n      setBooking(props.booking);\r\n    }\r\n  }, [props.booking]);\r\n\r\n  const undoPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.unPayBooking(booking._id);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenUndoPayDialog(false);\r\n    }\r\n  };\r\n\r\n  const refundPaymentClicked = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await BookService.refundBooking(booking._id);\r\n      setSaving(false);\r\n      updateShouldRefundsCount();\r\n      setOpenRefundDialog(false);\r\n      setRefreshData(!refreshData);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n      setOpenRefundDialog(false);\r\n    }\r\n  };\r\n\r\n  const updateShouldRefundsCount = async () => {\r\n    try {\r\n      const res = await BookService.getShouldRefundsCount();\r\n      if (res && res.data && res.data.status === \"OK\") {\r\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\r\n      }\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  };\r\n\r\n  const downloadRegForm = (id) => {\r\n    PDFService.downloadSTDRegForm(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const sendRegForm = (id) => {\r\n    setSaving(true);\r\n    setEmailSent(false);\r\n    BookService.sendRegFormEmail(id)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSent(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  const onClose = () => {\r\n    setEmailSent(false);\r\n    setEmailSentInvoice(false);\r\n    setInvoice(null);\r\n\r\n    props.onClose();\r\n  };\r\n\r\n  ///*** Invoice  ******************/\r\n\r\n  const [invoice, setInvoice] = React.useState(null);\r\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\r\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\r\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\r\n\r\n  const fetchInvoice = async () => {\r\n    try {\r\n      setInvoiceLoaded(false);\r\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\r\n      setInvoice(res.data.invoice);\r\n      setInvoiceLoaded(true);\r\n    } catch (err) {\r\n      setInvoiceLoaded(true);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.booking) {\r\n      fetchInvoice();\r\n    }\r\n  }, [props.booking, props.open]);\r\n\r\n  const handleCloseInvoiceDialog = (refresh) => {\r\n    setOpenInvoiceDialog(false);\r\n    setSelectedBooking(null);\r\n    fetchInvoice();\r\n  };\r\n\r\n  const OpenInvoiceDialog = () => {\r\n    setSelectedBooking(booking);\r\n    setInvoice(invoice);\r\n    setOpenInvoiceDialog(true);\r\n  };\r\n\r\n  const downloadInvoice = (id) => {\r\n    InvoiceService.downloadInvoice(id)\r\n      .then((res) => {\r\n        const file = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL, \"_blank\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const sendInvoiceEmail = (id, _email) => {\r\n    setSaving(true);\r\n    setEmailSentInvoice(false);\r\n    InvoiceService.emailInvoice(id, _email)\r\n      .then((res) => {\r\n        setSaving(false);\r\n        if (res.data.status === \"OK\") {\r\n          setEmailSentInvoice(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaving(false);\r\n      });\r\n  };\r\n\r\n  //***************************** */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {booking && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={onClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle\r\n              id=\"alert-dialog-slide-title\"\r\n              style={\r\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\r\n              }\r\n            >\r\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\r\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(\r\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/std/${booking._id}`\r\n                      );\r\n                      setCopied(true);\r\n                      setTimeout(() => {\r\n                        setCopied(false);\r\n                      }, 1500);\r\n                    }}\r\n                    aria-label=\"delete\"\r\n                    className={classes.margin}\r\n                    size=\"small\"\r\n                  >\r\n                    <FileCopyOutlinedIcon\r\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\r\n                      fontSize=\"14px\"\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <span\r\n                  hidden={!copied}\r\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\r\n                >\r\n                  {\" \"}\r\n                  Copied{\" \"}\r\n                </span>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"25x\",\r\n                  right: \"60px\",\r\n                  backgroundColor: CalendarColors.STD_COLOR,\r\n                  color: \"#fff\",\r\n                  padding: \"0px 5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                STD\r\n              </div>\r\n\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={\r\n                      booking.deleted\r\n                        ? {\r\n                            paddingBottom: \"5px\",\r\n                            textDecoration: \"line-through\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {`${booking.fullname}`}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {booking.deleted && (\r\n                  <Grid item>\r\n                    <Tooltip title=\"This record has been deleted.\">\r\n                      <DeleteIcon\r\n                        style={\r\n                          booking.tr\r\n                            ? {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#fff\",\r\n                                fontSize: 25,\r\n                              }\r\n                            : {\r\n                                padding: 0,\r\n                                margin: 0,\r\n                                color: \"#333\",\r\n                                fontSize: 25,\r\n                              }\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  // height: \"550px\",\r\n                  paddingTop: \"0px\",\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={12} key={`panel0`}>\r\n                  <div className={classes.infoDetails}>\r\n                    <ul className={classes.ul}>\r\n                      {/* Restore Functionality ******************************************* */}\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"500\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to restore this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !booking.deleted ||\r\n                          (restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.RestoreButton}\r\n                        >\r\n                          Restore This Record\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Restore this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            restoreMode.restore &&\r\n                            restoreMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={restoring}\r\n                          onClick={() => {\r\n                            handleRestoreModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/*  ******************************************************************* */}\r\n\r\n                      {/* Edit Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted ||\r\n                          deleteMode.delete ||\r\n                          (editMode.edit && editMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleEditModeChanged(true, booking);\r\n                          }}\r\n                          className={classes.EditButton}\r\n                        >\r\n                          Edit Booking Info\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={saving || !recordChanged}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={saving}\r\n                          onClick={() => {\r\n                            handleEditModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      {/* Delete Functionality ******************************************* */}\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            paddingBottom: \"5px\",\r\n                            paddingLeft: \"5px\",\r\n                            fontSize: \"16px\",\r\n                          }}\r\n                        >\r\n                          Are you sure you want to delete this record?\r\n                        </div>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          props.deleteButtonDisabled ||\r\n                          booking.deleted ||\r\n                          editMode.edit ||\r\n                          (deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id)\r\n                        }\r\n                      >\r\n                        {booking.OTCCharges > 0 && (\r\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\r\n                            <div>\r\n                              <Button\r\n                                disabled={booking.OTCCharges > 0}\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  handleDeleteModeChanged(true, booking);\r\n                                }}\r\n                                className={classes.DeleteButton}\r\n                              >\r\n                                Delete This Record\r\n                              </Button>\r\n                            </div>\r\n                          </Tooltip>\r\n                        )}\r\n                        {booking.OTCCharges === 0 && (\r\n                          <Button\r\n                            disabled={booking.OTCCharges > 0}\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleDeleteModeChanged(true, booking);\r\n                            }}\r\n                            className={classes.DeleteButton}\r\n                          >\r\n                            Delete This Record\r\n                          </Button>\r\n                        )}\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, booking);\r\n                          }}\r\n                          className={classes.SaveButton}\r\n                        >\r\n                          YES, Delete this!\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          !(\r\n                            deleteMode.delete &&\r\n                            deleteMode.person._id === booking._id\r\n                          )\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          disabled={deleting}\r\n                          onClick={() => {\r\n                            handleDeleteModeChanged(false, null);\r\n                          }}\r\n                          className={classes.CancelButton}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </li>\r\n\r\n                      {/* ****************************************************************************************** */}\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED DATE\r\n                            </span>\r\n\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {FormatDateFromString(booking.bookingDate)}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingDateError}\r\n                                className={classes.TextBox}\r\n                                value={bookingDate}\r\n                                onChange={bookingDateChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>\r\n                              BOOKED TIME\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.bookingTime.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                error={validationError.bookingTimeError}\r\n                                className={classes.TextBox}\r\n                                value={bookingTime}\r\n                                onChange={bookingTimeChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.fullname}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={fullname}\r\n                                onChange={fullnameChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>EMAIL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.email}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={email}\r\n                                onChange={emailChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n                      <li className={classes.li}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>TEL</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.phone?.toUpperCase()}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={tel}\r\n                                onChange={telChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <span className={classes.infoTitle}>NOTES</span>\r\n                            <span\r\n                              hidden={\r\n                                editMode.edit &&\r\n                                editMode.person._id === booking._id\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              {booking.notes}\r\n                            </span>\r\n                            <span\r\n                              hidden={\r\n                                !(\r\n                                  editMode.edit &&\r\n                                  editMode.person._id === booking._id\r\n                                )\r\n                              }\r\n                              className={classes.infoData}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                className={classes.TextBox}\r\n                                value={notes}\r\n                                onChange={notesChanged}\r\n                                inputProps={{\r\n                                  style: {\r\n                                    padding: 0,\r\n                                  },\r\n                                }}\r\n                              ></TextField>\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\r\n                        <span className={classes.infoTitle}>Package</span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.packageName}\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            !(\r\n                              editMode.edit &&\r\n                              editMode.person._id === booking._id\r\n                            )\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          <TextField\r\n                            fullWidth\r\n                            className={classes.TextBox}\r\n                            value={service}\r\n                            onChange={serviceChanged}\r\n                            inputProps={{\r\n                              style: {\r\n                                padding: 0,\r\n                              },\r\n                            }}\r\n                          ></TextField>\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\r\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\r\n                        {getStatusLabel(booking.status)}\r\n                        {booking.status === \"patient_attended\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeBackToBookingMade(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change Back To Booking Made\r\n                            </Button>\r\n                          )}\r\n                        {booking.status === \"booked\" &&\r\n                          !(\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          ) &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"default\"\r\n                              disabled={saving}\r\n                              style={{ width: \"300px\" }}\r\n                              onClick={(event) =>\r\n                                changeToPatientAttended(event, booking._id)\r\n                              }\r\n                            >\r\n                              Change To Patient Attended\r\n                            </Button>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoTitle}\r\n                        >\r\n                          Estimated Price\r\n                        </span>\r\n                        <span\r\n                          hidden={\r\n                            editMode.edit && editMode.person._id === booking._id\r\n                          }\r\n                          className={classes.infoData}\r\n                        >\r\n                          {booking.estimatedPrice}\r\n                        </span>\r\n                      </li>\r\n\r\n                      <li hidden={booking.deleted || editMode.edit}>\r\n                        <Button\r\n                          disabled={!booking.formData}\r\n                          startIcon={<PrintIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            downloadRegForm(booking._id);\r\n                          }}\r\n                          className={classes.DownloadForm}\r\n                        >\r\n                          Download Registration Form\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <li\r\n                        hidden={\r\n                          booking.deleted || editMode.edit || booking.formData\r\n                        }\r\n                      >\r\n                        <Button\r\n                          disabled={!booking.email || booking.email.length < 3}\r\n                          startIcon={<SendIcon />}\r\n                          type=\"button\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            sendRegForm(booking._id);\r\n                          }}\r\n                          className={classes.DownloadForm}\r\n                          style={{ position: \"relative\" }}\r\n                        >\r\n                          Send Registration Form Email\r\n                          {emailSent && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                right: \"10px\",\r\n                                top: \"5px\",\r\n                                color: \"#05ad19\",\r\n                              }}\r\n                            >\r\n                              Email Sent\r\n                            </div>\r\n                          )}\r\n                        </Button>\r\n                      </li>\r\n\r\n                      <Divider />\r\n\r\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\r\n                        <span style={{ paddingLeft: \"0px\" }}>\r\n                          {!invoiceLoaded && (\r\n                            <span className={classes.invoiceNumber}> ... </span>\r\n                          )}\r\n                          {invoiceLoaded && invoice && (\r\n                            <span className={classes.invoiceNumber}>\r\n                              {\" \"}\r\n                              {invoice.invoiceNumber}{\" \"}\r\n                            </span>\r\n                          )}\r\n                          {invoiceLoaded && !invoice && (\r\n                            <span\r\n                              className={classes.invoiceNumber}\r\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\r\n                            >\r\n                              {\" \"}\r\n                              N/A{\" \"}\r\n                            </span>\r\n                          )}\r\n                        </span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.deleted && (\r\n                            <React.Fragment>\r\n                              {invoiceLoaded && !invoice && (\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  className={classes.PayButton}\r\n                                  onClick={() => OpenInvoiceDialog()}\r\n                                >\r\n                                  Issue Invoice\r\n                                </Button>\r\n                              )}\r\n\r\n                              {invoiceLoaded && invoice && (\r\n                                <React.Fragment>\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<PrintIcon />}\r\n                                    color=\"primary\"\r\n                                    className={classes.printInvoiceButton}\r\n                                    onClick={() => downloadInvoice(invoice._id)}\r\n                                  >\r\n                                    Download Invoice\r\n                                  </Button>\r\n\r\n                                  <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.editInvoiceButton}\r\n                                    onClick={() => OpenInvoiceDialog()}\r\n                                  >\r\n                                    Edit Invoice\r\n                                  </Button>\r\n\r\n                                  <Button\r\n                                    disabled={\r\n                                      !booking.email || booking.email.length < 3\r\n                                    }\r\n                                    startIcon={<SendIcon />}\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      sendInvoiceEmail(\r\n                                        invoice._id,\r\n                                        booking.email\r\n                                      );\r\n                                    }}\r\n                                    style={{\r\n                                      position: \"relative\",\r\n                                      marginLeft: \"10px\",\r\n                                      paddingRight: \"130px\",\r\n                                      fontSize: \"0.8rem\",\r\n                                    }}\r\n                                  >\r\n                                    Send Invoice By Email\r\n                                    {emailSentInvoice && (\r\n                                      <div\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          right: \"10px\",\r\n                                          top: \"5px\",\r\n                                          color: \"#05ad19\",\r\n                                        }}\r\n                                      >\r\n                                        Email Sent\r\n                                      </div>\r\n                                    )}\r\n                                  </Button>\r\n                                </React.Fragment>\r\n                              )}\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n\r\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\r\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\r\n                        <span\r\n                          style={{ paddingLeft: \"15px\" }}\r\n                          className={\r\n                            !booking.OTCCharges || booking.OTCCharges === 0\r\n                              ? classes.infoDataChargesHigher\r\n                              : classes.infoDataCharges\r\n                          }\r\n                        >{`£${booking.OTCCharges.toLocaleString(\r\n                          \"en-GB\"\r\n                        )}`}</span>\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          !booking.paid &&\r\n                          !booking.deleted && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              className={classes.PayButton}\r\n                              onClick={(event) => Pay(event, booking._id)}\r\n                            >\r\n                              Pay\r\n                            </Button>\r\n                          )}\r\n                        {!(\r\n                          editMode.edit && editMode.person._id === booking._id\r\n                        ) &&\r\n                          booking.paid && (\r\n                            <React.Fragment>\r\n                              <span className={classes.PayLabel}>\r\n                                {\" \"}\r\n                                <CheckIcon\r\n                                  className={classes.checkIconSmall}\r\n                                />{\" \"}\r\n                                Paid by {booking.paidBy}\r\n                                {booking.paidBy === \"corporate\"\r\n                                  ? ` \"${booking.corporate}\" `\r\n                                  : \"\"}\r\n                              </span>\r\n\r\n                              <Tooltip title=\"Undo Payment\">\r\n                                <IconButton\r\n                                  onClick={() => setOpenUndoPayDialog(true)}\r\n                                >\r\n                                  <UndoIcon style={{ color: \"red\" }} />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </React.Fragment>\r\n                          )}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <Backdrop\r\n                className={classes.backdrop}\r\n                open={saving || deleting || restoring}\r\n              >\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n\r\n            <PayDialog\r\n              booking={selectedBooking}\r\n              open={openPayDialog}\r\n              price={invoice ? invoice.grandTotal : null}\r\n              handleClose={handleClosePayDialog}\r\n            />\r\n\r\n            <InvoiceDialog\r\n              booking={selectedBooking}\r\n              invoice={invoice}\r\n              open={openInvoiceDialog}\r\n              handleClose={handleCloseInvoiceDialog}\r\n            />\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openUndoPayDialog}\r\n            onClose={handleCloseUndoPayDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Undo Payment\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to undo payment for this booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\r\n                Yes, Undo Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openRefundDialog}\r\n            onClose={handleCloseRefundDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\r\n              {\"Refund Deposit\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                style={{ color: \"#333\", fontWeight: \"400\" }}\r\n                id=\"alert-dialog-description\"\r\n              >\r\n                Are you sure you want to refund deposit payment for this\r\n                booking?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\r\n                Back\r\n              </Button>\r\n              <Button\r\n                onClick={refundPaymentClicked}\r\n                color=\"secondary\"\r\n                autoFocus\r\n              >\r\n                Yes, Refund Payment\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BookingDialog from './BookingDialog';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from 'react-draggable';\r\n\r\nimport * as dateformat from 'dateformat';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PriceCalculator from './PriceCalculator';\r\nimport { corporates } from './Corporates';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel:{\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color : \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\"\r\n  },\r\n\r\n  ExportToExcelButton:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n   \r\n  },\r\n\r\n  ExportToExcelButtonInline:\r\n  {\r\n    // marginBottom : \"20px\",\r\n    color : \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration : \"none !important\", \r\n    cursor: \"pointer\",\r\n    padding: \"10px\"\r\n   \r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n},\r\n\r\nth: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntd: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n},\r\n\r\ntopSelect: {\r\n  margin: theme.spacing(1),\r\n  minWidth: 80,\r\n},\r\n\r\nnotifyIcon:{\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor : \"rgb(220, 0, 78)\",\r\n  marginLeft: \"10px\"\r\n}\r\n\r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else if (str === 'live')\r\n  {\r\n    return `Live Bookings`;\r\n  }else if (str === 'completed')\r\n  {\r\n    return `Completed Bookings`;\r\n  }else if (str === 'positive')\r\n  {\r\n    return `Positive Results`;\r\n  }else if (str === 'deleted')\r\n  {\r\n    return `Deleted Records`;\r\n  }else if (str === 'late')\r\n  {\r\n    return `40 Hours Late`;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n}\r\n\r\nconst getTableIcon = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'old')\r\n  {\r\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'future')\r\n  {\r\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'recent')\r\n  {\r\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'live')\r\n  {\r\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'completed')\r\n  {\r\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'positive')\r\n  {\r\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\r\n  }else if (str === 'deleted')\r\n  {\r\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }else if (str === 'late')\r\n  {\r\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n  \r\n  else\r\n  {\r\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\r\n  }\r\n\r\n}\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [topCount, setTopCount] = React.useState(25)\r\n  const topCountChanged = (event) =>\r\n  {\r\n    setTopCount(event.target.value)\r\n    loadData(event.target.value)\r\n  }\r\n  \r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () =>\r\n  {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  }\r\n\r\n\r\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const[chkDate, setChkDate] = useState(true);\r\n  const[chkForename, setChkForename] = useState(true);\r\n  const[chkSurname, setChkSurname] = useState(true);\r\n  const[chkDOB, setChkDOB] = useState(true);\r\n  const[chkEmail, setChkEmail] = useState(true);\r\n  const[chkTel, setChkTel] = useState(true);\r\n  const[chkCertificate, setChkCertidicate] = useState(true);\r\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const[chkextRef, setChkExtRef] = useState(true);\r\n  const[chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) =>\r\n  {\r\n    setJustCorporate(event.target.checked);\r\n  }\r\n  \r\n\r\n  const chkDateChanged = (event) =>\r\n  {\r\n    setChkDate(event.target.checked);\r\n  }\r\n\r\n  const chkForenameChanged = (event) =>\r\n  {\r\n    setChkForename(event.target.checked);\r\n  }\r\n\r\n  const chkSurnameChanged = (event) =>\r\n  {\r\n    setChkSurname(event.target.checked);\r\n  }\r\n\r\n  const chkDOBChanged = (event) =>\r\n  {\r\n    setChkDOB(event.target.checked);\r\n  }\r\n\r\n  const chkEmailChanged = (event) =>\r\n  {\r\n    setChkEmail(event.target.checked);\r\n  }\r\n\r\n  const chkTelChanged = (event) =>\r\n  {\r\n    setChkTel(event.target.checked);\r\n  }\r\n\r\n  const chkCertificateChanged = (event) =>\r\n  {\r\n    setChkCertidicate(event.target.checked);\r\n  }\r\n\r\n  const chkAntiBodyTestChanged = (event) =>\r\n  {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  }\r\n\r\n  const chkextRefChanged = (event) =>\r\n  {\r\n    setChkExtRef(event.target.checked);\r\n  }\r\n\r\n  const chkPriceChanged = (event) =>\r\n  {\r\n    setChkPrice(event.target.checked);\r\n  }\r\n\r\n\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === 'recent')\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n\r\n           <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n\r\n          \r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n        if (!params.value)\r\n        {\r\n           return ( \r\n              <React.Fragment>                    \r\n                    <CloseIcon className={classes.closeIcon}/>                        \r\n              </React.Fragment>\r\n           );\r\n        }\r\n        else\r\n        {\r\n           if (params.getValue('paidBy') === 'credit card')\r\n           {\r\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'cash')\r\n           {\r\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n           }\r\n           else if (params.getValue('paidBy') === 'corporate')\r\n           {\r\n             return ( <BusinessIcon className={classes.checkIcon}/> );\r\n           }\r\n           else\r\n           {\r\n             return '';  \r\n           }\r\n        }\r\n  }\r\n },\r\n\r\n\r\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \r\n        return formatTimeStamp(params.value);\r\n        }\r\n      },\r\n  \r\n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n              return FormatDateFromString(params.value);\r\n          }\r\n       },\r\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n        return params.getValue('bookingTime');\r\n      }},\r\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n          if (params.value === 'booked')\r\n          {\r\n            return (\r\n              <span className={classes.BookedLabel}>  BM </span>\r\n            );\r\n        \r\n          }else if (params.value === 'patient_attended')\r\n          {\r\n            return (\r\n              <span  className={classes.PatientAttendedLabel}> PA </span>\r\n            );\r\n          }\r\n          else{\r\n            return 'Unknown';\r\n          }\r\n        }\r\n      },\r\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n        return (\r\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link className={classes.RefLink}\r\n              //  onClick={\r\n              //   () => {\r\n              //     console.log(params.value);\r\n  \r\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n              //     setState(state => ({...state, ref : params.value}));\r\n              //     setState(state => ({...state, refError : false})); \r\n              //     setState(state => ({...state, foundRecords : []}));\r\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n              //   }\r\n              // }\r\n              \r\n              >\r\n                {params.value}\r\n              </Link>\r\n          </Tooltip>\r\n  \r\n        );\r\n      }},\r\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n      { field: 'email', headerName: 'Email', width: 200 },\r\n      { field: 'phone', headerName: 'Tel', width: 150 },\r\n      { field: 'notes', headerName: 'Notes', width: 500 },\r\n    \r\n    ];\r\n\r\n  }\r\n  else\r\n  {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n  \r\n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\r\n          return (\r\n            <React.Fragment>\r\n\r\n                <Button \r\n                        color=\"primary\"\r\n                        onClick = {event => openDetailsDialog(event, params.value)}\r\n                > \r\n            \r\n            <SearchIcon/> \r\n            \r\n            </Button>\r\n\r\n           </React.Fragment>\r\n  \r\n          ); \r\n      \r\n        }\r\n      },\r\n\r\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \r\n               if (!params.value)\r\n               {\r\n                  return ( \r\n                    <React.Fragment>\r\n                                <CloseIcon className={classes.closeIcon}/> \r\n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\r\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\r\n                                )}\r\n\r\n                               \r\n                    </React.Fragment>\r\n                     \r\n                        \r\n                  \r\n                  \r\n                  );\r\n               }\r\n               else\r\n               {\r\n                  if (params.getValue('paidBy') === 'credit card')\r\n                  {\r\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'cash')\r\n                  {\r\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else if (params.getValue('paidBy') === 'corporate')\r\n                  {\r\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\r\n                  }\r\n                  else\r\n                  {\r\n                    return '';  \r\n                  }\r\n               }\r\n         }\r\n        },\r\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \r\n          return FormatDateFromString(params.value);\r\n      }\r\n   },\r\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\r\n    return params.getValue('bookingTime');\r\n  }},\r\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\r\n      if (params.value === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}>  BM </span>\r\n        );\r\n    \r\n      }else if (params.value === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> PA </span>\r\n        );\r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n  },\r\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n    return (\r\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n          <Link className={classes.RefLink}\r\n          //  onClick={\r\n          //   () => {\r\n          //     console.log(params.value);\r\n\r\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n          //     setState(state => ({...state, ref : params.value}));\r\n          //     setState(state => ({...state, refError : false})); \r\n          //     setState(state => ({...state, foundRecords : []}));\r\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n          //   }\r\n          // }\r\n          \r\n          >\r\n            {params.value}\r\n          </Link>\r\n      </Tooltip>\r\n\r\n    );\r\n  }},\r\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\r\n  { field: 'email', headerName: 'Email', width: 200 },\r\n  { field: 'phone', headerName: 'Tel', width: 150 },\r\n  { field: 'notes', headerName: 'Notes', width: 500 },\r\n\r\n    \r\n    ];\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) =>\r\n  {\r\n    setCorporate(event.target.value);\r\n  }\r\n  \r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) =>\r\n  {\r\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n    if (todayStr === timeStampStr)\r\n    {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    }\r\n    else\r\n    {\r\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  }\r\n\r\n  const loadData = (top) =>\r\n  {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === 'today')\r\n    {\r\n      api = BookService.getTodayBookings;\r\n    }else if (props.date === 'old')\r\n    {\r\n      api = BookService.getOldBookings;\r\n    }else if (props.date === 'future')\r\n    {\r\n      api = BookService.getFutureBookings;\r\n    }else if (props.date === 'recent')\r\n    {\r\n      api = BookService.getRecentBookingsAll;\r\n    }\r\n    else if (props.date === 'deleted')\r\n    {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n     \r\n    setData({bookings: [], cachedBookings: [], isFetching: true});\r\n   \r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top).then( (res) =>{\r\n      // console.log(res)\r\n      for (var i=0; i < res.data.length; i++)\r\n      {\r\n        res.data[i] = {...res.data[i], id : i + 1}\r\n      }  \r\n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\r\n      // return res.data;\r\n    }).catch(err => {\r\n      console.error(err)\r\n    })\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n            setTopCount(25)\r\n            loadData(25)\r\n        },\r\n        [props.date]);\r\n\r\n\r\n\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.cachedBookings.filter( (element) => \r\n\r\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n             || (element.service.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n               \r\n              \r\n          );\r\n  \r\n  \r\n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n  \r\n      useEffect(() => {\r\n\r\n       loadData(topCount)\r\n    \r\n      }, [state.bookingDialogDataChanged]);    \r\n\r\n\r\n  const handleCloseSeeDetaisDialog = () =>\r\n  {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  }    \r\n  \r\n  const openDetailsDialog = (event, id) =>\r\n  {\r\n    const booking = data.bookings.find(element => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n\r\n  }\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    loadData(topCount)\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) =>\r\n  {\r\n    setOpenDialogExcel(true);\r\n  }\r\n\r\n  const isTopSelectHidden = (date)=>\r\n  {\r\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.showCreateExcel && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {/* {FormatDateFromString(booking.birthDate)} */}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n} ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport dateformat from 'dateformat';\r\nimport BookService from './services/BookService';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\n\r\nconst emptyData = [\r\n  createData('09:00', 0),\r\n  createData('10:00', 0),\r\n  createData('11:00', 0),\r\n  createData('12:00', 0),\r\n  createData('13:00', 0),\r\n  createData('14:00', 0),\r\n  createData('15:00', 0),\r\n  createData('16:00', 0),\r\n  createData('17:00', 0),\r\n  createData('18:00', undefined),\r\n\r\n];\r\n\r\nconst getCount = (data, str) =>\r\n{\r\n  if (!data)\r\n    return 0;\r\n\r\n  var count = 0;\r\n  for (var i=0; i < data.length; i++)\r\n  {\r\n    if (data[i]._id.substr(0,2) === str)\r\n    {\r\n      count += data[i].count;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  const [data, setData] = React.useState(emptyData);\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  useEffect(() =>\r\n  {\r\n    const fetchData = async () =>\r\n    {\r\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n      var result = [];\r\n      try\r\n      {\r\n          setLoading(true)\r\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\r\n          setLoading(false)\r\n          const data = res.data.result;\r\n          result.push(createData('09:00', getCount(data,'09')));\r\n          result.push(createData('10:00', getCount(data,'10')));\r\n          result.push(createData('11:00', getCount(data,'11')));\r\n          result.push(createData('12:00', getCount(data,'12')));\r\n          result.push(createData('13:00', getCount(data,'13')));\r\n          result.push(createData('14:00', getCount(data,'14')));\r\n          result.push(createData('15:00', getCount(data,'15')));\r\n          result.push(createData('16:00', getCount(data,'16')));\r\n          result.push(createData('17:00', getCount(data,'17')));\r\n          result.push(createData('18:00', undefined));\r\n \r\n           setData(result);\r\n      }\r\n      catch(err){\r\n        setLoading(false)\r\n        console.error(err);\r\n      }\r\n\r\n    }\r\n  \r\n   fetchData();\r\n\r\n  }, [] );\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"./Title\";\r\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\r\nimport * as dateformat from \"dateformat\";\r\nimport BookService from \"./services/BookService\";\r\nimport BookingDialog from \"./BookingDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    margin: \"5px\",\r\n    padding: \"5px\",\r\n    maxWidth: \"90px\",\r\n    minHeight: \"30px\",\r\n    border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    borderRadius: \"5px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n    align: \"center\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n});\r\n\r\nconst isWeekend = (date) =>\r\n{\r\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\r\n}\r\n\r\nconst getCurrentTimeSlot = (now) =>\r\n{\r\n    var min = now.getMinutes();\r\n    var hour = now.getHours();\r\n    var pm = (hour >= 12);\r\n    if (hour > 12)\r\n    {\r\n      hour = hour - 12;\r\n    }\r\n\r\n    if (min >= 0 && min < 15)\r\n    {\r\n      min = 0;\r\n    }else if (min >= 15 && min < 30)\r\n    {\r\n      min = 15;\r\n    }else if (min >= 30 && min < 45)\r\n    {\r\n      min = 30;\r\n    }else if (min >= 45)\r\n    {\r\n      min = 45;\r\n    }\r\n\r\n    const minStr = min < 10 ? `0${min}` : `${min}`;\r\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\r\n    const pmStr = pm ? 'PM' : 'AM';\r\n\r\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\r\n\r\n    if (isWeekend(now))\r\n    {\r\n      if (now.getHours() < 10 || now.getHours() >= 14)\r\n      {\r\n        return null;\r\n      }\r\n      else\r\n      {\r\n        return timeStr;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if (now.getHours() < 9 || now.getHours() >= 18)\r\n      {\r\n        return null;\r\n      }\r\n      else\r\n      {\r\n        return timeStr;\r\n      }\r\n\r\n    }\r\n}\r\n\r\nconst getCurrentTimeSlotLabel = (timeStr) =>\r\n{\r\n  if (!timeStr)\r\n  {\r\n    return 'Closed';\r\n  }\r\n\r\n  var hour = parseInt(timeStr.substr(0,2));\r\n  var minute = parseInt(timeStr.substr(3,2)); \r\n  var pm = timeStr.indexOf('PM') > 0;\r\n  if (minute !== 45)\r\n  {\r\n    minute += 15;\r\n  }\r\n  else{\r\n    minute = 0;\r\n    hour += 1;\r\n    if (hour >= 12)\r\n    {\r\n      pm = true;\r\n    }\r\n    if (hour > 12)\r\n    {\r\n      hour = hour - 12;\r\n    }\r\n  }\r\n\r\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\r\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\r\n  const pmStr = pm ? 'PM' : 'AM';\r\n\r\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\r\n\r\n  return `${timeStr} - ${endTimeStr}`;\r\n\r\n}\r\n\r\nexport default function CurrentVisits() {\r\n  const classes = useStyles();\r\n\r\n  const [current, setCurrent] = React.useState(new Date());\r\n  const [bookings, setBookings] = React.useState([]);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrent(new Date());\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentTimeSlot = getCurrentTimeSlot(current);\r\n    if (!currentTimeSlot) return;\r\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\r\n    setLoading(true);\r\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.status === \"OK\") {\r\n          setBookings([...res.data.bookings]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }, [current]);\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings && _bookings.length > 0) {\r\n      return (\r\n        <div className={classes.root}>\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={0}\r\n          >\r\n            {_bookings.map((booking) => (\r\n              <Grid item>\r\n                <div\r\n                  className={classes.bookingBox}\r\n                  onClick={(event) => bookingCliked(event, booking)}\r\n                >\r\n                  <span style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\r\n                  </span>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(current, \"dd mmmm, yyyy\")}\r\n      </Typography>\r\n\r\n      {getBookingsBox(bookings)}\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './../GlobalState';\r\nimport { getMenuIndex } from './../MenuList';\r\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\r\n  }\r\n\r\n  const loadData = () => \r\n  {\r\n    setData({bookings: data.bookings, isFetching: true});\r\n    setLoading(true)\r\n    BookService.getRecentBookings().then( (res) =>{\r\n      setLoading(false)\r\n        setData({bookings: res.data, isFetching: false});\r\n\r\n    }).catch( (err) => {\r\n      setLoading(false)\r\n        console.log(err);\r\n        setData({bookings: data.bookings, isFetching: false});\r\n    });\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n          loadData();\r\n        },\r\n        [refresh]);   \r\n\r\n\r\n   useEffect( () => {\r\n     loadData();\r\n     const interval = setInterval(() => {\r\n       setRefresh(refresh => !refresh);\r\n     }, 30000);\r\n\r\n     return () =>\r\n     {\r\n       clearInterval(interval)\r\n     }\r\n     \r\n   }, []) ;    \r\n\r\n   const formatTimeStamp = (timeStamp) =>\r\n   {\r\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\r\n     if (todayStr === timeStampStr)\r\n     {\r\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n     }\r\n     else\r\n     {\r\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n     }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Fullname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>Tel</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\r\n              <TableCell>{row.fullname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{row.phone}</TableCell>\r\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport CurrentVisits from './CurrentVisits';\r\n\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './../GlobalState';\r\nimport BookingView from './BookingView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Current Visits */}\r\n                    <Grid item xs={12} md={4} lg={6}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <CurrentVisits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Bookings */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './../GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\n\r\nimport bookingService from './services/BookService';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n\r\n  lineThrough:{\r\n    textDecoration : \"line-through\",\r\n  },\r\n\r\n\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  AccordionDeleted:{\r\n    backgroundColor : \"#aaa\",\r\n    color: \"#555\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    color: \"#606060\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#606060\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    color: \"#0066aa\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066aa\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    color: \"#0066cc\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#0066cc\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    color: \"#009900\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"#009900\"\r\n  },\r\n\r\n  PositiveLabel:{\r\n    color: \"red\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"3px\",\r\n    paddingTop: \"3px\",\r\n    fontWeight: \"800\",\r\n    borderLeft: \"5px solid\",\r\n    borderColor: \"red\"\r\n  },\r\n\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n  },\r\n\r\n  RestoreButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#555\",\r\n    \"&:hover\": {\r\n      background: \"#f1f1f1\",\r\n      color: \"#111\"\r\n    },\r\n    textDecoration : \"none !important\",\r\n    padding: \"10px\" ,\r\n    width: \"400px\"    \r\n  },\r\n\r\n\r\n  DeleteButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#d90015\",\r\n    \"&:hover\": {\r\n      background: \"#b80012\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\",\r\n    width: \"400px\"   \r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\",\r\n      \r\n    },\r\n    width: \"400px\"   \r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState('panel0');\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\r\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n    const [deleting, setDeleting] =  React.useState(false);\r\n    const [restoring, setRestoring] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [fullname, setFullname] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [service, setService] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const fullnameChanged = (event) =>\r\n    {\r\n      setFullname(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const serviceChanged = (event) =>\r\n    {\r\n      setService(event.target.value);\r\n    }\r\n\r\n    const notesChanged = (event) =>\r\n    {\r\n      setNotes(event.target.value);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }\r\n      else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setFullname(person.fullname);\r\n         setBookingDate(FormatDateFromString(person.bookingDate));\r\n         setBookingTime(person.bookingTime);\r\n         setEmail(person.email);\r\n         setTel(person.phone);\r\n         setService(person.service)\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes);\r\n         }\r\n        \r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.fullname = fullname;\r\n          booking.notes = notes;\r\n          booking.service = service;\r\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 1900)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const deleteBooking = (id) =>\r\n   {\r\n       setDeleting(true);\r\n       bookingService.deleteBooking(id).then( (res) => {\r\n        setDeleting(false);\r\n        setDeleteMode({delete: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n          setDeleting(false);\r\n          setDeleteMode({delete: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const restoreBooking = (id) =>\r\n   {\r\n       setRestoring(true);\r\n       bookingService.unDeleteBooking(id).then( (res) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n        setRestoring(false);\r\n        setRestoreMode({restore: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n   const changeBackToBookingMade = (event, id) =>\r\n   {\r\n     setSaving(true);\r\n     bookingService.changeBackToBookingMade(id).then(res => {\r\n       setSaving(false);\r\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n     }).catch(err => {\r\n       console.log(err);\r\n       setSaving(false);\r\n     })\r\n   }\r\n\r\n\r\n\r\n   const handleDeleteModeChanged = (del, person) => {\r\n\r\n    if (del)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && !person)\r\n    {\r\n      setDeleteMode({delete: del, person: person});\r\n    }\r\n    else if (!del && person)\r\n    {\r\n        deleteBooking(person._id);\r\n    }\r\n  }\r\n\r\n  const handleRestoreModeChanged = (restore, person) => {\r\n\r\n    if (restore)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && !person)\r\n    {\r\n      setRestoreMode({restore: restore, person: person});\r\n    }\r\n    else if (!restore && person)\r\n    {\r\n        restoreBooking(person._id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                      {person.deleted && (\r\n                          <Tooltip  title=\"This record has been deleted.\">\r\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\r\n                        </Tooltip>\r\n                      )}\r\n\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.fullname}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n\r\n\r\n                        <ul className={classes.ul}>\r\n\r\n                        {/* Restore Functionality ******************************************* */}  \r\n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\r\n                                Are you sure you want to restore this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\r\n                                 <Button\r\n\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\r\n                                    className={classes.RestoreButton}\r\n                                 >\r\n                                   Restore This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Restore this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {restoring}\r\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n                           {/*  ******************************************************************* */}\r\n\r\n                              {/* Edit Functionality ******************************************* */}\r\n\r\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                            \r\n                            {/* ****************************************************************************************** */}\r\n\r\n\r\n                            {/* Delete Functionality ******************************************* */}\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\r\n                                Are you sure you want to delete this record?\r\n                              </div>\r\n                            </li>\r\n\r\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\r\n                                    className={classes.DeleteButton}\r\n                                 >\r\n                                   Delete This Record\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    YES, Delete this!\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {deleting}\r\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n                                 \r\n                            {/* ****************************************************************************************** */}\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                   {FormatDateFromString(person.bookingDate) }\r\n                                  </span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      fullWidth\r\n                                                      error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FULLNAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={fullname}\r\n                                                      onChange = {fullnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SERVICE</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={service}\r\n                                                      onChange = {serviceChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>NOTES</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      fullWidth\r\n                                                      className={classes.TextBox} \r\n                                                      value={notes}\r\n                                                      onChange = {notesChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> \r\n                                {getStatusLabel(person.status)} \r\n                            </li>\r\n      \r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GlobalState from './../GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\nimport { width } from '@material-ui/system';\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\",\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n//   useEffect( () =>\r\n//   {\r\n//      findRecords();\r\n//   }, [state.findRecords]);\r\n\r\n useEffect ( () => {\r\n    setState(state => ({...state, foundRecords : []}));\r\n }, [])\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GlobalState from '../../GlobalState';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"70%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\",\r\n        cursor: \"pointer\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelToday: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        backgroundColor: \"#1a73e8\",\r\n        color: \"#fff\",\r\n        fontSize: \"1rem\",\r\n        borderRadius: \"50%\",\r\n        padding: \"5px\",\r\n        lineHight: \"35px\",\r\n        minWidth: \"35px\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        lineHight: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"35%\",\r\n        left: \"40%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"40px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"8%\",\r\n        height: \"85%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 10;  \r\n\r\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [dateStr, setDateStr] = React.useState('');\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n\r\n    const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    useEffect( () => {\r\n\r\n        if (cellIndex <= daysInMonth.length)\r\n        {\r\n            const date = daysInMonth[cellIndex - 1];\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(date.getMonth() !== month - 1);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n        else\r\n        {\r\n            const day = cellIndex - daysInMonth.length;\r\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\r\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\r\n            setDateStr(dateStr);\r\n            setCellDate(date);\r\n            setDisableDay(true);\r\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n            setIsPast(dateStr < todayStr);\r\n        }\r\n\r\n    }, [cellIndex, month, daysInMonth]);\r\n\r\n    useEffect ( () => {\r\n\r\n        const fecthData = async () =>\r\n        {\r\n            if (!dateStr || dateStr.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n        \r\n            if (disableDay)\r\n            {\r\n                setBookingsCount(-2);\r\n                return;\r\n            }\r\n\r\n            setBookingsCount(-1);\r\n\r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\r\n\r\n            if (!res)\r\n            {\r\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\r\n            }\r\n        \r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }\r\n\r\n        }\r\n\r\n      fecthData();\r\n\r\n    }, [dateStr]);\r\n\r\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\r\n    {\r\n        var date = null;\r\n        var disabled = false;\r\n        var day = -1;\r\n\r\n    \r\n\r\n        if (_cellIndex <= _daysInMonth.length)\r\n        {\r\n            date = _daysInMonth[_cellIndex - 1];\r\n            day = date.getDate();\r\n            if (date.getMonth() !== _month - 1)\r\n            {\r\n                disabled = true;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const _day = _cellIndex - _daysInMonth.length;\r\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\r\n            day = date.getDate();\r\n            disabled = true;\r\n        }\r\n\r\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\r\n\r\n        return (\r\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\r\n                 {day > 0 ? `${day}` : ''}\r\n             </span>\r\n        );\r\n    }\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0 )\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0)\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\r\n\r\n              {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    cellIndex: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default MonthViewCell;","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\",\r\n        cursor: \"pointer\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 1;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(-1);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count >= 0)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const getBookingsCountLabel = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount === -1)\r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookingsCount > 0)\r\n        {\r\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\r\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return (\r\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\r\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {getBookingsCountGauge(bookingsCount)}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { validate } from \"email-validator\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  CalendarIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  DateTimeLabel: {\r\n    fontWeight: \"500\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  PriceLabelPaid: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"600\",\r\n  },\r\n\r\n  PriceLabelNotPaid: {\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: \"600\",\r\n  },\r\n}));\r\n\r\nconst Packages = [\r\n  { packageName: \"Sexual Health Clinic - Bronze\" },\r\n  { packageName: `Sexual Health Clinic - Silver` },\r\n  { packageName: `Sexual Health Clinic - Gold` },\r\n  { packageName: `Sexual Health Clinic - Platinium` },\r\n  { packageName: `BLOOD SAMPLE AND URINE` },\r\n  { packageName: `BLOOD SAMPLE AND URINE OR SWAB` },\r\n  { packageName: `Indivisual Tests` },\r\n  { packageName: `Combo STD Checks` },\r\n];\r\n\r\nconst IndivisualTests = [\r\n  \"HIV TESTING\",\r\n  \"CHLAMYDIA TESTING\",\r\n  \"SYPHILIS BLOOD TESTING\",\r\n  \"HERPES TESTING\",\r\n  \"GONORRHOEA TESTING\",\r\n  \"HEPATITIS A PROFILE TESTING\",\r\n  \"HEPATITIS B PROFILE TESTING\",\r\n  \"HEPATITIS C ANTIBODIES TESTING\",\r\n  \"HPV TESTING\",\r\n  \"BACTERIAL SWAB TESTING\",\r\n];\r\n\r\nconst comboSTDChecks = [\r\n  \"CHLAMYDIA, GONORRHOEA AND TRICHOMONAS\",\r\n  \"HIV I & II WITH SYPHILIS\",\r\n];\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function NewBookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const [fullname, setFullname] = React.useState(\"\");\r\n  const [fullnameError, setFullnameError] = React.useState(false);\r\n\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [service, setService] = React.useState(\"\");\r\n  const [serviceError, setServiceError] = React.useState(false);\r\n\r\n  const [notes, setNotes] = React.useState(\"\");\r\n\r\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\r\n  const [comboArray, setComboArray] = React.useState([]);\r\n\r\n  const fullnameChanged = (event) => {\r\n    setFullname(event.target.value);\r\n    setFullnameError(false);\r\n  };\r\n\r\n  const phoneChanged = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const serviceChanged = (event) => {\r\n    setService(event.target.value);\r\n    setServiceError(false)\r\n  };\r\n\r\n  const notesChanged = (event) => {\r\n    setNotes(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (saving) return;\r\n\r\n    setFullname(\"\");\r\n    setFullnameError(false);\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    setService(\"\");\r\n    setServiceError(false)\r\n    setNotes(\"\");\r\n    setIndivisualArray([]);\r\n    setComboArray([]);\r\n\r\n    props.handleClose();\r\n    setSaving(false);\r\n  };\r\n\r\n  const validateBooking = () => {\r\n    let error = false;\r\n    if (!fullname || fullname.trim().length < 1) {\r\n      setFullnameError(true);\r\n      error = true;\r\n    }\r\n\r\n    if (!service || service.trim().length < 1)\r\n    {\r\n      setServiceError(true)\r\n      error = true\r\n    }\r\n\r\n    if (service === 'Indivisual Tests' && indivisualArray.length === 0)\r\n    {\r\n      setServiceError(true)\r\n      error = true\r\n    }\r\n\r\n    if (service === 'Combo STD Checks' && comboArray.length === 0)\r\n    {\r\n      setServiceError(true)\r\n      error = true\r\n    }\r\n\r\n    return !error;\r\n  };\r\n\r\n  const saveClicked = async () => {\r\n    if (!validateBooking()) {\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n\r\n    let packageName = service;\r\n    if (service === \"Indivisual Tests\") {\r\n      let temp = \"\";\r\n      indivisualArray.forEach((item, index) => {\r\n        temp += item;\r\n        if (index < indivisualArray.length - 1) {\r\n          temp += \" - \";\r\n        }\r\n      });\r\n      packageName = `Indivisual Tests : ( ${temp} )`;\r\n    } else if (service === \"Combo STD Checks\") {\r\n      let temp = \"\";\r\n      comboArray.forEach((item, index) => {\r\n        temp += item;\r\n        if (index < comboArray.length - 1) {\r\n          temp += \" - \";\r\n        }\r\n      });\r\n      packageName = `Combo STD Checks : ( ${temp} )`;\r\n    }\r\n\r\n    try {\r\n      await BookService.addNewBooking({\r\n        bookingDate: props.date,\r\n        bookingTime: props.time,\r\n        fullname: fullname,\r\n        phone: phone,\r\n        email: email,\r\n        packageName: packageName,\r\n        notes: notes,\r\n      });\r\n      setSaving(false);\r\n      setState((state) => ({\r\n        ...state,\r\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\r\n          ? true\r\n          : false,\r\n      }));\r\n      handleClose();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const IndivisualTestsChanged = (event, item) => {\r\n    const checked = event.target.checked;\r\n\r\n    if (checked) {\r\n      setServiceError(false)\r\n      if (indivisualArray.findIndex((e) => e === item) < 0)\r\n        setIndivisualArray([...indivisualArray, item]);\r\n    } else {\r\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\r\n    }\r\n\r\n    setServiceError(false)\r\n  };\r\n\r\n  const comboSTDChecksChanged = (event, item) => {\r\n    const checked = event.target.checked;\r\n\r\n    if (checked) {\r\n      setServiceError(false)\r\n      if (comboArray.findIndex((e) => e === item) < 0)\r\n        setComboArray([...comboArray, item]);\r\n    } else {\r\n      setComboArray(comboArray.filter((e) => e !== item));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.date && props.time && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"md\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    ADD New Booking{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.STD_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\r\n                    STD\r\n              </div>\r\n\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"600px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"stretch\"\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                    >\r\n                      <Grid item>\r\n                        <DateRangeIcon className={classes.CalendarIcon} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <span className={classes.DateTimeLabel}>\r\n                          {props.date} , {props.time}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      autoFocus\r\n                      error={fullnameError}\r\n                      label=\"Full Name\"\r\n                      value={fullname}\r\n                      required\r\n                      onChange={fullnameChanged}\r\n                      name=\"fullname\"\r\n                      id=\"fullname-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Telephone\"\r\n                      value={phone}\r\n                      onChange={phoneChanged}\r\n                      name=\"phone\"\r\n                      id=\"phone-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Email\"\r\n                      value={email}\r\n                      onChange={emailChanged}\r\n                      name=\"email\"\r\n                      id=\"email-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl className={classes.formControl} fullWidth required error={serviceError}>\r\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\r\n                      <Select\r\n                        fullWidth\r\n                        labelId=\"service-label-id\"\r\n                        id=\"service-id\"\r\n                        value={service}\r\n                        onChange={serviceChanged}\r\n                      >\r\n                        {Packages.map((item) => (\r\n                          <MenuItem value={item.packageName}>\r\n                            {item.packageName}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {service === \"Indivisual Tests\" && (\r\n                    <Grid item xs={12}>\r\n                      {IndivisualTests.map((item) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                indivisualArray.findIndex((e) => e === item) >=\r\n                                0\r\n                              }\r\n                              onChange={(event) =>\r\n                                IndivisualTestsChanged(event, item)\r\n                              }\r\n                              name={item}\r\n                            />\r\n                          }\r\n                          label={item}\r\n                        />\r\n                      ))}\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {service === \"Combo STD Checks\" && (\r\n                    <Grid item xs={12}>\r\n                      {comboSTDChecks.map((item) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={\r\n                                comboArray.findIndex((e) => e === item) >= 0\r\n                              }\r\n                              onChange={(event) =>\r\n                                comboSTDChecksChanged(event, item)\r\n                              }\r\n                              name={item}\r\n                            />\r\n                          }\r\n                          label={item}\r\n                        />\r\n                      ))}\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Notes\"\r\n                      value={notes}\r\n                      onChange={notesChanged}\r\n                      name=\"notes\"\r\n                      id=\"notes-id\"\r\n                      autoComplete=\"none\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={saveClicked}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100px\" }}\r\n                        disabled={saving}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n              <Backdrop className={classes.backdrop} open={saving}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\nimport BookingDialog from '../BookingDialog';\r\nimport NewBookingDialog from '../NewBookingDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        height : \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        alignItems : \"flex-start\",\r\n        justifyItems: \"flex-start\",\r\n        paddingLeft : \"10px\"\r\n\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"50px\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"10%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n    bookingBoxNew: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth: \"150px\",\r\n        overflowX: \"hidden\",\r\n        border: \"1px solid #ddd\",\r\n        color: \"#ccc\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#fff\",\r\n    \r\n        boxShadow: \"2px 4px #fafafa\",\r\n        transition: \"all 0.5s ease\",\r\n        borderRadius: \"4px\",\r\n    \r\n        \"&:hover\": {\r\n          background: \"#fff\",\r\n          color: theme.palette.secondary.main,\r\n          borderColor:  theme.palette.secondary.main,\r\n        },\r\n      },\r\n\r\n    bookingBox: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#ebedf7\",\r\n        color: \"#3f51b5\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#3f51b5\",\r\n            color: \"#ebedf7\"\r\n          },\r\n    },\r\n\r\n    bookingBoxSampleTaken: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#0066cc\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#0059b3\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n    bookingBoxPositive: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#d40b0b\",\r\n        color: \"#fff2f2\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#bf0000\",\r\n            color: \"#fff\"\r\n          },\r\n    },\r\n\r\n    bookingBoxReportSent: {\r\n        display: \"flex\",\r\n        marginRight: \"10px\",\r\n        marginTop: \"5px\",\r\n        padding: \"10px\",\r\n        maxWidth : \"150px\",\r\n        overflowX: \"hidden\",\r\n        border : \"1px solid #eee\",\r\n        fontSize: \"12px\",\r\n        fontWeight : \"500\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#009900\",\r\n        color: \"#eee\",\r\n        boxShadow: \"2px 4px #fafafa\",\r\n\r\n        \"&:hover\": {\r\n            background: \"#006e00\",\r\n            color: \"#fafafa\"\r\n          },\r\n    },\r\n\r\n  \r\n\r\n  }));\r\n\r\n\r\n\r\nconst DayViewCell = ({key, date, time}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookings, setBookings] = React.useState(null);\r\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n    const [refresh, setRefresh] = React.useState(true); \r\n\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n    }, [date]);\r\n\r\n    useEffect( () => \r\n    {\r\n        if (bookings) {\r\n\r\n\r\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\r\n            {\r\n                const search = state.dayViewCalFilter.trim().toUpperCase();\r\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\r\n                                                          \r\n                    \r\n                    ));\r\n            }\r\n            else\r\n            {\r\n                setFilteredBookings([...bookings]);\r\n            }\r\n        }\r\n\r\n    }, [state.dayViewCalFilter, bookings]);\r\n \r\n\r\n\r\n    useEffect ( () => {\r\n       \r\n        const fetchData = async () =>\r\n        {\r\n            if (!date || date.length <= 0 || !time || time.length <= 0)\r\n            {\r\n                return;\r\n            }\r\n         \r\n            // if (isPast)\r\n            // {\r\n            //     setBookings([]);\r\n            //     return;\r\n            // }\r\n    \r\n            setBookings(null);\r\n    \r\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n            if (!res || openDialog || openDialogAddNew)\r\n            {\r\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }\r\n          \r\n          \r\n            if (res.data.status === 'OK')\r\n            {\r\n                setBookings(res.data.bookings);\r\n            }   \r\n        }\r\n\r\n        if (openDialog || openDialogAddNew)\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\r\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\r\n        }\r\n\r\n         fetchData();\r\n     \r\n    }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n    const bookingCliked = (event, booking) =>\r\n    {\r\n        setSelectedBooking(booking);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    \r\n\r\n    const getBookingClass = (status) =>\r\n    {\r\n        switch (status) {\r\n\r\n            case 'patient_attended':\r\n                return classes.bookingBoxSampleTaken;\r\n            default : \r\n                return classes.bookingBox;\r\n        }\r\n    }\r\n\r\n    const addNewBookingClicked = () =>\r\n    {\r\n        setOpenDialogAddNew(true)\r\n    }\r\n\r\n    const getBookingsBox = (_bookings) =>\r\n    {\r\n        if (_bookings === null) \r\n        {\r\n            return (\r\n                <div className={classes.LoadingProgress}>\r\n                      <CircularProgress disableShrink  />\r\n                </div>\r\n            );  \r\n        }\r\n        else if (_bookings.length >= 0)\r\n        {\r\n           return (\r\n            <React.Fragment>\r\n            {_bookings.map((booking) => (\r\n              <div\r\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\r\n                className={getBookingClass(booking.status)}\r\n                onClick={(event) => bookingCliked(event, booking)}\r\n              >\r\n                {`${booking.fullname}`.substring(0, 15)}\r\n              </div>\r\n            ))}\r\n  \r\n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\r\n          </React.Fragment>\r\n           );\r\n        }\r\n    }\r\n\r\n\r\n    const handleCloseDialog = () =>\r\n    {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const handleCloseDialogAddNew = () => {\r\n        setOpenDialogAddNew(false);\r\n      };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={classes.Container}>\r\n\r\n              {getBookingsBox(filteredBookings)}\r\n\r\n            </div>\r\n\r\n            <BookingDialog\r\n                booking={selectedBooking}\r\n                open={openDialog}\r\n                onClose={handleCloseDialog}\r\n            />\r\n\r\n        <NewBookingDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogAddNew}\r\n        handleClose={handleCloseDialogAddNew}\r\n        />\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n  };\r\n\r\n \r\n  \r\nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\n\r\n\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\nimport GPBookService from \"./GP/services/BookService\";\r\nimport STDBookService from \"./STD/services/BookService\";\r\n\r\nimport * as dateformat from \"dateformat\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function TodayBookingView() {\r\n  const classes = useStyles();\r\n  \r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    const today = dateformat(new Date(), 'yyyy-mm-dd')\r\n    try{\r\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(today)\r\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(today)\r\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(today)\r\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(today)\r\n      \r\n      const pcr =  parseInt(res1.data.count)\r\n      const gynae = parseInt(res2.data.count)\r\n      const gp = parseInt(res3.data.count)\r\n      const std = parseInt(res4.data.count)\r\n\r\n      const _data = [\r\n        {clinic: \"PCR\", count: pcr},\r\n        {clinic: \"Gynae\", count: gynae},\r\n        {clinic: \"GP\", count: gp},\r\n        {clinic: \"STD\", count: std},\r\n        {clinic: \"Total\", count: pcr+gynae+gp+std}\r\n      ]\r\n      setData(_data)\r\n\r\n      setLoading(false);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Today Bookings</Title>\r\n      {data && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Clinic</TableCell>\r\n              <TableCell>Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.clinic}</TableCell>\r\n                <TableCell>{row.count}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\nimport GPBookService from \"./GP/services/BookService\";\r\nimport STDBookService from \"./STD/services/BookService\";\r\n\r\n\r\nimport * as dateformat from \"dateformat\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function TomorrowBookingView() {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    const today = new Date()\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000)\r\n\r\n    const tomorrowStr = dateformat(tomorrow, 'yyyy-mm-dd')\r\n    try{\r\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(tomorrowStr)\r\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(tomorrowStr)\r\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(tomorrowStr)\r\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(tomorrowStr)\r\n\r\n      \r\n      const pcr =  parseInt(res1.data.count)\r\n      const gynae = parseInt(res2.data.count)\r\n      const gp = parseInt(res3.data.count)\r\n      const std = parseInt(res4.data.count)\r\n\r\n      const _data = [\r\n        {clinic: \"PCR\", count: pcr},\r\n        {clinic: \"Gynae\", count: gynae},\r\n        {clinic: \"GP\", count: gp},\r\n        {clinic: \"STD\", count: std},\r\n        {clinic: \"Total\", count: pcr+gynae+gp+std}\r\n      ]\r\n\r\n      setData(_data)\r\n\r\n      setLoading(false);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Tomorrow Bookings</Title>\r\n      {data && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Clinic</TableCell>\r\n              <TableCell>Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.clinic}</TableCell>\r\n                <TableCell>{row.count}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\nimport GPBookService from \"./GP/services/BookService\";\r\nimport STDBookService from \"./STD/services/BookService\";\r\n\r\n\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nexport default function TotalBookingView() {\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n   \r\n    try{\r\n      const res1 = await PCRBookService.getAllBookingsCountAll()\r\n      const res2 = await GynaeBookService.getAllBookingsCountAll()\r\n      const res3 = await GPBookService.getAllBookingsCountAll()\r\n      const res4 = await STDBookService.getAllBookingsCountAll()\r\n      \r\n      const pcr =  parseInt(res1.data.count)\r\n      const gynae = parseInt(res2.data.count)\r\n      const gp = parseInt(res3.data.count)\r\n      const std = parseInt(res4.data.count)\r\n\r\n      const _data = [\r\n        {clinic: \"PCR\", count: pcr},\r\n        {clinic: \"Gynae\", count: gynae},\r\n        {clinic: \"GP\", count: gp},\r\n        {clinic: \"STD\", count: std},\r\n        {clinic: \"Total\", count: pcr+gynae+gp+std}\r\n      ]\r\n\r\n      setData(_data)\r\n\r\n      setLoading(false);\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n    \r\n\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Title>Total Bookings</Title>\r\n      {data && (\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Clinic</TableCell>\r\n              <TableCell>Count</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.clinic}</TableCell>\r\n                <TableCell>{row.count}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countLabel: {\r\n   position: \"absolute\",\r\n   top: \"65px\",\r\n   left: \"44%\",\r\n   fontSize: \"3rem\",\r\n  },\r\n\r\n  countLabelRed: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.secondary.main\r\n   },\r\n\r\n   Icon: {\r\n    fontSize: \"2rem\"\r\n\r\n  },\r\n\r\n  IconRed: {\r\n   fontSize: \"2rem\",\r\n  //  color: theme.palette.secondary.main,\r\n  },\r\n\r\n  TitleRed:{\r\n    // color: theme.palette.secondary.main,\r\n  }\r\n\r\n\r\n}));\r\n\r\nexport default function LateBookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await PCRBookService.getLateBookings();\r\n\r\n      setData(res.data.length);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () =>\r\n    {\r\n      clearInterval(interval)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"relative\" }}>\r\n        {loading && (\r\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n            <LinearProgress color=\"primary\" />\r\n          </div>\r\n        )}\r\n        <Title>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <div style={{ paddingTop: \"5px\" }}>\r\n                <HourglassEmptyIcon className={data === 0 ? classes.Icon : classes.IconRed } />\r\n              </div>\r\n            </Grid>\r\n            <Grid item style={{ textAlign: \"left\" }}>\r\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\r\n                  PCR 40-Hours Late\r\n              </span>\r\n           \r\n            </Grid>\r\n          </Grid>\r\n\r\n          {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\r\n        </Title>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport PCRBookService from \"./PCR/services/BookService\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countLabel: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n  },\r\n\r\n  countLabelRed: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n\r\n  Icon: {\r\n    fontSize: \"2rem\",\r\n  },\r\n\r\n  IconRed: {\r\n    fontSize: \"2rem\",\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n\r\n  TitleRed: {\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function UnmatchedBookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await PCRBookService.getUnmatchedRecords();\r\n\r\n      setData(res.data.length);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"relative\" }}>\r\n        {loading && (\r\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n            <LinearProgress color=\"primary\" />\r\n          </div>\r\n        )}\r\n        <Title>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <div style={{ paddingTop: \"5px\" }}>\r\n                <ReportProblemOutlinedIcon\r\n                  className={data === 0 ? classes.Icon : classes.IconRed}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item style={{ textAlign: \"left\" }}>\r\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\r\n                PCR Unmatched Records\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {data !== null && (\r\n            <div\r\n              className={\r\n                data === 0 ? classes.countLabel : classes.countLabelRed\r\n              }\r\n            >\r\n              {data}\r\n            </div>\r\n          )}\r\n        </Title>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport GynaeBookService from \"./Gynae/services/BookService\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport { Grid, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  countLabel: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n  },\r\n\r\n  countLabelRed: {\r\n    position: \"absolute\",\r\n    top: \"65px\",\r\n    left: \"44%\",\r\n    fontSize: \"3rem\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n\r\n  Icon: {\r\n    fontSize: \"2rem\",\r\n  },\r\n\r\n  IconRed: {\r\n    fontSize: \"2rem\",\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n\r\n  TitleRed: {\r\n    // color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function ShouldRefundBookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await GynaeBookService.getShouldRefundsCount()\r\n      setData(res.data.count);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    const interval = setInterval(() => {\r\n      setRefresh((refresh) => !refresh);\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"relative\" }}>\r\n        {loading && (\r\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n            <LinearProgress color=\"primary\" />\r\n          </div>\r\n        )}\r\n        <Title>\r\n          <Grid\r\n            container\r\n            direction=\"row-reverse\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <div style={{ paddingTop: \"5px\" }}>\r\n                <ReportProblemOutlinedIcon\r\n                  className={data === 0 ? classes.Icon : classes.IconRed}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item style={{ textAlign: \"left\" }}>\r\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\r\n                Gynae Waiting for Refunds\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {data !== null && (\r\n            <div\r\n              className={\r\n                data === 0 ? classes.countLabel : classes.countLabelRed\r\n              }\r\n            >\r\n              {data}\r\n            </div>\r\n          )}\r\n        </Title>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export const getRole = () => {\r\n    return sessionStorage.getItem('medexadmin-role')\r\n}\r\n\r\nexport const setRole = (role) => {\r\n    return sessionStorage.setItem('medexadmin-role', role)\r\n}\r\n\r\nexport const clearRole = (role) => {\r\n    return sessionStorage.removeItem('medexadmin-role')\r\n}","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\n\r\nimport TodayBookingView from \"./TodayBookingView\" \r\nimport TomorrowBookingView from \"./TomorrowBookingView\";\r\nimport TotalBookingView from \"./TotalBookingView\";\r\nimport LateBookingView from \"./LateBookingView\";\r\nimport UnmatchedBookingView from \"./UnmatchedBookingView\";\r\nimport ShouldRefundBookingView from \"./ShouldRefundBookingView\";\r\nimport { setRole } from \"./Role\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { getGlobalPath } from \"./GlobalPath\";\r\nimport { getMenuId, getMenuIndex } from \"./MenuList\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 300,\r\n  },\r\n  fixedHeightSmall: {\r\n    height: 200,\r\n    cursor:\"pointer\"\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\r\n\r\n  const history = useHistory();\r\n\r\n  const gotoLateBookings = () =>\r\n  {\r\n    const role = 'pcr'\r\n    setRole(role);\r\n    setState((state) => ({ ...state, role: role }));\r\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'latebookings'))}`));\r\n  }\r\n\r\n  const gotoUnmatchedPCR = () =>\r\n  {\r\n    const role = 'pcr'\r\n    setRole(role);\r\n    setState((state) => ({ ...state, role: role }));\r\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'unmatchedRecords'))}`));\r\n  }\r\n  \r\n  const gotoRefundGynae = () =>\r\n  {\r\n    const role = 'gynae'\r\n    setRole(role);\r\n    setState((state) => ({ ...state, role: role }));\r\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'deletedBookings'))}`));\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>       \r\n       \r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <TodayBookingView />\r\n          </Paper>\r\n        </Grid>\r\n      \r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <TomorrowBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaper}>\r\n             <TotalBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaperSmall} onClick={gotoLateBookings}>\r\n             <LateBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaperSmall} onClick={gotoUnmatchedPCR}>\r\n             <UnmatchedBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Paper className={fixedHeightPaperSmall} onClick={gotoRefundGynae}>\r\n             <ShouldRefundBookingView />\r\n          </Paper>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { authToken, backendAPI } from '../../GlobalPath';\r\n\r\nexport default axios.create({\r\n  baseURL: backendAPI,\r\n  headers : {\r\n      'Authorization' : authToken,\r\n       'Content-Type': 'application/json',\r\n  }\r\n});","import API from './api';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nexport default class BookService {\r\n\r\n\r\n   static addNewBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gp/book/addnewbooking`, payload);\r\n   }\r\n\r\n\r\n   static sendRegFormEmail = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\r\n   }\r\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\r\n   {\r\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\r\n   }\r\n\r\n   static unPayBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\r\n   }\r\n\r\n   static getShouldRefundsCount = () =>\r\n   {\r\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\r\n   }\r\n\r\n   \r\n\r\n   static refundBooking = (bookingId) =>\r\n   {\r\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\r\n   }\r\n\r\n   static getBookingsStatsByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountAll = () =>\r\n   {\r\n      return API.get(`/api/gp/book/getallbookingscountall`);\r\n   }\r\n\r\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n\r\n   static getAllBookingsCountByDateStr = (dateStr) =>\r\n   {\r\n      return API.get(`/api/admin/book/getallbookingscountbydatestr?date=${dateStr}`);\r\n   }\r\n\r\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\r\n   {\r\n      return API.get(`/api/admin/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\r\n   }\r\n\r\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\r\n   {\r\n      return API.get(`/api/admin/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\r\n   }\r\n\r\n   static changeBackToBookingMade = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\r\n   }\r\n\r\n   static changeToPatientAttended = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\r\n   }\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\r\n   } \r\n\r\n   static updateBookingTime = (payload) =>\r\n   {\r\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\r\n   } \r\n\r\n   static deleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\r\n   } \r\n\r\n   static unDeleteBooking = (id) =>\r\n   {\r\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\r\n   } \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/admin/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getBookingById = (id) =>\r\n    {\r\n       return API.get(`/api/gp/book/getbookingbyid?id=${id}`);\r\n    }\r\n\r\n    static getAllBookings = (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n      return API.get(`/api/admin/book/getallbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getDeletedBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/admin/book/getdeletedbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/admin/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/admin/book/getoldbookings?limit=${limit}`);\r\n    }\r\n\r\n    static getFutureBookings= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/admin/book/getfuturebookings?limit=${limit}`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/admin/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= (limit) =>\r\n    {\r\n      if (!limit) limit = 25 \r\n       return API.get(`/api/admin/book/getrecentbookingsall?limit=${limit}`);\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport PropTypes from \"prop-types\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport { FormControl, Grid, Input, InputLabel } from \"@material-ui/core\";\r\nimport BookService from \"./services/BookService\";\r\n\r\nimport PersonsBoxPCR from \"./../PCR/PersonsBox\";\r\nimport PersonsBoxGP from \"./../GP/PersonsBox\";\r\nimport PersonsBoxGynae from \"./../Gynae/PersonsBox\";\r\nimport PersonsBoxSTD from \"./../STD/PersonsBox\";\r\n\r\nimport { width } from \"@material-ui/system\";\r\n\r\nconst isBoolean = (param) => typeof param === \"boolean\";\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n  const [focus, setFocus] = React.useState(initialFocus);\r\n  const setFocusWithTrueDefault = (param) =>\r\n    setFocus(isBoolean(param) ? param : true);\r\n  return [\r\n    setFocusWithTrueDefault,\r\n    {\r\n      autoFocus: focus,\r\n      key: `${id}${focus}`,\r\n      onFocus: () => setFocus(true),\r\n      onBlur: () => setFocus(false),\r\n    },\r\n  ];\r\n};\r\n\r\nfunction TextMaskCustom(props) {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask={[/\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/]}\r\n      // placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  );\r\n}\r\n\r\nTextMaskCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    marginTop: \"20px\",\r\n  },\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n\r\n  Find: {\r\n    width: \"80px\",\r\n  },\r\n\r\n  Clear: {\r\n    marginRight: \"20px\",\r\n  },\r\n\r\n  title: {\r\n    marginTop: \"20px\",\r\n  },\r\n\r\n  TextBox: {\r\n    marginTop: \"30px\",\r\n    \"& > *\": {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n\r\n  TextField: {},\r\n\r\n  NoRecordsFound: {\r\n    marginTop: \"20px\",\r\n    color: \"red\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"14px\",\r\n  },\r\n\r\n  PersonsBox: {\r\n    marginTop: \"20px\",\r\n    marginBottom: \"50px\",\r\n  },\r\n\r\n  boxTitle:{\r\n      fontWeight: \"500\",\r\n      color: theme.palette.secondary.main,\r\n      borderColor: theme.palette.secondary.main,\r\n      border: \"1px solid\",\r\n      fontSize: \"1.2rem\",\r\n      backgroundColor: \"#fff\",\r\n      width: \"150px\",\r\n      padding:\"5px\",\r\n      borderRadius:\"30px\",\r\n      textAlign:\"center\",\r\n      marginBottom:\"10px\",\r\n      boxShadow: \"4px 8px 8px #eee\"\r\n  }\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n  //   useEffect( () =>\r\n  //   {\r\n  //      findRecords();\r\n  //   }, [state.findRecords]);\r\n\r\n  useEffect(() => {\r\n    setState((state) => ({ ...state, foundRecords: [] }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    BookService.getBookingsByRef(state.ref).then((res) => {\r\n      if (res.data.length > 0) {\r\n        setState((state) => ({ ...state, foundRecords: res.data }));\r\n      }\r\n    });\r\n  }, [state.RefreshPersonInfo]);\r\n\r\n  const handleChange = (event) => {\r\n    setState((state) => ({ ...state, ref: event.target.value }));\r\n    setState((state) => ({ ...state, refError: false }));\r\n  };\r\n\r\n  const clearField = () => {\r\n    setState((state) => ({ ...state, refError: false }));\r\n    setState((state) => ({ ...state, ref: \"___-___-___\" }));\r\n    setState((state) => ({ ...state, foundRecords: [] }));\r\n    setFocus();\r\n  };\r\n\r\n  const findRecords = () => {\r\n    if (!state.ref || state.ref.indexOf(\"_\") >= 0) {\r\n      setState((state) => ({ ...state, refError: true }));\r\n      return;\r\n    }\r\n\r\n    setState((state) => ({ ...state, submiting: true }));\r\n    setState((state) => ({ ...state, foundRecords: [] }));\r\n\r\n    BookService.getBookingsByRef(state.ref)\r\n      .then((res) => {\r\n        setState((state) => ({ ...state, submiting: false }));\r\n        if (res.data.length > 0) {\r\n          setState((state) => ({ ...state, foundRecords: res.data }));\r\n        } else {\r\n          setState((state) => ({ ...state, foundRecords: null }));\r\n        }\r\n\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setState((state) => ({ ...state, submiting: false }));\r\n      });\r\n  };\r\n\r\n  const getPersonBox = (clinic) => {\r\n    switch (clinic) {\r\n      case \"pcr\":\r\n        return <PersonsBoxPCR />;\r\n      case \"gp\":\r\n        return <PersonsBoxGP />;\r\n      case \"std\":\r\n        return <PersonsBoxSTD />;\r\n      case \"gynae\":\r\n        return <PersonsBoxGynae />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getBoxTitle = (clinic) => {\r\n      return (\r\n          <div className={classes.boxTitle}>\r\n              {clinic.toUpperCase() + ' Clinic'}\r\n\r\n          </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div className={classes.title}>\r\n        <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n          Find Booking Appoinments\r\n        </Typography>\r\n      </div>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        spacing={1}\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12} md={12}>\r\n          <FormControl className={classes.TextBox}>\r\n            <TextField\r\n              {...focusProps}\r\n              autoFocus\r\n              pattern=\"[0-9]*\"\r\n              error={state.refError ? true : false}\r\n              value={state.ref}\r\n              className={classes.TextField}\r\n              width=\"50px\"\r\n              onChange={handleChange}\r\n              label=\"Reference No.\"\r\n              helperText=\"Enter Your 9-digits Reference No.\"\r\n              name=\"refNo\"\r\n              id=\"refNo\"\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              margin=\"normal\"\r\n              fullWidth={true}\r\n              InputProps={{\r\n                inputComponent: TextMaskCustom,\r\n                style: {\r\n                  textAlign: \"center\",\r\n                  fontSize: \"24px\",\r\n                  width: \"210px\",\r\n                  paddingLeft: \"20px\",\r\n                },\r\n              }}\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  findRecords();\r\n                }\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n          <Button\r\n            disabled={state.submiting}\r\n            color=\"default\"\r\n            onClick={clearField}\r\n            onTouchTap={clearField}\r\n            className={classes.Clear}\r\n          >\r\n            Clear\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"button\"\r\n            disabled={state.submiting}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={findRecords}\r\n            onTouchTap={findRecords}\r\n            className={classes.Find}\r\n          >\r\n            Find\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n          {state.foundRecords && state.foundRecords.length > 0 && (\r\n            <React.Fragment>\r\n              <div className={classes.PersonsBox}>\r\n                {getBoxTitle(state.foundRecords[0].clinic)}  \r\n                {getPersonBox(state.foundRecords[0].clinic)}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {!state.foundRecords && (\r\n            <React.Fragment>\r\n              <div className={classes.root}>\r\n                <Alert severity=\"error\">\r\n                  {\" \"}\r\n                  <strong>No Records Found !</strong> <br /> Please check you\r\n                  reference number again.\r\n                </Alert>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PCRBookingDialog from \"./../PCR/BookingDialog\";\r\nimport GPBookingDialog from \"./../GP/BookingDialog\";\r\nimport GynaeBookingDialog from \"./../Gynae/BookingDialog\";\r\nimport STDBookingDialog from \"./../STD/BookingDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function BookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  if (props.booking) {\r\n    switch (props.booking.clinic) {\r\n      case \"pcr\":\r\n        return (\r\n          <PCRBookingDialog\r\n            booking={props.booking}\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n          />\r\n        );\r\n      case \"gp\":\r\n        return (\r\n          <GPBookingDialog\r\n            booking={props.booking}\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n          />\r\n        );\r\n\r\n      case \"gynae\":\r\n        return (\r\n          <GynaeBookingDialog\r\n            booking={props.booking}\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n          />\r\n        );\r\n\r\n      case \"std\":\r\n        return (\r\n          <STDBookingDialog\r\n            booking={props.booking}\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","export const corporates = [\r\n    'Visa Medical'\r\n]","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport BookService from \"./services/BookService\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  Icon,\r\n  InputLabel,\r\n  LinearProgress,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  SvgIcon,\r\n  Switch,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport GlobalState from \"./../GlobalState\";\r\nimport { getMenuIndex } from \"./../MenuList\";\r\nimport {\r\n  FormatDateFromString,\r\n  FormatDateFromStringShortYear,\r\n} from \"./DateFormatter\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BookingDialog from \"./BookingDialog\";\r\n\r\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport * as dateformat from \"dateformat\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\r\n\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport PriceCalculator from \"./PriceCalculator\";\r\nimport { corporates } from \"./Corporates\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  PositiveLabel: {\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    width: \"70px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  HideNowRows: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n    width: \"600px\",\r\n    height: \"300px\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#111\",\r\n    zIndex: \"1000\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyItems: \"center\",\r\n  },\r\n\r\n  ExportToExcelButton: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n  },\r\n\r\n  ExportToExcelButtonInline: {\r\n    // marginBottom : \"20px\",\r\n    color: \"#2f942e\",\r\n    borderColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"#fafffa\",\r\n      borderColor: \"#2f942e\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    cursor: \"pointer\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  table: {\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n  },\r\n\r\n  th: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    fontcolor: \"#555\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"15px\",\r\n    paddingTop: \"5px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"14%\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n\r\n  td: {\r\n    border: \"1px solid #ddd\",\r\n    borderCollapse: \"collapse\",\r\n    verticalAlign: \"middle\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n\r\n  topSelect: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n  },\r\n\r\n  notifyIcon: {\r\n    width: \"16px\",\r\n    height: \"16px\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"rgb(220, 0, 78)\",\r\n    marginLeft: \"10px\",\r\n  },\r\n\r\n  clinicTitle: {\r\n    fontWeight: \"600\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n    padding: \"2px 10px\",\r\n  },\r\n\r\n  PCRLabel: {\r\n    color: \"#4faef7\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n  },\r\n\r\n  GynaeLabel: {\r\n    color: \"#e83caf\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n  },\r\n\r\n  GPLabel: {\r\n    color: \"#ff4f14\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n  },\r\n\r\n  STDLabel: {\r\n    color: \"#d6733a\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n  },\r\n}));\r\n\r\nconst getTableTitle = (str) => {\r\n  if (str === \"today\") {\r\n    return `Today's Bookings`;\r\n  } else if (str === \"old\") {\r\n    return `Old Bookings`;\r\n  } else if (str === \"future\") {\r\n    return `Future Bookings`;\r\n  } else if (str === \"recent\") {\r\n    return `Recent Bookings`;\r\n  } else if (str === \"live\") {\r\n    return `Live Bookings`;\r\n  } else if (str === \"completed\") {\r\n    return `Completed Bookings`;\r\n  } else if (str === \"positive\") {\r\n    return `Positive Results`;\r\n  } else if (str === \"deleted\") {\r\n    return `Deleted Records`;\r\n  } else if (str === \"late\") {\r\n    return `40 Hours Late`;\r\n  } else {\r\n    return `All Bookings`;\r\n  }\r\n};\r\n\r\nconst getTableIcon = (str) => {\r\n  if (str === \"today\") {\r\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"old\") {\r\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"future\") {\r\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"recent\") {\r\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"live\") {\r\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"completed\") {\r\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"positive\") {\r\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"deleted\") {\r\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else if (str === \"late\") {\r\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  } else {\r\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\r\n  }\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  const classes = useStyles();\r\n\r\n  const getClassforClinic = (clinic) => {\r\n    switch (clinic) {\r\n      case \"pcr\":\r\n        return classes.PCRLabel;\r\n      case \"gp\":\r\n        return classes.GPLabel;\r\n      case \"gynae\":\r\n        return classes.GynaeLabel;\r\n      case \"std\":\r\n        return classes.STDLabel;\r\n\r\n      default:\r\n        return classes.clinicTitle;\r\n    }\r\n  };\r\n\r\n  const [topCount, setTopCount] = React.useState(25);\r\n  const topCountChanged = (event) => {\r\n    setTopCount(event.target.value);\r\n    loadData(event.target.value);\r\n  };\r\n\r\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\r\n  const handleCloseDialogExcel = () => {\r\n    setCorporate(corporates[0]);\r\n    setJustCorporate(false);\r\n    setOpenDialogExcel(false);\r\n  };\r\n\r\n  const [fromDate, setFromDate] = React.useState(\r\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\r\n  );\r\n  const handleFromDateChange = (date) => {\r\n    setFromDate(date);\r\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\r\n  };\r\n\r\n  const [untilDate, setUntilDate] = React.useState(\r\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\r\n  );\r\n  const handleUntilDateChange = (date) => {\r\n    setUntilDate(date);\r\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\r\n  };\r\n\r\n  const [fromDateStr, setFromDateStr] = useState(\r\n    dateformat(\r\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\r\n      \"yyyy-mm-dd\"\r\n    )\r\n  );\r\n  const [untilDateStr, seUntilDateStr] = useState(\r\n    dateformat(\r\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\r\n      \"yyyy-mm-dd\"\r\n    )\r\n  );\r\n\r\n  const [justCorporate, setJustCorporate] = useState(false);\r\n\r\n  const [chkDate, setChkDate] = useState(true);\r\n  const [chkForename, setChkForename] = useState(true);\r\n  const [chkSurname, setChkSurname] = useState(true);\r\n  const [chkDOB, setChkDOB] = useState(true);\r\n  const [chkEmail, setChkEmail] = useState(true);\r\n  const [chkTel, setChkTel] = useState(true);\r\n  const [chkCertificate, setChkCertidicate] = useState(true);\r\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\r\n  const [chkextRef, setChkExtRef] = useState(true);\r\n  const [chkPrice, setChkPrice] = useState(true);\r\n\r\n  const justCorporateChanged = (event) => {\r\n    setJustCorporate(event.target.checked);\r\n  };\r\n\r\n  const chkDateChanged = (event) => {\r\n    setChkDate(event.target.checked);\r\n  };\r\n\r\n  const chkForenameChanged = (event) => {\r\n    setChkForename(event.target.checked);\r\n  };\r\n\r\n  const chkSurnameChanged = (event) => {\r\n    setChkSurname(event.target.checked);\r\n  };\r\n\r\n  const chkDOBChanged = (event) => {\r\n    setChkDOB(event.target.checked);\r\n  };\r\n\r\n  const chkEmailChanged = (event) => {\r\n    setChkEmail(event.target.checked);\r\n  };\r\n\r\n  const chkTelChanged = (event) => {\r\n    setChkTel(event.target.checked);\r\n  };\r\n\r\n  const chkCertificateChanged = (event) => {\r\n    setChkCertidicate(event.target.checked);\r\n  };\r\n\r\n  const chkAntiBodyTestChanged = (event) => {\r\n    setChkAntiBodyTest(event.target.checked);\r\n  };\r\n\r\n  const chkextRefChanged = (event) => {\r\n    setChkExtRef(event.target.checked);\r\n  };\r\n\r\n  const chkPriceChanged = (event) => {\r\n    setChkPrice(event.target.checked);\r\n  };\r\n\r\n  var columns = [];\r\n\r\n  if (props.date === \"recent\") {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n\r\n      {\r\n        field: \"_id\",\r\n        headerName: \" \",\r\n        width: 70,\r\n        renderCell: (params) => {\r\n          return (\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={(event) => openDetailsDialog(event, params.value)}\r\n              >\r\n                <SearchIcon />\r\n              </Button>\r\n            </React.Fragment>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"clinic\",\r\n        headerName: \"Clinic\",\r\n        align: \"center\",\r\n        width: 90,\r\n        renderCell: (params) => {\r\n          return (\r\n            <span className={getClassforClinic(params.value)}>\r\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"paid\",\r\n        headerName: \"Paid\",\r\n        align: \"center\",\r\n        width: 90,\r\n        renderCell: (params) => {\r\n          if (!params.value) {\r\n            return (\r\n              <React.Fragment>\r\n                <CloseIcon className={classes.closeIcon} />\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            if (params.getValue(\"paidBy\") === \"credit card\") {\r\n              return <CreditCardIcon className={classes.checkIcon} />;\r\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\r\n              return <LocalAtmIcon className={classes.checkIcon} />;\r\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\r\n              return <BusinessIcon className={classes.checkIcon} />;\r\n            } else {\r\n              return \"\";\r\n            }\r\n          }\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"timeStamp\",\r\n        headerName: \"TimeStamp\",\r\n        width: 200,\r\n        valueFormatter: (params) => {\r\n          return formatTimeStamp(params.value);\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"bookingDate\",\r\n        headerName: \"B Date\",\r\n        width: 110,\r\n        valueFormatter: (params) => {\r\n          return FormatDateFromString(params.value);\r\n        },\r\n      },\r\n      {\r\n        field: \"bookingTimeNormalized\",\r\n        headerName: \"B Time\",\r\n        width: 105,\r\n        valueGetter: (params) => {\r\n          return params.getValue(\"bookingTime\");\r\n        },\r\n      },\r\n      {\r\n        field: \"status\",\r\n        headerName: \"Status\",\r\n        width: 100,\r\n        renderCell: (params) => {\r\n          if (params.value === \"booked\") {\r\n            return <span className={classes.BookedLabel}> BM </span>;\r\n          } else if (params.value === \"patient_attended\") {\r\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\r\n          } else if (params.value === \"sample_taken\") {\r\n            return <span className={classes.SampleTakenLabel}> ST </span>;\r\n          } else if (params.value === \"report_sent\") {\r\n            return <span className={classes.ReportSentLabel}> RS </span>;\r\n          } else if (params.value === \"report_cert_sent\") {\r\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\r\n          } else if (params.value === \"positive\") {\r\n            return <span className={classes.PositiveLabel}> POS </span>;\r\n          } else {\r\n            return \"Unknown\";\r\n          }\r\n        },\r\n      },\r\n      {\r\n        field: \"bookingRef\",\r\n        headerName: \"Ref No.\",\r\n        width: 120,\r\n        renderCell: (params) => {\r\n          return (\r\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link\r\n                className={classes.RefLink}\r\n                //  onClick={\r\n                //   () => {\r\n                //     console.log(params.value);\r\n\r\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n                //     setState(state => ({...state, ref : params.value}));\r\n                //     setState(state => ({...state, refError : false}));\r\n                //     setState(state => ({...state, foundRecords : []}));\r\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n                //   }\r\n                // }\r\n              >\r\n                {params.value}\r\n              </Link>\r\n            </Tooltip>\r\n          );\r\n        },\r\n      },\r\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\r\n        if (!params.value || params.value.length === 0)\r\n        {\r\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\r\n\r\n        }else\r\n        {\r\n          return params.value\r\n        }\r\n       \r\n      } },\r\n      { field: \"email\", headerName: \"Email\", width: 200 },\r\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\r\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\r\n    ];\r\n  } else {\r\n    columns = [\r\n      // { field: 'id', headerName: '#', width: 70 },\r\n\r\n      {\r\n        field: \"_id\",\r\n        headerName: \" \",\r\n        width: 70,\r\n        renderCell: (params) => {\r\n          return (\r\n            <React.Fragment>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={(event) => openDetailsDialog(event, params.value)}\r\n              >\r\n                <SearchIcon />\r\n              </Button>\r\n            </React.Fragment>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"clinic\",\r\n        headerName: \"Clinic\",\r\n        align: \"center\",\r\n        width: 90,\r\n        renderCell: (params) => {\r\n          return (\r\n            <span className={getClassforClinic(params.value)}>\r\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        field: \"paid\",\r\n        headerName: \"Paid\",\r\n        align: \"center\",\r\n        width: 90,\r\n        renderCell: (params) => {\r\n          if (!params.value) {\r\n            return (\r\n              <React.Fragment>\r\n                <CloseIcon className={classes.closeIcon} />\r\n                {parseInt(params.getValue(\"deposit\")) > 0 &&\r\n                  props.date === \"deleted\" && (\r\n                    <span className={classes.notifyIcon}>&nbsp;</span>\r\n                  )}\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            if (params.getValue(\"paidBy\") === \"credit card\") {\r\n              return <CreditCardIcon className={classes.checkIcon} />;\r\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\r\n              return <LocalAtmIcon className={classes.checkIcon} />;\r\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\r\n              return <BusinessIcon className={classes.checkIcon} />;\r\n            } else {\r\n              return \"\";\r\n            }\r\n          }\r\n        },\r\n      },\r\n      {\r\n        field: \"bookingDate\",\r\n        headerName: \"B Date\",\r\n        width: 110,\r\n        valueFormatter: (params) => {\r\n          return FormatDateFromString(params.value);\r\n        },\r\n      },\r\n      {\r\n        field: \"bookingTimeNormalized\",\r\n        headerName: \"B Time\",\r\n        width: 105,\r\n        valueGetter: (params) => {\r\n          return params.getValue(\"bookingTime\");\r\n        },\r\n      },\r\n      {\r\n        field: \"status\",\r\n        headerName: \"Status\",\r\n        width: 100,\r\n        renderCell: (params) => {\r\n          if (params.value === \"booked\") {\r\n            return <span className={classes.BookedLabel}> BM </span>;\r\n          } else if (params.value === \"patient_attended\") {\r\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\r\n          } else if (params.value === \"sample_taken\") {\r\n            return <span className={classes.SampleTakenLabel}> ST </span>;\r\n          } else if (params.value === \"report_sent\") {\r\n            return <span className={classes.ReportSentLabel}> RS </span>;\r\n          } else if (params.value === \"report_cert_sent\") {\r\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\r\n          } else if (params.value === \"positive\") {\r\n            return <span className={classes.PositiveLabel}> POS </span>;\r\n          } else {\r\n            return \"Unknown\";\r\n          }\r\n        },\r\n      },\r\n      {\r\n        field: \"bookingRef\",\r\n        headerName: \"Ref No.\",\r\n        width: 120,\r\n        renderCell: (params) => {\r\n          return (\r\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n              <Link\r\n                className={classes.RefLink}\r\n                //  onClick={\r\n                //   () => {\r\n                //     console.log(params.value);\r\n\r\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\r\n                //     setState(state => ({...state, ref : params.value}));\r\n                //     setState(state => ({...state, refError : false}));\r\n                //     setState(state => ({...state, foundRecords : []}));\r\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\r\n                //   }\r\n                // }\r\n              >\r\n                {params.value}\r\n              </Link>\r\n            </Tooltip>\r\n          );\r\n        },\r\n      },\r\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\r\n        if (!params.value || params.value.length === 0)\r\n        {\r\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\r\n\r\n        }else\r\n        {\r\n          return params.value\r\n        }\r\n       \r\n      } },\r\n      { field: \"email\", headerName: \"Email\", width: 200 },\r\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\r\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\r\n    ];\r\n  }\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [data, setData] = React.useState({\r\n    bookings: [],\r\n    cachedBookings: [],\r\n    isFetching: true,\r\n  });\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\r\n\r\n  const [corporate, setCorporate] = useState(corporates[0]);\r\n  const corporateChanged = (event) => {\r\n    setCorporate(event.target.value);\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState(\"\");\r\n\r\n  const lastPromise = useRef();\r\n\r\n  const formatTimeStamp = (timeStamp) => {\r\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\r\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\r\n    if (todayStr === timeStampStr) {\r\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\r\n    } else {\r\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\r\n    }\r\n  };\r\n\r\n  const loadData = (top) => {\r\n    var api = BookService.getAllBookings;\r\n    if (props.date === \"today\") {\r\n      api = BookService.getTodayBookings;\r\n    } else if (props.date === \"old\") {\r\n      api = BookService.getOldBookings;\r\n    } else if (props.date === \"future\") {\r\n      api = BookService.getFutureBookings;\r\n    } else if (props.date === \"recent\") {\r\n      api = BookService.getRecentBookingsAll;\r\n    } else if (props.date === \"deleted\") {\r\n      api = BookService.getDeletedBookings;\r\n    }\r\n\r\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\r\n\r\n    // console.log(props)\r\n\r\n    const currentPromise = api(top)\r\n      .then((res) => {\r\n        // console.log(res)\r\n        for (var i = 0; i < res.data.length; i++) {\r\n          res.data[i] = { ...res.data[i], id: i + 1 };\r\n        }\r\n        setData({\r\n          bookings: [...res.data],\r\n          cachedBookings: [...res.data],\r\n          isFetching: false,\r\n        });\r\n        // return res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    // lastPromise.current = currentPromise;\r\n\r\n    // currentPromise.then(\r\n    //   result => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\r\n    //       setPage(1);\r\n    //     }\r\n    //   },\r\n    //   e => {\r\n    //     if (currentPromise === lastPromise.current) {\r\n    //         console.error(e);\r\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n    //     }\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTopCount(25);\r\n    loadData(25);\r\n  }, [props.date]);\r\n\r\n  useEffect(() => {\r\n    if (filter && filter.trim().length > 0) {\r\n      var filteredData = data.cachedBookings.filter(\r\n        (element) =>\r\n          element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\r\n          element.forename?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\r\n          element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 \r\n      );\r\n\r\n      setData({\r\n        bookings: [...filteredData],\r\n        cachedBookings: data.cachedBookings,\r\n        isFetching: false,\r\n      });\r\n    } else {\r\n      setData({\r\n        bookings: [...data.cachedBookings],\r\n        cachedBookings: data.cachedBookings,\r\n        isFetching: false,\r\n      });\r\n    }\r\n  }, [filter]);\r\n\r\n  // useEffect(() => {\r\n  //   loadData(topCount);\r\n  // }, [state.bookingDialogDataChanged]);\r\n\r\n  const handleCloseSeeDetaisDialog = () => {\r\n    setSelectedBooking(null);\r\n    setSeeDetailsDialogOpen(false);\r\n  };\r\n\r\n  const openDetailsDialog = (event, id) => {\r\n    const booking = data.bookings.find((element) => element._id === id);\r\n    setSelectedBooking(booking);\r\n    setSeeDetailsDialogOpen(true);\r\n  };\r\n\r\n  const refreshClicked = (event) => {\r\n    setFilter(\"\");\r\n    loadData(topCount);\r\n  };\r\n\r\n  const filterChanged = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleSelectionChanged = (newSelection) => {\r\n    if (newSelection.length > 0) {\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n  };\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleExcelButtonClicked = (event) => {\r\n    setOpenDialogExcel(true);\r\n  };\r\n\r\n  const isTopSelectHidden = (date) => {\r\n    return (\r\n      date === \"live\" ||\r\n      date === \"positive\" ||\r\n      date === \"late\" ||\r\n      date === \"today\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {data.isFetching && (\r\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\r\n          <LinearProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n      >\r\n        <Grid item md={4}>\r\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\r\n                  {\" \"}\r\n                  {getTableIcon(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.4rem\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#444\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {getTableTitle(props.date)}{\" \"}\r\n                </span>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Refresh\" placement=\"right\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.refreshButton}\r\n                    onClick={refreshClicked}\r\n                  >\r\n                    <RefreshIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n          {props.date === \"completed\" && state.showCreateExcel && (\r\n            <div style={{ paddingBottom: \"5px\" }}>\r\n              <Button\r\n                className={classes.ExportToExcelButton}\r\n                variant=\"outlined\"\r\n                color=\"default\"\r\n                onClick={handleExcelButtonClicked}\r\n                startIcon={\r\n                  <FontAwesomeIcon\r\n                    style={{ color: \"#009900\" }}\r\n                    icon={faFileExcel}\r\n                  />\r\n                }\r\n              >\r\n                export to excel\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n\r\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item hidden={isTopSelectHidden(props.date)}>\r\n          <FormControl className={classes.topSelect}>\r\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\r\n            <Select\r\n              labelId=\"top-select-label\"\r\n              id=\"top-simple-select\"\r\n              value={topCount}\r\n              onChange={topCountChanged}\r\n            >\r\n              <MenuItem value={25}>25</MenuItem>\r\n              <MenuItem value={50}>50</MenuItem>\r\n              <MenuItem value={100}>100</MenuItem>\r\n              <MenuItem value={500}>500</MenuItem>\r\n              <MenuItem value={1000}>1000</MenuItem>\r\n              <MenuItem value={10000}>ALL</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={data.bookings}\r\n          columns={columns}\r\n          autoPageSize\r\n          page={page}\r\n          onPageChange={(params) => {\r\n            setPage(params.page);\r\n          }}\r\n          onSelectionChange={handleSelectionChanged}\r\n        />\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={seeDetailsDialogOpen}\r\n        onClose={handleCloseSeeDetaisDialog}\r\n      />\r\n\r\n      {data.bookings && data.bookings.length > 0 && (\r\n        <Dialog\r\n          maxWidth=\"lg\"\r\n          open={openDialogExcel}\r\n          onClose={handleCloseDialogExcel}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"draggable-dialog-title\">\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FontAwesomeIcon\r\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\r\n                  icon={faFileExcel}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <div\r\n                  style={{\r\n                    color: \"#2f942e\",\r\n                    paddingBottom: \"5px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Export to EXCEL{\" \"}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              style={{\r\n                minHeight: \"600px\",\r\n                maxHeight: \"600px\",\r\n                minWidth: \"1200px\",\r\n                maxWidth: \"1200px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <Grid row container justify=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={justCorporate}\r\n                          onChange={justCorporateChanged}\r\n                          name=\"justCorporate\"\r\n                        />\r\n                      }\r\n                      label=\"Just Corporate Records\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  {justCorporate && (\r\n                    <Grid item>\r\n                      <FormControl\r\n                        style={{ marginTop: \"0px\" }}\r\n                        className={classes.formControl}\r\n                      >\r\n                        <Select\r\n                          labelId=\"select-corporate\"\r\n                          id=\"select-corporate-id\"\r\n                          value={corporate}\r\n                          onChange={corporateChanged}\r\n                        >\r\n                          {corporates.map((element) => (\r\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <Grid row container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-from\"\r\n                        label=\"From\"\r\n                        value={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-until\"\r\n                        label=\"Until\"\r\n                        value={untilDate}\r\n                        onChange={handleUntilDateChange}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\r\n                        <ReactHTMLTableToExcel\r\n                          id=\"test-table-xls-button\"\r\n                          className={classes.ExportToExcelButtonInline}\r\n                          table=\"table-to-xls\"\r\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\r\n                          sheet=\"PCR-Report\"\r\n                          buttonText=\"Download as XLS\"\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n\r\n              <div>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDate}\r\n                          onChange={chkDateChanged}\r\n                          name=\"chkDate\"\r\n                        />\r\n                      }\r\n                      label=\"Date\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkForename}\r\n                          onChange={chkForenameChanged}\r\n                          name=\"chkForename\"\r\n                        />\r\n                      }\r\n                      label=\"Forename\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkSurname}\r\n                          onChange={chkSurnameChanged}\r\n                          name=\"chkSurname\"\r\n                        />\r\n                      }\r\n                      label=\"Surname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkDOB}\r\n                          onChange={chkDOBChanged}\r\n                          name=\"chkDOB\"\r\n                        />\r\n                      }\r\n                      label=\"D.O.B\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkEmail}\r\n                          onChange={chkEmailChanged}\r\n                          name=\"chkEmail\"\r\n                        />\r\n                      }\r\n                      label=\"Email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkTel}\r\n                          onChange={chkTelChanged}\r\n                          name=\"chkTel\"\r\n                        />\r\n                      }\r\n                      label=\"Tel\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkCertificate}\r\n                          onChange={chkCertificateChanged}\r\n                          name=\"chkCertificate\"\r\n                        />\r\n                      }\r\n                      label=\"Certificate\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkAntiBodyTest}\r\n                          onChange={chkAntiBodyTestChanged}\r\n                          name=\"chkAntiBodyTest\"\r\n                        />\r\n                      }\r\n                      label=\"AntiBodyTest\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkextRef}\r\n                          onChange={chkextRefChanged}\r\n                          name=\"chkextRef\"\r\n                        />\r\n                      }\r\n                      label=\"Lab No.\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={chkPrice}\r\n                          onChange={chkPriceChanged}\r\n                          name=\"chkPrice\"\r\n                        />\r\n                      }\r\n                      label=\"Price\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n\r\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\r\n                <table className={classes.table} id=\"table-to-xls\">\r\n                  <tr>\r\n                    {chkDate && <th className={classes.th}>Date</th>}\r\n                    {chkForename && <th className={classes.th}>Forename</th>}\r\n                    {chkSurname && <th className={classes.th}>Surename</th>}\r\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\r\n                    {chkEmail && <th className={classes.th}>Email</th>}\r\n                    {chkTel && <th className={classes.th}>Tel</th>}\r\n                    {chkCertificate && (\r\n                      <th className={classes.th}>Certificate</th>\r\n                    )}\r\n                    {chkAntiBodyTest && (\r\n                      <th className={classes.th}>AntiBodyTest</th>\r\n                    )}\r\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\r\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\r\n                  </tr>\r\n\r\n                  {data.bookings\r\n                    .filter((booking) => {\r\n                      if (!justCorporate) {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          booking.bookingDate >= fromDateStr &&\r\n                          booking.bookingDate <= untilDateStr &&\r\n                          booking.paid &&\r\n                          booking.paidBy === \"corporate\" &&\r\n                          booking.corporate === corporate\r\n                        );\r\n                      }\r\n                    })\r\n\r\n                    .map((booking) => (\r\n                      <tr>\r\n                        {chkDate && (\r\n                          <td className={classes.td}>\r\n                            {FormatDateFromString(booking.bookingDate)}\r\n                          </td>\r\n                        )}\r\n                        {chkForename && (\r\n                          <td className={classes.td}>\r\n                            {booking.forenameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkSurname && (\r\n                          <td className={classes.td}>\r\n                            {booking.surnameCapital}\r\n                          </td>\r\n                        )}\r\n                        {chkDOB && (\r\n                          <th className={classes.th}>\r\n                            {/* {FormatDateFromString(booking.birthDate)} */}\r\n                          </th>\r\n                        )}\r\n                        {chkEmail && (\r\n                          <td className={classes.td}>{booking.email}</td>\r\n                        )}\r\n                        {chkTel && (\r\n                          <td className={classes.td}>{booking.phone}</td>\r\n                        )}\r\n                        {chkCertificate && (\r\n                          <td className={classes.td}>\r\n                            {booking.certificate ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkAntiBodyTest && (\r\n                          <td className={classes.td}>\r\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\r\n                          </td>\r\n                        )}\r\n                        {chkextRef && (\r\n                          <td className={classes.td}>{booking.extRef}</td>\r\n                        )}\r\n                        {chkPrice && (\r\n                          <td className={classes.td}>\r\n                            {PriceCalculator.calculatePrice(booking)}\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport dateformat from \"dateformat\";\r\nimport BookService from \"../services/BookService\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport GlobalState from \"../../GlobalState\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CalendarColors } from \"./colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    width: \"100%\",\r\n    paddingTop: \"70%\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  ContainerPast: {\r\n    width: \"100%\",\r\n    paddingTop: \"70%\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n\r\n  DayLabel: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#555\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  DayLabelToday: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    backgroundColor: \"#1a73e8\",\r\n    color: \"#fff\",\r\n    fontSize: \"1rem\",\r\n    borderRadius: \"50%\",\r\n    padding: \"5px\",\r\n    lineHight: \"35px\",\r\n    minWidth: \"35px\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  DayLabelDisabled: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#ddd\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  BookingCountLabel: {\r\n    position: \"absolute\",\r\n    top: \"35%\",\r\n    left: \"40%\",\r\n    color: \"#3f51b5\",\r\n    backgroundColor: \"#ebedf7\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    padding: \"10px\",\r\n    borderRadius: \"50%\",\r\n    minWidth: \"40px\",\r\n    lineHight: \"40px\",\r\n    cursor: \"pointer\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  BookingCountLabelBusy: {\r\n    position: \"absolute\",\r\n    top: \"35%\",\r\n    left: \"40%\",\r\n    color: \"#b00000\",\r\n    backgroundColor: \"#fce6e6\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    padding: \"10px\",\r\n    borderRadius: \"50%\",\r\n    minWidth: \"40px\",\r\n    cursor: \"pointer\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  LoadingProgress: {\r\n    position: \"absolute\",\r\n    top: \"40%\",\r\n    left: \"40%\",\r\n  },\r\n\r\n  BookingCountGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"5%\",\r\n    left: \"8%\",\r\n    width: \"8%\",\r\n    height: \"85%\",\r\n  },\r\n\r\n  PCRGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"-20px\",\r\n    left: \"0\",\r\n    width: \"30px\",\r\n    height: \"120%\",\r\n  },\r\n\r\n  GynaeGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"-20px\",\r\n    left: \"31px\",\r\n    width: \"20px\",\r\n    height: \"120%\",\r\n  },\r\n\r\n  GPGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"-20px\",\r\n    left: \"52px\",\r\n    width: \"20px\",\r\n    height: \"120%\",\r\n  },\r\n\r\n  STDGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"-20px\",\r\n    left: \"73px\",\r\n    width: \"20px\",\r\n    height: \"120%\",\r\n  },\r\n\r\n  DayLabelContainer: {\r\n    position: \"absolute\",\r\n    top: \"15%\",\r\n    left: \"5px\",\r\n    width: \"100%\",\r\n    paddingTop: \"45%\",\r\n  },\r\n}));\r\n\r\nconst MAX_BOOKING_COUNT_PCR = 50;\r\nconst MAX_BOOKING_COUNT_GP = 10;\r\nconst MAX_BOOKING_COUNT_STD = 10;\r\nconst MAX_BOOKING_COUNT_GYNAE = 10;\r\n\r\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [dateStr, setDateStr] = React.useState(\"\");\r\n\r\n  const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n  const [bookingsCount, setBookingsCount] = React.useState(null);\r\n\r\n  const [disableDay, setDisableDay] = React.useState(false);\r\n\r\n  const [isPast, setIsPast] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (cellIndex <= daysInMonth.length) {\r\n      const date = daysInMonth[cellIndex - 1];\r\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\r\n      setDateStr(dateStr);\r\n      setCellDate(date);\r\n      setDisableDay(date.getMonth() !== month - 1);\r\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\r\n      setIsPast(dateStr < todayStr);\r\n    } else {\r\n      const day = cellIndex - daysInMonth.length;\r\n      const date = new Date(\r\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\r\n      );\r\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\r\n      setDateStr(dateStr);\r\n      setCellDate(date);\r\n      setDisableDay(true);\r\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\r\n      setIsPast(dateStr < todayStr);\r\n    }\r\n  }, [cellIndex, month, daysInMonth]);\r\n\r\n  useEffect(() => {\r\n    const fecthData = async () => {\r\n      if (!dateStr || dateStr.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      if (disableDay) {\r\n        setBookingsCount(-2);\r\n        return;\r\n      }\r\n\r\n      setBookingsCount(null);\r\n\r\n      var res = state.AdminCalendarCache?.find(\r\n        (record) =>\r\n          record.method === \"getBookingsCountByDateStr\" &&\r\n          record.query === dateStr\r\n      )?.res;\r\n\r\n      if (!res) {\r\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\r\n        setState((state) => ({\r\n          ...state,\r\n          AdminCalendarCache: [\r\n            ...state.AdminCalendarCache,\r\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\r\n          ],\r\n        }));\r\n      }\r\n\r\n      if (res.data.count) {\r\n        setBookingsCount(res.data.count);\r\n      }\r\n    };\r\n\r\n    fecthData();\r\n  }, [dateStr]);\r\n\r\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\r\n    var date = null;\r\n    var disabled = false;\r\n    var day = -1;\r\n\r\n    if (_cellIndex <= _daysInMonth.length) {\r\n      date = _daysInMonth[_cellIndex - 1];\r\n      day = date.getDate();\r\n      if (date.getMonth() !== _month - 1) {\r\n        disabled = true;\r\n      }\r\n    } else {\r\n      const _day = _cellIndex - _daysInMonth.length;\r\n      const date = new Date(\r\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\r\n      );\r\n      day = date.getDate();\r\n      disabled = true;\r\n    }\r\n\r\n    const isToday =\r\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\r\n\r\n    return (\r\n      <span\r\n        className={\r\n          disabled\r\n            ? classes.DayLabelDisabled\r\n            : isToday\r\n            ? classes.DayLabelToday\r\n            : classes.DayLabel\r\n        }\r\n      >\r\n        {day > 0 ? `${day}` : \"\"}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getClinicBar = (clinic, count) => {\r\n    return (\r\n      <React.Fragment>\r\n        {clinic === \"pcr\" &&\r\n          state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\r\n          getPCRClinicBar(count)}\r\n        {clinic === \"gynae\" &&\r\n          state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\r\n          getGynaeClinicBar(count)}\r\n        {clinic === \"gp\" &&\r\n          state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\r\n          getGPClinicBar(count)}\r\n        {clinic === \"std\" &&\r\n          state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\r\n          getSTDClinicBar(count)}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const minHeight = 1;\r\n  const getPCRClinicBar = (count) => {\r\n    let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\r\n    if (width > 100) width = 100;\r\n\r\n    if (width < 20) width = 20;\r\n\r\n    if (count === 0) {\r\n      width = minHeight;\r\n    }\r\n\r\n    const percent = 100 - width;\r\n\r\n    return (\r\n      <div className={classes.PCRGauge}>\r\n        <div\r\n          style={{\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: CalendarColors.PCR_COLOR,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"0px\",\r\n              color: \"#fff\",\r\n              fontWeight: \"500\",\r\n              fontSize:\"0.8rem\",\r\n              textAlign: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {count > 0 && count}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: `${percent}%`,\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getGynaeClinicBar = (count) => {\r\n    let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\r\n    if (width > 100) width = 100;\r\n\r\n    if (width < 20) width = 20;\r\n\r\n    if (count === 0) {\r\n      width = minHeight;\r\n    }\r\n\r\n    const percent = 100 - width;\r\n\r\n    return (\r\n      <div className={classes.GynaeGauge}>\r\n        <div\r\n          style={{\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: CalendarColors.GYNAE_COLOR,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n             style={{\r\n                position: \"absolute\",\r\n                bottom: \"0px\",\r\n                color: \"#fff\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"0.8rem\",\r\n                textAlign: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n          >\r\n            {count > 0 && count}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: `${percent}%`,\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getGPClinicBar = (count) => {\r\n    let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\r\n    if (width > 100) width = 100;\r\n\r\n    if (width < 20) width = 20;\r\n\r\n    if (count === 0) {\r\n      width = minHeight;\r\n    }\r\n\r\n    const percent = 100 - width;\r\n\r\n    return (\r\n      <div className={classes.GPGauge}>\r\n        <div\r\n          style={{\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: CalendarColors.GP_COLOR,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n             style={{\r\n                position: \"absolute\",\r\n                bottom: \"0px\",\r\n                color: \"#fff\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"0.8rem\",\r\n                textAlign: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n          >\r\n            {count > 0 && count}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: `${percent}%`,\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getSTDClinicBar = (count) => {\r\n    let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\r\n    if (width > 100) width = 100;\r\n\r\n    if (width < 20) width = 20;\r\n\r\n    if (count === 0) {\r\n      width = minHeight;\r\n    }\r\n\r\n    const percent = 100 - width;\r\n\r\n    return (\r\n      <div className={classes.STDGauge}>\r\n        <div\r\n          style={{\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: CalendarColors.STD_COLOR,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <div\r\n             style={{\r\n                position: \"absolute\",\r\n                bottom: \"0px\",\r\n                color: \"#fff\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"0.8rem\",\r\n                textAlign: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n          >\r\n            {count > 0 && count}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: `${percent}%`,\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  const getBookingsCountLabel = (_bookingsCount) => {\r\n    if (!_bookingsCount) {\r\n      return (\r\n        <div className={classes.LoadingProgress}>\r\n          <CircularProgress disableShrink />\r\n        </div>\r\n      );\r\n    } else if (_bookingsCount !== -2) {\r\n      return (\r\n        <div className={classes.DayLabelContainer}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-end\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            {_bookingsCount.map((item) => (\r\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getBookingsCountGauge = (_bookingsCount) => {\r\n    if (_bookingsCount > 0) {\r\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\r\n      if (percent > 100) {\r\n        percent = 100;\r\n      }\r\n\r\n      percent = 100 - percent;\r\n\r\n      return (\r\n        <div className={classes.BookingCountGauge}>\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: \"#3f51b5\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                width: \"100%\",\r\n                height: `${percent}%`,\r\n                backgroundColor: \"#fafafa\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={classes.Container}\r\n        onClick={(event) => dayClicked(event, cellDate)}\r\n      >\r\n        {getDayLabel(cellIndex, month, daysInMonth)}\r\n\r\n        {getBookingsCountLabel(bookingsCount)}\r\n\r\n        {/* {getBookingsCountGauge(bookingsCount)} */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nMonthViewCell.propTypes = {\r\n  key: PropTypes.string.isRequired,\r\n  cellIndex: PropTypes.number.isRequired,\r\n  month: PropTypes.number.isRequired,\r\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\r\n  dayClicked: PropTypes.func,\r\n};\r\n\r\nexport default MonthViewCell;\r\n","import calendar from 'node-calendar';\r\n\r\n\r\nexport default class CalendarUtil {\r\n\r\n    static getMonthRange = (month , year) =>\r\n    {\r\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\r\n    } \r\n\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MonthViewCell from './MonthViewCell';\r\nimport CalendarUtil from './calendar-util';\r\n\r\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\r\nconst days = [1,2,3,4,5,6,7]; \r\nconst rows = [1,2,3,4,5,6];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"14%\"\r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n    }\r\n\r\n  }));\r\n\r\nconst MonthView = ({month, year, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        {dayLables.map(label => (\r\n                            <th key={`th-${label}`} className={classes.th}>\r\n                                {label}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(row => (\r\n                        <tr>\r\n                            {days.map(day => (\r\n                                <td className={classes.td}>\r\n                                    <MonthViewCell \r\n                                        key={`${month}${year}${(row-1) * days.length + day}`} \r\n                                        cellIndex={(row-1) * days.length + day} \r\n                                        month={month} \r\n                                        daysInMonth={daysInMonth}\r\n                                        dayClicked = {dayClicked}\r\n                                        />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}            \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nMonthView.propTypes = {\r\n    month: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default MonthView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport dateformat from 'dateformat';\r\nimport BookService from '../services/BookService';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport axios from 'axios'\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport { CalendarColors } from './colors';\r\n\r\nconst MAX_BOOKING_COUNT_PCR = 10;\r\nconst MAX_BOOKING_COUNT_GP = 1;\r\nconst MAX_BOOKING_COUNT_STD = 1;\r\nconst MAX_BOOKING_COUNT_GYNAE = 1;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    Container: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fff\",\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    ContainerPast: {\r\n        width: \"100%\",\r\n        paddingTop: \"40%\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#fafafa\",\r\n        cursor: \"pointer\"\r\n    },\r\n    \r\n    DayLabel: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#555\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    DayLabelDisabled: {\r\n        position: \"absolute\",\r\n        top: \"5px\",\r\n        right: \"5px\",\r\n        color: \"#ddd\",\r\n        fontSize: \"1rem\"\r\n    },\r\n\r\n    BookingCountLabel: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#3f51b5\",\r\n        backgroundColor: \"#ebedf7\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    BookingCountLabelBusy: {\r\n        position: \"absolute\",\r\n        top: \"25%\",\r\n        left: \"38%\",\r\n        color: \"#b00000\",\r\n        backgroundColor: \"#fce6e6\",\r\n        fontSize: \"14px\",\r\n        fontWeight: \"600\",\r\n        padding: \"5px\",\r\n        borderRadius: \"50%\",\r\n        minWidth: \"30px\",\r\n        cursor : \"pointer\",\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    LoadingProgress: {\r\n        position: \"absolute\",\r\n        top: \"40%\",\r\n        left: \"40%\",\r\n      },\r\n\r\n      BookingCountGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"5%\",\r\n        left: \"8%\",\r\n        width : \"85%\",\r\n        height: \"8%\"\r\n    },\r\n\r\n    PCRGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"15px\",\r\n        left: \"0\",\r\n        width: \"20px\",\r\n        height: \"90%\",\r\n      },\r\n    \r\n      GynaeGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"15px\",\r\n        left: \"21px\",\r\n        width: \"20px\",\r\n        height: \"90%\",\r\n      },\r\n    \r\n      GPGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"15px\",\r\n        left: \"42px\",\r\n        width: \"20px\",\r\n        height: \"90%\",\r\n      },\r\n    \r\n      STDGauge: {\r\n        position: \"absolute\",\r\n        bottom: \"15px\",\r\n        left: \"63px\",\r\n        width: \"20px\",\r\n        height: \"90%\",\r\n      },\r\n    \r\n\r\n    DayLabelContainer:{\r\n        position: \"absolute\",\r\n        top: \"15%\",\r\n        left:\"5px\",\r\n        width:\"100%\",\r\n        height:\"100%\"   \r\n    },\r\n\r\n  }));\r\n\r\nconst MAX_BOOKING_COUNT = 1;  \r\n\r\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n    const [bookingsCount, setBookingsCount] = React.useState(null);\r\n    const [isPast, setIsPast] = React.useState(false);\r\n\r\n    const [cellDate, setCellDate] = React.useState(new Date());\r\n\r\n    useEffect( () => {\r\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\r\n        setIsPast(date < todayStr);\r\n\r\n        setCellDate(new Date(date));\r\n\r\n    }, [date]);\r\n\r\n    useEffect ( () => {\r\n      \r\n      \r\n      \r\n        if (!date || date.length <= 0 || !time || time.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        // if (isPast)\r\n        // {\r\n        //     setBookingsCount(-2);\r\n        //     return;\r\n        // }\r\n\r\n        setBookingsCount(null);\r\n\r\n       \r\n\r\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\r\n        if (res)\r\n        {\r\n            if (res.data.count)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n            }  \r\n            return;\r\n        }\r\n\r\n        let source = axios.CancelToken.source();\r\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\r\n            if (res.data.count)\r\n            {\r\n                setBookingsCount(res.data.count);\r\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\r\n            }  \r\n        }).catch( err => \r\n            {\r\n                //do nothing\r\n            });\r\n     \r\n        return () => {\r\n           if (source)\r\n              source.cancel('Cancelling in cleanup');\r\n        }\r\n     \r\n    }, [date, time]);\r\n\r\n\r\n    const minHeight = 1;\r\n    const getPCRClinicBar = (count) => {\r\n      let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\r\n      if (width > 100) width = 100;\r\n  \r\n      if (width < 30) width = 30;\r\n  \r\n      if (count === 0) {\r\n        width = minHeight;\r\n      }\r\n  \r\n      const percent = 100 - width;\r\n  \r\n      return (\r\n        <div className={classes.PCRGauge}>\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: CalendarColors.PCR_COLOR,\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: \"0px\",\r\n                color: \"#fff\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"0.8rem\",\r\n                textAlign: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {count > 0 && count}\r\n            </div>\r\n  \r\n            <div\r\n              style={{\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                width: \"100%\",\r\n                height: `${percent}%`,\r\n                backgroundColor: \"#fafafa\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    const getGynaeClinicBar = (count) => {\r\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\r\n      if (width > 100) width = 100;\r\n  \r\n      if (width < 30) width = 30;\r\n  \r\n      if (count === 0) {\r\n        width = minHeight;\r\n      }\r\n  \r\n      const percent = 100 - width;\r\n  \r\n      return (\r\n        <div className={classes.GynaeGauge}>\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: CalendarColors.GYNAE_COLOR,\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <div\r\n               style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"0px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"500\",\r\n                  fontSize:\"0.8rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n            >\r\n              {count > 0 && count}\r\n            </div>\r\n  \r\n            <div\r\n              style={{\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                width: \"100%\",\r\n                height: `${percent}%`,\r\n                backgroundColor: \"#fafafa\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    const getGPClinicBar = (count) => {\r\n      let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\r\n      if (width > 100) width = 100;\r\n  \r\n      if (width < 30) width = 30;\r\n  \r\n      if (count === 0) {\r\n        width = minHeight;\r\n      }\r\n  \r\n      const percent = 100 - width;\r\n  \r\n      return (\r\n        <div className={classes.GPGauge}>\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: CalendarColors.GP_COLOR,\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <div\r\n               style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"0px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"500\",\r\n                  fontSize:\"0.8rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n            >\r\n              {count > 0 && count}\r\n            </div>\r\n  \r\n            <div\r\n              style={{\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                width: \"100%\",\r\n                height: `${percent}%`,\r\n                backgroundColor: \"#fafafa\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    const getSTDClinicBar = (count) => {\r\n      let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\r\n      if (width > 100) width = 100;\r\n  \r\n      if (width < 30) width = 30;\r\n  \r\n      if (count === 0) {\r\n        width = minHeight;\r\n      }\r\n  \r\n      const percent = 100 - width;\r\n  \r\n      return (\r\n        <div className={classes.STDGauge}>\r\n          <div\r\n            style={{\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: CalendarColors.STD_COLOR,\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <div\r\n               style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"0px\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"500\",\r\n                  fontSize:\"0.8rem\",\r\n                  textAlign: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n            >\r\n              {count > 0 && count}\r\n            </div>\r\n  \r\n            <div\r\n              style={{\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                width: \"100%\",\r\n                height: `${percent}%`,\r\n                backgroundColor: \"#fafafa\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n  \r\n    const getBookingsCountLabel = (_bookingsCount) => {\r\n      if (!_bookingsCount) {\r\n        return (\r\n          <div className={classes.LoadingProgress}>\r\n            <CircularProgress disableShrink />\r\n          </div>\r\n        );\r\n      } else if (_bookingsCount !== -2) {\r\n        return (\r\n          <div className={classes.DayLabelContainer}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-end\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            >\r\n              {_bookingsCount.map((item) => (\r\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    const getClinicBar = (clinic, count) => {\r\n        return (\r\n          <React.Fragment>\r\n            {clinic === \"pcr\" &&\r\n              state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\r\n              getPCRClinicBar(count)}\r\n            {clinic === \"gynae\" &&\r\n              state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\r\n              getGynaeClinicBar(count)}\r\n            {clinic === \"gp\" &&\r\n              state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\r\n              getGPClinicBar(count)}\r\n            {clinic === \"std\" &&\r\n              state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\r\n              getSTDClinicBar(count)}\r\n          </React.Fragment>\r\n        );\r\n      };\r\n  \r\n  \r\n    const getBookingsCountGauge = (_bookingsCount) =>\r\n    {\r\n        if (_bookingsCount > 0 )\r\n        {\r\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\r\n            if (percent > 100)\r\n            {\r\n                percent = 100;\r\n            }\r\n\r\n            // percent = 100 - percent;\r\n\r\n            return (\r\n\r\n                <div className={classes.BookingCountGauge}>\r\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\r\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\r\n\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\r\n\r\n              {getBookingsCountLabel(bookingsCount)}\r\n\r\n              {/* {getBookingsCountGauge(bookingsCount)} */}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekViewCell.propTypes = {\r\n    key: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    time: PropTypes.string.isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n \r\n  \r\nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport WeekViewCell from './WeekViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"12%\", \r\n    }\r\n\r\n  }));\r\n\r\nconst WeekView = ({dates, dayClicked}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                            {dates.map(date => (\r\n                                <th className={classes.th}>\r\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\r\n                                         {dateformat(date, 'ddd')}\r\n                                    </div>\r\n                                    <div>\r\n                                        <span style={{color: \"#aaa\"}}>\r\n                                            {dateformat(date, 'mmm ')}\r\n                                        </span> \r\n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\r\n                                             {dateformat(date, ' d')}\r\n                                        </span>\r\n                                       \r\n                                    </div>\r\n                                </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                                {dates.map(day => (\r\n                                    <td className={classes.td}>\r\n                                        <WeekViewCell \r\n                                                dayClicked = {dayClicked}\r\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \r\n                                                date={dateformat(day,'yyyy-mm-dd')} \r\n                                                time={row}/>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nWeekView.propTypes = {\r\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    dayClicked: PropTypes.func\r\n  };\r\n\r\n\r\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BookService from \"./services/BookService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"../GlobalState\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { corporates } from \"./Corporates\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { validate } from \"email-validator\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport { CalendarColors } from \"./calendar-admin/colors\";\r\n\r\nvar interval;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  refreshButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon: {\r\n    color: \"green\",\r\n  },\r\n\r\n  closeIcon: {\r\n    color: \"red\",\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  BookedLabel: {\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  PatientAttendedLabel: {\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  SampleTakenLabel: {\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ReportCertSentLabel: {\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  archiveButton: {},\r\n\r\n  smartMatchButton: {\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    marginRight: \"10px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  infoTitle: {\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  infoData: {\r\n    paddingLeft: \"10px\",\r\n    fontWeight: \"800\",\r\n  },\r\n\r\n  matchButton: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  resendFilesButton: {\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#3792ad\",\r\n    \"&:hover\": {\r\n      background: \"#2f798f\",\r\n      color: \"#fff\",\r\n    },\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n\r\n  cancelButton: {\r\n    marginBottom: \"10px\",\r\n    textDecoration: \"none !important\",\r\n    padding: \"10px\",\r\n    paddingLeft: \"90px\",\r\n    paddingRight: \"90px\",\r\n  },\r\n\r\n  CalendarIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  DateTimeLabel: {\r\n    fontWeight: \"500\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  PriceLabelPaid:{\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"600\"\r\n  },\r\n\r\n  PriceLabelNotPaid:{\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: \"600\"\r\n  },\r\n\r\n  BoxDisabled: {\r\n    width : \"100%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n    borderColor: \"#ddd\",\r\n    cursor: \"not-allowed\",\r\n    color: \"#ddd\",\r\n    transition: \"all 0.2s ease\",\r\n  },\r\n\r\n  BoxGynae: {\r\n    width : \"100%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n    cursor: \"pointer\",\r\n    borderColor: CalendarColors.GYNAE_COLOR,\r\n    color: CalendarColors.GYNAE_COLOR,\r\n    transition: \"all 0.2s ease\",\r\n    \"&:hover\": {\r\n      backgroundColor: CalendarColors.GYNAE_COLOR,\r\n      color: \"#fff\"\r\n    }\r\n  \r\n  },\r\n\r\n  BoxGP: {\r\n    width : \"100%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n    cursor: \"pointer\",\r\n    borderColor: CalendarColors.GP_COLOR,\r\n    color: CalendarColors.GP_COLOR,\r\n    transition: \"all 0.2s ease\",\r\n    \"&:hover\": {\r\n      backgroundColor: CalendarColors.GP_COLOR,\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n\r\n  BoxSTD: {\r\n    width : \"100%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    textAlign: \"center\",\r\n    cursor: \"pointer\",\r\n    borderColor: CalendarColors.STD_COLOR,\r\n    color: CalendarColors.STD_COLOR,\r\n    transition: \"all 0.2s ease\",\r\n    \"&:hover\": {\r\n      backgroundColor: CalendarColors.STD_COLOR,\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n\r\n\r\n\r\n}));\r\n\r\nconst Packages = [\r\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\r\n  { packageName: `Coil Fitting/Coil Removal` },\r\n  { packageName: `Well Woman Check` },\r\n  { packageName: `Sexual Health Screening` },\r\n  { packageName: `Pre-pregnancy/Fertility check` },\r\n  { packageName: `Gynaecological Ultrasound` },\r\n  { packageName: `HPV Vaccination` },\r\n  { packageName: `Cervical / Pap Smear` },\r\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\r\n];\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#2f942e\",\r\n  },\r\n}))(LinearProgress);\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <BorderLinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography\r\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function NewBookingDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const handleClose = () => {    \r\n    props.handleClose();\r\n  };\r\n\r\n\r\n  const timeDisabled = () =>\r\n  {\r\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \r\n  }\r\n\r\n  const clinicClicked = (clinic) =>\r\n  {\r\n    props.clinicClicked(clinic)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.date && props.time && (\r\n        <React.Fragment>\r\n          <Dialog\r\n            maxWidth=\"xs\"\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            PaperComponent={PaperComponent}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"draggable-dialog-title\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      color: \"#f50057\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    ADD New Booking{\" \"}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Divider />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div\r\n                style={{\r\n                  height: \"310px\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"stretch\"\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      spacing={1}\r\n                    >\r\n                      <Grid item>\r\n                        <DateRangeIcon className={classes.CalendarIcon} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <span className={classes.DateTimeLabel}>\r\n                          {props.date} , {props.time}\r\n                        </span>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n\r\n                  <Grid item xs={12}>\r\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGynae} onClick={() => !timeDisabled() ? clinicClicked(\"gynae\") : null}>\r\n                      GYNAE\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGP}  onClick={() => !timeDisabled() ? clinicClicked(\"gp\") : null}>\r\n                      GP\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <div className={classes.BoxSTD} onClick={() => clinicClicked(\"std\")}>\r\n                      STD\r\n                    </div>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        style={{ width: \"100px\" }}\r\n                      >\r\n                        close\r\n                      </Button>\r\n                    </Grid>\r\n                   \r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n\r\n            </DialogContent>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport dateformat from \"dateformat\";\r\nimport BookService from \"../services/BookService\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport GlobalState from \"../../GlobalState\";\r\nimport BookingDialog from \"../BookingDialog\";\r\nimport NewBookingDialog from \"../NewBookingDialog\";\r\nimport { CalendarColors } from \"./colors\";\r\nimport clsx from \"clsx\";\r\n\r\nimport NewGPDialog from \"../../GP/NewBookingDialog\";\r\nimport NewGynaeDialog from \"../../Gynae/NewBookingDialog\";\r\nimport NewSTDDialog from \"../../STD/NewBookingDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    width: \"100%\",\r\n    height: \"50px\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyItems: \"flex-start\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  ContainerPast: {\r\n    width: \"100%\",\r\n    paddingTop: \"50px\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n\r\n  DayLabel: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#555\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  DayLabelDisabled: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"5px\",\r\n    color: \"#ddd\",\r\n    fontSize: \"1rem\",\r\n  },\r\n\r\n  LoadingProgress: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n    left: \"40%\",\r\n  },\r\n\r\n  BookingCountGauge: {\r\n    position: \"absolute\",\r\n    bottom: \"5%\",\r\n    left: \"8%\",\r\n    width: \"85%\",\r\n    height: \"8%\",\r\n  },\r\n\r\n  bookingBox: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"7px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    // border: \"1px solid #eee\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#ebedf7\",\r\n    color: \"#3f51b5\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#3f51b5\",\r\n      color: \"#ebedf7\",\r\n    },\r\n  },\r\n\r\n  bookingBoxNew: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"10px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    border: \"1px solid #ddd\",\r\n    color: \"#ccc\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#fff\",\r\n\r\n    boxShadow: \"2px 4px #fafafa\",\r\n    transition: \"all 0.5s ease\",\r\n    borderRadius: \"4px\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.secondary.main,\r\n      borderColor: theme.palette.secondary.main,\r\n    },\r\n  },\r\n\r\n  bookingBoxSampleTaken: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"7px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#eee\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#0059b3\",\r\n      color: \"#fafafa\",\r\n    },\r\n  },\r\n\r\n  bookingBoxPositive: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"7px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#d40b0b\",\r\n    color: \"#fff2f2\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#bf0000\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n\r\n  bookingBoxReportSent: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    marginTop: \"5px\",\r\n    padding: \"7px\",\r\n    maxWidth: \"150px\",\r\n    overflowX: \"hidden\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#009900\",\r\n    color: \"#eee\",\r\n    boxShadow: \"2px 4px #fafafa\",\r\n\r\n    \"&:hover\": {\r\n      background: \"#006e00\",\r\n      color: \"#fafafa\",\r\n    },\r\n  },\r\n\r\n  BookingBorderPCR: {\r\n    border: \"4px solid\",\r\n    borderColor: CalendarColors.PCR_COLOR,\r\n  },\r\n\r\n  BookingBorderGynae: {\r\n    border: \"4px solid\",\r\n    borderColor: CalendarColors.GYNAE_COLOR,\r\n  },\r\n\r\n  BookingBorderGP: {\r\n    border: \"4px solid\",\r\n    borderColor: CalendarColors.GP_COLOR,\r\n  },\r\n\r\n  BookingBorderSTD: {\r\n    border: \"4px solid\",\r\n    borderColor: CalendarColors.STD_COLOR,\r\n  },\r\n}));\r\n\r\nconst DayViewCell = ({ key, date, time }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [bookings, setBookings] = React.useState(null);\r\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\r\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\r\n\r\n  const [refresh, setRefresh] = React.useState(true);\r\n\r\n  const [isPast, setIsPast] = React.useState(false);\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\r\n\r\n  const [openDialogGP, setOpenDialogGP] = React.useState(false);\r\n  const [openDialogGynae, setOpenDialogGynae] = React.useState(false);\r\n  const [openDialogSTD, setOpenDialogSTD] = React.useState(false);\r\n\r\n  const handleCloseDialogGP = () => {\r\n    setOpenDialogGP(false);\r\n    setOpenDialogAddNew(false)\r\n  };\r\n\r\n  const handleCloseDialogGynae = () => {\r\n    setOpenDialogGynae(false);\r\n    setOpenDialogAddNew(false)\r\n  };\r\n\r\n  const handleCloseDialogSTD = () => {\r\n    setOpenDialogSTD(false);\r\n    setOpenDialogAddNew(false)\r\n  };\r\n\r\n  useEffect(() => {\r\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\r\n    setIsPast(date < todayStr);\r\n  }, [date]);\r\n\r\n  useEffect(() => {\r\n    if (bookings) {\r\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\r\n        const search = state.dayViewCalFilter.trim().toUpperCase();\r\n        setFilteredBookings(\r\n          bookings.filter(\r\n            (booking) =>\r\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >=\r\n                0 ||\r\n              booking.forename?.toLowerCase().indexOf(search.toLowerCase()) >=\r\n                0 ||\r\n              booking.surname?.toLowerCase().indexOf(search.toLowerCase()) >= 0\r\n          )\r\n        );\r\n      } else {\r\n        setFilteredBookings([...bookings]);\r\n      }\r\n    }\r\n  }, [state.dayViewCalFilter, bookings]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      // if (isPast)\r\n      // {\r\n      //     setBookings([]);\r\n      //     return;\r\n      // }\r\n\r\n      setBookings(null);\r\n\r\n      var res = state.AdminCalendarCache?.find(\r\n        (record) =>\r\n          record.method === \"getBookingsByDateStrandTime\" &&\r\n          record.query === `${date}${time}`\r\n      )?.res;\r\n      if (!res || openDialog || openDialogAddNew) {\r\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\r\n        setState((state) => ({\r\n          ...state,\r\n          AdminCalendarCache: [\r\n            ...state.AdminCalendarCache,\r\n            {\r\n              method: \"getBookingsByDateStrandTime\",\r\n              query: `${date}${time}`,\r\n              res: res,\r\n            },\r\n          ],\r\n        }));\r\n      }\r\n\r\n      if (res.data.status === \"OK\") {\r\n        setBookings(res.data.bookings);\r\n      }\r\n    };\r\n\r\n    if (openDialog || openDialogAddNew) {\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsByDateStrandTime\" &&\r\n              record.query === `${date}${time}`\r\n            )\r\n        ),\r\n      }));\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsCountByDateStrandTime\" &&\r\n              record.query === `${date}${time}`\r\n            )\r\n        ),\r\n      }));\r\n      setState((state) => ({\r\n        ...state,\r\n        AdminCalendarCache: state.AdminCalendarCache.filter(\r\n          (record) =>\r\n            !(\r\n              record.method === \"getBookingsCountByDateStr\" &&\r\n              record.query === date\r\n            )\r\n        ),\r\n      }));\r\n    }\r\n\r\n    fetchData();\r\n  }, [date, time, state.bookingDialogDataChanged]);\r\n\r\n  const bookingCliked = (event, booking) => {\r\n    setSelectedBooking(booking);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const getBookingClass = (status) => {\r\n    switch (status) {\r\n      case \"sample_taken\":\r\n      case \"patient_attended\":\r\n        return classes.bookingBoxSampleTaken;\r\n      case \"positive\":\r\n        return classes.bookingBoxPositive;\r\n      case \"report_sent\":\r\n      case \"report_cert_sent\":\r\n        return classes.bookingBoxReportSent;\r\n\r\n      default:\r\n        return classes.bookingBox;\r\n    }\r\n  };\r\n\r\n  const addNewBookingClicked = () => {\r\n    setOpenDialogAddNew(true);\r\n  };\r\n\r\n  const getBookingBorderClass = (clinic) => {\r\n    switch (clinic) {\r\n      case \"pcr\":\r\n        return classes.BookingBorderPCR;\r\n      case \"gynae\":\r\n        return classes.BookingBorderGynae;\r\n      case \"gp\":\r\n        return classes.BookingBorderGP;\r\n      case \"std\":\r\n        return classes.BookingBorderSTD;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getBookingsBox = (_bookings) => {\r\n    if (_bookings === null) {\r\n      return (\r\n        <div className={classes.LoadingProgress}>\r\n          <CircularProgress disableShrink />\r\n        </div>\r\n      );\r\n    } else if (_bookings.length >= 0) {\r\n      return (\r\n        <React.Fragment>\r\n          {_bookings.map(\r\n            (booking) =>\r\n              state.selectedClinics.findIndex(\r\n                (e) => e === booking.clinic.toUpperCase()\r\n              ) >= 0 && (\r\n                <div\r\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\r\n                  className={clsx(\r\n                    getBookingClass(booking.status),\r\n                    getBookingBorderClass(booking.clinic)\r\n                  )}\r\n                  onClick={(event) => bookingCliked(event, booking)}\r\n                >\r\n                  {`${\r\n                    booking.fullname\r\n                      ? booking.fullname\r\n                      : `${booking.forename} ${booking.surname}`\r\n                  }`.substring(0, 15)}\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\r\n            {\" \"}\r\n            + Add New Booking\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCloseDialogAddNew = () => {\r\n    setOpenDialogAddNew(false);\r\n  };\r\n\r\n  const handleClinicClicked = (clinic) => {\r\n    switch (clinic) {\r\n      case \"gynae\":\r\n        setOpenDialogGynae(true);\r\n        break;\r\n      case \"gp\":\r\n        setOpenDialogGP(true);\r\n        break;\r\n      case \"std\":\r\n        setOpenDialogSTD(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.Container}>\r\n        {getBookingsBox(filteredBookings)}\r\n      </div>\r\n\r\n      <BookingDialog\r\n        booking={selectedBooking}\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n      />\r\n\r\n      <NewBookingDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogAddNew}\r\n        handleClose={handleCloseDialogAddNew}\r\n        clinicClicked={handleClinicClicked}\r\n      />\r\n\r\n      <NewGPDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogGP}\r\n        handleClose={handleCloseDialogGP}\r\n      />\r\n\r\n      <NewSTDDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogSTD}\r\n        handleClose={handleCloseDialogSTD}\r\n      />\r\n\r\n      <NewGynaeDialog\r\n        date={date}\r\n        time={time}\r\n        open={openDialogGynae}\r\n        handleClose={handleCloseDialogGynae}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nDayViewCell.propTypes = {\r\n  key: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DayViewCell;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport DayViewCell from './DayViewCell';\r\nimport dateformat from 'dateformat';\r\n\r\n\r\n\r\n\r\nconst rows = [\r\n    '09:00 AM',\r\n    '09:15 AM', \r\n    '09:30 AM', \r\n    '09:45 AM',\r\n    '10:00 AM',\r\n    '10:15 AM',\r\n    '10:30 AM',\r\n    '10:45 AM',\r\n    '11:00 AM',\r\n    '11:15 AM',\r\n    '11:30 AM',\r\n    '11:45 AM',\r\n    '12:00 PM',\r\n    '12:15 PM',\r\n    '12:30 PM',\r\n    '12:45 PM',\r\n    '01:00 PM',\r\n    '01:15 PM',\r\n    '01:30 PM',\r\n    '01:45 PM',\r\n    '02:00 PM',\r\n    '02:15 PM',\r\n    '02:30 PM',\r\n    '02:45 PM',\r\n    '03:00 PM',\r\n    '03:15 PM',\r\n    '03:30 PM',\r\n    '03:45 PM',\r\n    '04:00 PM',\r\n    '04:15 PM',\r\n    '04:30 PM',\r\n    '04:45 PM',\r\n    '05:00 PM',\r\n    '05:15 PM',\r\n    '05:30 PM',\r\n    '05:45 PM',\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    table: {\r\n        width: \"100%\",\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        overflowY: \"auto\"\r\n    },\r\n\r\n    th: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        fontcolor: \"#555\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"15px\",\r\n        paddingTop: \"5px\",\r\n        paddingBottom: \"5px\",\r\n        width: \"12%\", \r\n    },\r\n\r\n    td: {\r\n        border: \"1px solid #ddd\",\r\n        borderCollapse: \"collapse\",\r\n        verticalAlign: \"middle\",\r\n        height : \"50px\",\r\n        width: \"84%\", \r\n    },\r\n\r\n    titleLabel: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#777\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n    titleLabelToday: {\r\n        paddingBottom: \"17px\",\r\n        paddingTop: \"17px\",\r\n        color: \"#fff\",\r\n        backgroundColor: \"#1a73e8\",\r\n        fontSize: \"16px\"\r\n    },\r\n\r\n  }));\r\n\r\nconst DayView = ({date}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\r\n            <table className={classes.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"7%\"}}>\r\n                        \r\n                        </th>\r\n                        <th style={{width: \"84%\"}}>\r\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\r\n                                        {dateformat(date,'dddd')}\r\n                                </div>                                \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n             </table>\r\n\r\n        </div>\r\n\r\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\r\n                <table className={classes.table}>   \r\n                    <tbody>\r\n                        {rows.map(row => (\r\n                            <tr>\r\n                                <td style={{width: \"7%\"}}>\r\n                                    {row}\r\n                                </td>\r\n                               \r\n                                <td className={classes.td}>\r\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \r\n                                </td>\r\n                            \r\n                            </tr>\r\n                        ))}            \r\n                    </tbody>\r\n                </table>\r\n            </div>                    \r\n      \r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nDayView.propTypes = {\r\n    date: PropTypes.any.isRequired\r\n  };\r\n\r\n\r\nexport default DayView;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MonthView from './MonthView';\r\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport WeekView from './WeekView';\r\nimport dateformat from 'dateformat';\r\nimport DayView from './DayView';\r\nimport GlobalState from '../../GlobalState';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { CalendarColors } from './colors';\r\n\r\nconst Clinics = [\r\n    {clinic: \"PCR\", color: CalendarColors.PCR_COLOR},\r\n    {clinic: \"GYNAE\", color: CalendarColors.GYNAE_COLOR},\r\n    {clinic: \"GP\", color: CalendarColors.GP_COLOR},\r\n    {clinic: \"STD\", color: CalendarColors.STD_COLOR}\r\n]\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontSize: \"24px\",\r\n        fontColor: \"#333\"\r\n    },\r\n\r\n  }));\r\n\r\nexport default function CalendarView() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const [day, setDay] = React.useState(new Date());\r\n\r\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\r\n\r\n    const [weekDates, setWeekDates] = React.useState([]);\r\n\r\n    const [mode, setMode] = React.useState('month');\r\n    const [selectedTab, setSeletedTab] = React.useState('month');\r\n\r\n    const [filter,setFilter] = React.useState('');\r\n\r\n    const filterChanged = (event) =>{\r\n        setFilter(event.target.value);\r\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\r\n      }\r\n\r\n      const removeFilter = () =>\r\n      {\r\n        setFilter('');\r\n        setState(state => ({...state, dayViewCalFilter : ''}));\r\n      }\r\n\r\n\r\n    useEffect( () => {\r\n        const today = new Date();\r\n        const dayofWeek = today.getDay();\r\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\r\n        setFirstDayofWeek(firstdayofweek);\r\n        setState(state => ({...state, AdminCalendarCache : []}));\r\n        setState(state => ({...state, selectedClinics : [\"PCR\", \"GP\", \"GYNAE\", \"STD\"]}));\r\n\r\n        return () =>\r\n        {\r\n            setState(state => ({...state, AdminCalendarCache : []}));\r\n            removeFilter();\r\n        }\r\n       \r\n    }, []);\r\n\r\n\r\n    useEffect( () => {\r\n        const dates = [];\r\n        for (var i = 0; i < 7 ; i++)\r\n        {\r\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\r\n        }\r\n        setWeekDates(dates);\r\n\r\n    }, [firstDayofWeek]);\r\n\r\n    const handlePrevButton = (event) =>\r\n    {\r\n       if (mode === 'month')\r\n       {\r\n            if (month === 1)\r\n            {\r\n                setYear(year - 1);\r\n            } \r\n\r\n            const newMonth = month === 1 ? 12 : month - 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n       } \r\n       else if (mode === 'week')\r\n       {\r\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\r\n           setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n           setDay(newFirstDayofWeek);\r\n           setMonth(newFirstDayofWeek.getMonth() + 1);\r\n           setYear(newFirstDayofWeek.getFullYear());\r\n\r\n       }\r\n       else if (mode === 'day')\r\n       {\r\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\r\n           setDay(newDay);\r\n\r\n           const dayofWeek = newDay.getDay();\r\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n\r\n           setMonth(newDay.getMonth() + 1);\r\n           setYear(newDay.getFullYear());\r\n       }\r\n    }\r\n\r\n    const handleNextButton = (event) =>\r\n    {\r\n        if (mode === 'month')\r\n        {\r\n            if (month === 12)\r\n            {\r\n                setYear(year + 1);\r\n            } \r\n       \r\n            const newMonth = month === 12 ? 1 : month + 1;\r\n            setMonth(newMonth);\r\n\r\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        }\r\n        else if (mode === 'week')\r\n        {\r\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\r\n            setFirstDayofWeek(newFirstDayofWeek);\r\n\r\n            setDay(newFirstDayofWeek);\r\n            setMonth(newFirstDayofWeek.getMonth() + 1);\r\n            setYear(newFirstDayofWeek.getFullYear());\r\n\r\n        }\r\n        else if (mode === 'day')\r\n        {\r\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\r\n            setDay(newDay);\r\n\r\n            const dayofWeek = newDay.getDay();\r\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n \r\n            setMonth(newDay.getMonth() + 1);\r\n            setYear(newDay.getFullYear());\r\n        }\r\n    }\r\n\r\n    const goToday = (event) => {\r\n        const newDay = new Date();\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n    }\r\n\r\n    const dayClicked = (event, date) =>\r\n    {\r\n        const newDay = new Date(date);\r\n        const dayofWeek = newDay.getDay();\r\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\r\n        setDay(newDay);\r\n        setMonth(newDay.getMonth() + 1);\r\n        setYear(newDay.getFullYear());\r\n        setSeletedTab('day');\r\n        setMode('day');\r\n    }\r\n\r\n    const getContentFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            return (\r\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <DayView date={day}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCalendarTitleFromMode = (_mode) => {\r\n        if (_mode === 'month')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \r\n            );\r\n        }    \r\n        else if (_mode === 'week')\r\n        {\r\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\r\n            let endofWeekStr = '';\r\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'d');\r\n            }else\r\n            {\r\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\r\n            }\r\n\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\r\n            );\r\n            \r\n        }\r\n        else if (_mode === 'day')\r\n        {\r\n            return (\r\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const handleTabChanged = (event, value) => {\r\n        if (value && value.length)\r\n        {\r\n          setSeletedTab(value);\r\n          setMode(value);\r\n        }\r\n    };\r\n\r\n    const getPrevButtonTitle = (_mode) =>\r\n    {\r\n        return `Previuos ${mode}`;\r\n    }\r\n\r\n    const getNextButtonTitle = (_mode) =>\r\n    {\r\n        return `Next ${mode}`;\r\n    }\r\n\r\n    const clinicClicked = (clinic) =>\r\n    {\r\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\r\n        {\r\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\r\n        }else\r\n        {\r\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\r\n        }\r\n    }\r\n\r\n    const getClinicGuide = () =>\r\n    {\r\n        return (\r\n            <div>\r\n               <Grid container spacing={1}>\r\n                   {Clinics.map( item => (\r\n                       <Grid item>\r\n                           <div \r\n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", width:\"70px\", textAlign:\"center\", cursor:\"pointer\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", width:\"70px\", textAlign:\"center\", cursor:\"pointer\"}}\r\n                                onClick= {() => clinicClicked(item.clinic)}   \r\n                                > \r\n                               {item.clinic}\r\n                           </div>\r\n                        </Grid>\r\n                   ))\r\n                   }\r\n               </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {getClinicGuide()}\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\r\n            >  \r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\r\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"prev\"\r\n                                onClick = {handlePrevButton}\r\n                                >\r\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\r\n                        <IconButton \r\n                                color=\"default\" \r\n                                aria-label=\"next\"\r\n                                onClick = {handleNextButton}\r\n                                >\r\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-end\"\r\n                        spacing = {3}\r\n                        >\r\n                            <Grid item>\r\n                                    {getCalendarTitleFromMode(mode)}\r\n                            </Grid>\r\n                            {mode === 'day' && (\r\n                                        <Grid item>\r\n                                                <TextField\r\n                                                    variant=\"standard\"\r\n                                                    style={{marginBottom : \"5px\"}}\r\n                                                    value={filter}\r\n                                                    onChange={filterChanged}\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    id=\"filter\"\r\n                                                    label=\"Filter\"\r\n                                                    name=\"filter\"\r\n                                                    autoComplete=\"off\"\r\n                                                    InputProps={{\r\n                                                        endAdornment : \r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <Tooltip title=\"Clear\">\r\n                                                                            <IconButton\r\n                                                                            aria-label=\"remove filter\"\r\n                                                                            onClick={() => removeFilter()}\r\n                                                                            onMouseDown={() => removeFilter()}\r\n                                                                        >\r\n                                                                            <CloseIcon/>\r\n                                                                        </IconButton>\r\n                                                                </Tooltip>\r\n                                                            \r\n                                                            </InputAdornment>\r\n                                                          \r\n                                                    }}\r\n                                                   \r\n                                                />\r\n                                        </Grid>\r\n                            )}\r\n                           \r\n                    </Grid>\r\n                \r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\r\n                    <ToggleButtonGroup\r\n                        value={selectedTab}\r\n                        exclusive\r\n                        onChange={handleTabChanged}\r\n                        aria-label=\"select view mode\"\r\n                    >\r\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\r\n                                month\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\r\n                                week\r\n                        </ToggleButton>\r\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\r\n                                day\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n\r\n           </Grid> \r\n\r\n             {getContentFromMode(mode)}\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n}","import DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\r\n/// PCR ------------------\r\nimport FindByRef from \"./PCR/FindByRef\";\r\nimport BookingTable from \"./PCR/BookingTable\";\r\nimport DashboardPreview from \"./PCR/DashboardPreview\";\r\nimport UnmatchedRecords from \"./PCR/UnmatchedRecords\";\r\n// import CalendarView from \"./PCR/calendar/CalendarView\";\r\nimport PCRCalendarView from \"./PCR/calendar-admin/CalendarView\";\r\n//-----------------------\r\n\r\n/// Gynae -------------------\r\nimport GynaeBookingTable from \"./Gynae/BookingTable\";\r\nimport GynaeDashboardPreview from \"./Gynae/DashboardPreview\";\r\nimport GynaeFindByRef from \"./Gynae/FindByRef\";\r\nimport GynaeCalendarView from \"./Gynae/calendar-admin/CalendarView\";\r\n//----------------------------\r\n\r\n/// GP -------------------\r\nimport GPBookingTable from \"./GP/BookingTable\";\r\nimport GPDashboardPreview from \"./GP/DashboardPreview\";\r\nimport GPFindByRef from \"./GP/FindByRef\";\r\nimport GPCalendarView from \"./GP/calendar-admin/CalendarView\";\r\n//----------------------------\r\n\r\n/// GP -------------------\r\nimport STDBookingTable from \"./STD/BookingTable\";\r\nimport STDDashboardPreview from \"./STD/DashboardPreview\";\r\nimport STDFindByRef from \"./STD/FindByRef\";\r\nimport STDCalendarView from \"./STD/calendar-admin/CalendarView\";\r\n//----------------------------\r\n\r\n// Admin ----------------\r\nimport AdminDashBoardPreview from \"./DashboardPreview\";\r\nimport AdminFindByRef from \"./Admin/FindByRef\";\r\nimport AdminBookingTable from \"./Admin/BookingTable\";\r\nimport AdminCalendarView from \"./Admin/calendar-admin/CalendarView\";\r\n\r\n//---------------\r\n\r\nexport const MenuList_Admin = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `oldBookings`,\r\n    title: `Old Bookings`,\r\n    icon: <HistoryIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 5,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n\r\n  {\r\n    index: 7,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n\r\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const MenuList_Gynae = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `oldBookings`,\r\n    title: `Old Bookings`,\r\n    icon: <HistoryIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 5,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const MenuList_GP = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `oldBookings`,\r\n    title: `Old Bookings`,\r\n    icon: <HistoryIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 5,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const MenuList_STD = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `oldBookings`,\r\n    title: `Old Bookings`,\r\n    icon: <HistoryIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 5,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const MenuList_PCR = [\r\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\r\n  {\r\n    index: 1,\r\n    id: `recentBookings`,\r\n    title: `Recent Bookings`,\r\n    icon: <AutorenewIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `liveBookings`,\r\n    title: `Live Bookings`,\r\n    icon: <LiveTvIcon />,\r\n  },\r\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\r\n  {\r\n    index: 5,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: `allBookings`,\r\n    title: `All Bookings`,\r\n    icon: <DescriptionIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: `completedBookings`,\r\n    title: `Completed Bookings`,\r\n    icon: <PlaylistAddCheckIcon />,\r\n  },\r\n  {\r\n    index: 8,\r\n    id: `positiveBookings`,\r\n    title: `Positive Results`,\r\n    icon: <AddCircleOutlineIcon />,\r\n  },\r\n  {\r\n    index: 9,\r\n    id: `latebookings`,\r\n    title: `40 Hours Late`,\r\n    icon: <HourglassEmptyIcon />,\r\n  },\r\n  {\r\n    index: 10,\r\n    id: `deletedBookings`,\r\n    title: `Deleted Records`,\r\n    icon: <DeleteIcon />,\r\n  },\r\n  {\r\n    index: 11,\r\n    id: `trBookings`,\r\n    title: `TR Bookings`,\r\n    icon: <AirplanemodeActiveIcon />,\r\n  },\r\n  {\r\n    index: 12,\r\n    id: `unmatchedRecords`,\r\n    title: `Unmatched Records`,\r\n    icon: <WarningIcon />,\r\n  },\r\n  {\r\n    index: 13,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n  // {\r\n  //   index: 14,\r\n  //   id: `adminCalendarView`,\r\n  //   title: `Admin Calendar`,\r\n  //   icon: <EventNoteIcon />,\r\n  // },\r\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\r\n];\r\n\r\nexport const MenuList_PCRLAB = [\r\n  {\r\n    index: 0,\r\n    id: `todayBookings`,\r\n    title: `Today's Bookings`,\r\n    icon: <NewReleasesIcon />,\r\n  },\r\n  {\r\n    index: 1,\r\n    id: `liveBookings`,\r\n    title: `Live Bookings`,\r\n    icon: <LiveTvIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: `futureBookings`,\r\n    title: `Future Bookings`,\r\n    icon: <TimelineIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: `latebookings`,\r\n    title: `40 Hours Late`,\r\n    icon: <HourglassEmptyIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: `calendarView`,\r\n    title: `Calendar View`,\r\n    icon: <DateRangeIcon />,\r\n  },\r\n];\r\n\r\nexport const getMenuContent = (role, index) => {\r\n  if (role === \"pcr\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <DashboardPreview />;\r\n      case 1:\r\n        return <BookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <BookingTable date=\"today\" />;\r\n      case 3:\r\n        return <BookingTable date=\"live\" />;\r\n      case 4:\r\n        return <BookingTable date=\"old\" />;\r\n      case 5:\r\n        return <BookingTable date=\"future\" />;\r\n      case 6:\r\n        return <BookingTable date=\"all\" />;\r\n      case 7:\r\n        return <BookingTable date=\"completed\" />;\r\n      case 8:\r\n        return <BookingTable date=\"positive\" />;\r\n      case 9:\r\n        return <BookingTable date=\"late\" />;\r\n      case 10:\r\n        return <BookingTable date=\"deleted\" />;\r\n      case 11:\r\n        return <BookingTable date=\"tr\" />;\r\n      case 12:\r\n        return <UnmatchedRecords />;\r\n      case 13:\r\n        //   return <CalendarView />;\r\n        // case 14:\r\n        return <PCRCalendarView />;\r\n      case 15:\r\n        return <FindByRef />;\r\n\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"pcrlab\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <BookingTable date=\"today\" />;\r\n      case 1:\r\n        return <BookingTable date=\"live\" />;\r\n      case 2:\r\n        return <BookingTable date=\"future\" />;\r\n      case 3:\r\n        return <BookingTable date=\"late\" />;\r\n      case 4:\r\n        return <PCRCalendarView />;\r\n\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"gynae\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <GynaeDashboardPreview />;\r\n      case 1:\r\n        return <GynaeBookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <GynaeBookingTable date=\"today\" />;\r\n      case 3:\r\n        return <GynaeBookingTable date=\"old\" />;\r\n      case 4:\r\n        return <GynaeBookingTable date=\"future\" />;\r\n      case 5:\r\n        return <GynaeBookingTable date=\"all\" />;\r\n      case 6:\r\n        return <GynaeBookingTable date=\"deleted\" />;\r\n      case 7:\r\n        return <GynaeCalendarView />;\r\n      case 8:\r\n        return <GynaeFindByRef />;\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"gp\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <GPDashboardPreview />;\r\n      case 1:\r\n        return <GPBookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <GPBookingTable date=\"today\" />;\r\n      case 3:\r\n        return <GPBookingTable date=\"old\" />;\r\n      case 4:\r\n        return <GPBookingTable date=\"future\" />;\r\n      case 5:\r\n        return <GPBookingTable date=\"all\" />;\r\n      case 6:\r\n        return <GPBookingTable date=\"deleted\" />;\r\n      case 7:\r\n        return <GPCalendarView />;\r\n      case 8:\r\n        return <GPFindByRef />;\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"std\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <STDDashboardPreview />;\r\n      case 1:\r\n        return <STDBookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <STDBookingTable date=\"today\" />;\r\n      case 3:\r\n        return <STDBookingTable date=\"old\" />;\r\n      case 4:\r\n        return <STDBookingTable date=\"future\" />;\r\n      case 5:\r\n        return <STDBookingTable date=\"all\" />;\r\n      case 6:\r\n        return <STDBookingTable date=\"deleted\" />;\r\n      case 7:\r\n        return <STDCalendarView />;\r\n      case 8:\r\n        return <STDFindByRef />;\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else if (role === \"admin\") {\r\n    switch (index) {\r\n      case 0:\r\n        return <AdminDashBoardPreview />;\r\n      case 1:\r\n        return <AdminBookingTable date=\"recent\" />;\r\n      case 2:\r\n        return <AdminBookingTable date=\"today\" />;\r\n      case 3:\r\n        return <AdminBookingTable date=\"old\" />;\r\n      case 4:\r\n        return <AdminBookingTable date=\"future\" />;\r\n      case 5:\r\n        return <AdminBookingTable date=\"all\" />;\r\n      case 6:\r\n        return <AdminBookingTable date=\"deleted\" />;\r\n      case 7:\r\n        return <AdminCalendarView />;\r\n      case 8:\r\n        return <AdminFindByRef />;\r\n      default:\r\n        return `Page Not Found!`;\r\n    }\r\n  } else {\r\n    return `Page Not Found!`;\r\n  }\r\n};\r\n\r\nexport const getMenuRole = (role) => {\r\n  switch (role) {\r\n    case \"admin\":\r\n      return MenuList_Admin;\r\n    case \"pcr\":\r\n      return MenuList_PCR;\r\n    case \"pcrlab\":\r\n      return MenuList_PCRLAB;\r\n\r\n    case \"gynae\":\r\n      return MenuList_Gynae;\r\n    case \"gp\":\r\n      return MenuList_GP;\r\n    case \"std\":\r\n      return MenuList_STD;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport const getMenuId = (role, index) => {\r\n  const MenuList = getMenuRole(role);\r\n  for (var i = 0; i < MenuList.length; i++) {\r\n    if (MenuList[i].index === index) {\r\n      return MenuList[i].id;\r\n    }\r\n  }\r\n\r\n  return `Page Not Found!`;\r\n};\r\n\r\nexport const getMenuIndex = (role, id) => {\r\n  const MenuList = getMenuRole(role);\r\n  for (var i = 0; i < MenuList.length; i++) {\r\n    if (MenuList[i].id === id) {\r\n      return MenuList[i].index;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport logoImage from \"./images/logo.png\"\r\n\r\nimport {\r\n  Grid,\r\n  AppBar,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Paper,\r\n  Backdrop,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { IconButton, Toolbar } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport Copyright from \"./CopyRight\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserService from \"./services/UserService\";\r\nimport { getMenuId } from \"./MenuList\";\r\n\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { borderRadius } from \"@material-ui/system\";\r\nimport { setRole } from \"./Role\";\r\nimport { getGlobalPath } from \"./GlobalPath\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/images/bg.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    // margin: theme.spacing(15, 2),\r\n    padding: theme.spacing(4,4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    position: \"relative\"\r\n    // border: `2px solid ${theme.palette.primary.main}`,\r\n    // borderRadius: \"8px\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color: \"#f5f5f5\",\r\n  },\r\n\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  alert: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  pageBg:{\r\n    paddingTop: theme.spacing(15),\r\n   \r\n    background: \"linear-gradient(3deg, rgba(2,0,36,1) 0%, rgba(9,77,121,1) 35%, rgba(0,212,255,1) 100%)\",\r\n    height: \"100vh\",\r\n    margin: 0,\r\n    padding:0,\r\n  },\r\n\r\n  appbarCenter: {\r\n    position: \"absolute\",\r\n    // width: \"260px\",\r\n    top: \"-40px\",\r\n    right: \"0\",\r\n    marginLeft: \"-145px\",\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px 20px 15px 20px\",\r\n    borderRadius: \"8px\"\r\n  },\r\n\r\n  logoImage: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    marginLeft: \"0px\",\r\n  },\r\n\r\n  appbarTitle: {\r\n    color: \"#00a1c5\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    marginRight: \"15px\",\r\n  },\r\n\r\n  adminPanelLabel: {\r\n    color: theme.palette.primary.main, \r\n    marginBottom:\"20px\"\r\n  }\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\r\n\r\n\r\n  let history = useHistory();\r\n\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const [username, setUsername] = React.useState(\"\");\r\n\r\n  const [saveChecked, setSaveChecked] = React.useState(false);\r\n\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const [error, setError] = React.useState(null);\r\n  const [submiting, setSubmiting] = React.useState(false);\r\n\r\n  const signIn = () => {\r\n    setSubmiting(true);\r\n\r\n    UserService.signIn({\r\n      username: username,\r\n      password: password,\r\n    })\r\n      .then((res) => {\r\n        setSubmiting(false);\r\n        if (res.data.status === \"OK\") {\r\n          setError(null);\r\n          const token = res.data.token;\r\n          if (saveChecked) {\r\n            localStorage.setItem(\"medexadmin-auth-token\", token);\r\n          } else {\r\n            sessionStorage.setItem(\"medexadmin-auth-token\", token);\r\n          }\r\n\r\n          setState((state) => ({ ...state, signedIn: true }));\r\n          setRole(res.data.roles[0])\r\n          setState((state) => ({ ...state, currentMenuIndex: 0 }));\r\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 0)}`));\r\n        } else if (res.data.status === \"FAILED\") {\r\n          setError(res.data.error);\r\n        } else {\r\n          setError(\"Sorry, something went wrong, please try again.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setSubmiting(false);\r\n        console.error(err);\r\n        setError(\"Sorry, something went wrong, please try again.\");\r\n      });\r\n  };\r\n\r\n  const usernameChanged = (event) => {\r\n    setUsername(event.target.value);\r\n    setError(null);\r\n  };\r\n\r\n  const passwordChanged = (event) => {\r\n    setPassword(event.target.value);\r\n    setError(null);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const saveCheckedChanged = (event) => {\r\n    setSaveChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.pageBg}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n\r\n        <Paper elevation={20}>\r\n          <div className={classes.paper}>\r\n            <div className={classes.appbarCenter}>\r\n              <span className={classes.appbarTitle}>\r\n                Medical Express Clinic\r\n              </span>\r\n\r\n              <img\r\n                className={classes.logoImage}\r\n                src={getGlobalPath(\"/images/logo.png\")}\r\n                alt=\"logo image\"\r\n              />\r\n            </div>\r\n\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              className={classes.adminPanelLabel}\r\n            >\r\n              Admin Panel\r\n            </Typography>\r\n\r\n            {error && (\r\n              <div className={classes.alert}>\r\n                <Alert severity=\"error\">\r\n                  {\" \"}\r\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\r\n                    {error}\r\n                  </div>\r\n                </Alert>\r\n              </div>\r\n            )}\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"email\"\r\n              autoComplete=\"username\"\r\n              value={username}\r\n              onChange={usernameChanged}\r\n              on\r\n              autoFocus\r\n            />\r\n            <FormControl\r\n              fullWidth\r\n              required\r\n              className={clsx(classes.margin, classes.textField)}\r\n              variant=\"outlined\"\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  signIn();\r\n                }\r\n              }}\r\n            >\r\n              <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                {\" \"}\r\n                Password{\" \"}\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                name=\"outlined-adornment-password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={passwordChanged}\r\n                autoComplete=\"current-password\"\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      tabindex=\"-1\"\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={100}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControlLabel\r\n              style={{ textAlign: \"left\", width: \"100%\" }}\r\n              control={\r\n                <Checkbox\r\n                  value=\"remember\"\r\n                  color=\"secondary\"\r\n                  checked={saveChecked}\r\n                  onChange={saveCheckedChanged}\r\n                />\r\n              }\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={signIn}\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n\r\n        <Backdrop className={classes.backdrop} open={submiting}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <CircularProgress color=\"inherit\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\r\n                {\" \"}\r\n                {/* Please wait ...{\" \"} */}\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </Backdrop>\r\n\r\n        <Box mt={5} style={{ color: \"#eee\" }}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Badge,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  ListItemIcon,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { getMenuRole, getMenuId } from \"./MenuList\";\r\nimport { border, borderBottom } from \"@material-ui/system\";\r\nimport { getGlobalPath } from \"./GlobalPath\";\r\n\r\nimport GyaneBookService from \"./Gynae/services/BookService\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n\r\n  icon: {\r\n    fontSize: \"1rem\",\r\n    color: \"#777\",\r\n    cursor: \"pointer\",\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"8px\",\r\n    borderBottom: \"1px solid #eee\",\r\n  },\r\n\r\n  iconSelected: {\r\n    color: \"#fff\",\r\n    backgroundColor:  theme.palette.primary.main,\r\n    transition: \"all 0.1s ease-in-out\"\r\n  },\r\n\r\n  menuText: {\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"500\"\r\n  },\r\n\r\n  Badge:{\r\n    backgroundColor: \"rgb(220, 0, 78)\",\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    textAlign:\"center\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"0.85rem\",\r\n    lineHeight: \"0.85rem\",\r\n    padding:\"7px\",\r\n    marginTop:\"9px\",\r\n    width:\"28px\"\r\n\r\n  }\r\n}));\r\n\r\nexport default function MyMenu() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const updateShouldRefundsCount = async () =>\r\n  {\r\n    try{\r\n      const res = await GyaneBookService.getShouldRefundsCount()\r\n      if (res && res.data && res.data.status === \"OK\")\r\n      {\r\n        setState(state => ({...state, shouldRefunsCount: res.data.count}))\r\n      }\r\n    }\r\n    catch(ex)\r\n    {\r\n      console.error(ex)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(state.currentMenuIndex);\r\n    updateShouldRefundsCount()\r\n  }, [state.currentMenuIndex]);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setState((state) => ({ ...state, currentMenuIndex: index }));\r\n\r\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List>\r\n        {state.role &&\r\n          getMenuRole(state.role).map(\r\n            (item) =>\r\n              !item.hidden && (\r\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\r\n                // <ListItemIcon>\r\n                //     {item.icon}\r\n                // </ListItemIcon>\r\n                // <ListItemText primary={`${item.title}`} />\r\n                // </ListItem>\r\n                <React.Fragment key={`${item.id}`}>\r\n                  <div\r\n                    key={`${item.id}`}\r\n                    className={clsx(\r\n                      classes.icon,\r\n                      selectedIndex === item.index && classes.iconSelected\r\n                    )}\r\n                    onClick={(event) => handleListItemClick(event, item.index)}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                      spacing={3}\r\n                      style={{paddingLeft:\"15px\"}}\r\n                    >\r\n                      <Grid item>{item.icon}</Grid>\r\n\r\n                      <Grid item style={{textAlign:\"left\"}}>\r\n                        <span\r\n                          className={classes.menuText}\r\n                        >{`${item.title}`}</span>{\" \"}\r\n                      </Grid>\r\n\r\n                      {state.role === \"gynae\" && item.id === \"deletedBookings\" && state.shouldRefunsCount > 0 && (\r\n                        <span className={classes.Badge}> {state.shouldRefunsCount} </span>\r\n                      )}\r\n\r\n                    </Grid>\r\n                  </div>\r\n                </React.Fragment>\r\n              )\r\n          )}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\r\nimport GlobalState from \"./GlobalState\";\r\nimport MyMenu from \"./Menu\";\r\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\r\n\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Copyright from \"./CopyRight\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport dateformat from \"dateformat\";\r\nimport { getRole, setRole, clearRole } from \"./Role\";\r\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst StyledMenu = withStyles((theme) => ({\r\n  paper: {\r\n    marginTop: \"10px\",\r\n    // marginRight: \"5px\",\r\n    width: \"270px\",\r\n    height: \"240px\",\r\n    border: `1px solid #ddd`,\r\n    borderRadius: \"10px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n}))((props) => (\r\n  <Menu\r\n    elevation={4}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuApps = withStyles((theme) => ({\r\n  paper: {\r\n    marginTop: \"5px\",\r\n    // marginRight: \"5px\",\r\n    width: \"280px\",\r\n    height: \"280px\",\r\n    border: `1px solid #ddd`,\r\n    borderRadius: \"10px\",\r\n    padding: \"10px\",\r\n  },\r\n}))((props) => (\r\n  <Menu\r\n    elevation={4}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    // marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    overflowX: \"hidden\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      opacity: 0.9,\r\n    },\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n\r\n  appbarTitle: {\r\n    color: \"#00a1c5\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    marginRight: \"15px\",\r\n  },\r\n\r\n  appbarCenter: {\r\n    position: \"fixed\",\r\n    width: \"260px\",\r\n    top: \"10px\",\r\n    left: \"50%\",\r\n    marginLeft: \"-130px\",\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n    display: \"flex\",\r\n  },\r\n\r\n  logoImage: {\r\n    width: \"36px\",\r\n    height: \"36px\",\r\n    marginLeft: \"0px\",\r\n  },\r\n\r\n  userAvatar: {\r\n    backgroundColor: \"#fff\",\r\n    borderColor: \"#aaa\",\r\n    border: \"1px solid\",\r\n    color: \"#aaa\",\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  userAvatarSelected: {\r\n    backgroundColor: \"#fff\",\r\n    borderColor: theme.palette.primary.main,\r\n    border: \"1px solid\",\r\n    color: theme.palette.primary.main,\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  userAvatarBig: {\r\n    backgroundColor: \"#fff\",\r\n    borderColor: theme.palette.primary.main,\r\n    border: \"1px solid\",\r\n    color: theme.palette.primary.main,\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n  },\r\n\r\n  appBarText: {\r\n    color: \"#888\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  appBarAppsIcon: {\r\n    // color: \"#888\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"1.8rem\",\r\n  },\r\n\r\n  appBarAppsIconSelected: {\r\n    cursor: \"pointer\",\r\n    fontSize: \"1.8rem\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  usernameLabel: {\r\n    fontSize: \"1.2rem\",\r\n    color: theme.palette.primary.main,\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n\r\n  lastLoginLabel: {\r\n    color: \"#777\",\r\n    paddingTop: \"5px\",\r\n  },\r\n\r\n  appsLogo: {\r\n    width: \"70px\",\r\n    height: \"70px\",\r\n  },\r\n\r\n  appsBox: {\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    padding: \"2px\",\r\n    borderBottom: `5px solid #fff`,\r\n    borderRadius: \"5px\",\r\n    // border: \"2px solid #fff\",\r\n    \"&:hover\": {\r\n      //      border: `2px solid ${theme.palette.primary.main}`,\r\n      //      borderRadius: \"10px\",\r\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\r\n      transition: \"all 0.1s ease-in-out\",\r\n    },\r\n  },\r\n\r\n  appsBoxSelected: {\r\n    cursor: \"pointer\",\r\n    transition: \"all 0.1s ease-in-out\",\r\n    padding: \"2px\",\r\n    borderBottom: `5px solid${theme.palette.primary.light}`,\r\n    borderRadius: \"5px\",\r\n    // border: \"2px solid #fff\",\r\n    \"&:hover\": {\r\n      //      border: `2px solid ${theme.palette.primary.main}`,\r\n      //      borderRadius: \"10px\",\r\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\r\n      transition: \"all 0.1s ease-in-out\",\r\n    },\r\n  },\r\n\r\n  appsAdminLabel: {\r\n    color: \"#0264d4\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsPCRLabel: {\r\n    color: \"#4faef7\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsGynaeLabel: {\r\n    color: \"#e83caf\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsGPLabel: {\r\n    color: \"#f68529\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n  appsSTDLabel: {\r\n    color: \"#f68529\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.95rem\",\r\n    marginTop: \"-10px\",\r\n  },\r\n\r\n\r\n  \r\n\r\n  appsInToolbar: {\r\n    position: \"fixed\",\r\n    left: \"60px\",\r\n    top: \"-5px\",\r\n    height: \"65px\",\r\n    width: \"200px\",\r\n    overflow: \"hidden\",\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n\r\n  const [open, setOpen] = React.useState(isMobile ? false : true);\r\n\r\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\r\n\r\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\r\n  const handleUserAvatarClick = (event) => {\r\n    setAnchorUserAvatar(event.currentTarget);\r\n  };\r\n  const handleUserAvatarClose = () => {\r\n    setAnchorUserAvatar(null);\r\n  };\r\n\r\n  const [anchorApps, setAnchorApps] = React.useState(null);\r\n  const handleAppsClick = (event) => {\r\n    setAnchorApps(event.currentTarget);\r\n  };\r\n  const handleAppsClose = () => {\r\n    setAnchorApps(null);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  let location = useLocation();\r\n  React.useEffect(() => {\r\n    if (!state.role) return;\r\n    const index = getMenuIndex(\r\n      state.role,\r\n      getMenuIdFromGlobalPath(location.pathname)\r\n    );\r\n    setState((state) => ({ ...state, currentMenuIndex: index }));\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCurrentMenuIndex(state.currentMenuIndex);\r\n    if (isMobile) {\r\n      setOpen(false);\r\n    }\r\n  }, [state.currentMenuIndex]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"medexadmin-auth-token\");\r\n    sessionStorage.removeItem(\"medexadmin-auth-token\");\r\n    clearRole();\r\n\r\n    setState((state) => ({ signedIn: false }));\r\n    history.replace(\"./login\");\r\n  };\r\n\r\n  const appsClicked = (role) => {\r\n    setRole(role);\r\n    setState((state) => ({ ...state, role: role }));\r\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\r\n    handleAppsClose();\r\n  };\r\n\r\n  const getAppsLogo = (role) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/admin.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        );\r\n      case \"pcr\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/corona.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        );\r\n\r\n      case \"gynae\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/woman.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        );\r\n\r\n        case \"gp\":\r\n        return (\r\n          <img\r\n            src={getGlobalPath(\"/images/doctor.png\")}\r\n            className={classes.appsLogo}\r\n          />\r\n        ); \r\n\r\n        case \"std\":\r\n          return (\r\n            <img\r\n              src={getGlobalPath(\"/images/std-icon.png\")}\r\n              className={classes.appsLogo}\r\n            />\r\n          ); \r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getAppsLabel = (role) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\r\n      case \"pcr\":\r\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\r\n      case \"gynae\":\r\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\r\n        case \"gp\":\r\n          return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\r\n          case \"std\":\r\n            return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\r\n  \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.userId && state.role && (\r\n        <React.Fragment>\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\r\n              position=\"absolute\"\r\n              className={clsx(\r\n                classes.appBar,\r\n                false && open && classes.appBarShift\r\n              )}\r\n            >\r\n              <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  className={clsx(classes.menuButton)}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n\r\n                <div className={classes.appsInToolbar}>\r\n                  <Grid container direction=\"row\" alignItems=\"center\">\r\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\r\n                    <Grid item>\r\n                      <div style={{ paddingTop: \"8px\" }}>\r\n                        {getAppsLabel(state.role)}\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n                <div className={classes.appbarCenter}>\r\n                  {!isMobile && (\r\n                    <React.Fragment>\r\n                      <span className={classes.appbarTitle}>\r\n                        Medical Express Clinic\r\n                      </span>\r\n\r\n                      <img\r\n                        className={classes.logoImage}\r\n                        src={getGlobalPath(\"/images/logo.png\")}\r\n                        alt=\"logo image\"\r\n                      />\r\n                    </React.Fragment>\r\n                  )}\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    width: \"100%\",\r\n                    paddingLeft: \"2%\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row-reverse\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <Avatar\r\n                        className={\r\n                          anchorUserAvatar\r\n                            ? classes.userAvatarSelected\r\n                            : classes.userAvatar\r\n                        }\r\n                        onClick={handleUserAvatarClick}\r\n                      >\r\n                        <IconButton>\r\n                          <PersonOutlineIcon />\r\n                        </IconButton>\r\n                      </Avatar>\r\n                    </Grid>\r\n\r\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\r\n                      <Grid item>\r\n                        <IconButton onClick={handleAppsClick}>\r\n                          <AppsIcon\r\n                            className={\r\n                              anchorApps\r\n                                ? classes.appBarAppsIconSelected\r\n                                : classes.appBarAppsIcon\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            <StyledMenu\r\n              id=\"user-avatar-menu\"\r\n              anchorEl={anchorUserAvatar}\r\n              keepMounted\r\n              open={Boolean(anchorUserAvatar)}\r\n              onClose={handleUserAvatarClose}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Avatar className={classes.userAvatarBig}>\r\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\r\n                  </Avatar>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div className={classes.usernameLabel}>\r\n                    {\" \"}\r\n                    {state.userId?.username}{\" \"}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item>\r\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\r\n                    Logged in at :\r\n                  </span>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div className={classes.lastLoginLabel}>\r\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Button\r\n                    onClick={handleLogout}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      marginTop: \"30px\",\r\n                      width: \"150px\",\r\n                      borderRadius: \"30px\",\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </StyledMenu>\r\n\r\n            <StyledMenuApps\r\n              id=\"apps-menu\"\r\n              anchorEl={anchorApps}\r\n              keepMounted\r\n              open={Boolean(anchorApps)}\r\n              onClose={handleAppsClose}\r\n            >\r\n              <Grid container spacing={1}>\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"admin\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"admin\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"pcr\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"pcr\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"gynae\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"gynae\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"gp\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"gp\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\r\n                      state.role === \"std\"\r\n                        ? classes.appsBoxSelected\r\n                        : classes.appsBox\r\n                    }\r\n                    onClick={() => appsClicked(\"std\")}\r\n                  >\r\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\r\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </StyledMenuApps>\r\n\r\n            <Drawer\r\n              variant={isMobile ? \"temporary\" : \"persistent\"}\r\n              classes={{\r\n                paper: clsx(\r\n                  classes.drawerPaper,\r\n                  !open && classes.drawerPaperClose\r\n                ),\r\n              }}\r\n              open={open}\r\n            >\r\n              <div className={classes.toolbarIcon}>\r\n                <React.Fragment>\r\n                  <img\r\n                    className={classes.logoImage}\r\n                    src={getGlobalPath(\"/images/logo.png\")} \r\n                    alt=\"logo image\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                  />\r\n                  <span className={classes.appbarTitle}>\r\n                    <span style={{ fontSize: \"0.9rem\" }}>Medical Express</span>\r\n                  </span>\r\n                </React.Fragment>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n\r\n              <MyMenu />\r\n            </Drawer>\r\n\r\n            <main className={classes.content}>\r\n              <div className={classes.appBarSpacer} />\r\n              <Container\r\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\r\n                className={classes.container}\r\n              >\r\n                {getMenuContent(state.role, currentMenuIndex)}\r\n              </Container>\r\n            </main>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import UserService from \"./services/UserService\";\r\n\r\nexport async function getUserIdFromToken(token)\r\n{\r\n    try{\r\n       const res  = await UserService.checkToken({token: token})\r\n       if (res.data.status === 'OK')\r\n        {\r\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\r\n        }\r\n       else\r\n        {\r\n            return null\r\n        }\r\n    }\r\n    catch(err)\r\n    {\r\n        return null\r\n    }\r\n  \r\n}","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GlobalState from './GlobalState';\r\n\r\n\r\n\r\n\r\nimport SignIn from './SignIn';\r\nimport Dashboard from './Dashboard';\r\n\r\nimport { useLocation, useHistory} from \"react-router-dom\";\r\nimport { getUserIdFromToken } from './TokenVerifier';\r\nimport UserService from './services/UserService';\r\nimport { getMenuId } from './MenuList';\r\nimport { getRole, setRole } from './Role';\r\nimport { getGlobalPath } from './GlobalPath';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    appBar: {\r\n        position: 'static',\r\n        backgroundColor: \"#333\",\r\n        color: \"#fff\",\r\n        //alignItems: 'center'\r\n    \r\n      },\r\n\r\n      signOutButton:{\r\n        color: \"#fff\",\r\n        marginRight : \"20px\",\r\n        fontWeight: \"500\"\r\n      },\r\n\r\n      title: {\r\n        flexGrow : 1\r\n      }\r\n\r\n\r\n}));\r\n\r\nexport default function Navigator() {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [loaded, setLoaded] = React.useState(false)\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSignOut = () =>\r\n    {\r\n      setState(state => ({...state, signedIn: false}));\r\n\r\n    }\r\n\r\n    let location = useLocation();\r\n\r\n    React.useEffect(() => {\r\n\r\n      const checkToken = async () =>\r\n      {\r\n        const authToken = localStorage.getItem('medexadmin-auth-token') || sessionStorage.getItem('medexadmin-auth-token');\r\n        UserService.setToken(authToken)\r\n\r\n         if (!authToken)\r\n        {\r\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\r\n          setLoaded(true)\r\n          history.push(getGlobalPath('/login'));\r\n        }\r\n        else\r\n        {\r\n           const userId = await getUserIdFromToken(authToken);\r\n           if (!userId)\r\n           {\r\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\r\n              history.push(getGlobalPath('/login'));\r\n           }\r\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\r\n           {\r\n            if (!getRole())\r\n            {\r\n             setRole(userId.roles[0])\r\n            }\r\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\r\n            \r\n             history.push(getGlobalPath(`/${getMenuId(getRole(),0)}`));\r\n           }\r\n           else\r\n           {\r\n              if (!getRole())\r\n              {\r\n               setRole(userId.roles[0])\r\n              }\r\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\r\n           }\r\n\r\n           setLoaded(true)\r\n        }\r\n      }\r\n\r\n      checkToken();\r\n   \r\n    }, [location.pathname]);\r\n\r\n    const getComponentFromState = () =>\r\n    {\r\n\r\n      if (state.signedIn)\r\n      {\r\n        return <Dashboard/>\r\n      }\r\n      else\r\n      {\r\n          return <SignIn/>    \r\n      }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n            {\r\n              loaded && (\r\n                getComponentFromState()\r\n              )\r\n            }\r\n        \r\n        </React.Fragment>\r\n    );\r\n}","import React, { Fragment, Suspense, lazy } from \"react\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport theme from \"./theme\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport GlobalState from \"./GlobalState\";\r\nimport Navigator from './Navigator';\r\n\r\n\r\n\r\n\r\n// Configure JSS\r\n\r\n\r\nfunction App() {\r\n  const [state, setState] = React.useState({currentMenuIndex:0});\r\n\r\n  return (\r\n    <GlobalState.Provider value={[state, setState]}>\r\n      <BrowserRouter>\r\n        <MuiThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <GlobalStyles />\r\n\r\n       \r\n\r\n              <Navigator/>\r\n\r\n       \r\n\r\n\r\n        </MuiThemeProvider>\r\n      </BrowserRouter>\r\n    </GlobalState.Provider>\r\n  );\r\n}\r\n\r\nserviceWorker.register();\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}","\r\n\r\n\r\nconst FormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\r\n}\r\n\r\nconst FormatDateFromStringWithSlash = (str) =>\r\n{\r\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\r\n}\r\n\r\nconst RevertFormatDateFromString = (str) =>\r\n{\r\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\r\n}\r\n\r\n\r\nconst FormatDateFromStringShortYear = (str) =>\r\n{\r\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FormatDateFromString : FormatDateFromString,\r\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\r\n    RevertFormatDateFromString: RevertFormatDateFromString,\r\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\r\n}"],"sourceRoot":""}