{"version":3,"sources":["Screening/DateFormatter.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","CopyRight.js","GlobalPath.js","services/api.js","services/UserService.js","PCR/services/api.js","PCR/services/BookService.js","PCR/services/PDFService.js","PCR/PersonsBox.js","PCR/FindByRef.js","PCR/ResendEmailsDialog.js","services/CorporateService.js","Corporates.js","PCR/PayDialog.js","PCR/TimeStampDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","PCR/BookingDialog.js","PCR/Corporates.js","PCR/BookingTable.js","PCR/Title.js","PCR/Chart.js","PCR/CurrentVisits.js","PCR/BookingView.js","PCR/ResultsTimeReport.js","PCR/DashboardPreview.js","PCR/UnmatchedRecords.js","PCR/calendar-admin/MonthViewCell.js","PCR/calendar-admin/calendar-util.js","PCR/calendar-admin/MonthView.js","PCR/calendar-admin/WeekViewCell.js","PCR/calendar-admin/WeekView.js","PCR/calendar-admin/DayViewCell.js","PCR/calendar-admin/DayView.js","PCR/calendar-admin/CalendarView.js","Gynae/services/api.js","Gynae/services/BookService.js","Gynae/services/PDFService.js","Gynae/PayDialog.js","Blood/services/api.js","Blood/services/PDFService.js","Blood/services/BookService.js","Admin/services/api.js","Admin/services/BookService.js","Blood/PayDialog.js","GP/services/api.js","GP/services/PDFService.js","GP/services/BookService.js","GP/PayDialog.js","GP/BookingDialog.js","STD/services/api.js","STD/services/PDFService.js","STD/services/BookService.js","STD/PayDialog.js","STD/BookingDialog.js","Blood/TimeStampDialog.js","Blood/BookingDialog.js","Derma/services/api.js","Derma/services/PDFService.js","Derma/services/BookService.js","Derma/PayDialog.js","Derma/BookingDialog.js","Screening/services/api.js","Screening/services/PDFService.js","Screening/services/BookService.js","Screening/PayDialog.js","Screening/BookingDialog.js","Admin/BookingDialog.js","Blood/BloodReportDialog.js","Gynae/BookingDialog.js","Gynae/Corporates.js","Gynae/BookingTable.js","Gynae/Title.js","Gynae/Chart.js","Gynae/CurrentVisits.js","Gynae/BookingView.js","Gynae/DashboardPreview.js","Gynae/PersonsBox.js","Gynae/FindByRef.js","Gynae/calendar-admin/MonthViewCell.js","Gynae/calendar-admin/calendar-util.js","Gynae/calendar-admin/MonthView.js","Gynae/calendar-admin/WeekViewCell.js","Gynae/calendar-admin/WeekView.js","Gynae/NewBookingDialog.js","Gynae/calendar-admin/DayViewCell.js","Gynae/calendar-admin/DayView.js","Gynae/calendar-admin/CalendarView.js","GP/Corporates.js","GP/BookingTable.js","GP/Title.js","GP/Chart.js","GP/CurrentVisits.js","GP/BookingView.js","GP/DashboardPreview.js","GP/PersonsBox.js","GP/FindByRef.js","GP/calendar-admin/MonthViewCell.js","GP/calendar-admin/calendar-util.js","GP/calendar-admin/MonthView.js","GP/calendar-admin/WeekViewCell.js","GP/calendar-admin/WeekView.js","GP/NewBookingDialog.js","GP/calendar-admin/DayViewCell.js","GP/calendar-admin/DayView.js","GP/calendar-admin/CalendarView.js","STD/Corporates.js","STD/BookingTable.js","STD/Title.js","STD/Chart.js","STD/CurrentVisits.js","STD/BookingView.js","STD/DashboardPreview.js","STD/PersonsBox.js","STD/FindByRef.js","STD/calendar-admin/MonthViewCell.js","STD/calendar-admin/calendar-util.js","STD/calendar-admin/MonthView.js","STD/calendar-admin/WeekViewCell.js","STD/calendar-admin/WeekView.js","STD/NewBookingDialog.js","STD/calendar-admin/DayViewCell.js","STD/calendar-admin/DayView.js","STD/calendar-admin/CalendarView.js","Blood/Corporates.js","Blood/BookingTable.js","Blood/Title.js","Blood/Chart.js","Blood/CurrentVisits.js","Blood/BookingView.js","Blood/DashboardPreview.js","Blood/PersonsBox.js","Blood/FindByRef.js","Blood/calendar-admin/MonthViewCell.js","Blood/calendar-admin/calendar-util.js","Blood/calendar-admin/MonthView.js","Blood/calendar-admin/WeekViewCell.js","Blood/calendar-admin/WeekView.js","Blood/DateField.js","Blood/NewBookingDialog.js","Blood/calendar-admin/DayViewCell.js","Blood/UnmatchedRecords.js","Blood/calendar-admin/DayView.js","Blood/calendar-admin/CalendarView.js","Blood/MatchedRecords.js","Blood/ArchivedRecords.js","Blood/SentRecords.js","Derma/Corporates.js","Derma/BookingTable.js","Derma/Title.js","Derma/Chart.js","Derma/CurrentVisits.js","Derma/BookingView.js","Derma/DashboardPreview.js","Derma/PersonsBox.js","Derma/FindByRef.js","Derma/calendar-admin/MonthViewCell.js","Derma/calendar-admin/calendar-util.js","Derma/calendar-admin/MonthView.js","Derma/calendar-admin/WeekViewCell.js","Derma/calendar-admin/WeekView.js","Derma/NewBookingDialog.js","Derma/calendar-admin/DayViewCell.js","Derma/calendar-admin/DayView.js","Derma/calendar-admin/CalendarView.js","Screening/Corporates.js","Screening/BookingTable.js","Screening/Title.js","Screening/Chart.js","Screening/CurrentVisits.js","Screening/BookingView.js","Screening/DashboardPreview.js","Screening/PersonsBox.js","Screening/FindByRef.js","Screening/calendar-admin/MonthViewCell.js","Screening/calendar-admin/calendar-util.js","Screening/calendar-admin/MonthView.js","Screening/calendar-admin/WeekViewCell.js","Screening/calendar-admin/WeekView.js","Screening/NewBookingDialog.js","Screening/calendar-admin/DayViewCell.js","Screening/calendar-admin/DayView.js","Screening/calendar-admin/CalendarView.js","Title.js","TodayBookingView.js","TomorrowBookingView.js","TotalBookingView.js","LateBookingView.js","UnmatchedBookingView.js","ShouldRefundBookingView.js","Role.js","NewBloodResultsBookingView.js","NewScreeningBookingView.js","ShouldRefundBookingScreeningView.js","DashboardPreview.js","Admin/FindByRef.js","Admin/Corporates.js","Admin/BookingTable.js","Admin/calendar-admin/MonthViewCell.js","Admin/calendar-admin/calendar-util.js","Admin/calendar-admin/MonthView.js","Admin/calendar-admin/WeekViewCell.js","Admin/calendar-admin/WeekView.js","Admin/NewBookingDialog.js","Admin/calendar-admin/DayViewCell.js","Admin/calendar-admin/DayView.js","Admin/calendar-admin/CalendarView.js","Admin/SearchBookingTable.js","Payment/services/api.js","Payment/services/PDFService.js","Payment/services/BookService.js","Payment/Corporates.js","Payment/PayDialog.js","Payment/BookingDialog.js","Payment/services/PaymentService.js","Payment/services/PatientService.js","Payment/DateField.js","Payment/PatientDialog.js","Payment/NewPaymentDialog.js","Payment/ViewPaymentDialog.js","Payment/PaymentsTable.js","Payment/Title.js","Payment/Chart.js","Payment/CurrentVisits.js","Payment/BookingView.js","Payment/TotalReceivedPaymentView.js","Payment/TodayReceivedPaymentView.js","Payment/TodayLinkSentView.js","Payment/LatePaymentsView.js","Payment/DashboardPreview.js","Reports/services/api.js","Reports/services/BookService.js","Reports/ViewInvoiceDialog.js","Reports/SearchInvoices.js","Reports/PeriodicReport.js","Reports/CorporatesList.js","Reports/MonthlyChart.js","Reports/DashboardPreview.js","MenuList.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","Gynae/DateFormatter.js","GP/DateFormatter.js","STD/DateFormatter.js","Derma/DateFormatter.js","Admin/DateFormatter.js","PCR/PriceCalculator.js","Admin/PriceCalculator.js","Payment/DateFormatter.js","Blood/PriceCalculator.js","Gynae/PriceCalculator.js","GP/PriceCalculator.js","STD/PriceCalculator.js","Derma/PriceCalculator.js","Screening/PriceCalculator.js","Blood/DateFormatter.js","Payment/PriceCalculator.js","PCR/DateFormatter.js"],"names":["module","exports","FormatDateFromString","str","substr","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","secondary","contrastText","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","Copyright","Typography","variant","align","Link","href","Date","getFullYear","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","payBooking","bookingId","paymentMethod","corporate","unPayBooking","getTestsTimeReport","axiosRetry","retries","retryDelay","retryCount","get","getTestsTimeReportLast7","getTestsTimeReportLast30","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","resendEmailsWithBookingId","regenerateFilesWithBookingId","resendEmails","linkId","regenerateFiles","matchRecords","findBestMatches","getLinkDetails","getLinkDetailsWithBookingId","findBookingByRefBirthDate","bookingRef","birthDate","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getAllTRBookings","getLateBookings","getDeletedBookings","getLiveBookings","getCompletedBookings","getPositiveBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","getUnmatchedRecords","getUnmatchedRecordsArchived","archiveRecord","unArchiveRecord","PDFService","downloadCovidForm1","responseType","Accept","downloadCovidForm2","downloadPdfResult","downloadPdfCert","downloadPdfLabReport","useStyles","makeStyles","box","padding","borderRadius","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","textDecoration","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","infoTitle","fontWeight","infoData","title","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","BookedLabel","borderLeft","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","PositiveLabel","EditButton","RestoreButton","DeleteButton","SaveButton","CancelButton","TextBox","checkIcon","closeIcon","centeredLabel","alignItems","PersonsBox","classes","useContext","setState","useState","expanded","setExpanded","edit","person","editMode","setEditMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","saving","setSaving","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","gender","setGender","setTitle","forename","setForename","surname","setSurnme","email","setEmail","dob","setDOB","tel","setTel","postCode","setPostCode","address","setAddress","notes","setNotes","passport","setPassport","passport2","setPassport2","certificate","setCertificate","antiBodyTest","setAntiBodyTest","bookingDateChanged","event","target","value","bookingDateError","bookingTimeChanged","bookingTimeError","genderChanged","titleChanged","forenameChanged","surnameChanged","emailChanged","dobChanged","dobError","telChanged","postCodeChanged","addressChanged","passportChanged","passport2Changed","certificateChanged","checked","antiBodyTestChanged","handleEditModeChanged","forenameCapital","surnameCapital","toUpperCase","phone","passportNumber","passportNumber2","booking","_id","validateBooking","validateDate","length","charAt","test","year","parseInt","month","day","err","hour","minute","validateTime","bookingService","res","RefreshPersonInfo","handleDeleteModeChanged","del","handleRestoreModeChanged","Fragment","Grid","container","direction","justify","className","foundRecords","map","index","status","panel","item","deleted","onChange","isExpanded","AccordionSummary","expandIcon","aria-controls","Tooltip","style","AccordionDetails","hidden","Button","type","fullWidth","onClick","disabled","TextField","inputProps","FormControlLabel","formControl","control","Checkbox","name","label","calculatePrice","startIcon","file","Blob","data","fileURL","URL","createObjectURL","open","isBoolean","param","TextMaskCustom","props","inputRef","other","inputElement","mask","showMask","flexDirection","avatar","form","Find","Clear","NoRecordsFound","FindByRef","initialFocus","focus","setFocus","autoFocus","key","onFocus","onBlur","useFocus","focusProps","useEffect","clearField","refError","findRecords","indexOf","submiting","CssBaseline","component","FormControl","pattern","helperText","size","InputProps","inputComponent","onKeyPress","onTouchTap","Alert","severity","interval","refreshButton","RefLink","cursor","archiveButton","smartMatchButton","matchButton","resendButton","resendFilesButton","cancelButton","BorderLinearProgress","colorPrimary","bar","LinearProgress","LinearProgressWithLabel","Box","mr","minWidth","Math","round","PaperComponent","handle","cancel","Paper","ResendEmailsDialog","sending","setSending","sent","setSent","sendJustToPCR","setSendJustToPCR","sendingStatus","setSendingStatus","sendingProgress","setSendingProgress","setError","prevProgress","Dialog","onClose","clearInterval","handleClose","aria-labelledby","DialogTitle","Divider","DialogContent","setInterval","link","setTimeout","CorporateService","getCorporates","updateCorporates","corporatesStr","corporates","a","_corps","result","_corpsSplit","split","i","element","trim","push","sort","backdrop","zIndex","drawer","PayDialog","setPaymentMethod","setCorporate","setCorporates","loadCorporates","payClicked","bookingPayChanged","RadioGroup","aria-label","Radio","Select","labelId","MenuItem","bottom","right","Backdrop","CircularProgress","addMinutes","date","minutes","getTime","itemTitle","itemData","TimeStampDialog","linkTimeStamp","setLinkTimeStamp","filename","timeStamp","dateformat","setHours","bookingTimeNormalized","setMinutes","setSeconds","setMilliseconds","getDateFromBooking","samplingTimeStamp","DialogActions","CalendarColors","PCR_COLOR","GYNAE_COLOR","GP_COLOR","STD_COLOR","BLOOD_COLOR","DERMA_COLOR","SCREENING_COLOR","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","InvoiceDialog","defaultCode","setCode","setCodeError","description","setDescription","descriptionError","setDescriptionError","items","setItems","price","setPrice","priceError","setPriceError","allCodes","setAllCodes","invoice","fetchAllCodes","defaultCodes","refresh","validateItem","validateItem2","getGrandTotal","_items","total","forEach","parseFloat","saveClikced","formData","JSON","parse","fullname","dateAttended","grandTotal","Autocomplete","newValue","options","getOptionLabel","option","toLocaleString","currency","renderInput","params","startAdornment","InputAdornment","overflowY","IconButton","temp","splice","removeItem","justifyContent","multiline","rows","placeholder","ResendEmailsButton","PayButton","PayLabel","checkIconSmall","printInvoiceButton","editInvoiceButton","Transition","forwardRef","Slide","BookingDialog","copied","setCopied","openResendDialog","setOpenResendDialog","openPayDialog","setOpenPayDialog","selectedBooking","setSelectedBooking","refreshData","setRefreshData","setBooking","recordChanged","setRecordChanged","fieldChanged","setFieldChanged","openUndoPayDialog","setOpenUndoPayDialog","openTimeStampDialog","setOpenTimeStampDialog","covidVaccine","setCovidVaccine","handleCloseUndoPayDialog","isChanged","bookingDialogDataChanged","undoPaymentClicked","setInvoice","invoiceLoaded","setInvoiceLoaded","openInvoiceDialog","setOpenInvoiceDialog","emailSentInvoice","setEmailSentInvoice","fetchInvoice","OpenInvoiceDialog","TransitionComponent","keepMounted","aria-describedby","tr","top","left","role","clipboard","writeText","transition","deleteButtonDisabled","selfIsolate","postCodeSI","addressSI","NHSNumber","ethnicity","arrivalDate","flightNumber","lastDepartedDate","travellingFrom","_email","paid","paidBy","_booking","getDefaultCodes","DialogContentText","HideNowRows","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","fromDate","setFromDate","untilDate","setUntilDate","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","field","headerName","renderCell","getValue","openDetailsDialog","valueFormatter","formatTimeStamp","valueGetter","bookings","cachedBookings","isFetching","setData","setSelectedRow","seeDetailsDialogOpen","setSeeDetailsDialogOpen","filter","setFilter","useRef","todayStr","timeStampStr","loadData","api","filteredData","toLowerCase","find","page","setPage","placement","userId","username","faFileExcel","autoComplete","InputLabel","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","Switch","utils","DateFnsUtils","autoOk","disableToolbar","format","toString","KeyboardButtonProps","sheet","buttonText","extRef","PriceCalculator","Title","gutterBottom","children","createData","amount","emptyData","undefined","getCount","count","Chart","useTheme","loading","setLoading","fetchData","ResponsiveContainer","LineChart","XAxis","dataKey","stroke","YAxis","Label","angle","textAnchor","fill","Line","dot","depositContext","flex","bookingBox","boxShadow","getCurrentTimeSlot","now","min","getMinutes","getHours","pm","minStr","hourStr","pmStr","timeStr","getDay","getCurrentTimeSlotLabel","endTimeStr","CurrentVisits","current","setCurrent","setBookings","openDialog","setOpenDialog","currentTimeSlot","bookingCliked","_bookings","substring","getBookingsBox","seeMore","BookingView","setRefresh","Table","TableHead","TableRow","TableCell","TableBody","preventDefault","currentMenuIndex","getMenuIndex","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","dominantBaseline","ReportLabels","AverageLabel","less12Label","less24Label","less36Label","TableTitle","TableBorder","ResultsTimeReport","report","setReport","reportLast7","setReportLast7","reportLast30","setReportLast30","setOpen","lessThan12","lessThan24","lessThan36","PieChart","Pie","labelLine","entry","Cell","avg","lessThan12Percent","lessThan24Percent","lessThan36Percent","lessThan48","lessThan48Percent","overflow","fixedHeight","DashboardPreview","fixedHeightPaper","clsx","downloadPDFButton","UnmatchedRecords","selectedTab","disableId","smartMatchClicked","downloadLabReport","setDisableId","setSeletedTab","smartLinkId","setSmartLinkId","smartLinkDetails","setSmartLinkDetails","likelyBookings","setLikelyBookings","seeDetailsBooking","setSeeDetailsBooking","matching","setMatching","matched","setMatched","matchedBookings","lastPromise","currentPromise","e","ToggleButtonGroup","exclusive","ToggleButton","timeout","testDate","handleCheckChanged","likelihood","seeDetailsClicked","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","MonthViewCell","cellIndex","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","getMonth","AdminCalendarCache","record","method","query","fecthData","_bookingsCount","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","disableShrink","MAX_BOOKING_COUNT","percent","getBookingsCountGauge","CalendarUtil","getMonthRange","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","isPast","CancelToken","WeekView","dates","replace","overflowX","bookingBoxSampleTaken","bookingBoxPositive","bookingBoxReportSent","DayViewCell","filteredBookings","setFilteredBookings","dayViewCalFilter","search","getBookingClass","borderTop","titleLabel","titleLabelToday","DayView","monthNames","fontColor","CalendarView","setMonth","setYear","setDay","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","removeFilter","today","dayofWeek","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","onMouseDown","getBloodReportsByBookingId","changeDepositBooking","deposit","addNewBooking","sendRegFormEmail","getShouldRefundsCount","manualRefundBooking","refundBooking","changeToPatientAttended","downloadGynaeRegForm","required","downloadBloodRegForm","getNewBloodResultsCount","getSentBloodReports","getArchivedBloodReports","getNewMatchedBloodReports","getArchivedMatchedBloodReports","getNewUnmatchedBloodReports","getArchivedUnmatchedBloodReports","sendBloodReportEmail","bloodreportId","updateBloodReport","archiveBloodReport","unArchiveBloodReport","searchAllBookings","downloadGPRegForm","emailSent","setEmailSent","openRefundDialog","setOpenRefundDialog","setFullname","service","fetchBloodReports","bloodReports","setBloodReports","selectedBloodReport","setSelectedBloodReport","bloodReportDialogOpen","setBloodReportDialogOpen","handleCloseRefundDialog","refundPaymentClicked","updateShouldRefundsCount","shouldRefunsCount","OTCCharges","BloodReportDialog","downloadSTDRegForm","setService","packageName","estimatedPrice","reportRecievedTimeStamp","setReportRecievedTimeStamp","reportSentTimeStamp","setReportSentTimeStamp","getReportRecievedTimeStamp","emailSentTimeStamp","getReportSentTimeStamp","doctorConsultation","indivisualTests","tests","testsString","getIndivisualTestsString","downloadDermaRegForm","package","downloadScreeningRegForm","moveTBCFolder","undoMoveTBCFolder","confirmBooking","getTBCFolderBookings","getPendingBookings","PackageBox","openConfirmDialog","setOpenConfirmDialog","openTBCDialog","setOpenTBCDialog","setBirthDate","depositChanged","handleCloseConfirmDialog","handleCloseTBCDialog","birthDateError","manualRefund","confirmBookingClicked","moveTBCFolderClicked","undoMoveTBCFolderClicked","confirmed","tbcFolder","paymentInfo","textTransform","PriceLabelPaid","PriceLabelNotPaid","refund","clinic","changesSaved","setChangesSaved","loadFileUrl","loadBookingDetail","AdminBookingService","setFileURL","reader","FileReader","readAsDataURL","onloadend","base64data","openBookingDetailDialog","setOpenBookingDetailDialog","getColorFromClinic","src","EmailValidator","bloodReportRefresh","notifyIcon","showCreateExcel","isThursday","isFriday","slotMinStr","slotHourStr","fullnameChanged","serviceChanged","notesChanged","CalendarIcon","DateTimeLabel","Packages","NewBookingDialog","fullnameError","setFullnameError","setPhone","setDeposit","saveClicked","otem","bookingBoxNew","openDialogAddNew","setOpenDialogAddNew","addNewBookingClicked","IndivisualTests","comboSTDChecks","serviceError","setServiceError","indivisualArray","setIndivisualArray","comboArray","setComboArray","findIndex","IndivisualTestsChanged","comboSTDChecksChanged","DateField","loadingBox","dateChanged","dayArray","setDayArray","monthArray","setMonthArray","yearArray","setYearArray","updateDate","dd","mm","yyyy","dayStr","monthStr","d","m","months","years","listOptions","noOptionsText","setNoOptionsText","setIndivisualTests","setBirthDateError","firstLetter","scrollTo","stringify","multiple","filterOptions","inputValue","matchSorter","keys","b","localeCompare","renderTags","getTagProps","Chip","whiteSpace","filterSelectedOptions","clinicTitle","PCRLabel","GynaeLabel","GPLabel","STDLabel","BloodLabel","DermaLabel","ScreeningLabel","MatchedRecords","getClassforClinic","ArchivedRecords","SentRecords","bookingBoxPending","TodayBookingView","PCRBookService","res1","GynaeBookService","res2","GPBookService","res3","STDBookService","res4","BloodBookService","res5","DermaBookService","res6","ScreeningBookService","res7","pcr","gynae","gp","std","blood","derma","screening","TomorrowBookingView","tomorrow","tomorrowStr","TotalBookingView","countLabel","countLabelRed","Icon","IconRed","TitleRed","LateBookingView","UnmatchedBookingView","ShouldRefundBookingView","getRole","sessionStorage","getItem","setRole","setItem","NewBloodResultsBookingView","NewScreeningBookingView","ShouldRefundBookingScreeningView","fixedHeightSmall","fixedHeightPaperSmall","history","useHistory","getMenuId","boxTitle","getPersonBox","PCRGauge","GynaeGauge","GPGauge","STDGauge","BloodGauge","DermaGauge","ScreeningGauge","DayLabelContainer","getPCRClinicBar","getGynaeClinicBar","getGPClinicBar","getSTDClinicBar","getBloodClinicBar","getDermaClinicBar","getScreeningClinicBar","selectedClinics","getClinicBar","BoxDisabled","BoxGynae","BoxGP","BoxSTD","BoxBlood","BoxScreening","BoxDerma","timeDisabled","clinicClicked","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","BookingBorderBlood","BookingBorderDerma","BookingBorderScreening","openDialogGP","setOpenDialogGP","openDialogGynae","setOpenDialogGynae","openDialogSTD","setOpenDialogSTD","openDialogBlood","setOpenDialogBlood","openDialogDerma","setOpenDialogDerma","openDialogScreening","setOpenDialogScreening","getBookingBorderClass","Clinics","DefaultLabel","SearchBookingTable","seeDetailsDialogOpenBloodReport","setSeeDetailsDialogOpenBloodReport","handleCloseSeeDetaisDialog","filterError","setFilterError","doSearch","dialogTitle","question","answer","PaymentService","sendPaymentLinkTextMessage","medexPaymentId","sendPaymentLinkEmail","doPayment","paymentId","refundPayment","createNewPaymentLink","paymentRecord","deletePaymentLink","getAllPayments","getDeletedPayments","getPaidPayments","getNotPaidPayments","getLatePayments","getRefundPayments","getRecentPayments","getPaymentById","getTotalReceivedAmount","getTodayReceivedAmount","getTotalLinkSent","getTodayLinkSent","PatientService","registerNewPatient","updatePatient","deletePatient","unDeletePatient","getPatientById","getPatientByPatientId","patiantID","getAllPatients","getDeletedPatients","appBar","flexGrow","tabs","borderRight","titleCenter","eyeText","NewPaymentDialog","LinkRef","setAmount","amountError","setAmountError","emailError","setEmailError","phoneError","setPhoneError","phoneSent","setPhoneSent","paymentLink","setPaymentLink","setPaymentId","createLinkClicked","validatePayment","payment","buildPaymentLink","paymentDialogDataChanged","scrollIntoView","behavior","block","sendEmailClicked","sendTextClicked","overflowWrap","rel","itemLabel","TextSecondary","ViewPaymentDialog","refundDone","setRefundDone","deleteDone","setdeleteDone","refundTimeStamp","setRefundTimeStamp","openDeleteDialog","setOpenDeleteDialog","handleCloseDeleteDialog","deleteClicked","paymentTimeStamp","textSent","PaymentsTable","setViewDialogOpen","setSelectedPatient","patientDialogOpen","setPatientDialogOpen","setPatientDialogTitle","setPatientDialogSaveButtonText","viewDialogOpen","TotalReceivedPaymentView","TodayReceivedPaymentView","TodayLinksSentView","LatePaymentsView","searchAllInvoicesByName","searchAllInvoicesByDate","getInvoiceReports","ViewInvoiceDialog","Summary","SearchInvoices","removeTitle","_name","formatPayment","calcTotalAmount","PeriodicReport","setClinic","fromDateError","setFromDateError","untilDateError","setUntilDateError","exportingToExcel","setExportingToExcel","from","until","ExportToExcel","wb","ExcelJS","Workbook","worksheet","addWorksheet","properties","defaultRowHeight","defaultColWidth","getRow","getCell","row2","font","family","bold","row3","row4","col","xlsx","writeBuffer","buf","saveAs","validateData","CorporatesList","loaded","setLoaded","savingDone","setSavingDone","lineHeight","Arrow","ArrowRight","TotalAmount","letterSpacing","content","primaryColor","MonthlyChart","defaultMonth","chartData","setChartData","activeIndex","setActiveIndex","loadChart","currentData","getMonthIndex","_chartData","Income","getColor","monthIndex","BarChart","CartesianGrid","strokeDasharray","Bar","_data","_index","getPrevMonth","MenuList_Reports","MenuList_Payment","MenuList_Admin","MenuList_Gynae","MenuList_GP","MenuList_STD","MenuList_Blood","MenuList_PCR","MenuList_Derma","MenuList_Screening","MenuList_PCRLAB","getMenuContent","getMenuRole","MenuList","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","password","setPassword","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setSubmiting","localStorage","signedIn","roles","elevation","alt","Avatar","on","textField","htmlFor","OutlinedInput","tabindex","Visibility","VisibilityOff","labelWidth","mt","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","GyaneBookService","updateShouldRefundsCountScreening","shouldRefunsCountScreening","updateHSPendingBookingsCount","hsPendingBookingsCount","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","opacity","drawerPaperClose","appBarSpacer","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsBloodLabel","appsDermaLabel","appsPaymentLabel","appsScreeningLabel","appsReportsLabel","appsInToolbar","Dashboard","isMobile","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","globalPath","getMenuIdFromGlobalPath","pathname","appsClicked","getAppsLogo","getAppsLabel","AppBar","Toolbar","edge","currentTarget","anchorEl","lastLoginTimeStamp","Drawer","getUserIdFromToken","signOutButton","Navigator","signedUp","forgotPassword","startsWith","process","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById","calculateTotalPrice","persons","totalPrice"],"mappings":"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","file":"static/js/main.eb1e4168.chunk.js","sourcesContent":["\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }else\n    {\n        return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n    }\n\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }\n    else\n    {\n        return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n    }\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }\n    else\n    {\n        return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n    }\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    {\n        return ''\n    }else\n    {\n        return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n    }\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#00a1c5\",\n               light: \"#5bd5f0\",\n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n\n      },\n    secondary: { main: \"#f68529\", contrastText:\"#fff\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","import Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"#\">\n          Medical Express Clinic\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  ","\n\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n\nexport const backendAPI = 'https://www.travelpcrtest.com/'\n// export const backendAPI = 'http://localhost:9090/'\n\nexport function getGlobalPath(path){\n    return '/medicalexpressclinic/admin' + path\n    // return path\n}\n\nexport function getMenuIdFromGlobalPath(globalPath){\n    try{\n       \n        var split = globalPath.split('/')\n        if (split && split.length > 0)\n        {\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\n        }\n        else\n        {\n            return ''\n        }\n    }\n    catch(err)\n    {\n        return ''\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\n\nexport default class UserService{\n\n    static setToken = (token) =>\n    {\n        this.token = token\n    }\n  \n    static signIn = (payload) =>\n    {\n        return  API.post('/api/medex/user/signin', payload)\n    }\n\n    static checkToken = (payload) =>\n    {\n        return  API.post('/api/medex/user/checktoken', payload)\n    }\n\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static payBooking = (bookingId, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getTestsTimeReport = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereport`);\n   }\n\n   static getTestsTimeReportLast7 = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereportlast7`);\n   }\n\n   static getTestsTimeReportLast30 = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereportlast30`);\n   }\n\n\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static resendEmailsWithBookingId = (bookingId) =>\n   {\n      return API.post(`/api/book/resendemailswithbookingid?id=${bookingId}`);\n   }\n\n   static regenerateFilesWithBookingId  = (bookingId) =>\n   {\n      return API.post(`/api/book/regeneratefileswithbookingid?id=${bookingId}`);\n   }\n\n\n   static resendEmails  = (linkId) =>\n   {\n      return API.post(`/api/book/resendemails?id=${linkId}`);\n   }\n\n   static regenerateFiles  = (linkId) =>\n   {\n      return API.post(`/api/book/regeneratefiles?id=${linkId}`);\n   }\n\n   static matchRecords  = (bookingId, linkId) =>\n   {\n      return API.post(`/api/book/matchrecords?bookingid=${bookingId}&linkid=${linkId}`);\n   }\n\n   static findBestMatches = (id) =>\n   {\n      return API.get(`/api/book/getbestmatchedbookings?id=${id}`);\n   } \n\n   static getLinkDetails = (id) =>\n   {\n      return API.get(`/api/book/getlinkdetails?id=${id}`);\n   } \n\n   static getLinkDetailsWithBookingId = (id) =>\n   {\n      return API.get(`/api/book/getlinkdetailswithbookingid?id=${id}`);\n   } \n\n\n\n   static findBookingByRefBirthDate = (bookingRef, birthDate) =>\n   {\n      return API.get(`/api/book/getbookingsbyrefandbirthdate?ref=${bookingRef}&birthdate=${birthDate}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/book/undeletebookappointment?id=${id}`);\n   } \n   \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/book/getallbookings?limit=${limit}`);\n    }\n\n    static getAllTRBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/book/getalltrbookings?limit=${limit}`);\n    }\n\n    static getLateBookings= () =>\n    {\n       return API.get(`/api/book/getlatebookings`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getLiveBookings= () =>\n    {\n       return API.get(`/api/book/getlivebookings`);\n    }\n\n    static getCompletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getcompletedbookings?limit=${limit}`);\n    }\n\n    static getPositiveBookings= () =>\n    {\n       return API.get(`/api/book/getpositivebookings`);\n    }\n\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getrecentbookingsall?limit=${limit}`);\n    }\n\n    static getUnmatchedRecords= () =>\n    {\n       return API.get(`/api/book/getunmatchedrecords`);\n    }\n\n    static getUnmatchedRecordsArchived= () =>\n    {\n       return API.get(`/api/book/getunmatchedrecordsarchived`);\n    }\n\n    static archiveRecord = (id) =>\n    {\n       return API.post(`/api/book/archiverecord?id=${id}`);\n    }\n\n    static unArchiveRecord = (id) =>\n    {\n       return API.post(`/api/book/unarchiverecord?id=${id}`);\n    }\n\n\n}","import API from './api';\n\nexport default class PDFService {\n\n    static downloadCovidForm1 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadCovidForm2 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfResult = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfCert = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\"   \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\"\n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\"\n    },\n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [gender, setGender] = React.useState('');\n    const [title, setTitle] = React.useState('');\n    const [forename, setForename] = React.useState('');\n    const [surname, setSurnme] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [dob, setDOB] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [postCode, setPostCode] = React.useState('');\n    const [address, setAddress] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n    const [passport, setPassport] = React.useState('');\n    const [passport2, setPassport2] = React.useState('');\n    const [certificate, setCertificate] = React.useState(false);\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const genderChanged = (event) =>\n    {\n      setGender(event.target.value);\n    }\n\n    const titleChanged = (event) =>\n    {\n      setTitle(event.target.value);\n    }\n\n    const forenameChanged = (event) =>\n    {\n      setForename(event.target.value);\n    }\n\n    const surnameChanged = (event) =>\n    {\n      setSurnme(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const dobChanged = (event) =>\n    {\n      setDOB(event.target.value);\n      setValidationError({...validationError, dobError : false});\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const postCodeChanged = (event) =>\n    {\n      setPostCode(event.target.value);\n    }\n\n    const addressChanged = (event) =>\n    {\n      setAddress(event.target.value);\n    }\n\n    const passportChanged = (event) =>\n    {\n      setPassport(event.target.value);\n    }\n\n    const passport2Changed = (event) =>\n    {\n      setPassport2(event.target.value);\n    }\n\n    const certificateChanged = (event) =>\n    {\n      setCertificate(event.target.checked);\n    }\n\n    const antiBodyTestChanged = (event) =>\n    {\n      setAntiBodyTest(event.target.checked);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }else if (status === 'sample_taken')\n      {\n        return (\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\n        );\n    \n      }else if (status === 'report_sent')\n      {\n        return (\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\n        );\n    \n      }else if (status === 'report_cert_sent')\n      {\n        return (\n          <span  className={classes.ReportCertSentLabel}> {`Report & Certificate Sent`} </span>\n        );\n      }\n      else if (status === 'positive')\n      {\n        return (\n          <span  className={classes.PositiveLabel}> {`POSITIVE`} </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n   const downloadForm1 = (id) =>\n   {\n       PDFService.downloadCovidForm1(id).then( (res) => \n       {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n       }).catch( (err) =>\n       {\n           console.log(err);\n       });\n   }\n\n   const downloadForm2 = (id) =>\n   {\n        PDFService.downloadCovidForm2(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const downloadLabResults = (id) =>\n   {\n        PDFService.downloadPdfResult(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const downloadCertificate = (id) =>\n   {\n        PDFService.downloadPdfCert(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setForename(person.forenameCapital);\n         setSurnme(person.surnameCapital);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime.toUpperCase());\n         setGender(person.gender.toUpperCase());\n         setTitle(person.title.toUpperCase());\n         setEmail(person.email.toUpperCase());\n         setDOB(FormatDateFromString(person.birthDate));\n         setTel(person.phone.toUpperCase());\n         setPostCode(person.postCode.toUpperCase());\n         setAddress(person.address.toUpperCase());\n         if (person.notes)\n         {\n          setNotes(person.notes.toUpperCase());\n         }\n        \n         if (person.passportNumber)\n         {\n           setPassport(person.passportNumber.toUpperCase());\n         }\n        \n         if (person.passportNumber2)\n         {\n           setPassport2(person.passportNumber2.toUpperCase());\n         }\n        \n         setCertificate(person.certificate);\n         setAntiBodyTest(person.antiBodyTest);\n\n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.certificate = certificate;\n          booking.antiBodyTest = antiBodyTest;\n          booking.gender = gender;\n          booking.title = title;\n          booking.birthDate = RevertFormatDateFromString(dob);\n          booking.email = email;\n          booking.phone = tel;\n          booking.postCode = postCode;\n          booking.address = address;\n          booking.passportNumber = passport;\n          booking.passportNumber2 = passport2;\n          booking.forename = forename;\n          booking.surname = surname;\n          booking.notes = notes;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateDate(booking.birthDate))\n      {\n        error = true;\n        setValidationError({...validationError, dobError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.forenameCapital} ${person.surnameCapital}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>GENDER</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.gender?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={gender}\n                                                      onChange = {genderChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>TITLE</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.title?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={title}\n                                                      onChange = {titleChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                             \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FORENAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.forenameCapital}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={forename}\n                                                      onChange = {forenameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SURNAME</span>\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.surnameCapital}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={surname}\n                                                      onChange = {surnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>D.O.B</span>\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                            {FormatDateFromString(person.birthDate) }\n                                          </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      error={validationError.dobError} \n                                                      className={classes.TextBox} \n                                                      value={dob}\n                                                      onChange = {dobChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>POST CODE</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.postCode?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={postCode}\n                                                      onChange = {postCodeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>ADDRESS</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.address?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={address}\n                                                      onChange = {addressChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>PASSPORT NO.</span>\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={passport}\n                                                      onChange = {passportChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SECOND PASSPORT NO.</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber2?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={passport2}\n                                                      onChange = {passport2Changed}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>REQUEST FOR CERTIFICATE</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.certificate ? ( <CheckIcon className={classes.checkIcon}/> ) :  <CloseIcon className={classes.closeIcon}/> }</span>\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                    <FormControlLabel className={classes.formControl} \n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={certificate} onChange={certificateChanged} />}\n                                          label=''\n                                        />\n                                </span>    \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>REQUEST FOR ANTIBODY TEST</span>\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.antiBodyTest ? <CheckIcon className={classes.checkIcon}/> :  <CloseIcon className={classes.closeIcon}/> }</span>  \n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                    <FormControlLabel className={classes.formControl} \n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={antiBodyTest} onChange={antiBodyTestChanged} />}\n                                          label=''\n                                        />\n                                </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                                \n                                {person.status === \"sample_taken\" &&\n                                          !(\n                                            editMode.edit && editMode.person._id === person._id\n                                          ) && (\n                                            <Button \n                                                  variant=\"outlined\"\n                                                  color=\"primary\"\n                                                  disabled = {saving}\n                                                  onClick = {event => changeBackToBookingMade(event,person._id)}\n\n                                                    >\n                                              Change Back To Booking Made\n                                            </Button>\n                                          )}\n\n                            </li>\n      \n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TOTAL CHARGES</span> <span className={calculatePrice(person) <= 199 ? classes.infoDataCharges : classes.infoDataChargesHigher}>{`£${calculatePrice(person)}`}</span>  \n                            </li>\n\n                            <li  hidden={person.deleted} >\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadForm1(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Registration Form\n                                </Button>\n                            </li>\n\n                            <li  hidden={person.deleted}>\n                                  <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadForm2(person._id)}}\n                                    // onTouchTap = {() => {downloadForm2(person._id)}}\n                                    className={classes.DownloadForm}\n                                    >\n                                    Download Lab Form\n                                 </Button>\n                            </li>\n\n                            <li hidden={ person.deleted || (person.status !== 'report_sent' && person.status !== 'report_cert_sent') }>\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadLabResults(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Lab Results\n                                </Button>\n                            </li>\n\n                            <li hidden={person.deleted || person.status !== 'report_cert_sent'}>\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadCertificate(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Certificate\n                                </Button>\n                            </li>\n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\"\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ResendEmailsDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState(\"\");\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [error, setError] = React.useState(false);\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === \"downloadFailed\") return 10;\n    else if (status === \"downloading\") return 30;\n    else if (status === \"downloadSuccess\") return 70;\n    else if (status === \"sent\") return 100;\n    else return 0;\n  };\n\n  const handleClose = () => {\n    setSending(false);\n    setSent(false);\n    setError(false);\n    clearInterval(interval);\n    props.handleClose();\n  };\n\n  useEffect(() => {\n    setSendingProgress((prevProgress) =>\n      prevProgress >= 100 ? 100 : getProgress(sendingStatus)\n    );\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus(\"downloadFailed\");\n    setSendJustToPCR(true);\n\n    BookService.regenerateFilesWithBookingId(props.booking._id)\n      .then((res) => {\n        interval = setInterval(() => {\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n            (res) => {\n              if (res.data.status === \"OK\") {\n                setSendingStatus(res.data.link.status);\n\n                if (res.data.link.status === \"sent\") {\n                  setSending(false);\n                  setSent(true);\n                  clearInterval(interval);\n                }\n              } else if (res.data.status === \"FAILED\") {\n                setSending(false);\n                setSent(false);\n                clearInterval(interval);\n                setError(true);\n              }\n            }\n          );\n        }, 1000);\n\n        setTimeout(() => {\n          setError(true);\n          clearInterval(interval);\n        }, 60000);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSending(false);\n      });\n  };\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus(\"downloadFailed\");\n\n    BookService.resendEmailsWithBookingId(props.booking._id)\n      .then((res) => {\n        interval = setInterval(() => {\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n            (res) => {\n              if (res.data.status === \"OK\") {\n                setSendingStatus(res.data.link.status);\n\n                if (res.data.link.status === \"sent\") {\n                  setSending(false);\n                  setSent(true);\n                  clearInterval(interval);\n                }\n              } else if (res.data.status === \"FAILED\") {\n                setSending(false);\n                setSent(false);\n                clearInterval(interval);\n                setError(true);\n              }\n            }\n          );\n        }, 1000);\n\n        setTimeout(() => {\n          setError(true);\n          clearInterval(interval);\n        }, 60000);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSending(false);\n      });\n  };\n\n  const cancelResendEmailsClicked = (event) => {\n    props.handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <SendIcon style={{ color: \"#2f942e\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#2f942e\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    RESEND EMAILS{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"230px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n                  {!sent && !sending && (\n                    <React.Fragment>\n                      <Grid item>\n                        <div\n                          style={{\n                            paddingTop: \"5px\",\n                            fontSize: \"1rem\",\n                            fontWeight: \"500\",\n                            color: \"#555\",\n                          }}\n                        >\n                          Do you want to Resend the LAB Report{\" \"}\n                          {props.booking.certificate ? \" and Certificate\" : \"\"}{\" \"}\n                          Now?\n                        </div>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                        </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                        </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to\n                          pcrresults@medicalexpressclinic.co.uk\n                        </Button>\n                      </Grid>\n                    </React.Fragment>\n                  )}\n\n                  {error && !sending && !sent && (\n                    <Grid item>\n                      <Alert\n                        style={{\n                          marginTop: \"10px\",\n                          paddingLeft: \"50px\",\n                          paddingRight: \"50px\",\n                        }}\n                        severity=\"error\"\n                      >\n                        Error! — Something is wrong with this record!\n                      </Alert>\n                    </Grid>\n                  )}\n\n                  {(sending || sent) && (\n                    <Grid item>\n                      <div\n                        style={{\n                          paddingTop: \"50px\",\n                          color: \"#2f942e\",\n                          fontWeight: \"600\",\n                          fontSize: \"1rem\",\n                        }}\n                      >\n                        {sending && !sent && \"Sending ...\"}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert\n                            style={{\n                              marginTop: \"10px\",\n                              paddingLeft: \"50px\",\n                              paddingRight: \"50px\",\n                            }}\n                            severity=\"success\"\n                          >\n                            Success! — The LAB Report{\" \"}\n                            {props.booking.certificate\n                              ? \" and Certificate \"\n                              : \" \"}{\" \"}\n                            Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert\n                            style={{\n                              marginTop: \"10px\",\n                              paddingLeft: \"50px\",\n                              paddingRight: \"50px\",\n                            }}\n                            severity=\"success\"\n                          >\n                            Success! — The LAB Report{\" \"}\n                            {props.booking.certificate\n                              ? \" and Certificate \"\n                              : \" \"}{\" \"}\n                            Successfully Sent Just to\n                            pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n                      </div>\n                    </Grid>\n                  )}\n                </Grid>\n\n                {(sending || sent) && (\n                  <React.Fragment>\n                    <div\n                      style={{\n                        marginTop: \"10px\",\n                        width: \"50%\",\n                        marginLeft: \"27%\",\n                      }}\n                    >\n                      <LinearProgressWithLabel\n                        variant=\"determinate\"\n                        color=\"primary\"\n                        value={sendingProgress}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        paddingTop: \"30px\",\n                        color: \"#2f942e\",\n                        fontWeight: \"600\",\n                        fontSize: \"1rem\",\n                        marginLeft: \"45%\",\n                      }}\n                    >\n                      {sending && !sent && \"PLEASE WAIT ...\"}\n                    </div>\n                  </React.Fragment>\n                )}\n              </div>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import API from './api';\n\nexport default class CorporateService{\n  \n    static getCorporates = (payload) =>\n    {\n        return  API.get('/api/medex/invoice/getcorporates')\n    }\n\n    static updateCorporates = (corporatesStr) =>\n    {\n        return  API.post('/api/medex/invoice/updatecorporates', {corporates: corporatesStr})\n    }\n\n}\n","import CorporateService from \"./services/CorporateService\"\n\n \n\n\nexport const getCorporates = async () => {\n    try{\n        let corporates = []\n        const res = await CorporateService.getCorporates()\n        const _corps = res.data.result;    \n        const _corpsSplit = _corps.split(\"\\n\")\n        for (var i=0 ; i < _corpsSplit.length ; i++ )\n        {\n            const element = _corpsSplit[i]\n            if (element.trim().length > 0)\n            {\n                corporates.push(element.trim())\n            }\n        }\n\n        return corporates.sort();\n\n    }catch(err)\n    {\n        return []\n    }\n}","import React, {useEffect, useRef, useState} from 'react';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Backdrop, Button, Checkbox, CircularProgress, Divider, FormControlLabel, Grid, InputLabel, Link, makeStyles, MenuItem, Select, TextField, Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { getCorporates } from '../Corporates';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    marginRight : \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle:  {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendFilesButton:{\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  cancelButton:\n  {\n    marginBottom : \"10px\",\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"90px\",\n    paddingRight: \"90px\"   \n  },\n  \n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n  \n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\n\n\nexport default function PayDialog(props) {\n  \n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);  \n  const [paymentMethod, setPaymentMethod] = useState('credit card');\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n\n  const paymentMethodChanged = (event) =>\n  {\n    setPaymentMethod(event.target.value);\n  }\n\n  const handleClose = () =>\n  {\n      if (saving)\n        return;\n\n      props.handleClose();  \n      setPaymentMethod('credit card');\n      setCorporate(corporates[0]);\n      setSaving(false);\n  }\n\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n\n  const payClicked = async () =>\n  {\n    setSaving(true);\n\n    try\n    {\n         await BookService.payBooking(props.booking._id,paymentMethod, paymentMethod === 'corporate' ? corporate : '');\n         setSaving(false);\n         setState(state => ({...state, bookingPayChanged : !state.bookingPayChanged ? true : false}));\n         handleClose();\n    }\n    catch(err)\n    {\n        console.error(err);\n        setSaving(false);\n    }\n\n  }\n\n\n  return (\n    <React.Fragment>\n\n        {props.booking && ( \n\n                <React.Fragment>\n<Dialog\nmaxWidth=\"800px\"\nopen={props.open}\nonClose={handleClose}\nPaperComponent={PaperComponent}\naria-labelledby=\"form-dialog-title\"\n>\n<DialogTitle id=\"draggable-dialog-title\">\n  <Grid\n    container\n    spacing={2}\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <Grid item>\n      <CreditCardIcon\n        style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n      />\n    </Grid>\n\n    <Grid item>\n      <div\n        style={{\n          color: \"#f50057\",\n          paddingBottom: \"10px\",\n          fontWeight: \"800\",\n        }}\n      >\n        {\" \"}\n        PAY the CHARGE{\" \"}\n      </div>\n    </Grid>\n  </Grid>\n\n  <Divider />\n</DialogTitle>\n<DialogContent>\n  <div\n    style={{\n      height: \"270px\",\n    \n    }}\n  >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          spacing = {2}\n          alignItems=\"flex-start\"\n        >\n            <Grid item>\n               <div style={{fontSize: \"17px\"}}> How do you want to pay? </div> \n            </Grid>\n\n            <Grid item>\n      \n            <FormControl component=\"fieldset\">\n                \n                <RadioGroup aria-label=\"paymentMethod\" name=\"paymentMethod\" value={paymentMethod} onChange={paymentMethodChanged}>\n                    <FormControlLabel value=\"credit card\" control={<Radio />} label=\"Credit Card\" />\n                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\n                    <FormControlLabel value=\"corporate\" control={<Radio />} label=\"Corporate\" />\n                </RadioGroup>\n\n                { paymentMethod === 'corporate' && (\n\n                        <FormControl style={{marginTop: \"10px\"}} className={classes.formControl}>\n                        <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                        >\n                        {\n                        corporates.map(element => (\n                                    <MenuItem value={element}>{`${element}`}</MenuItem>\n                        ))\n                        }     \n\n                        </Select>\n                    </FormControl>\n\n                )}\n              \n\n                </FormControl>\n            </Grid>\n\n\n        </Grid>\n\n        <Grid item>\n           \n    </Grid>\n\n    <div style={{position:\"absolute\", bottom:\"20px\", right:\"20px\"}}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing = {1}\n            >\n               \n                <Grid item>\n                    <Button onClick={handleClose}  style= {{width : '100px'}} disabled={saving}>\n                        back\n                    </Button>\n                        \n                </Grid>\n                <Grid item>\n                    <Button \n                        onClick = {payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style= {{width : '100px'}}\n                        disabled={saving}\n                    >\n                        Pay\n                    </Button>\n                </Grid>  \n          </Grid>\n\n    </div>\n\n    \n  </div>\n\n             <Backdrop\n                className={classes.backdrop}\n                open={saving}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n\n</DialogContent>\n</Dialog>\n\n\n\n\n</React.Fragment>\n\n\n        )}\n  \n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport dateformat from \"dateformat\";\n\nconst addMinutes = (date, minutes) => {\n  date = new Date(date);\n  return new Date(date.getTime() + minutes * 60 * 1000);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  itemTitle: {\n    fontWeight: \"500\",\n    color: \"#555\",\n  },\n\n  itemData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"600\",\n    color: \"#127512\",\n  },\n}));\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function TimeStampDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [linkTimeStamp, setLinkTimeStamp] = React.useState(null);\n\n  const handleClose = () => {\n    setLinkTimeStamp(null);\n\n    props.handleClose();\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      if (props.booking.filename && props.booking.filename.length > 0) {\n        BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n          (res) => {\n            if (res.data.status === \"OK\") {\n              setLinkTimeStamp(res.data.link.timeStamp);\n            }\n          }\n        );\n      }\n    }\n  }, [props.booking]);\n\n  const getDateFromBooking = (booking) => {\n    let date = new Date(booking.bookingDate);\n    date.setHours(booking.bookingTimeNormalized.substr(0, 2));\n    date.setMinutes(booking.bookingTimeNormalized.substr(3, 2));\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    return date;\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <HistoryIcon style={{ color: \"#f50057\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Audit Trail{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"370px\",\n              \n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={4}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      PATIENT BOOKING TIMESTAMP :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {\" \"}\n                      {dateformat(props.booking.timeStamp, \"isoDateTime\")}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      BOOKED DATE AND TIME :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {dateformat(\n                        getDateFromBooking(props.booking),\n                        \"isoDateTime\"\n                      )}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP ATTENDED :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          props.booking.samplingTimeStamp,\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SAMPLE TAKEN :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - COLLECTED BY COURIER :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 35),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - RESULTS RECEIVED :{\" \"}\n                    </span>\n                    {linkTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(linkTimeStamp, \"isoDateTime\")}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SENT TO PATIENT :{\" \"}\n                    </span>\n                    {linkTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(linkTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"default\">\n                Back\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\",\n    BLOOD_COLOR: \"#dc2626\",\n    DERMA_COLOR: \"#323e9a\",\n    SCREENING_COLOR: \"#006b8f\",\n\n}\n","import API from './api';\n\nexport default class InvoiceService{\n\n    static createInvoice = (payload) =>\n    {\n        return  API.post('/api/medex/invoice/createinvoice', payload)\n    }\n\n    static updateInvoice = (invoiceNumber, payload) =>\n    {\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\n    }\n\n    static deleteinvoice = (invoiceNumber) =>\n    {\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getInvoiceByBookingId = (bookingId) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\n    }\n\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getCodeDetails = (code) =>\n    {\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\n    }\n\n    static getAllCodes = () =>\n    {\n        return API.get(`/api/medex/invoice/getallcodes`)\n    }\n\n    static downloadInvoice = (id) =>\n    {\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static emailInvoice = (id, email) =>\n    {\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\n    }\n\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"./services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      console.log(props.invoice.items)\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(\"EDIT INVOICE\");\n    } else {\n      setTitle(\"INVOICE ISSUANCE\");\n    }\n\n    fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice, props.open]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item style={{ width: \"100%\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={10}>\n                        <Autocomplete\n                          id=\"code-auto-complete\"\n                          value={code}\n                          onChange={(event, newValue) => {\n                            setCode(newValue);\n                          }}\n                          options={allCodes}\n                          getOptionLabel={(option) =>\n                            `.${option.code} -- ${\n                              option.description\n                            } -- ${parseFloat(\n                              option.price\n                            ).toLocaleString(\"en-GB\", {\n                              style: \"currency\",\n                              currency: \"GBP\",\n                            })}`\n                          }\n                          style={{ width: \"750px\" }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"System Codes\"\n                              helperText=\"Standard codes already defined in the system\"\n                            />\n                          )}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"15px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={8}>\n                        <TextField\n                          error={descriptionError}\n                          value={description}\n                          onChange={descriptionChanged}\n                          fullWidth\n                          label=\"Description (Custom)\"\n                          name=\"desc\"\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\n                          id=\"desc-id\"\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <TextField\n                          error={priceError}\n                          value={price}\n                          onChange={priceChanged}\n                          fullWidth\n                          label=\"Price\"\n                          name=\"price\"\n                          id=\"price-id\"\n                          InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked2}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"12px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"30px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"300px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid>\n              </Grid>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport ResendEmailsDialog from \"./ResendEmailsDialog\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport TimeStampDialog from \"./TimeStampDialog\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n    marginBottom: \"-8px\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n    marginBottom: \"-8px\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"80px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const getDefaultCodes = (_booking) => {\n    const defaultCodes = [];\n    if (!_booking) return;\n\n    if (_booking.tr) {\n      defaultCodes.push({\n        code: \"PCRTR\",\n        description: \"PCR TEST TO RELEASE\",\n        price: 250,\n      });\n    } else {\n      defaultCodes.push({\n        code: \"PCR\",\n        description: \"PCR SWAB TEST\",\n        price: 199,\n      });\n      if (_booking.antiBodyTest) {\n        defaultCodes.push({\n          code: \"PCRA\",\n          description: \"PCR ANTIBODY TEST\",\n          price: 99,\n        });\n        defaultCodes.push({\n          code: \"PHLE\",\n          description: \"PHLEBOTOMY\",\n          price: 50,\n        });\n      }\n      if (_booking.certificate) {\n        defaultCodes.push({\n          code: \"PCRCERT\",\n          description: \"PCR FIT TO FLY CERTIFICATE\",\n          price: 50,\n        });\n      }\n    }\n    return defaultCodes;\n  };\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [gender, setGender] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [forename, setForename] = React.useState(\"\");\n  const [surname, setSurnme] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [dob, setDOB] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [postCode, setPostCode] = React.useState(\"\");\n  const [address, setAddress] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [passport, setPassport] = React.useState(\"\");\n  const [passport2, setPassport2] = React.useState(\"\");\n  const [certificate, setCertificate] = React.useState(false);\n  const [antiBodyTest, setAntiBodyTest] = React.useState(false);\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [covidVaccine, setCovidVaccine] = React.useState(\"\");\n\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        gender !== booking.gender ||\n        forename !== booking.forenameCapital ||\n        surname !== booking.surnameCapital ||\n        title !== booking.title ||\n        email !== booking.email ||\n        dob !== FormatDateFromString(booking.birthDate) ||\n        tel !== booking.phone ||\n        postCode !== booking.postCode ||\n        address !== booking.address ||\n        passport !== booking.passportNumber ||\n        passport2 !== booking.passportNumber2 ||\n        certificate !== booking.certificate ||\n        antiBodyTest !== booking.antiBodyTest ||\n        covidVaccine !== booking.covidVaccine\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const genderChanged = (event) => {\n    setGender(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const titleChanged = (event) => {\n    setTitle(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const forenameChanged = (event) => {\n    setForename(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const surnameChanged = (event) => {\n    setSurnme(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const postCodeChanged = (event) => {\n    setPostCode(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const addressChanged = (event) => {\n    setAddress(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const passportChanged = (event) => {\n    setPassport(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const passport2Changed = (event) => {\n    setPassport2(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const certificateChanged = (event) => {\n    setCertificate(event.target.checked);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const antiBodyTestChanged = (event) => {\n    setAntiBodyTest(event.target.checked);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const covidVaccineChanged = (event) => {\n    setCovidVaccine(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <span className={classes.BookedLabel}> Booking Made </span>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <span className={classes.PatientAttendedLabel}> Patient Attended </span>\n      );\n    } else if (status === \"sample_taken\") {\n      return <span className={classes.SampleTakenLabel}> Sample Taken </span>;\n    } else if (status === \"report_sent\") {\n      return <span className={classes.ReportSentLabel}> Report Sent </span>;\n    } else if (status === \"report_cert_sent\") {\n      return (\n        <span className={classes.ReportCertSentLabel}>\n          {\" \"}\n          {`Report & Certificate Sent`}{\" \"}\n        </span>\n      );\n    } else if (status === \"positive\") {\n      return <span className={classes.PositiveLabel}> {`POSITIVE`} </span>;\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const downloadForm1 = (id) => {\n    PDFService.downloadCovidForm1(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadForm2 = (id) => {\n    PDFService.downloadCovidForm2(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadLabResults = (id) => {\n    PDFService.downloadPdfResult(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadCertificate = (id) => {\n    PDFService.downloadPdfCert(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setForename(person.forenameCapital);\n      setSurnme(person.surnameCapital);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setGender(person.gender.toUpperCase());\n      setTitle(person.title.toUpperCase());\n      setEmail(person.email.toUpperCase());\n      setDOB(FormatDateFromString(person.birthDate));\n      setTel(person.phone.toUpperCase());\n      setPostCode(person.postCode.toUpperCase());\n      setAddress(person.address.toUpperCase());\n      if (person.notes) {\n        setNotes(person.notes.toUpperCase());\n      } else {\n        setNotes(\"\");\n      }\n\n      if (person.passportNumber) {\n        setPassport(person.passportNumber.toUpperCase());\n      } else {\n        setPassport(\"\");\n      }\n\n      if (person.passportNumber2) {\n        setPassport2(person.passportNumber2.toUpperCase());\n      } else {\n        setPassport2(\"\");\n      }\n\n      setCertificate(person.certificate);\n      setAntiBodyTest(person.antiBodyTest);\n      setCovidVaccine(person.covidVaccine)\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.certificate = certificate;\n      booking.antiBodyTest = antiBodyTest;\n      booking.gender = gender;\n      booking.title = title;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.email = email;\n      booking.phone = tel;\n      booking.postCode = postCode;\n      booking.address = address;\n      booking.passportNumber = passport;\n      booking.passportNumber2 = passport2;\n      booking.forename = forename;\n      booking.surname = surname;\n      booking.notes = notes;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n      booking.covidVaccine = covidVaccine;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const resendEmails = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenResendDialog(true);\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={props.onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div\n                style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}\n                hidden={state.role === \"pcrlab\"}\n              >\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/pcr/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.PCR_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                PCR\n              </div>\n\n              {booking.tr && (\n                <div style={{ position: \"absolute\", right: \"15px\" }}>TR</div>\n              )}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.forenameCapital} ${booking.surnameCapital}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  paddingTop: \"20px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit &&\n                            editMode.person._id === booking._id) ||\n                          state.role === \"pcrlab\"\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id) ||\n                          state.role === \"pcrlab\"\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleDeleteModeChanged(true, booking);\n                          }}\n                          className={classes.DeleteButton}\n                        >\n                          Delete This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>GENDER</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.gender?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={gender}\n                                onChange={genderChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TITLE</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.title?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={title}\n                                onChange={titleChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FORENAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.forenameCapital}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={forename}\n                                onChange={forenameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>SURNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.surnameCapital}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={surname}\n                                onChange={surnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>D.O.B</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.dobError}\n                                className={classes.TextBox}\n                                value={dob}\n                                onChange={dobChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}></li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>POST CODE</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.postCode?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={postCode}\n                                onChange={postCodeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>ADDRESS</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.address?.toUpperCase()}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={address}\n                            onChange={addressChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      {booking.selfIsolate && (\n                        <React.Fragment>\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              Self-Isolate Post Code\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.postCodeSI}\n                            </span>\n                          </li>\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              Self-Isolate Address\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.addressSI}\n                            </span>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              PASSPORT NO.\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.passportNumber?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={passport}\n                                onChange={passportChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          {!booking.tr && (\n                            <Grid item xs={6}>\n                              <span className={classes.infoTitle}>\n                                SECOND PASSPORT NO.\n                              </span>\n                              <span\n                                hidden={\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                }\n                                className={classes.infoData}\n                              >\n                                {booking.passportNumber2?.toUpperCase()}\n                              </span>\n                              <span\n                                hidden={\n                                  !(\n                                    editMode.edit &&\n                                    editMode.person._id === booking._id\n                                  )\n                                }\n                                className={classes.infoData}\n                              >\n                                <TextField\n                                  fullWidth\n                                  className={classes.TextBox}\n                                  value={passport2}\n                                  onChange={passport2Changed}\n                                  inputProps={{\n                                    style: {\n                                      padding: 0,\n                                    },\n                                  }}\n                                ></TextField>\n                              </span>\n                            </Grid>\n                          )}\n                        </Grid>\n                      </li>\n\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              NHS Number\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.NHSNumber ?? \"-\"}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>Ethnicity</span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.ethnicity}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Arrival Date\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.arrivalDate}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Flight Number\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.flightNumber}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Last Departed Date\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.lastDepartedDate}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Travelling From\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.travellingFrom}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li hidden={booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              REQUEST FOR CERTIFICATE\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.certificate ? (\n                                <CheckIcon className={classes.checkIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                  <Checkbox\n                                    className={classes.formControl}\n                                    color=\"secondary\"\n                                    name=\"certificate\"\n                                    checked={certificate}\n                                    onChange={certificateChanged}\n                                  />\n                                }\n                                label=\"\"\n                              />\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              REQUEST FOR ANTIBODY TEST\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.antiBodyTest ? (\n                                <CheckIcon className={classes.checkIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                  <Checkbox\n                                    className={classes.formControl}\n                                    color=\"secondary\"\n                                    name=\"certificate\"\n                                    checked={antiBodyTest}\n                                    onChange={antiBodyTestChanged}\n                                  />\n                                }\n                                label=\"\"\n                              />\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li style={{ paddingTop: \"10px\", paddingBottom:\"10px\" }}>\n                      <span className={classes.infoTitle}>\n                                COVID VACCINE\n                              </span>\n                              <span\n                                hidden={\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                }\n                                className={classes.infoData}\n                              >\n                                {booking.covidVaccine}\n                              </span>\n                              <span\n                                hidden={\n                                  !(\n                                    editMode.edit &&\n                                    editMode.person._id === booking._id\n                                  )\n                                }\n                                className={classes.infoData}\n                              >\n                                <TextField\n                                  fullWidth\n                                  className={classes.TextBox}\n                                  value={covidVaccine}\n                                  onChange={covidVaccineChanged}\n                                  inputProps={{\n                                    style: {\n                                      padding: 0,\n                                    },\n                                  }}\n                                ></TextField>\n                              </span>\n\n                      </li>          \n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {state.role !== \"pcrlab\" &&\n                          booking.status === \"sample_taken\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {(booking.status === \"report_sent\" ||\n                          booking.status === \"report_cert_sent\" ||\n                          booking.status === \"positive\") &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          state.role !== \"pcrlab\" && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              className={classes.ResendEmailsButton}\n                              onClick={(event) =>\n                                resendEmails(event, booking._id)\n                              }\n                            >\n                              Resend emails\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadForm1(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadForm2(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm2(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Lab Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          state.role === \"pcrlab\" ||\n                          booking.deleted ||\n                          (booking.status !== \"report_sent\" &&\n                            booking.status !== \"report_cert_sent\" &&\n                            booking.status !== \"positive\")\n                        }\n                      >\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadLabResults(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Lab Results\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          state.role === \"pcrlab\" ||\n                          booking.deleted ||\n                          (booking.status !== \"report_cert_sent\" &&\n                            booking.status !== \"positive\")\n                        }\n                      >\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadCertificate(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Certificate\n                        </Button>\n                      </li>\n\n                      <li hidden={state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<HistoryIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            setSelectedBooking(booking);\n                            setOpenTimeStampDialog(true);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Show Audit Trail\n                        </Button>\n                      </li>\n\n                     \n\n                      {state.role !== \"pcrlab\" && (\n                        <div>\n                           <Divider />\n                          <li\n                            className={classes.li}\n                            style={{ marginTop: \"20px\" }}\n                          >\n                            <span className={classes.infoTitle}>\n                              INVOICE # :{\" \"}\n                            </span>{\" \"}\n                            <span style={{ paddingLeft: \"0px\" }}>\n                              {!invoiceLoaded && (\n                                <span className={classes.invoiceNumber}>\n                                  {\" \"}\n                                  ...{\" \"}\n                                </span>\n                              )}\n                              {invoiceLoaded && invoice && (\n                                <span className={classes.invoiceNumber}>\n                                  {\" \"}\n                                  {invoice.invoiceNumber}{\" \"}\n                                </span>\n                              )}\n                              {invoiceLoaded && !invoice && (\n                                <span\n                                  className={classes.invoiceNumber}\n                                  style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                                >\n                                  {\" \"}\n                                  N/A{\" \"}\n                                </span>\n                              )}\n                            </span>\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              !booking.deleted && (\n                                <React.Fragment>\n                                  {invoiceLoaded && !invoice && (\n                                    <Button\n                                      variant=\"outlined\"\n                                      color=\"primary\"\n                                      className={classes.PayButton}\n                                      onClick={() => OpenInvoiceDialog()}\n                                    >\n                                      Issue Invoice\n                                    </Button>\n                                  )}\n\n                                  {invoiceLoaded && invoice && (\n                                    <React.Fragment>\n                                      <Button\n                                        variant=\"outlined\"\n                                        startIcon={<PrintIcon />}\n                                        color=\"primary\"\n                                        className={classes.printInvoiceButton}\n                                        onClick={() =>\n                                          downloadInvoice(invoice._id)\n                                        }\n                                      >\n                                        Download Invoice\n                                      </Button>\n\n                                      <Button\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.editInvoiceButton}\n                                        onClick={() => OpenInvoiceDialog()}\n                                      >\n                                        Edit Invoice\n                                      </Button>\n\n                                      <Button\n                                        disabled={\n                                          !booking.email ||\n                                          booking.email.length < 3\n                                        }\n                                        startIcon={<SendIcon />}\n                                        type=\"button\"\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                          sendInvoiceEmail(\n                                            invoice._id,\n                                            booking.email\n                                          );\n                                        }}\n                                        style={{\n                                          position: \"relative\",\n                                          marginLeft: \"10px\",\n                                          paddingRight: \"130px\",\n                                          fontSize: \"0.8rem\",\n                                        }}\n                                      >\n                                        Send Invoice By Email\n                                        {emailSentInvoice && (\n                                          <div\n                                            style={{\n                                              position: \"absolute\",\n                                              right: \"10px\",\n                                              top: \"5px\",\n                                              color: \"#05ad19\",\n                                            }}\n                                          >\n                                            Email Sent\n                                          </div>\n                                        )}\n                                      </Button>\n                                    </React.Fragment>\n                                  )}\n                                </React.Fragment>\n                              )}\n                          </li>\n\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              TOTAL CHARGES\n                            </span>{\" \"}\n                            <span\n                              className={\n                                calculatePrice(booking) <= 199\n                                  ? classes.infoDataCharges\n                                  : classes.infoDataChargesHigher\n                              }\n                            >{`£${calculatePrice(booking)}`}</span>\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              !booking.paid &&\n                              !booking.deleted && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.PayButton}\n                                  onClick={(event) => Pay(event, booking._id)}\n                                >\n                                  Pay\n                                </Button>\n                              )}\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              booking.paid && (\n                                <React.Fragment>\n                                  <span className={classes.PayLabel}>\n                                    {\" \"}\n                                    <CheckIcon\n                                      className={classes.checkIconSmall}\n                                    />{\" \"}\n                                    Paid by {booking.paidBy}\n                                    {booking.paidBy === \"corporate\"\n                                      ? ` \"${booking.corporate}\" `\n                                      : \"\"}\n                                  </span>\n\n                                  <Tooltip title=\"Undo Payment\">\n                                    <IconButton\n                                      onClick={() => setOpenUndoPayDialog(true)}\n                                    >\n                                      <UndoIcon style={{ color: \"red\" }} />\n                                    </IconButton>\n                                  </Tooltip>\n                                </React.Fragment>\n                              )}\n                          </li>\n                        </div>\n                      )}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <ResendEmailsDialog\n              booking={selectedBooking}\n              open={openResendDialog}\n              handleClose={handleCloseResendDialog}\n            />\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              defaultCodes={getDefaultCodes(props.booking)}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <TimeStampDialog\n              booking={selectedBooking}\n              open={openTimeStampDialog}\n              handleClose={handleCloseTimeStampDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"./../GlobalState\";\nimport { getMenuIndex } from \"./../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else if (str === \"tr\") {\n    return `Test & Release Bookings`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n\n    if (!date || date.toString() === \"Invalid Date\")\n    {\n      setFromDate(null)\n      setFromDateStr('')\n      return\n    }\n    \n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n\n    if (!date || date.toString() === \"Invalid Date\")\n    {\n      setUntilDate(null)\n      seUntilDateStr('');\n      return\n    }\n\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  if (props.date === \"recent\" && state.role !== \"pcrlab\") {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"tr\") ? (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\",\n                    color: \"#7e0082\",\n                  }}\n                >\n                  TR\n                </span>\n              ) : (\n                \"\"\n              )}\n\n              {state.role !== \"pcrlab\" && (\n                <Button\n                  color=\"primary\"\n                  onClick={(event) => openDetailsDialog(event, params.value)}\n                >\n                  <SearchIcon />\n                </Button>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            // <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false}));\n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n            >\n              {params.value}\n            </Link>\n            // </Tooltip>\n          );\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 150 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 150 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"email\",\n        headerName: \"Email\",\n        width: 200,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      {\n        field: \"passportNumber\",\n        headerName: \"Passport No.\",\n        width: 250,\n        //  valueGetter: (params) => {\n        //   const pass2 = params.getValue('passportNumber2');\n        //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\n        //   {\n        //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\n        //   }\n        //   else\n        //   {\n        //     return params.getValue('passportNumber')?.toUpperCase();\n        //   }\n        // }\n      },\n      {\n        field: \"certificate\",\n        headerName: \"Certificate\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"antiBodyTest\",\n        headerName: \"Antibody Test\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"postCode\",\n        headerName: \"Post Code\",\n        width: 150,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      {\n        field: \"address\",\n        headerName: \"Address\",\n        width: 500,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      // { field: 'notes', headerName: 'Notes', width: 500 },\n    ];\n  } else if (state.role === \"pcrlab\") {\n    columns = [\n      {\n        field: \"bookingDate\",\n        headerName: \"Booking Date\",\n        width: 200,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"Booking Time\",\n        width: 200,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 300 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 300 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n    ];\n  } else {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"tr\") ? (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\",\n                    color: \"#7e0082\",\n                  }}\n                >\n                  TR\n                </span>\n              ) : (\n                \"\"\n              )}\n\n              {state.role !== \"pcrlab\" && (\n                <Button\n                  color=\"primary\"\n                  onClick={(event) => openDetailsDialog(event, params.value)}\n                >\n                  <SearchIcon />\n                </Button>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return <CloseIcon className={classes.closeIcon} />;\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            // <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n              onClick={() => {\n                // console.log(params.value);\n                // setState(state => ({...state, currentMenuIndex: getMenuIndex(`findByRef`)}));\n                // setState(state => ({...state, ref : params.value}));\n                // setState(state => ({...state, refError : false}));\n                // setState(state => ({...state, foundRecords : []}));\n                // setState(state => ({...state, findRecords : !state.findRecords}));\n              }}\n            >\n              {params.value}\n            </Link>\n            // </Tooltip>\n          );\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 150 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 150 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"email\",\n        headerName: \"Email\",\n        width: 200,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      {\n        field: \"passportNumber\",\n        headerName: \"Passport No.\",\n        width: 250,\n        // valueGetter: (params) => {\n        //   const pass2 = params.getValue('passportNumber2');\n        //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\n        //   {\n        //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\n        //   }\n        //   else\n        //   {\n        //     return params.getValue('passportNumber')?.toUpperCase();\n        //   }\n        // }\n      },\n      {\n        field: \"certificate\",\n        headerName: \"Certificate\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"antiBodyTest\",\n        headerName: \"Antibody Test\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"postCode\",\n        headerName: \"Post Code\",\n        width: 150,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      {\n        field: \"address\",\n        headerName: \"Address\",\n        width: 500,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      // { field: 'notes', headerName: 'Notes', width: 500 },\n    ];\n  }\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: true,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const dateFormatter = (str) => {\n    return str;\n  };\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = (top) => {\n    var api = BookService.getAllBookings;\n    if (props.date === \"today\") {\n      api = BookService.getTodayBookings;\n    } else if (props.date === \"old\") {\n      api = BookService.getOldBookings;\n    } else if (props.date === \"future\") {\n      api = BookService.getFutureBookings;\n    } else if (props.date === \"recent\") {\n      api = BookService.getRecentBookingsAll;\n    } else if (props.date === \"live\") {\n      api = BookService.getLiveBookings;\n    } else if (props.date === \"completed\") {\n      api = BookService.getCompletedBookings;\n    } else if (props.date === \"positive\") {\n      api = BookService.getPositiveBookings;\n    } else if (props.date === \"deleted\") {\n      api = BookService.getDeletedBookings;\n    } else if (props.date === \"late\") {\n      api = BookService.getLateBookings;\n    } else if (props.date === \"tr\") {\n      api = BookService.getAllTRBookings;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(top)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    setTopCount(25);\n    loadData(25);\n  }, [props.date]);\n\n  useEffect(() => {\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter(\n        (element) =>\n          element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          `${element.forename} ${element.surname}`\n            .toLowerCase()\n            .indexOf(filter.toLowerCase()) >= 0\n      );\n\n      setData({\n        bookings: [...filteredData],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    } else {\n      setData({\n        bookings: [...data.cachedBookings],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    loadData(topCount);\n  }, [state.bookingDialogDataChanged]);\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  };\n\n  const openDetailsDialog = (event, id) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.userId.username === \"admin\" && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        autoOk={true}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        autoOk={true}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {FormatDateFromString(booking.birthDate)}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Grid, LinearProgress, Tooltip } from '@material-ui/core';\nimport * as dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport BookingDialog from './BookingDialog';\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth : \"90px\",\n    minHeight: \"30px\",\n    border : \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight : \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius : \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n        background: \"#3f51b5\",\n        color: \"#ebedf7\"\n      },\n}\n\n\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const[current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() => \n  {\n    const interval = setInterval(() => {  \n      setCurrent(new Date());\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval);\n    }\n\n  }, []);\n\n  useEffect(() => \n  {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot)\n      return;\n    const todayStr = dateformat(current, 'yyyy-mm-dd');\n    setLoading(true)\n    BookService.getBookingsByDateStrandTime(todayStr,currentTimeSlot).then(res =>\n      {\n        setLoading(false)\n        if (res.data.status === 'OK')\n        {\n            setBookings([...res.data.bookings]);\n        }   \n\n      }).catch(err =>\n        {\n          setLoading(false)\n          console.log(err);\n        });\n\n  }, [current]);\n\n  const getBookingsBox = (_bookings) =>\n  {\n      if (_bookings && _bookings.length > 0)\n      {\n         return (\n\n          <div className={classes.root}>\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={0}>\n\n                  { _bookings.map(booking => (\n\n                    <Grid item>\n\n                        <div className={classes.bookingBox} onClick={event => bookingCliked(event,booking)}>\n\n                            <span style={{textAlign:\"center\"}}> {`${booking.surnameCapital}`.substring(0,10)} </span>\n\n                        </div>\n\n                  </Grid>\n\n                  ))}\n\n              \n            </Grid>\n\n          </div>\n         )\n             \n        }                   \n  }\n\n  const bookingCliked = (event, booking) =>\n  {\n      setSelectedBooking(booking);\n      setOpenDialog(true);\n  }\n\n  const handleCloseDialog = () =>\n  {\n      setOpenDialog(false);\n  }\n\n  return (\n    <React.Fragment>\n\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, 'dd mmmm, yyyy') } \n      </Typography>\n     \n        {getBookingsBox(bookings)}\n      \n\n      <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('pcr',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Name</TableCell>\n            <TableCell>Surname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>D.O.B</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.forename}</TableCell>\n              <TableCell>{row.surname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{FormatDateFromString(row.birthDate)}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Dialog, DialogContent, DialogTitle, Grid, LinearProgress, Link, Table, TableBody, TableCell, TableHead, TableRow, Tooltip } from '@material-ui/core';\nimport BookService from './services/BookService';\n\nimport {\n  PieChart, Pie, Sector, Cell,\n} from 'recharts';\n\nconst COLORS = ['#00b33e', '#0070e0', '#bb00c4'];\n\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, value, index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fontSize=\"14px\" fontWeight=\"500\" fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${value} `}\n    </text>\n  );\n};\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  ReportLabels: {\n    position: \"absolute\",\n    top: \"80px\",\n    left: \"0px\"\n  },\n\n  AverageLabel: {\n    position: \"absolute\",\n    top: \"190px\",\n    right: \"30px\",\n    fontSize: \"12px\",\n    color: \"#0070e0\",\n    fontWeight: \"600\",\n  },\n\n  less12Label: {\n    fontSize: \"12px\",\n    color: \"#00b33e\",\n    fontWeight: \"600\",\n    paddingLeft: \"5px\",\n    borderLeft: \"5px solid #00b33e\",\n    marginBottom: \"10px\",\n  },\n\n  less24Label: {\n    fontSize: \"12px\",\n    color: \"#0070e0\",\n    fontWeight: \"600\",\n    paddingLeft: \"5px\",\n    borderLeft: \"5px solid #0070e0\",\n    marginBottom: \"10px\",\n  },\n\n  less36Label: {\n    fontSize: \"12px\",\n    color: \"#bb00c4\",\n    fontWeight: \"600\",\n    paddingLeft: \"5px\",\n    borderLeft: \"5px solid #bb00c4\",\n    marginBottom: \"10px\",\n  },\n\n  seeMore: {\n    position: \"absolute\",\n    top: \"191px\",\n    left: \"2px\"\n  },\n\n  TableTitle: {\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: \"1.1rem\",\n    fontWeight: \"500\",\n    backgroundColor: \"#00852a\",\n    color: \"#fff\",\n\n    border: \"1px solid #00852a\",\n    padding: \"5px\"\n  },\n\n  TableBorder: {\n    border: \"1px solid #00852a\",\n    marginBottom: \"20px\"\n\n  }\n\n});\n\n\nexport default function ResultsTimeReport() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [report, setReport] = React.useState({});\n\n  const [reportLast7, setReportLast7] = React.useState({});\n  const [reportLast30, setReportLast30] = React.useState({});\n\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const [data, setData] = React.useState(null);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    }\n\n  }, []);\n\n  useEffect(() => {\n\n    setLoading(true)\n    BookService.getTestsTimeReport().then(res => {\n      const result = [];\n      setLoading(false)\n      if (res.data.status === 'OK') {\n        setReport(res.data.result);\n        // console.log(res.data.result);\n        result.push({ name: 'lessThan12', value: res.data.result.lessThan12 });\n        result.push({ name: 'lessThan24', value: res.data.result.lessThan24 });\n        result.push({ name: 'lessThan36', value: res.data.result.lessThan36 });\n\n        // result.push({name: 'lessThan48', value : res.data.result.lessThan48 });\n        setData(result);\n      }\n\n    }).catch(err => {\n      setLoading(false)\n      console.error(err);\n    });\n\n    BookService.getTestsTimeReportLast7().then(res => {\n      if (res.data.status === 'OK') {\n        setReportLast7(res.data.result);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n\n    BookService.getTestsTimeReportLast30().then(res => {\n      if (res.data.status === 'OK') {\n        setReportLast30(res.data.result);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n\n\n\n\n  }, []);\n\n  const getReportLabels = () => {\n    return (\n\n      <div className={classes.ReportLabels}>\n        <div className={classes.less12Label}> {`12 Hours`} </div>\n        <div className={classes.less24Label}> {`24 Hours`} </div>\n        <div className={classes.less36Label}> {`36 Hours`} </div>\n      </div>\n\n    );\n  }\n\n  const getAverageLabel = () => {\n    return (\n\n      <div className={classes.AverageLabel}>\n        avg = <span style={{ fontSize: \"14px\" }}> {`${report.avg}`} </span> hours\n      </div>\n\n    );\n  }\n\n  const seeMoreClicked = (event) => {\n    event.preventDefault();\n    setOpen(true);\n  }\n\n  return (\n    <React.Fragment>\n\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n\n        <Title>PCR RESULTS SUMMARY</Title>\n\n        {data && (\n          <>\n\n            <PieChart width={250} height={150}>\n              <Pie\n                data={data}\n                cx={170}\n                cy={70}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={65}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {\n                  data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                }\n              </Pie>\n            </PieChart>\n\n\n            {getReportLabels()}\n            {getAverageLabel()}\n\n            <div className={classes.seeMore}>\n              <Link color=\"primary\" href=\"#\" onClick={seeMoreClicked}>\n                See Details\n                            </Link>\n            </div>\n\n\n            <Dialog style={{ padding: \"50px\" }} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n              <DialogTitle style={{ textAlign: \"center\" }} id=\"simple-dialog-title\">PCR Results Time Report</DialogTitle>\n              <DialogContent>\n                <div className={classes.TableTitle}>\n                  All Records\n                </div>\n                <div className={classes.TableBorder}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Recieved in Less Than</TableCell>\n                        <TableCell>Count</TableCell>\n                        <TableCell>Percent</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow key=\"row1\">\n                        <TableCell>12 Hours</TableCell>\n                        <TableCell>{report.lessThan12}</TableCell>\n                        <TableCell>{report.lessThan12Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row2\">\n                        <TableCell>24 Hours</TableCell>\n                        <TableCell>{report.lessThan24}</TableCell>\n                        <TableCell>{report.lessThan24Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row3\">\n                        <TableCell>36 Hours</TableCell>\n                        <TableCell>{report.lessThan36}</TableCell>\n                        <TableCell>{report.lessThan36Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell>48 Hours</TableCell>\n                        <TableCell>{report.lessThan48}</TableCell>\n                        <TableCell>{report.lessThan48Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell style={{ fontWeight: \"800\" }}>Total Results Received : </TableCell>\n                        <TableCell style={{ fontWeight: \"600\" }}>{report.lessThan48 + report.lessThan36 + report.lessThan24 + report.lessThan12}</TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n\n                <div className={classes.TableTitle}>\n                  Last 7 Days\n                </div>\n                <div className={classes.TableBorder}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Recieved in Less Than</TableCell>\n                        <TableCell>Count</TableCell>\n                        <TableCell>Percent</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow key=\"row1\">\n                        <TableCell>12 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan12}</TableCell>\n                        <TableCell>{reportLast7.lessThan12Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row2\">\n                        <TableCell>24 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan24}</TableCell>\n                        <TableCell>{reportLast7.lessThan24Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row3\">\n                        <TableCell>36 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan36}</TableCell>\n                        <TableCell>{reportLast7.lessThan36Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell>48 Hours</TableCell>\n                        <TableCell>{reportLast7.lessThan48}</TableCell>\n                        <TableCell>{reportLast7.lessThan48Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell style={{ fontWeight: \"800\" }}>Total Results Received : </TableCell>\n                        <TableCell style={{ fontWeight: \"600\" }}>{reportLast7.lessThan48 + reportLast7.lessThan36 + reportLast7.lessThan24 + reportLast7.lessThan12}</TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n\n                <div className={classes.TableTitle}>\n                  Last 30 Days\n                </div>\n                <div className={classes.TableBorder}>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Recieved in Less Than</TableCell>\n                        <TableCell>Count</TableCell>\n                        <TableCell>Percent</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow key=\"row1\">\n                        <TableCell>12 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan12}</TableCell>\n                        <TableCell>{reportLast30.lessThan12Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row2\">\n                        <TableCell>24 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan24}</TableCell>\n                        <TableCell>{reportLast30.lessThan24Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row3\">\n                        <TableCell>36 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan36}</TableCell>\n                        <TableCell>{reportLast30.lessThan36Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell>48 Hours</TableCell>\n                        <TableCell>{reportLast30.lessThan48}</TableCell>\n                        <TableCell>{reportLast30.lessThan48Percent} %</TableCell>\n                      </TableRow>\n                      <TableRow key=\"row4\">\n                        <TableCell style={{ fontWeight: \"800\" }}>Total Results Received : </TableCell>\n                        <TableCell style={{ fontWeight: \"600\" }}>{reportLast30.lessThan48 + reportLast30.lessThan36 + reportLast30.lessThan24 + reportLast30.lessThan12}</TableCell>\n                        <TableCell></TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n\n\n\n\n\n              </DialogContent>\n            </Dialog>\n\n\n\n\n          </>\n        )}\n\n      </div>\n\n\n\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\nimport ResultsTimeReport from './ResultsTimeReport';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={5}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Tests Summary */}\n                    <Grid item xs={12} md={4} lg={4}>\n                     <Paper className={fixedHeightPaper}>\n                        <ResultsTimeReport />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={3}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from './../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginLeft: \"50px\"\n  }\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function UnmatchedRecords() {\n\n  const classes = useStyles();\n\n  const columns = [\n    { field: 'id', headerName: '#', width: 50 },\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'forename', headerName: 'Forename', width: 200 },\n    { field: 'surname', headerName: 'Surname', width: 200 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<WbIncandescentIcon />}\n                onClick={event => smartMatchClicked(event, params.value)}\n                className={classes.smartMatchButton}\n              >\n                smart match\n                </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n                </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n\n              {state.role !== \"pcrlab\" && (\n\n                <Button\n                  disabled={params.value === disableId}\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<WbIncandescentIcon />}\n                  onClick={event => smartMatchClicked(event, params.value)}\n                  className={classes.smartMatchButton}\n                >\n                  smart match\n                </Button>\n              )}\n\n              {state.role !== \"pcrlab\" && (\n\n                <Button\n                  disabled={params.value === disableId}\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={event => unArchiveRecord(event, params.value)}\n                  className={classes.archiveButton}\n                >\n                  Undo\n                </Button>\n              )}\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState(state.role !== \"pcrlab\" ? 'unresolved' : 'archived');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n\n    if (state.role === \"pcrlab\") {\n      return\n    }\n\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setTimeout(() => {\n      setSeeDetailsBooking(null);\n    }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveRecord(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveRecord(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getUnmatchedRecords;\n    if (selectedTab === 'archived') {\n      api = BookService.getUnmatchedRecordsArchived;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n\n      return res.data;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab]);\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n          (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}> <WarningIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#444\" }}> Unmatched Records </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              UnResolved\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Forename:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.forename}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Surname:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.surname}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n          <BookingDialog\n            booking={seeDetailsBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n            deleteButtonDisabled={true}\n          />\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 100;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 5;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.forenameCapital.indexOf(search) >= 0\n                                                            ||  booking.surnameCapital.indexOf(search) >= 0\n                                                            ||  `${booking.forenameCapital} ${booking.surnameCapital}`.indexOf(search) >= 0\n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        if (state.role === 'pcrlab')\n            return\n\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'sample_taken':\n                return classes.bookingBoxSampleTaken;\n            case 'positive':\n                return classes.bookingBoxPositive;\n            case 'report_sent':\n            case 'report_cert_sent':\n                return classes.bookingBoxReportSent;     \n\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length > 0)\n        {\n           return (\n                _bookings.map(booking => (\n\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={getBookingClass(booking.status)} onClick={event => bookingCliked(event,booking)}>\n\n                        {`${booking.forenameCapital}-${booking.surnameCapital}`.substring(0,15)}\n\n                    </div>\n\n                ))\n\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n\n   static changeDepositBooking = (bookingId, deposit) => {\n      return API.post(`/api/gynae/book/changedepositbooking?id=${bookingId}&deposit=${deposit}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gynae/book/addnewbooking`, payload);\n   }\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gynae/book/sendregformemail?id=${bookingId}`);\n   }\n\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gynae/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gynae/book/getshouldrefundscount`);\n   }\n\n   static manualRefundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/payment/manualrefundpayment`, {bookingId: bookingId});\n   }\n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gynae/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gynae/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gynae/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gynae/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gynae/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gynae/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gynae/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gynae/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/gynae/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gynae/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/gynae/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/gynae/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/gynae/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGynaeRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgynaeregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n    static downloadCovidForm1 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadCovidForm2 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfResult = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfCert = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\nimport { getCorporates } from \"../Corporates\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"OTC Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadBloodRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadbloodregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getAllCodes = () =>\n   {\n       return API.get(`/api/medex/invoice/getallbloodcodesadmin`)\n   }\n\n   \n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n\n   \n\n   static getNewBloodResultsCount = () =>\n   {\n      return API.get(`/api/blood/book/getnewbloodresultscount`);\n   }\n\n   static getSentBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getsentbloodreports`);\n   }\n\n\n   static getArchivedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedbloodreports`);\n   }\n\n   static getNewMatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getnewmatchedbloodreports`);\n   }\n\n   static getArchivedMatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedmatchedbloodreports`);\n   }\n\n   static getNewUnmatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getnewunmatchedbloodreports`);\n   }\n\n   static getArchivedUnmatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedunmatchedbloodreports`);\n   }\n\n   static sendBloodReportEmail = (bloodreportId, email, notes) =>\n   {\n      return API.post(`/api/blood/book/sendbloodreportemail?id=${bloodreportId}`, {email, notes});\n   }\n\n   static updateBloodReport = (bloodreportId, email, notes) =>\n   {\n      return API.post(`/api/blood/book/updatebloodreport?id=${bloodreportId}`, {email, notes});\n   }\n\n\n   static archiveBloodReport = (bloodreportId) =>\n   {\n      return API.post(`/api/blood/book/archivebloodreport?id=${bloodreportId}`);\n   }\n\n   static unArchiveBloodReport = (bloodreportId) =>\n   {\n      return API.post(`/api/blood/book/unarchivebloodreport?id=${bloodreportId}`);\n   }\n\n\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/blood/book/addnewbooking`, payload);\n   }\n   \n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/blood/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/blood/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/blood/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/blood/book/getshouldrefundscount`);\n   }  \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/blood/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/blood/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/blood/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/blood/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/blood/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/blood/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/blood/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/blood/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/blood/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/blood/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/blood/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/blood/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/blood/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/blood/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/blood/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/admin/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/admin/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/admin/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/admin/book/getallbookings?limit=${limit}`);\n    }\n\n    static searchAllBookings = (filter) =>\n    {\n      return API.post(`/api/admin/book/searchallbookings`,{filter:filter});\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/admin/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/admin/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\nimport { getCorporates } from \"../Corporates\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/gp/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gp/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/gp/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/gp/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/gp/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\nimport { getCorporates } from \"../Corporates\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n  const [corporates, setCorporates] = React.useState([])\n  \n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gp/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GP_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GP\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadSTDRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadstdregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/std/book/addnewbooking`, payload);\n   }\n   \n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/std/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/std/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/std/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/std/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/std/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/std/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/std/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/std/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/std/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/std/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/std/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/std/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/std/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/std/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/std/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/std/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/std/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/std/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/std/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/std/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/std/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\nimport { getCorporates } from \"../Corporates\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        service !== booking.packageName;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadSTDRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/std/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.STD_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                STD\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Package</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.packageName}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoTitle}\n                        >\n                          Estimated Price\n                        </span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.estimatedPrice}\n                        </span>\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n<BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport dateformat from \"dateformat\";\n\nconst addMinutes = (date, minutes) => {\n  date = new Date(date);\n  return new Date(date.getTime() + minutes * 60 * 1000);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  itemTitle: {\n    fontWeight: \"500\",\n    color: \"#555\",\n  },\n\n  itemData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"600\",\n    color: \"#127512\",\n  },\n}));\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function TimeStampDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [reportRecievedTimeStamp, setReportRecievedTimeStamp] = React.useState(null)\n  const [reportSentTimeStamp, setReportSentTimeStamp] = React.useState(null)\n\n\n  const getReportRecievedTimeStamp = (bloodReports) => {\n    let time = null\n    if (bloodReports && bloodReports.length > 0) {\n      for (var i = 0; i < bloodReports.length; i++) {\n        if (bloodReports[i].timeStamp) {\n          return bloodReports[i].timeStamp\n        }\n      }\n    }\n    return time\n  }\n\n  const getReportSentTimeStamp = (bloodReports) => {\n    let time = null\n    if (bloodReports && bloodReports.length > 0) {\n      for (var i = 0; i < bloodReports.length; i++) {\n        if (bloodReports[i].emailSentTimeStamp) {\n          return bloodReports[i].emailSentTimeStamp\n        }\n      }\n    }\n    return time\n  }\n\n\n  React.useEffect(() => {\n\n    setReportRecievedTimeStamp(getReportRecievedTimeStamp(props.bloodReports))\n    setReportSentTimeStamp(getReportSentTimeStamp(props.bloodReports))\n\n  }, [props.booking, props.bloodReports])\n\n\n  const handleClose = () => {\n\n    setReportRecievedTimeStamp(null)\n    setReportSentTimeStamp(null)\n\n    props.handleClose();\n  };\n\n  // useEffect(() => {\n  //   if (props.booking) {\n  //     if (props.booking.filename && props.booking.filename.length > 0) {\n  //       BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n  //         (res) => {\n  //           if (res.data.status === \"OK\") {\n  //             setLinkTimeStamp(res.data.link.timeStamp);\n  //           }\n  //         }\n  //       );\n  //     }\n  //   }\n  // }, [props.booking]);\n\n  const getDateFromBooking = (booking) => {\n    let date = new Date(booking.bookingDate);\n    date.setHours(booking.bookingTimeNormalized.substr(0, 2));\n    date.setMinutes(booking.bookingTimeNormalized.substr(3, 2));\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    return date;\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <HistoryIcon style={{ color: \"#f50057\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Audit Trail{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"370px\",\n\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={4}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      PATIENT BOOKING TIMESTAMP :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {\" \"}\n                      {dateformat(props.booking.timeStamp, \"isoDateTime\")}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      BOOKED DATE AND TIME :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {dateformat(\n                        getDateFromBooking(props.booking),\n                        \"isoDateTime\"\n                      )}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP ATTENDED :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          props.booking.samplingTimeStamp,\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SAMPLE TAKEN :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - COLLECTED BY COURIER :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 35),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - RESULTS RECEIVED :{\" \"}\n                    </span>\n                    {reportRecievedTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(reportRecievedTimeStamp, \"isoDateTime\")}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SENT TO PATIENT :{\" \"}\n                    </span>\n                    {reportSentTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(reportSentTimeStamp, \"isoDateTime\")}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n\n\n                  </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"default\">\n                Back\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"./BloodReportDialog\";\n\nimport TimeStampDialog from \"./TimeStampDialog\"\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        dob !== FormatDateFromString(booking.birthDate) ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        service !== booking.packageName;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }else if (props.open){\n\n\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setDOB(FormatDateFromString(person.birthDate));\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadBloodRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () =>\n  {\n    setBloodReports(null)\n    try{\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0)\n      {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch(err)\n    {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () =>\n  {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) =>\n  {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  const [dob, setDOB] = React.useState(\"\");\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getIndivisualTestsString = (indivisualTests) => {\n    if (!indivisualTests)\n      return '-'\n    const tests = JSON.parse(indivisualTests);\n    let testsString = \"\";\n    tests.forEach((item) => {\n      testsString += item.description;\n      testsString += \" , \";\n    });\n    return testsString;\n  };\n\n  \n\n\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/blood/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"20px\",\n                  backgroundColor: CalendarColors.BLOOD_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {booking.doctorConsultation ? \"Blood + Doctor Consultation\" : \"Blood\"}\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                          <span className={classes.infoTitle}>D.O.B</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.dobError}\n                                className={classes.TextBox}\n                                value={dob}\n                                onChange={dobChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Package</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.packageName}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Indivisual Tests</span>\n                        <span\n                          className={classes.infoData}\n                        >\n                          {getIndivisualTestsString(booking.indivisualTests)}\n                        </span>\n                      </li>\n\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                      <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoTitle}\n                        >\n                          Estimated Price\n                        </span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.estimatedPrice}\n                        </span>\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <li>\n                        <Button\n                          startIcon={<HistoryIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            setSelectedBooking(booking);\n                            setOpenTimeStampDialog(true);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Show Audit Trail\n                        </Button>\n                      </li>\n\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon/>} style={{color:\"#dc2626\"}} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>  \n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                         </React.Fragment>\n                       )}     \n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n            <TimeStampDialog\n              booking={selectedBooking}\n              open={openTimeStampDialog}\n              bloodReports={bloodReports}\n              handleClose={handleCloseTimeStampDialog}\n            />\n\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n\n\n\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadDermaRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloaddermaregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/derma/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/derma/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/derma/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/derma/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/derma/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/derma/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/derma/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/derma/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/derma/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/derma/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/derma/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/derma/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/derma/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/derma/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/derma/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/derma/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/derma/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/derma/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/derma/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/derma/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\nimport { getCorporates } from \"../Corporates\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        service !== booking.package ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.package)\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.package = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadDermaRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/derma/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.DERMA_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Dermatology\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{paddingTop:\"20px\"}}>\n                      <span className={classes.infoTitle}>Service</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.package?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={service}\n                                onChange={serviceChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadScreeningRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadscreeningregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n\n\n\n   static getBloodReportsByBookingId = (bookingId) =>\n   {\n      return API.get(`/api/blood/book/getbloodreportsbybookingid?id=${bookingId}`);\n   }\n\n   static changeDepositBooking = (bookingId, deposit) => {\n      return API.post(`/api/screening/book/changedepositbooking?id=${bookingId}&deposit=${deposit}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/screening/book/addnewbooking`, payload);\n   }\n\n   static manualRefundBooking = (bookingId) =>\n   {\n      return API.post(`/api/screening/payment/manualrefundpayment`, {bookingId: bookingId});\n   }\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/screening/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/screening/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/screening/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/screening/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/screening/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/screening/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/screening/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/screening/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/screening/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/screening/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/screening/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/screening/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/screening/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/screening/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/screening/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/screening/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/screening/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/screening/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/screening/book/undeletebookappointment?id=${id}`);\n   } \n\n\n   static moveTBCFolder = (id) =>\n   {\n      return API.post(`/api/screening/book/movetbcfolder?id=${id}`);\n   } \n\n   static undoMoveTBCFolder = (id) =>\n   {\n      return API.post(`/api/screening/book/undomovetbcfolder?id=${id}`);\n   } \n\n\n   static confirmBooking = (id) =>\n   {\n      return API.post(`/api/screening/book/confirmbookappointment?bookingId=${id}`);\n   } \n\n\n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/screening/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/screening/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/screening/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTBCFolderBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/gettbcfolderbookings?limit=${limit}`);\n    }\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/screening/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/screening/book/getrecentbookings`);\n    }\n\n    static getPendingBookings= () =>\n    {\n       return API.get(`/api/screening/book/getpendingbookings`);\n    }\n\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/screening/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\nimport { getCorporates } from \"../Corporates\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState('');\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n  Switch,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\n\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: 999,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  PackageBox:{\n    width:\"100%\",\n    color: \"#005bb5\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    fontSize:\"1rem\",\n  }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openConfirmDialog, setOpenConfirmDialog] = React.useState(false);\n  const [openTBCDialog, setOpenTBCDialog] = React.useState(false);\n\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [birthDate, setBirthDate] = React.useState(\"\");\n\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n\n\n  const depositChanged = async (event) => {\n    const checked = event.target.checked;\n    const deposit = checked ? 100 : 0;\n    setSaving(true);\n    try {\n      await BookService.changeDepositBooking(booking._id, deposit);\n      setSaving(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setOpenConfirmDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseTBCDialog = () => {\n    setOpenTBCDialog(false);\n    setSelectedBooking(null);\n  };\n\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        birthDate !== booking.birthDate\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const birthDateChanged = (event) => {\n    setBirthDate(event.target.value);\n    setValidationError({ ...validationError, birthDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setBirthDate(FormatDateFromString(person.birthDate));\n\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = person.service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n      booking.birthDate = RevertFormatDateFromString(birthDate);\n\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (booking.birthDate && !validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, birthDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const manualRefund = async () => {\n    setSaving(true);\n    try {\n      await BookService.manualRefundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const confirmBookingClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.confirmBooking(booking._id);\n      setSaving(false);\n      setOpenConfirmDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenConfirmDialog(false);\n    }\n  };\n\n  const moveTBCFolderClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.moveTBCFolder(booking._id);\n      setSaving(false);\n      setOpenTBCDialog(false);\n      setRefreshData(!refreshData);\n      onClose();\n      \n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenTBCDialog(false);\n    }\n  };\n\n  const undoMoveTBCFolderClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.undoMoveTBCFolder(booking._id);\n      setSaving(false);\n      setOpenTBCDialog(false);\n      setRefreshData(!refreshData);\n      onClose();\n      \n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenTBCDialog(false);\n    }\n  };\n\n\n\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadScreeningRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n\n                {!booking.confirmed && (\n                  <div style={{color:\"red\", fontSize:\"1.1rem\", fontWeight:\"500\", border:\"2px solid red\", padding:\"5px\", borderRadius:\"8px\"}}>\n                    NOT CONFIRMED!\n                  </div>  \n                )}\n\n\n                {booking.confirmed && (\n                  <div style={{color:\"#258200\", fontSize:\"1.1rem\", fontWeight:\"500\", border:\"2px solid #258200\", padding:\"5px\", borderRadius:\"8px\"}}>\n                    CONFIRMED\n                  </div>  \n                )}\n\n              </div>  \n\n\n              {/* <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gp/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div> */}\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.SCREENING_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Screening\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"10px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n\n                      {!booking.confirmed && (\n                        <li style={{margin:\"20px 0px\"}}>\n                            <Button\n                              style={{height:\"50px\"}}\n                              color=\"primary\"\n                              fullWidth\n                              variant=\"contained\"\n                              onClick={()=> {\n                                setSelectedBooking(booking)\n                                setOpenConfirmDialog(true)\n                              }}\n                            >\n                              Confirm Booking\n\n                            </Button>\n\n                        </li>\n                      )}\n\n                    {!booking.confirmed && !booking.tbcFolder && (\n                        <li style={{margin:\"20px 0px\"}}>\n                            <Button\n                              style={{height:\"50px\"}}\n                              color=\"secondary\"\n                              fullWidth\n                              variant=\"contained\"\n                              onClick={()=> {\n                                setSelectedBooking(booking)\n                                setOpenTBCDialog(true)\n                              }}\n                            >\n                              Move To Patients TBC \n\n                            </Button>\n\n                        </li>\n                      )}\n\n                    {!booking.confirmed && booking.tbcFolder && (\n                        <li style={{margin:\"20px 0px\"}}>\n                            <Button\n                              style={{height:\"50px\"}}\n                              color=\"secondary\"\n                              fullWidth\n                              variant=\"contained\"\n                              onClick={()=> {\n                                setSelectedBooking(booking)\n                                setOpenTBCDialog(true)\n                              }}\n                            >\n                              Move Back To Pending Bookings \n                              \n                            </Button>\n\n                        </li>\n                      )}\n\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              DOB\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.birthDateError}\n                                className={classes.TextBox}\n                                value={birthDate}\n                                onChange={birthDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li style={{marginTop:\"20px\"}}>\n                        <span className={classes.infoTitle}>PACKAGE</span>\n\n                        <span className={classes.PackageBox}>\n                          {booking.service}\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"20px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            {booking.paymentInfo ? \"ONLINE\" : \"PHONE\"} DEPOSIT\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.deposit || booking.deposit === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${booking.deposit.toLocaleString(\n                            \"en-GB\"\n                          )}`}</span>\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className={classes.PayButton}\n                                onClick={(event) => setOpenRefundDialog(true)}\n                              >\n                                Refund Deposit\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.PayButton}\n                                onClick={(event) => manualRefund()}\n                              >\n                                <span style={{ textTransform: \"capitalize\" }}>\n                                  I made the refund manually\n                                </span>\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            // !booking.paid &&\n                            !booking.deleted &&\n                            // booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <FormControlLabel\n                                style={{ marginLeft: \"90px\" }}\n                                control={\n                                  <Switch\n                                    color=\"primary\"\n                                    checked={booking.deposit > 0}\n                                    onChange={depositChanged}\n                                    name=\"deposit\"\n                                  />\n                                }\n                                label={\n                                  booking.deposit > 0 ? (\n                                    <span className={classes.PriceLabelPaid}>\n                                      £100 Deposit Paid\n                                    </span>\n                                  ) : (\n                                    <span className={classes.PriceLabelNotPaid}>\n                                      £100 Deposit Not Paid\n                                    </span>\n                                  )\n                                }\n                              />\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            booking.refund && (\n                              <React.Fragment>\n                                <span className={classes.PayLabel}>\n                                  {\" \"}\n                                  <CheckIcon\n                                    className={classes.checkIconSmall}\n                                  />{\" \"}\n                                  Refund Done\n                                  {booking.paidBy === \"corporate\"\n                                    ? ` \"${booking.corporate}\" `\n                                    : \"\"}\n                                </span>\n                              </React.Fragment>\n                            )}\n                        </div>\n                      </li>\n\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>OTC CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li>\n\n\n                      {/* <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n */}\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          </Dialog>\n\n          <Dialog\n            open={openConfirmDialog}\n            onClose={handleCloseConfirmDialog}\n            aria-labelledby=\"confirm-dialog-title\"\n            aria-describedby=\"confirm-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#00a1c5\" }} id=\"confirm-dialog-title\">\n              {\"Confirm Booking\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                <span style={{fontWeight:\"500\"}}>\n                   Are you sure you want to confirm this booking?\n                </span>\n                <p>\n                  * After confirmation, email/sms will also be sent to the patient.\n                </p>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseConfirmDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={confirmBookingClicked}\n                color=\"primary\"\n                variant=\"contained\"\n                autoFocus\n              >\n                Yes, Confirm Booking\n              </Button>\n            </DialogActions>\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          </Dialog>\n\n          <Dialog\n            open={openTBCDialog}\n            onClose={handleCloseTBCDialog}\n            aria-labelledby=\"tbc-dialog-title\"\n            aria-describedby=\"tbc-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#f68529\" }} id=\"tbc-dialog-title\">\n              {!booking.tbcFolder ?  \"Move To Patients TBC\" : \"Move Back To Pending Bookings\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                <span style={{fontWeight:\"500\"}}>\n                {!booking.tbcFolder ?  `Are you sure you want to move this record to \"Patients TBC\"?` : `Are you sure you want to move this record to \"Pending Bookings\"?`}\n\n                   \n                </span>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseTBCDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={!booking.tbcFolder ? moveTBCFolderClicked : undoMoveTBCFolderClicked}\n                color=\"secondary\"\n                variant=\"contained\"\n                autoFocus\n              >\n                {!booking.tbcFolder ?  \"Yes, move to Patients TBC\" : \"Yes, move to Pending Bookings\"}\n\n                \n              </Button>\n            </DialogActions>\n            <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n          </Dialog>\n\n\n\n\n\n        </React.Fragment>\n      )}\n\n          <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PCRBookingDialog from \"./../PCR/BookingDialog\";\nimport GPBookingDialog from \"./../GP/BookingDialog\";\nimport GynaeBookingDialog from \"./../Gynae/BookingDialog\";\nimport STDBookingDialog from \"./../STD/BookingDialog\";\nimport BloodBookingDialog from \"./../Blood/BookingDialog\";\nimport DermaBookingDialog from \"./../Derma/BookingDialog\";\nimport ScreeningBookingDialog from \"./../Screening/BookingDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  if (props.booking) {\n    switch (props.booking.clinic) {\n      case \"pcr\":\n        return (\n          <PCRBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n      case \"gp\":\n        return (\n          <GPBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <GynaeBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n      case \"std\":\n        return (\n          <STDBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n        case \"blood\":\n          return (\n            <BloodBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n          case \"derma\":\n          return (\n            <DermaBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n          case \"screening\":\n          return (\n            <ScreeningBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n\n\n      default:\n        return null;\n    }\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n  unstable_createMuiStrictModeTheme,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport * as EmailValidator from 'email-validator';\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport AdminBookingService from \"../Admin/services/BookService\";\n\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport { getInitialColumnReorderState } from \"@material-ui/data-grid\";\n\nimport { Document, Page } from 'react-pdf';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport BookingDialog from '../Admin/BookingDialog'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BloodReportDialog(props) {\n  const classes = useStyles();\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [changesSaved, setChangesSaved] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setDOB(FormatDateFromString(person.birthDate));\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n\n  useEffect(() => {\n    if (props.booking && props.open) {\n      loadFileUrl(props.booking._id)\n      loadBookingDetail(props.booking.bookingId)\n      setBooking(props.booking);\n      setEmail(props.booking.email)\n      setNotes(props.booking.notes)\n\n\n    }\n  }, [props.booking, props.open]);\n\n  const loadBookingDetail = async (_id) => {\n    setSelectedBooking(null)\n    if (!_id) {\n      return\n    }\n\n    try {\n      const res = await AdminBookingService.getBookingById(_id)\n      if (res.data && res.data.length > 0) {\n        setSelectedBooking(res.data[0])\n      }\n\n    } catch (err) {\n      console.error(err)\n    }\n\n\n  }\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const [fileURL, setFileURL] = React.useState(null)\n  const loadFileUrl = (id) => {\n    setFileURL(null)\n    PDFService.downloadPdfLabReport(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = function () {\n          var base64data = reader.result;\n          console.log(base64data);\n          setFileURL(base64data)\n        }\n        // const _fileURL = URL.createObjectURL(file);\n        // setFileURL(_fileURL)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadPdfLabReport(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendBloodReportEmail(id, email, notes)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n          setState(state => ({ ...state, bloodReportRefresh: !state.bloodReportRefresh }))\n          booking.emailSent = true\n\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const saveChanges = (id) => {\n    setSaving(true);\n    setChangesSaved(false);\n    BookService.updateBloodReport(id, email, notes)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setChangesSaved(true);\n          setState(state => ({ ...state, bloodReportRefresh: !state.bloodReportRefresh }))\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n\n  const onClose = () => {\n    setEmailSent(false);\n    setChangesSaved(false)\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    setEmail('')\n    setNotes('')\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  const [dob, setDOB] = React.useState(\"\");\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getIndivisualTestsString = (indivisualTests) => {\n    if (!indivisualTests)\n      return '-'\n    const tests = JSON.parse(indivisualTests);\n    let testsString = \"\";\n    tests.forEach((item) => {\n      testsString += item.description;\n      testsString += \" , \";\n    });\n    return testsString;\n  };\n\n  const getColorFromClinic = (clinic) => {\n    switch (clinic) {\n      case 'blood':\n        return CalendarColors.BLOOD_COLOR\n      case 'std':\n        return CalendarColors.STD_COLOR\n      case 'gp':\n        return CalendarColors.GP_COLOR\n      case 'gynae':\n        return CalendarColors.GYNAE_COLOR\n      default:\n        return \"#999\"\n    }\n  }\n\n  const [openBookingDetailDialog, setOpenBookingDetailDialog] = React.useState(false)\n  const showBookingDetailClicked = () => {\n    setOpenBookingDetailDialog(true)\n  }\n  const handleCloseBookingDetailDialog = () => {\n    setOpenBookingDetailDialog(false)\n  }\n\n\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"lg\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"10px\",\n                  backgroundColor: getColorFromClinic(booking.clinic),\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {booking.clinic?.toUpperCase()}\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  left: \"20px\",\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                }}\n                hidden={!booking.emailSent}\n              >\n                <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                  <SendRoundedIcon style={{ fontSize: \"25px\", color: \"#009634\" }} />\n                </Tooltip>\n\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.name}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n\n                      <li className={classes.li}>\n\n                        <Grid container spacing={2} alignItems=\"center\">\n                          <Grid item xs={12} md={3}>\n                            <span className={classes.infoTitle}>\n                              TEST DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.testDate)}\n                            </span>\n\n\n                          </Grid>\n                          <Grid item xs={12} md={3}>\n                            <span className={classes.infoTitle}>NAME : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.name}\n                            </span>\n\n\n                          </Grid>\n                          <Grid item xs={12} md={3}>\n                            <span className={classes.infoTitle}>D.O.B : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n\n                          </Grid>\n\n                          {selectedBooking && (\n                            <Grid item xs={12} md={3}>\n                              <Button onClick={showBookingDetailClicked} startIcon={<SearchIcon />} color=\"primary\" variant=\"contained\">\n                                Show Booking Detail ...\n                              </Button>\n                            </Grid>\n                          )\n                          }\n\n                        </Grid>\n\n                      </li>\n\n                      {fileURL && (\n                        <div>\n                          {/* <Document\n                          file={{data:fileURL}}\n                          onLoadSuccess={onDocumentLoadSuccess}\n                        >\n                          <Page pageNumber={pageNumber} />\n                        </Document>\n                        <p>Page {pageNumber} of {numPages}</p> */}\n                          <iframe style={{ width: \"100%\", minHeight: \"500px\" }} src={fileURL}></iframe>\n                        </div>\n\n                      )}\n\n\n\n                      <li>\n                        {/* <span className={classes.infoTitle}>EMAIL :</span> */}\n                        <span\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            label=\"EMAIL\"\n                            style={{ margin: \"10px\" }}\n                            fullWidth\n                            variant=\"outlined\"\n                            // className={classes.TextBox}\n                            value={email || ''}\n                            onChange={emailChanged}\n                          // inputProps={{\n                          //   style: {\n                          //     padding: 0,\n                          //   },\n                          // }}\n                          ></TextField>\n                        </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"0px\" }}>\n                        {/* <span className={classes.infoTitle}>NOTES :</span> */}\n                        <span\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"NOTES\"\n                            style={{ margin: \"10px\" }}\n                            // className={classes.TextBox}\n                            value={notes || ''}\n                            onChange={notesChanged}\n                            variant=\"outlined\"\n                            multiline\n                            rows={4}\n                          // inputProps={{\n                          //   style: {\n                          //     padding: 0,\n                          //   },\n                          // }}\n                          ></TextField>\n                        </span>\n\n                      </li>\n\n\n                      {/* <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download LAB Report\n                        </Button>\n                      </li> */}\n\n                      <li>\n                        <Button\n                          disabled={!email || !EmailValidator.validate(email)}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\", marginBottom: \"10px\" }}\n                        >\n                          Send Email To Patient\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <li>\n                        <Button\n                          startIcon={<SaveIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            saveChanges(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\", marginBottom: \"10px\" }}\n                        >\n                          Save Changes\n                          {changesSaved && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Saved Successfully\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n\n\n              <BookingDialog\n                booking={selectedBooking}\n                open={openBookingDetailDialog}\n                onClose={handleCloseBookingDetailDialog}\n              />\n\n\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n\n\n\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        service !== booking.service ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.service);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGynaeRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const manualRefund = async () => {\n    setSaving(true);\n    try {\n      await BookService.manualRefundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const depositChanged = async (event) => {\n    const checked = event.target.checked;\n    const deposit = checked ? 100 : 0;\n    setSaving(true);\n    try {\n      await BookService.changeDepositBooking(booking._id, deposit);\n      setSaving(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking && props.open) {\n      fetchInvoice();\n      fetchBloodReports();\n    }\n  }, [props.booking, props.open]);\n\n  const [bloodReports, setBloodReports] = React.useState(null)\n  const [selectedBloodReport, setSelectedBloodReport] = React.useState(null)\n  const [bloodReportDialogOpen, setBloodReportDialogOpen] = React.useState(null)\n  const fetchBloodReports = async () => {\n    setBloodReports(null)\n    try {\n      const res = await BookService.getBloodReportsByBookingId(props.booking._id)\n      if (res.data && res.data.result && res.data.result.length > 0) {\n        setBloodReports(res.data.result)\n      }\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n  const handleClodeBloodReportDialog = () => {\n    setBloodReportDialogOpen(false)\n    setSelectedBloodReport(null)\n  }\n  const showBloodReportClicked = (bloodReport) => {\n    setSelectedBloodReport(bloodReport)\n    setBloodReportDialogOpen(true)\n  }\n\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GYNAE_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GYNAE\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>SERVICE</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.service}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"20px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            {booking.paymentInfo ? \"ONLINE\" : \"PHONE\"} DEPOSIT\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.deposit || booking.deposit === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${booking.deposit.toLocaleString(\n                            \"en-GB\"\n                          )}`}</span>\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className={classes.PayButton}\n                                onClick={(event) => setOpenRefundDialog(true)}\n                              >\n                                Refund Deposit\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.PayButton}\n                                onClick={(event) => manualRefund()}\n                              >\n                                <span style={{ textTransform: \"capitalize\" }}>\n                                  I made the refund manually\n                                </span>\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            // !booking.paid &&\n                            !booking.deleted &&\n                            // booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <FormControlLabel\n                                style={{ marginLeft: \"90px\" }}\n                                control={\n                                  <Switch\n                                    color=\"primary\"\n                                    checked={booking.deposit > 0}\n                                    onChange={depositChanged}\n                                    name=\"deposit\"\n                                  />\n                                }\n                                label={\n                                  booking.deposit > 0 ? (\n                                    <span className={classes.PriceLabelPaid}>\n                                      £100 Deposit Paid\n                                    </span>\n                                  ) : (\n                                    <span className={classes.PriceLabelNotPaid}>\n                                      £100 Deposit Not Paid\n                                    </span>\n                                  )\n                                }\n                              />\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            booking.refund && (\n                              <React.Fragment>\n                                <span className={classes.PayLabel}>\n                                  {\" \"}\n                                  <CheckIcon\n                                    className={classes.checkIconSmall}\n                                  />{\" \"}\n                                  Refund Done\n                                  {booking.paidBy === \"corporate\"\n                                    ? ` \"${booking.corporate}\" `\n                                    : \"\"}\n                                </span>\n                              </React.Fragment>\n                            )}\n                        </div>\n                      </li>\n\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>OTC CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li>\n\n                      {bloodReports && bloodReports.length > 0 && (\n                        <React.Fragment>\n                          <Divider />\n                          <li>\n                            <div style={{ padding: \"20px\" }}>\n                              <Grid container spacing={2} alignItems=\"center\">\n                                <Grid item xs={12}>\n                                  <div style={{ color: \"#dc2626\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                                    Blood Results :\n                                    </div>\n                                </Grid>\n                                {bloodReports.map(report => (\n                                  <Grid item>\n                                    <Button onClick={() => showBloodReportClicked(report)} startIcon={<SearchIcon />} style={{ color: \"#dc2626\" }} variant=\"outlined\">\n                                      {report.filename}\n                                    </Button>\n                                  </Grid>\n                                ))}\n\n                              </Grid>\n                            </div>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal - booking.deposit : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <BloodReportDialog\n              booking={selectedBloodReport}\n              open={bloodReportDialogOpen}\n              onClose={handleClodeBloodReportDialog}\n            />\n\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'service', headerName: 'Service', width: 250 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'service', headerName: 'Service', width: 250 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n  if (isWeekend(now)) {\n    return null;\n  }\n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isThursday(now) && hour < 13) {\n    return null;\n  }\n\n  if (isFriday(now) && hour >= 13) {\n    return null;\n  }\n\n  if (hour < 10 || hour >= 18) return null;\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Service</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{row.service}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [deposit, setDeposit] = React.useState(false);\n\n  const depositChanged = (event) => {\n    setDeposit(event.target.checked);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setNotes(\"\");\n    setDeposit(false);\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        service: service,\n        notes: notes,\n        deposit: deposit ? 100 : 0,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\" style={{position:\"relative\"}}>\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GYNAE_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    GYNAE\n              </div>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"480px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid otem xs={12} style={{marginTop:\"15px\"}}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={deposit}\n                          onChange={depositChanged}\n                          name=\"deposit\"\n                        />\n                      }\n                      label={deposit ? <span className={classes.PriceLabelPaid}>£100 Deposit Paid</span> : <span className={classes.PriceLabelNotPaid}>£100 Deposit Not Paid</span>}\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor:  theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () =>\n  {\n      setOpenDialogAddNew(true)\n  }\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={getBookingClass(booking.status)}\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GP_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    GP\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"400px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking.status)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n}));\n\nconst Packages = [\n  { packageName: \"Sexual Health Clinic - Bronze\" },\n  { packageName: `Sexual Health Clinic - Silver` },\n  { packageName: `Sexual Health Clinic - Gold` },\n  { packageName: `Sexual Health Clinic - Platinium` },\n  { packageName: `BLOOD SAMPLE AND URINE` },\n  { packageName: `BLOOD SAMPLE AND URINE OR SWAB` },\n  { packageName: `Indivisual Tests` },\n  { packageName: `Combo STD Checks` },\n];\n\nconst IndivisualTests = [\n  \"HIV TESTING\",\n  \"CHLAMYDIA TESTING\",\n  \"SYPHILIS BLOOD TESTING\",\n  \"HERPES TESTING\",\n  \"GONORRHOEA TESTING\",\n  \"HEPATITIS A PROFILE TESTING\",\n  \"HEPATITIS B PROFILE TESTING\",\n  \"HEPATITIS C ANTIBODIES TESTING\",\n  \"HPV TESTING\",\n  \"BACTERIAL SWAB TESTING\",\n];\n\nconst comboSTDChecks = [\n  \"CHLAMYDIA, GONORRHOEA AND TRICHOMONAS\",\n  \"HIV I & II WITH SYPHILIS\",\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\n  const [comboArray, setComboArray] = React.useState([]);\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setServiceError(false)\n    setNotes(\"\");\n    setIndivisualArray([]);\n    setComboArray([]);\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (!service || service.trim().length < 1)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    if (service === 'Indivisual Tests' && indivisualArray.length === 0)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    if (service === 'Combo STD Checks' && comboArray.length === 0)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    let packageName = service;\n    if (service === \"Indivisual Tests\") {\n      let temp = \"\";\n      indivisualArray.forEach((item, index) => {\n        temp += item;\n        if (index < indivisualArray.length - 1) {\n          temp += \" - \";\n        }\n      });\n      packageName = `Indivisual Tests : ( ${temp} )`;\n    } else if (service === \"Combo STD Checks\") {\n      let temp = \"\";\n      comboArray.forEach((item, index) => {\n        temp += item;\n        if (index < comboArray.length - 1) {\n          temp += \" - \";\n        }\n      });\n      packageName = `Combo STD Checks : ( ${temp} )`;\n    }\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        packageName: packageName,\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const IndivisualTestsChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (indivisualArray.findIndex((e) => e === item) < 0)\n        setIndivisualArray([...indivisualArray, item]);\n    } else {\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\n    }\n\n    setServiceError(false)\n  };\n\n  const comboSTDChecksChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (comboArray.findIndex((e) => e === item) < 0)\n        setComboArray([...comboArray, item]);\n    } else {\n      setComboArray(comboArray.filter((e) => e !== item));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.STD_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    STD\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"600px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth required error={serviceError}>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  {service === \"Indivisual Tests\" && (\n                    <Grid item xs={12}>\n                      {IndivisualTests.map((item) => (\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={\n                                indivisualArray.findIndex((e) => e === item) >=\n                                0\n                              }\n                              onChange={(event) =>\n                                IndivisualTestsChanged(event, item)\n                              }\n                              name={item}\n                            />\n                          }\n                          label={item}\n                        />\n                      ))}\n                    </Grid>\n                  )}\n\n                  {service === \"Combo STD Checks\" && (\n                    <Grid item xs={12}>\n                      {comboSTDChecks.map((item) => (\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={\n                                comboArray.findIndex((e) => e === item) >= 0\n                              }\n                              onChange={(event) =>\n                                comboSTDChecksChanged(event, item)\n                              }\n                              name={item}\n                            />\n                          }\n                          label={item}\n                        />\n                      ))}\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\nimport NewBookingDialog from '../NewBookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBoxNew: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth: \"150px\",\n        overflowX: \"hidden\",\n        border: \"1px solid #ddd\",\n        color: \"#ccc\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n    \n        boxShadow: \"2px 4px #fafafa\",\n        transition: \"all 0.5s ease\",\n        borderRadius: \"4px\",\n    \n        \"&:hover\": {\n          background: \"#fff\",\n          color: theme.palette.secondary.main,\n          borderColor:  theme.palette.secondary.main,\n        },\n      },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n                                                          \n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog || openDialogAddNew)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog || openDialogAddNew)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'patient_attended':\n                return classes.bookingBoxSampleTaken;\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const addNewBookingClicked = () =>\n    {\n        setOpenDialogAddNew(true)\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length >= 0)\n        {\n           return (\n            <React.Fragment>\n            {_bookings.map((booking) => (\n              <div\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                className={getBookingClass(booking.status)}\n                onClick={(event) => bookingCliked(event, booking)}\n              >\n                {`${booking.fullname}`.substring(0, 15)}\n              </div>\n            ))}\n  \n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n          </React.Fragment>\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    const handleCloseDialogAddNew = () => {\n        setOpenDialogAddNew(false);\n      };\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li} hidden={true}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li} hidden={true}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  loadingBox: {\n    \n  }\n\n}));\n\n\nconst DateField = ({title, value, dateChanged, error}) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n        const updateDate = (dd,mm,yyyy) =>\n        {\n            let dayStr = `${dd}`;\n            let monthStr = `${mm + 1}`;\n            \n\n            if (dayStr.length === 1)\n            {\n                dayStr = `0${dayStr}`;\n            }\n\n            if (monthStr.length === 1)\n            {\n                monthStr = `0${monthStr}`;\n            }\n\n            dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n            \n\n        }\n\n        const handleDayChanged = (event) => {\n            setDay(event.target.value);\n            updateDate(event.target.value,month,year);\n        };\n\n        const handleMonthChanged = (event) => {\n            setMonth(event.target.value);\n            updateDate(day, event.target.value, year);\n        };\n\n        const handleYearChanged = (event) => {\n            setYear(event.target.value);\n            updateDate(day,month,event.target.value);\n        };\n\n        useEffect ( () => \n        {\n            if (value && value.length === 10)\n            {\n                const d = parseInt(value.substr(8,2));\n                const m = parseInt(value.substr(5,2));\n                const y = parseInt(value.substr(0,4));\n\n                setDay(d);\n                setMonth(m-1);\n                setYear(y);\n            }\n           \n\n        }, [value]);\n\n      useEffect( () => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1 ; i <= 31; i++)\n        {\n            days.push(i);\n        }\n\n        for ( i = 0 ; i < 12; i++)\n        {\n            months.push(dateformat(new Date(2020,i,5), 'mmmm'));\n        }\n\n        for ( i = 1900 ; i < new Date().getFullYear(); i++)\n        {\n            years.push(i);\n        }\n\n       \n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n      } , [])\n    \n  return (\n\n    <React.Fragment>\n\n        \n    <div style={{position:\"relative\", border:`1px solid ${error ? 'red' : '#ddd'}` , borderRadius:\"10px\", padding:\"20px\", paddingBottom: \"50px\", marginTop: \"20px\"}}>\n\n        <div style={{position:\"absolute\", top: \"-15px\", left : \"15px\", backgroundColor:\"#fff\", color : `${error ? 'red' : '#555'}`, padding:\"5px\" , paddingLeft:\"10px\", paddingRight:\"10px\" }}>\n               {title} \n       </div>\n\n    \n\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={2}\n        >\n\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Day</InputLabel>\n                    <Select\n                        \n                        labelId=\"day-label\"\n                        id=\"day-select\"\n                        value={day}\n                        onChange={handleDayChanged}\n                        >\n                        {\n                            dayArray.map( item => (\n                                <MenuItem value={item}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"month-label\">Month</InputLabel>\n                    <Select\n                        labelId=\"month-label\"\n                        id=\"month-select\"\n                        value={month}\n                        onChange={handleMonthChanged}\n                        >\n                        {\n                            monthArray.map( (item , index) => (\n                                <MenuItem value={index}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n                \n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Year</InputLabel>\n                    <Select\n                    labelId=\"year-label\"\n                    id=\"year-select\"\n                    value={year}\n                    onChange={handleYearChanged}\n                    >\n                    {\n                        yearArray.map( item => (\n                            <MenuItem value={item}>{item}</MenuItem>\n                        )\n                    )} \n                    </Select>\n                </FormControl>\n            </Grid>\n        </Grid>\n\n        </div>\n    </React.Fragment>\n  );\n}\n\n\nDateField.propTypes = {\n    title : PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n  };\n\nexport default DateField;\n\n\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  Chip,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { matchSorter } from 'match-sorter'\nimport DateField from \"./DateField\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n\n  listOptions:{\n    backgroundColor: \"#dcf0f5\",\n    color: \"#034859\",\n    borderRadius:\"30px\",\n    padding: \"10px\",\n    fontWeight:\"500\",\n    fontSize: \"1rem\"\n  }\n\n}));\n\nconst Packages = [\n  { packageName: \"-\" }, \n  { packageName: \"SLIVER BLOOD TEST\" },\n  { packageName: `SLIVER PLUS BLOOD TEST\"` },\n  { packageName: `GOLD BLOOD TEST` },\n  { packageName: `PLATINIUM BLOOD TEST` },\n];\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\n  const [comboArray, setComboArray] = React.useState([]);\n\n  const [noOptionsText, setNoOptionsText] = React.useState('')\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  const [indivisualTests, setIndivisualTests] = React.useState([])\n\n  const [birthDate, setBirthDate] = React.useState(null);\n  const [birthDateError, setBirthDateError] = React.useState(false);\n\n  const birthDateChanged = (dateStr) =>\n  {\n      setBirthDate(dateStr);\n      setBirthDateError(false)\n  }  \n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await BookService.getAllCodes();\n      const data = res.data.result\n      const options = data.map((option) => {\n        const firstLetter = option.code[0].toUpperCase();\n        return {\n          firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n          ...option,\n        };\n      });\n\n      console.log(options)\n      setAllCodes(options);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if ((!allCodes || allCodes.length === 0) && props.open)\n      fetchAllCodes();\n  }, [props.open]);\n\n\n\n  const filterOptions = (options, { inputValue }) => {\n\n    if (inputValue && inputValue.length >= 3) {\n      setNoOptionsText(\"\")\n      return matchSorter(options, inputValue, { keys: ['code', 'description'] });\n    }\n    else {\n      setNoOptionsText(\"Please enter at least 3 characters\")\n      return matchSorter(options, '$$$$', { keys: ['code', 'description'] });\n    }\n  }\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setServiceError(false)\n    setNotes(\"\");\n    setIndivisualArray([]);\n    setComboArray([]);\n    setBirthDate(null)\n    setIndivisualTests([])\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (!birthDate || birthDate.length !== 10)\n    {\n      setBirthDateError(true)\n      error = true\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    let packageName = service;\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        packageName: packageName,\n        birthDate: birthDate,\n        indivisualTests: indivisualTests.length === 0 ? null : JSON.stringify(indivisualTests),\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const IndivisualTestsChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (indivisualArray.findIndex((e) => e === item) < 0)\n        setIndivisualArray([...indivisualArray, item]);\n    } else {\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\n    }\n\n    setServiceError(false)\n  };\n\n  const comboSTDChecksChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (comboArray.findIndex((e) => e === item) < 0)\n        setComboArray([...comboArray, item]);\n    } else {\n      setComboArray(comboArray.filter((e) => e !== item));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{ position: \"absolute\", top: \"5px\", right: \"5px\", backgroundColor: CalendarColors.BLOOD_COLOR, color: \"#fff\", padding: \"0px 5px\", borderRadius: \"10px\", fontSize: \"1rem\" }}>\n                Blood\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"620px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <DateField\n                      error={birthDateError}\n                      title=\"Date of Birth\"\n                      value={birthDate}\n                      dateChanged={birthDateChanged}\n                    >\n\n                    </DateField>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth error={serviceError}>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n\n\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        width: \"100%\",\n                        fontWeight: \"400\",\n                        color: \"#777\",\n                        marginTop:\"20px\"\n                      }}\n                    >\n                      <Autocomplete\n                        multiple\n                        id=\"tags-outlined\"\n                        noOptionsText={noOptionsText}\n                        value={indivisualTests}\n                        onChange={(event, newValue) => {\n                          setIndivisualTests(newValue)\n                          setState(state => ({ ...state, indivisualTests: newValue }))\n                        }}\n                        filterOptions={filterOptions}\n                        options={allCodes.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                        // groupBy={(option) => option.firstLetter}\n                        getOptionLabel={(option) => <div className={classes.listOptions}>\n                          {option.code} - {option.description} - {parseFloat(\n                            option.price\n                          ).toLocaleString(\"en-GB\", {\n                            style: \"currency\",\n                            currency: \"GBP\",\n                          })}</div>\n                        }\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              label={\n                                <Typography\n                                  style={{\n                                    whiteSpace: \"normal\",\n                                    fontSize: \"0.9rem\",\n                                    fontWeight: \"500\",\n                                    padding: \"10px\",\n                                    width: \"100%\",\n                                  }}\n                                >\n                                  {`${option.code} - ${option.description} - ${parseFloat(\n                                    option.price\n                                  ).toLocaleString(\"en-GB\", {\n                                    style: \"currency\",\n                                    currency: \"GBP\",\n                                  })}`}\n                                </Typography>\n                              }\n                              {...getTagProps({ index })}\n                              style={{ height: \"100%\", width: \"100%\" }}\n                            />\n                          ))\n                        }\n                        filterSelectedOptions\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            {...params}\n                            variant=\"outlined\"\n                            label=\"Blood Tests\"\n                            placeholder=\"Enter blood test\"\n                          />\n                        )}\n                      />\n\n                    </div>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginBottom:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <DialogActions>\n            <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\nimport NewBookingDialog from '../NewBookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBoxNew: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth: \"150px\",\n        overflowX: \"hidden\",\n        border: \"1px solid #ddd\",\n        color: \"#ccc\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n    \n        boxShadow: \"2px 4px #fafafa\",\n        transition: \"all 0.5s ease\",\n        borderRadius: \"4px\",\n    \n        \"&:hover\": {\n          background: \"#fff\",\n          color: theme.palette.secondary.main,\n          borderColor:  theme.palette.secondary.main,\n        },\n      },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n                                                          \n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog || openDialogAddNew)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog || openDialogAddNew)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'patient_attended':\n                return classes.bookingBoxSampleTaken;\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const addNewBookingClicked = () =>\n    {\n        setOpenDialogAddNew(true)\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length >= 0)\n        {\n           return (\n            <React.Fragment>\n            {_bookings.map((booking) => (\n              <div\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                className={getBookingClass(booking.status)}\n                onClick={(event) => bookingCliked(event, booking)}\n              >\n                {`${booking.fullname}`.substring(0, 15)}\n              </div>\n            ))}\n  \n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n          </React.Fragment>\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    const handleCloseDialogAddNew = () => {\n        setOpenDialogAddNew(false);\n      };\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { CalendarColors } from '../Admin/calendar-admin/colors';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.85rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function MatchedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"screening\":\n          return classes.ScreeningLabel;\n  \n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) => {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n\n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            { params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 250 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n              </Button>\n\n\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getNewUnmatchedBloodReports;\n    if (selectedTab === 'archived') {\n      api = BookService.getArchivedUnmatchedBloodReports;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#ff8000\" }}> <WarningIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Unmatched Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport { CalendarColors } from '../Admin/calendar-admin/colors';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.85rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function MatchedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"screening\":\n          return classes.ScreeningLabel;\n    \n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) => {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n\n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n              </Button>\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getNewMatchedBloodReports;\n    if (selectedTab === 'archived') {\n      api = BookService.getArchivedMatchedBloodReports;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#008c00\" }}> <DoneOutlineIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Matched Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { CalendarColors } from '../Admin/calendar-admin/colors';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.85rem\",\n  },\n\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ArchivedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"screening\":\n        return classes.ScreeningLabel;\n  \n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  \n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n              </Button>\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getArchivedBloodReports;\n    // if (selectedTab === 'archived') {\n    //   api = BookService.getArchivedMatchedBloodReports;\n    // }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#777\" }}> <ArchiveIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Archived Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        {/* <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid> */}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n            booking={selectedBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n          />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SentRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  \n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              {/* <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n              </Button> */}\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getSentBloodReports;\n    // if (selectedTab === 'archived') {\n    //   api = BookService.getArchivedMatchedBloodReports;\n    // }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#008c00\" }}> <SendRoundedIcon style={{ fontSize: \"1.8rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Sent Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        {/* <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid> */}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n            booking={selectedBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n          />\n\n    </React.Fragment>\n  );\n}","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'package', headerName: 'Service', width: 200 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'package', headerName: 'Service', width: 200 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.package)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.package}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  {packageName: 'PRIVATE CONSULTATION WITH CONSULTANT DERMATOLOGIST'},\n  {packageName: `FREE CONSULTATION FOR AESTHETIC TREATMENTS AND BOTOX`},\n  {packageName: `RADIOFREQUNCY`},\n  {packageName: `LASER HAIR`},\n  {packageName: `FILLERS`},\n  {packageName: `MOLE MAPPING / REMOVAL`},\n  {packageName: `DERMABRASION`},\n  {packageName: `PEELS`},\n  {packageName: `WART REMOVAL`},\n]\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [service, setService] = React.useState(\"\");\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n  };\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    setService(\"\");\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n        package: service,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.DERMA_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    Dermatology\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"450px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking.status)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport CallIcon from '@material-ui/icons/Call';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }else if (str === 'pending')\n  {\n    return `Pending Bookings`;\n  }else if (str === 'tbc')\n  {\n    return `Patients TBC`;\n  }\n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'pending')\n  {\n    return <AddAlertIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'tbc')\n  {\n    return <CallIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon\n                  style={parseInt(params.getValue('deposit')) > 0 ? { color: \"green\" } : {}}\n                />\n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }else if (props.date === 'pending')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon\n                  style={parseInt(params.getValue('deposit')) > 0 ? { color: \"green\" } : {}}\n                />\n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n                <SearchIcon\n                  style={parseInt(params.getValue('deposit')) > 0 ? { color: \"green\" } : {}}\n                />\n\n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( \n                      <React.Fragment>\n                        <CreditCardIcon className={classes.checkIcon} />\n\n                        {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                          <span className={classes.notifyIcon}>&nbsp;</span>\n                        )}\n\n                      </React.Fragment>\n                    );\n                  }\n                  else if (params.getValue('paidBy') === 'cash') {\n                    return (\n                      <React.Fragment>\n                        <LocalAtmIcon className={classes.checkIcon} />\n                        {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                          <span className={classes.notifyIcon}>&nbsp;</span>\n                        )}\n\n\n                      </React.Fragment>\n                    );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate') {\n                    return (\n                      <React.Fragment>\n                        <BusinessIcon className={classes.checkIcon} />\n                        {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                          <span className={classes.notifyIcon}>&nbsp;</span>\n                        )}\n\n                      </React.Fragment>\n                    );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n    else if (props.date === 'pending')\n    {\n      api = BookService.getPendingBookings;\n    }\n    else if (props.date === 'tbc')\n    {\n      api = BookService.getTBCFolderBookings;\n    }\n\n\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                      <li style={{marginBottom:\"10px\", maxWidth:\"400px\"}}>\n                        {!person.confirmed && (\n                          <div style={{ color: \"red\", fontSize: \"1.1rem\", fontWeight: \"500\", border: \"0px solid red\", padding: \"5px\", borderRadius: \"8px\" }}>\n                            NOT CONFIRMED!\n                          </div>\n                        )}\n\n\n                        {person.confirmed && (\n                          <div style={{ color: \"#258200\", fontSize: \"1.1rem\", fontWeight: \"500\", border: \"0px solid #258200\", padding: \"5px\", borderRadius: \"8px\" }}>\n                            CONFIRMED\n                          </div>\n                        )}\n\n                      </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\",\n        textAlign:\"center\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport DateField from \"../Blood/DateField\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"HEALTH SCREENING / MEDISCREEN BASIC MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH BASICS MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH ADVANCED MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH ELITE MOT\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"HEALTH SCREENING / MEN'S HEALTH BASICS MOT\" },\n  { packageName: \"HEALTH SCREENING / MEN'S HEALTH ADVANCED MOT\" },\n  { packageName: \"HEALTH SCREENING / MEN'S HEALTH ELITE MOT\" },\n  { packageName: \"HEALTH SCREENING / PLATINIUM HEALTH SCREEN MEN\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"HEALTH SCREENING / WOMEN'S HEALTH BASICS MOT\" },\n  { packageName: \"HEALTH SCREENING / WOMEN'S HEALTH ADVANCED MOT\" },\n  { packageName: \"HEALTH SCREENING / WOMEN'S HEALTH ELITE MOT\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"HEALTH SCREENING / HEALTH ADVANCED PLUS MOT\" },\n  { packageName: \"HEALTH SCREENING / MEDISCREEN SEXUAL HEALTH MOT\" },\n  { packageName: \"ALLERGY SCREENING / ALLERGY BASICS MOT PACKAGE\" },\n  { packageName: \"ALLERGY SCREENING / ALLERGY ADVANCED MOT PACKAGE\" },\n\n  { packageName: `OCCUPATIONAL HEALTH / PRE EMPLOYMENT` },\n  { packageName: `TRAVEL HEALTH & VACCINATION` },\n  { packageName: `VISA MEDICAL` },\n  { packageName: `CANCER SCREEENING` },\n  \n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [service, setService] = React.useState(\"\");\n\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [birthDate, setBirthDate] = React.useState(null);\n  const [birthDateError, setBirthDateError] = React.useState(false);\n\n  const birthDateChanged = (dateStr) =>\n  {\n      setBirthDate(dateStr);\n      setBirthDateError(false)\n  }  \n\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    setService(\"\");\n    setBirthDate(null)\n    setServiceError(false)\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (birthDate && birthDate.length !== 10)\n    {\n      setBirthDateError(true)\n      error = true\n    }\n\n    if (!service)\n    {\n      setServiceError(true)\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n        service: service,\n        birthDate: birthDate\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.SCREENING_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    Screening\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"500px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                        error={serviceError}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <DateField\n                      error={birthDateError}\n                      title=\"Date of Birth\"\n                      value={birthDate}\n                      dateChanged={birthDateChanged}\n                    >\n\n                    </DateField>\n                  </Grid>\n\n\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n            <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPending: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ddd\",\n    color: \"#777\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#eee\",\n      color: \"#333\",\n    },\n  },\n\n\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = ({status, confirmed}) => {\n\n    if (!confirmed)\n    {\n      return classes.bookingBoxPending\n    }\n\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h6\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\nimport * as dateformat from \"dateformat\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function TodayBookingView() {\n  const classes = useStyles();\n  \n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n  const loadData = async () => {\n    setLoading(true);\n\n    const today = dateformat(new Date(), 'yyyy-mm-dd')\n    try{\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(today)\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(today)\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(today)\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(today)\n      const res5 = await BloodBookService.getAllBookingsCountByDateStr(today)\n      const res6 = await DermaBookService.getAllBookingsCountByDateStr(today)\n      const res7 = await ScreeningBookService.getAllBookingsCountByDateStr(today)\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n      const screening = parseInt(res7.data.count)\n\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Screening\", count: screening},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma+screening}\n      ]\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\n\nimport * as dateformat from \"dateformat\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function TomorrowBookingView() {\n  const classes = useStyles();\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n\n  const loadData = async () => {\n    setLoading(true);\n    const today = new Date()\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000)\n\n    const tomorrowStr = dateformat(tomorrow, 'yyyy-mm-dd')\n    try{\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res5 = await BloodBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res6 = await DermaBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res7 = await ScreeningBookService.getAllBookingsCountByDateStr(tomorrowStr)\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n      const screening = parseInt(res7.data.count)\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Screening\", count: screening},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma+screening}\n\n      ]\n\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Tomorrow Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\n\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function TotalBookingView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n  const loadData = async () => {\n    setLoading(true);\n   \n    try{\n      const res1 = await PCRBookService.getAllBookingsCountAll()\n      const res2 = await GynaeBookService.getAllBookingsCountAll()\n      const res3 = await GPBookService.getAllBookingsCountAll()\n      const res4 = await STDBookService.getAllBookingsCountAll()\n      const res5 = await BloodBookService.getAllBookingsCountAll()\n      const res6 = await DermaBookService.getAllBookingsCountAll()\n      const res7 = await ScreeningBookService.getAllBookingsCountAll()\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n      const screening = parseInt(res7.data.count)\n\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n        {clinic: \"Screening\", count: screening},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma+screening}\n      ]\n\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n    \n\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Total Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   position: \"absolute\",\n   top: \"65px\",\n   left: \"44%\",\n   fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main\n   },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n  IconRed: {\n   fontSize: \"2rem\",\n  //  color: theme.palette.secondary.main,\n  },\n\n  TitleRed:{\n    // color: theme.palette.secondary.main,\n  }\n\n\n}));\n\nexport default function LateBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PCRBookService.getLateBookings();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={data === 0 ? classes.Icon : classes.IconRed } />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.PCR_COLOR}}>PCR</span> 40-Hours Late\n              </span>\n           \n            </Grid>\n          </Grid>\n\n          {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function UnmatchedBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PCRBookService.getUnmatchedRecords();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.PCR_COLOR}}>PCR</span> Unmatched Records\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ShouldRefundBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await GynaeBookService.getShouldRefundsCount()\n      setData(res.data.count);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n                <span style={{color:CalendarColors.GYNAE_COLOR}}>GYNAE</span>  Waiting for Refunds\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","export const getRole = () => {\n    return sessionStorage.getItem('medexadmin-role')\n}\n\nexport const setRole = (role) => {\n    return sessionStorage.setItem('medexadmin-role', role)\n}\n\nexport const clearRole = (role) => {\n    return sessionStorage.removeItem('medexadmin-role')\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport BloodBookService from \"./Blood/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function NewBloodResultsBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await BloodBookService.getNewBloodResultsCount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.BLOOD_COLOR}}>BLOOD</span> New Results\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport ScreeningBookService from \"./Screening/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function NewScreeningBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await ScreeningBookService.getPendingBookings();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.SCREENING_COLOR}}>Health Screening</span> Pending Bookings\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ShouldRefundBookingScreeningView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await ScreeningBookService.getShouldRefundsCount()\n      setData(res.data.count);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n                <span style={{color:CalendarColors.SCREENING_COLOR}}>Health Screening</span>  Waiting for Refunds\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\n\nimport TodayBookingView from \"./TodayBookingView\" \nimport TomorrowBookingView from \"./TomorrowBookingView\";\nimport TotalBookingView from \"./TotalBookingView\";\nimport LateBookingView from \"./LateBookingView\";\nimport UnmatchedBookingView from \"./UnmatchedBookingView\";\nimport ShouldRefundBookingView from \"./ShouldRefundBookingView\";\nimport { setRole } from \"./Role\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getGlobalPath } from \"./GlobalPath\";\nimport { getMenuId, getMenuIndex } from \"./MenuList\";\nimport NewBloodResultsBookingView from \"./NewBloodResultsBookingView\";\nimport NewScreeningBookingView from \"./NewScreeningBookingView\"\nimport ShouldRefundBookingScreeningView from \"./ShouldRefundBookingScreeningView\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 400,\n  },\n  fixedHeightSmall: {\n    height: 200,\n    cursor:\"pointer\"\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\n\n  const history = useHistory();\n\n  const gotoLateBookings = () =>\n  {\n    const role = 'pcr'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'latebookings'))}`));\n  }\n\n  const gotoUnmatchedPCR = () =>\n  {\n    const role = 'pcr'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'unmatchedRecords'))}`));\n  }\n\n  const gotoBlood = () =>\n  {\n    const role = 'blood'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'dashboard'))}`));\n  }\n\n  \n  const gotoRefundGynae = () =>\n  {\n    const role = 'gynae'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'deletedBookings'))}`));\n  }\n\n  const gotoScreening = () =>\n  {\n    const role = 'screening'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'pendingBookings'))}`));\n  }\n\n  const gotoScreeningRefunds = () =>\n  {\n    const role = 'screening'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'deletedBookings'))}`));\n  }\n\n\n\n  \n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>       \n       \n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoLateBookings}>\n             <LateBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoUnmatchedPCR}>\n             <UnmatchedBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoRefundGynae}>\n             <ShouldRefundBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoBlood}>\n             <NewBloodResultsBookingView />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoScreening}>\n             <NewScreeningBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoScreeningRefunds}>\n             <ShouldRefundBookingScreeningView />\n          </Paper>\n        </Grid>\n\n\n        {/* <Grid item xs={12} md={6}>\n        </Grid> */}\n\n\n\n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n            <TodayBookingView />\n          </Paper>\n        </Grid>\n      \n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n             <TomorrowBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n             <TotalBookingView />\n          </Paper>\n        </Grid>\n\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\nimport MaskedInput from \"react-text-mask\";\nimport { FormControl, Grid, Input, InputLabel } from \"@material-ui/core\";\nimport BookService from \"./services/BookService\";\n\nimport PersonsBoxPCR from \"./../PCR/PersonsBox\";\nimport PersonsBoxGP from \"./../GP/PersonsBox\";\nimport PersonsBoxGynae from \"./../Gynae/PersonsBox\";\nimport PersonsBoxSTD from \"./../STD/PersonsBox\";\nimport PersonsBoxBlood from \"./../Blood/PersonsBox\";\nimport PersonsBoxDerma from \"./../Derma/PersonsBox\";\nimport PersonsBoxScreening from \"./../Screening/PersonsBox\";\n\n\nimport { width } from \"@material-ui/system\";\n\nconst isBoolean = (param) => typeof param === \"boolean\";\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n  const [focus, setFocus] = React.useState(initialFocus);\n  const setFocusWithTrueDefault = (param) =>\n    setFocus(isBoolean(param) ? param : true);\n  return [\n    setFocusWithTrueDefault,\n    {\n      autoFocus: focus,\n      key: `${id}${focus}`,\n      onFocus: () => setFocus(true),\n      onBlur: () => setFocus(false),\n    },\n  ];\n};\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[/\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: \"20px\",\n  },\n\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  Find: {\n    width: \"80px\",\n  },\n\n  Clear: {\n    marginRight: \"20px\",\n  },\n\n  title: {\n    marginTop: \"20px\",\n  },\n\n  TextBox: {\n    marginTop: \"30px\",\n    \"& > *\": {\n      textAlign: \"center\",\n    },\n  },\n\n  TextField: {},\n\n  NoRecordsFound: {\n    marginTop: \"20px\",\n    color: \"red\",\n    fontWeight: \"600\",\n    fontSize: \"14px\",\n  },\n\n  PersonsBox: {\n    marginTop: \"20px\",\n    marginBottom: \"50px\",\n  },\n\n  boxTitle:{\n      fontWeight: \"500\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n      border: \"1px solid\",\n      fontSize: \"1.2rem\",\n      backgroundColor: \"#fff\",\n      width: \"150px\",\n      padding:\"5px\",\n      borderRadius:\"30px\",\n      textAlign:\"center\",\n      marginBottom:\"10px\",\n      boxShadow: \"4px 8px 8px #eee\"\n  }\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [setFocus, focusProps] = useFocus(true);\n\n  //   useEffect( () =>\n  //   {\n  //      findRecords();\n  //   }, [state.findRecords]);\n\n  useEffect(() => {\n    setState((state) => ({ ...state, foundRecords: [] }));\n  }, []);\n\n  useEffect(() => {\n    BookService.getBookingsByRef(state.ref).then((res) => {\n      if (res.data.length > 0) {\n        setState((state) => ({ ...state, foundRecords: res.data }));\n      }\n    });\n  }, [state.RefreshPersonInfo]);\n\n  const handleChange = (event) => {\n    setState((state) => ({ ...state, ref: event.target.value }));\n    setState((state) => ({ ...state, refError: false }));\n  };\n\n  const clearField = () => {\n    setState((state) => ({ ...state, refError: false }));\n    setState((state) => ({ ...state, ref: \"___-___-___\" }));\n    setState((state) => ({ ...state, foundRecords: [] }));\n    setFocus();\n  };\n\n  const findRecords = () => {\n    if (!state.ref || state.ref.indexOf(\"_\") >= 0) {\n      setState((state) => ({ ...state, refError: true }));\n      return;\n    }\n\n    setState((state) => ({ ...state, submiting: true }));\n    setState((state) => ({ ...state, foundRecords: [] }));\n\n    BookService.getBookingsByRef(state.ref)\n      .then((res) => {\n        setState((state) => ({ ...state, submiting: false }));\n        if (res.data.length > 0) {\n          setState((state) => ({ ...state, foundRecords: res.data }));\n        } else {\n          setState((state) => ({ ...state, foundRecords: null }));\n        }\n\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setState((state) => ({ ...state, submiting: false }));\n      });\n  };\n\n  const getPersonBox = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return <PersonsBoxPCR />;\n      case \"gp\":\n        return <PersonsBoxGP />;\n      case \"std\":\n        return <PersonsBoxSTD />;\n      case \"gynae\":\n        return <PersonsBoxGynae />;\n      case \"blood\":\n        return <PersonsBoxBlood />;\n      case \"derma\":\n        return <PersonsBoxDerma />;\n      case \"screening\":\n        return <PersonsBoxScreening />;\n\n  \n      default:\n        return null;\n    }\n  };\n\n  const getBoxTitle = (clinic) => {\n      return (\n          <div className={classes.boxTitle}>\n              {clinic.toUpperCase() + ' Clinic'}\n\n          </div>\n      )\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.title}>\n        <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n          Find Booking Appoinments\n        </Typography>\n      </div>\n\n      <Grid\n        container\n        direction=\"column\"\n        spacing={1}\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} md={12}>\n          <FormControl className={classes.TextBox}>\n            <TextField\n              {...focusProps}\n              autoFocus\n              pattern=\"[0-9]*\"\n              error={state.refError ? true : false}\n              value={state.ref}\n              className={classes.TextField}\n              width=\"50px\"\n              onChange={handleChange}\n              label=\"Reference No.\"\n              helperText=\"Enter Your 9-digits Reference No.\"\n              name=\"refNo\"\n              id=\"refNo\"\n              variant=\"outlined\"\n              size=\"medium\"\n              margin=\"normal\"\n              fullWidth={true}\n              InputProps={{\n                inputComponent: TextMaskCustom,\n                style: {\n                  textAlign: \"center\",\n                  fontSize: \"24px\",\n                  width: \"210px\",\n                  paddingLeft: \"20px\",\n                },\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  findRecords();\n                }\n              }}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Button\n            disabled={state.submiting}\n            color=\"default\"\n            onClick={clearField}\n            onTouchTap={clearField}\n            className={classes.Clear}\n          >\n            Clear\n          </Button>\n\n          <Button\n            type=\"button\"\n            disabled={state.submiting}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={findRecords}\n            onTouchTap={findRecords}\n            className={classes.Find}\n          >\n            Find\n          </Button>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          {state.foundRecords && state.foundRecords.length > 0 && (\n            <React.Fragment>\n              <div className={classes.PersonsBox}>\n                {getBoxTitle(state.foundRecords[0].clinic)}  \n                {getPersonBox(state.foundRecords[0].clinic)}\n              </div>\n            </React.Fragment>\n          )}\n\n          {!state.foundRecords && (\n            <React.Fragment>\n              <div className={classes.root}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <strong>No Records Found !</strong> <br /> Please check you\n                  reference number again.\n                </Alert>\n              </div>\n            </React.Fragment>\n          )}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"./../GlobalState\";\nimport { getMenuIndex } from \"./../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DERMA_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n      case \"screening\":\n          return classes.ScreeningLabel;\n     \n      \n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  if (props.date === \"recent\") {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <Button\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </Button>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"clinic\",\n        headerName: \"Clinic\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          return (\n            <span className={getClassforClinic(params.value)}>\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\n            </span>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return (\n              <React.Fragment>\n                <CloseIcon className={classes.closeIcon} />\n              </React.Fragment>\n            );\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link\n                className={classes.RefLink}\n                //  onClick={\n                //   () => {\n                //     console.log(params.value);\n\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n                //     setState(state => ({...state, ref : params.value}));\n                //     setState(state => ({...state, refError : false}));\n                //     setState(state => ({...state, foundRecords : []}));\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\n                //   }\n                // }\n              >\n                {params.value}\n              </Link>\n            </Tooltip>\n          );\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\n        if (!params.value || params.value.length === 0)\n        {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        }else\n        {\n          return params.value\n        }\n       \n      } },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\n    ];\n  } else {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <Button\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </Button>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"clinic\",\n        headerName: \"Clinic\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          return (\n            <span className={getClassforClinic(params.value)}>\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\n            </span>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return (\n              <React.Fragment>\n                <CloseIcon className={classes.closeIcon} />\n                {parseInt(params.getValue(\"deposit\")) > 0 &&\n                  props.date === \"deleted\" && (\n                    <span className={classes.notifyIcon}>&nbsp;</span>\n                  )}\n              </React.Fragment>\n            );\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link\n                className={classes.RefLink}\n                //  onClick={\n                //   () => {\n                //     console.log(params.value);\n\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n                //     setState(state => ({...state, ref : params.value}));\n                //     setState(state => ({...state, refError : false}));\n                //     setState(state => ({...state, foundRecords : []}));\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\n                //   }\n                // }\n              >\n                {params.value}\n              </Link>\n            </Tooltip>\n          );\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\n        if (!params.value || params.value.length === 0)\n        {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        }else\n        {\n          return params.value\n        }\n       \n      } },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\n    ];\n  }\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: true,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = (top) => {\n    var api = BookService.getAllBookings;\n    if (props.date === \"today\") {\n      api = BookService.getTodayBookings;\n    } else if (props.date === \"old\") {\n      api = BookService.getOldBookings;\n    } else if (props.date === \"future\") {\n      api = BookService.getFutureBookings;\n    } else if (props.date === \"recent\") {\n      api = BookService.getRecentBookingsAll;\n    } else if (props.date === \"deleted\") {\n      api = BookService.getDeletedBookings;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(top)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    setTopCount(25);\n    loadData(25);\n  }, [props.date]);\n\n  useEffect(() => {\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter(\n        (element) =>\n          element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.forename?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 \n      );\n\n      setData({\n        bookings: [...filteredData],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    } else {\n      setData({\n        bookings: [...data.cachedBookings],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    }\n  }, [filter]);\n\n  // useEffect(() => {\n  //   loadData(topCount);\n  // }, [state.bookingDialogDataChanged]);\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  };\n\n  const openDetailsDialog = (event, id) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport GlobalState from \"../../GlobalState\";\nimport { Grid } from \"@material-ui/core\";\nimport { CalendarColors } from \"./colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    minWidth:\"200px\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelToday: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    backgroundColor: \"#1a73e8\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    borderRadius: \"50%\",\n    padding: \"5px\",\n    lineHight: \"35px\",\n    minWidth: \"35px\",\n    textAlign: \"center\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  BookingCountLabel: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#3f51b5\",\n    backgroundColor: \"#ebedf7\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    lineHight: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  BookingCountLabelBusy: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#b00000\",\n    backgroundColor: \"#fce6e6\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"8%\",\n    height: \"85%\",\n  },\n\n  PCRGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"0\",\n    width: \"30px\",\n    height: \"120%\",\n  },\n\n  GynaeGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"31px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  GPGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"52px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  STDGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"73px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  BloodGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"94px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  DermaGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"115px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  ScreeningGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"136px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n\n\n  DayLabelContainer: {\n    position: \"absolute\",\n    top: \"15%\",\n    left: \"5px\",\n    width: \"100%\",\n    paddingTop: \"45%\",\n  },\n}));\n\nconst MAX_BOOKING_COUNT_PCR = 50;\nconst MAX_BOOKING_COUNT_GP = 10;\nconst MAX_BOOKING_COUNT_STD = 10;\nconst MAX_BOOKING_COUNT_GYNAE = 10;\nconst MAX_BOOKING_COUNT_BLOOD = 10;\nconst MAX_BOOKING_COUNT_DERMA = 10;\n\n\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [dateStr, setDateStr] = React.useState(\"\");\n\n  const [cellDate, setCellDate] = React.useState(new Date());\n\n  const [bookingsCount, setBookingsCount] = React.useState(null);\n\n  const [disableDay, setDisableDay] = React.useState(false);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  useEffect(() => {\n    if (cellIndex <= daysInMonth.length) {\n      const date = daysInMonth[cellIndex - 1];\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(date.getMonth() !== month - 1);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    } else {\n      const day = cellIndex - daysInMonth.length;\n      const date = new Date(\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\n      );\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(true);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    }\n  }, [cellIndex, month, daysInMonth]);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      if (!dateStr || dateStr.length <= 0) {\n        return;\n      }\n\n      if (disableDay) {\n        setBookingsCount(-2);\n        return;\n      }\n\n      setBookingsCount(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsCountByDateStr\" &&\n          record.query === dateStr\n      )?.res;\n\n      if (!res) {\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\n          ],\n        }));\n      }\n\n      if (res.data.count) {\n        setBookingsCount(res.data.count);\n      }\n    };\n\n    fecthData();\n  }, [dateStr]);\n\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\n    var date = null;\n    var disabled = false;\n    var day = -1;\n\n    if (_cellIndex <= _daysInMonth.length) {\n      date = _daysInMonth[_cellIndex - 1];\n      day = date.getDate();\n      if (date.getMonth() !== _month - 1) {\n        disabled = true;\n      }\n    } else {\n      const _day = _cellIndex - _daysInMonth.length;\n      const date = new Date(\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\n      );\n      day = date.getDate();\n      disabled = true;\n    }\n\n    const isToday =\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\n\n    return (\n      <span\n        className={\n          disabled\n            ? classes.DayLabelDisabled\n            : isToday\n            ? classes.DayLabelToday\n            : classes.DayLabel\n        }\n      >\n        {day > 0 ? `${day}` : \"\"}\n      </span>\n    );\n  };\n\n  const getClinicBar = (clinic, count) => {\n    return (\n      <React.Fragment>\n        {clinic === \"pcr\" &&\n          state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\n          getPCRClinicBar(count)}\n        {clinic === \"gynae\" &&\n          state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\n          getGynaeClinicBar(count)}\n        {clinic === \"gp\" &&\n          state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\n          getGPClinicBar(count)}\n        {clinic === \"std\" &&\n          state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\n          getSTDClinicBar(count)}\n        {clinic === \"blood\" &&\n          state.selectedClinics.findIndex((e) => e === \"BLOOD\") >= 0 &&\n          getBloodClinicBar(count)}\n        {clinic === \"derma\" &&\n          state.selectedClinics.findIndex((e) => e === \"DERMA\") >= 0 &&\n          getDermaClinicBar(count)}\n        {clinic === \"screening\" &&\n          state.selectedClinics.findIndex((e) => e === \"SCREENING\") >= 0 &&\n          getScreeningClinicBar(count)}\n\n\n      </React.Fragment>\n    );\n  };\n\n  const minHeight = 1;\n  const getPCRClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.PCRGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.PCR_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"0px\",\n              color: \"#fff\",\n              fontWeight: \"500\",\n              fontSize:\"0.8rem\",\n              textAlign: \"center\",\n              width: \"100%\",\n            }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getGynaeClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GynaeGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.GYNAE_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getGPClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GPGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.GP_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getSTDClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.STDGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.STD_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getBloodClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_BLOOD) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.BloodGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.BLOOD_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getDermaClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_DERMA) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.DermaGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.DERMA_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getScreeningClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_DERMA) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.ScreeningGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.SCREENING_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n\n\n\n  const getBookingsCountLabel = (_bookingsCount) => {\n    if (!_bookingsCount) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookingsCount !== -2) {\n      return (\n        <div className={classes.DayLabelContainer}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-end\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {_bookingsCount.map((item) => (\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const getBookingsCountGauge = (_bookingsCount) => {\n    if (_bookingsCount > 0) {\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\n      if (percent > 100) {\n        percent = 100;\n      }\n\n      percent = 100 - percent;\n\n      return (\n        <div className={classes.BookingCountGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"#3f51b5\",\n            }}\n          >\n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.Container}\n        onClick={(event) => dayClicked(event, cellDate)}\n      >\n        {getDayLabel(cellIndex, month, daysInMonth)}\n\n        {getBookingsCountLabel(bookingsCount)}\n\n        {/* {getBookingsCountGauge(bookingsCount)} */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nMonthViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\n  dayClicked: PropTypes.func,\n};\n\nexport default MonthViewCell;\n","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nimport { Grid } from '@material-ui/core';\nimport { CalendarColors } from './colors';\n\nconst MAX_BOOKING_COUNT_PCR = 10;\nconst MAX_BOOKING_COUNT_GP = 1;\nconst MAX_BOOKING_COUNT_STD = 1;\nconst MAX_BOOKING_COUNT_GYNAE = 1;\nconst MAX_BOOKING_COUNT_BLOOD = 1;\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    PCRGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"0\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      GynaeGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"16px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      GPGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"32px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      STDGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"48px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n      BloodGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"64px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n      DermaGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"80px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n\n\n    \n\n    DayLabelContainer:{\n        position: \"absolute\",\n        top: \"15%\",\n        left:\"5px\",\n        width:\"100%\",\n        height:\"100%\"   \n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(null);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(null);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const minHeight = 1;\n    const getPCRClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.PCRGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.PCR_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getGynaeClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GynaeGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.GYNAE_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getGPClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GPGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.GP_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getSTDClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.STDGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.STD_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getBloodClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_BLOOD) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.BloodGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.BLOOD_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getDermaClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.DermaGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.DERMA_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n\n  \n  \n    const getBookingsCountLabel = (_bookingsCount) => {\n      if (!_bookingsCount) {\n        return (\n          <div className={classes.LoadingProgress}>\n            <CircularProgress disableShrink />\n          </div>\n        );\n      } else if (_bookingsCount !== -2) {\n        return (\n          <div className={classes.DayLabelContainer}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              {_bookingsCount.map((item) => (\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n              ))}\n            </Grid>\n          </div>\n        );\n      }\n    };\n\n    const getClinicBar = (clinic, count) => {\n        return (\n          <React.Fragment>\n            {clinic === \"pcr\" &&\n              state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\n              getPCRClinicBar(count)}\n            {clinic === \"gynae\" &&\n              state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\n              getGynaeClinicBar(count)}\n            {clinic === \"gp\" &&\n              state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\n              getGPClinicBar(count)}\n            {clinic === \"std\" &&\n              state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\n              getSTDClinicBar(count)}\n            {clinic === \"blood\" &&\n              state.selectedClinics.findIndex((e) => e === \"BLOOD\") >= 0 &&\n              getBloodClinicBar(count)}\n            {clinic === \"derma\" &&\n              state.selectedClinics.findIndex((e) => e === \"DERMA\") >= 0 &&\n              getDermaClinicBar(count)}\n   \n\n          </React.Fragment>\n        );\n      };\n  \n  \n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {/* {getBookingsCountGauge(bookingsCount)} */}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxGynae: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n\n  },\n\n  BoxGP: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxBlood: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n    color: CalendarColors.BLOOD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.BLOOD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxScreening: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.SCREENING_COLOR,\n    color: CalendarColors.SCREENING_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.SCREENING_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n  BoxDerma: {\n    width: \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.DERMA_COLOR,\n    color: CalendarColors.DERMA_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.DERMA_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {\n    props.handleClose();\n  };\n\n\n  const timeDisabled = () => {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0\n  }\n\n  const clinicClicked = (clinic) => {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"420px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGynae} onClick={() => !timeDisabled() ? clinicClicked(\"gynae\") : null}>\n                      GYNAE\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGP} onClick={() => !timeDisabled() ? clinicClicked(\"gp\") : null}>\n                      GP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxSTD} onClick={() => clinicClicked(\"std\")}>\n                      STD\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxBlood} onClick={() => clinicClicked(\"blood\")}>\n                      BLOOD\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxScreening} onClick={() => clinicClicked(\"screening\")}>\n                      SCREENING\n                    </div>\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxDerma} onClick={() => clinicClicked(\"derma\")}>\n                      DERMATOLOGY\n                    </div>\n                  </Grid>\n\n\n\n                </Grid>\n\n              </div>\n\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={handleClose}\n                    style={{ width: \"100px\" }}\n                  >\n                    close\n                  </Button>\n                </Grid>\n\n              </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport { CalendarColors } from \"./colors\";\nimport clsx from \"clsx\";\n\nimport NewGPDialog from \"../../GP/NewBookingDialog\";\nimport NewGynaeDialog from \"../../Gynae/NewBookingDialog\";\nimport NewSTDDialog from \"../../STD/NewBookingDialog\";\nimport NewBloodDialog from \"../../Blood/NewBookingDialog\";\nimport NewDermaDialog from \"../../Derma/NewBookingDialog\";\nimport NewScreeningDialog from \"../../Screening/NewBookingDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    // border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n  BookingBorderPCR: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.PCR_COLOR,\n  },\n\n  BookingBorderGynae: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n  },\n\n  BookingBorderGP: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GP_COLOR,\n  },\n\n  BookingBorderSTD: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.STD_COLOR,\n  },\n  BookingBorderBlood: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n  },\n\n  BookingBorderDerma: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.DERMA_COLOR,\n  },\n\n  BookingBorderScreening: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.SCREENING_COLOR,\n  },\n\n  bookingBoxPending: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ddd\",\n    color: \"#777\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#eee\",\n      color: \"#333\",\n    },\n  },\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  const [openDialogGP, setOpenDialogGP] = React.useState(false);\n  const [openDialogGynae, setOpenDialogGynae] = React.useState(false);\n  const [openDialogSTD, setOpenDialogSTD] = React.useState(false);\n  const [openDialogBlood, setOpenDialogBlood] = React.useState(false);\n  const [openDialogDerma, setOpenDialogDerma] = React.useState(false);\n  const [openDialogScreening, setOpenDialogScreening] = React.useState(false);\n\n\n  const handleCloseDialogGP = () => {\n    setOpenDialogGP(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogGynae = () => {\n    setOpenDialogGynae(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogSTD = () => {\n    setOpenDialogSTD(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogBlood = () => {\n    setOpenDialogBlood(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogDerma = () => {\n    setOpenDialogDerma(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogScreening = () => {\n    setOpenDialogScreening(false);\n    setOpenDialogAddNew(false)\n  };\n\n\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >=\n              0 ||\n              booking.forename?.toLowerCase().indexOf(search.toLowerCase()) >=\n              0 ||\n              booking.surname?.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = ({status, confirmed, clinic}) => {\n\n    if (clinic === \"screening\" && !confirmed)\n    {\n      return classes.bookingBoxPending\n    }\n\n    switch (status) {\n      case \"sample_taken\":\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      case \"positive\":\n        return classes.bookingBoxPositive;\n      case \"report_sent\":\n      case \"report_cert_sent\":\n        return classes.bookingBoxReportSent;\n\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n  const getBookingBorderClass = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.BookingBorderPCR;\n      case \"gynae\":\n        return classes.BookingBorderGynae;\n      case \"gp\":\n        return classes.BookingBorderGP;\n      case \"std\":\n        return classes.BookingBorderSTD;\n      case \"blood\":\n        return classes.BookingBorderBlood;\n      case \"derma\":\n        return classes.BookingBorderDerma;\n      case \"screening\":\n        return classes.BookingBorderScreening;\n  \n\n      default:\n        return null;\n    }\n  };\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map(\n            (booking) =>\n              state.selectedClinics.findIndex(\n                (e) => e === booking.clinic.toUpperCase()\n              ) >= 0 && (\n                <div\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                  className={clsx(\n                    getBookingClass(booking),\n                    getBookingBorderClass(booking.clinic)\n                  )}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  {`${booking.fullname\n                      ? booking.fullname\n                      : `${booking.forename} ${booking.surname}`\n                    }`.substring(0, 15)}\n                </div>\n              )\n          )}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  const handleClinicClicked = (clinic) => {\n    switch (clinic) {\n      case \"gynae\":\n        setOpenDialogGynae(true);\n        break;\n      case \"gp\":\n        setOpenDialogGP(true);\n        break;\n      case \"std\":\n        setOpenDialogSTD(true);\n        break;\n      case \"blood\":\n        setOpenDialogBlood(true);\n        break;\n      case \"derma\":\n        setOpenDialogDerma(true);\n        break;\n      case \"screening\":\n        setOpenDialogScreening(true);\n        break;\n  \n\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        clinicClicked={handleClinicClicked}\n      />\n\n      <NewGPDialog\n        date={date}\n        time={time}\n        open={openDialogGP}\n        handleClose={handleCloseDialogGP}\n      />\n\n      <NewSTDDialog\n        date={date}\n        time={time}\n        open={openDialogSTD}\n        handleClose={handleCloseDialogSTD}\n      />\n\n      <NewGynaeDialog\n        date={date}\n        time={time}\n        open={openDialogGynae}\n        handleClose={handleCloseDialogGynae}\n      />\n\n      <NewBloodDialog\n        date={date}\n        time={time}\n        open={openDialogBlood}\n        handleClose={handleCloseDialogBlood}\n      />\n\n      <NewDermaDialog\n        date={date}\n        time={time}\n        open={openDialogDerma}\n        handleClose={handleCloseDialogDerma}\n      />\n\n      <NewScreeningDialog\n        date={date}\n        time={time}\n        open={openDialogScreening}\n        handleClose={handleCloseDialogScreening}\n      />\n\n\n\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CalendarColors } from './colors';\n\nconst Clinics = [\n    {clinic: \"PCR\", color: CalendarColors.PCR_COLOR},\n    {clinic: \"GYNAE\", color: CalendarColors.GYNAE_COLOR},\n    {clinic: \"GP\", color: CalendarColors.GP_COLOR},\n    {clinic: \"STD\", color: CalendarColors.STD_COLOR},\n    {clinic: \"BLOOD\", color: CalendarColors.BLOOD_COLOR},\n    {clinic: \"DERMA\", color: CalendarColors.DERMA_COLOR},\n    {clinic: \"SCREENING\", color: CalendarColors.SCREENING_COLOR},\n\n]\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n        setState(state => ({...state, selectedClinics : [\"PCR\", \"GP\", \"GYNAE\", \"STD\", \"BLOOD\",\"DERMA\",\"SCREENING\"]}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    const clinicClicked = (clinic) =>\n    {\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\n        {\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\n        }else\n        {\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\n        }\n    }\n\n    const getClinicGuide = () =>\n    {\n        return (\n            <div>\n               <Grid container spacing={1}>\n                   {Clinics.map( item => (\n                       <Grid item>\n                           <div \n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", minWidth:\"70px\", textAlign:\"center\", cursor:\"pointer\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", minWidth:\"70px\", textAlign:\"center\", cursor:\"pointer\"}}\n                                onClick= {() => clinicClicked(item.clinic)}   \n                                > \n                               {item.clinic}\n                           </div>\n                        </Grid>\n                   ))\n                   }\n               </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n\n            {getClinicGuide()}\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"../GlobalState\";\nimport { getMenuIndex } from \"../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n  DefaultLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SearchBookingTable(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n        case \"screening\":\n      return classes.ScreeningLabel;\n        \n      default:\n        return classes.DefaultLabel;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  columns = [\n    // { field: 'id', headerName: '#', width: 70 },\n\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <Button\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value, params.getValue(\"clinic\"))}\n            >\n              <SearchIcon />\n            </Button>\n          </React.Fragment>\n        );\n      },\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Type\",\n      align: \"center\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"fullname\", headerName: \"Fullname\", width: 200, valueGetter: (params) => {\n        if (!params.value || params.value.length === 0) {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        } else {\n          return params.value\n        }\n\n      }\n    },\n\n\n    {\n      field: \"bookingDate\",\n      headerName: \"B Date\",\n      width: 110,\n      valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      },\n    },\n    {\n      field: \"bookingTimeNormalized\",\n      headerName: \"B Time\",\n      width: 105,\n      valueGetter: (params) => {\n        return params.getValue(\"bookingTime\");\n      },\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 100,\n      renderCell: (params) => {\n        if (params.value === \"booked\") {\n          return <span className={classes.BookedLabel}> BM </span>;\n        } else if (params.value === \"patient_attended\") {\n          return <span className={classes.PatientAttendedLabel}> PA </span>;\n        } else if (params.value === \"sample_taken\") {\n          return <span className={classes.SampleTakenLabel}> ST </span>;\n        } else if (params.value === \"report_sent\") {\n          return <span className={classes.ReportSentLabel}> RS </span>;\n        } else if (params.value === \"report_cert_sent\") {\n          return <span className={classes.ReportCertSentLabel}> RCS </span>;\n        } else if (params.value === \"positive\") {\n          return <span className={classes.PositiveLabel}> POS </span>;\n        } else {\n          return \"\";\n        }\n      },\n    },\n    {\n      field: \"bookingRef\",\n      headerName: \"Ref No.\",\n      width: 120,\n      renderCell: (params) => {\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n            //  onClick={\n            //   () => {\n            //     console.log(params.value);\n\n            //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n            //     setState(state => ({...state, ref : params.value}));\n            //     setState(state => ({...state, refError : false}));\n            //     setState(state => ({...state, foundRecords : []}));\n            //     setState(state => ({...state, findRecords : !state.findRecords}));\n            //   }\n            // }\n            >\n              {params.value}\n            </Link>\n          </Tooltip>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    { field: \"phone\", headerName: \"Tel\", width: 150 },\n    { field: \"notes\", headerName: \"Notes\", width: 500 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: false,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n  const [seeDetailsDialogOpenBloodReport, setSeeDetailsDialogOpenBloodReport] = React.useState(false);\n\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = () => {\n    var api = BookService.searchAllBookings;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(filter)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  };\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n    setSeeDetailsDialogOpenBloodReport(false);\n  };\n\n  const openDetailsDialog = (event, id, clinic) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    if (clinic === \"Blood Result\") {\n      setSeeDetailsDialogOpenBloodReport(true);\n\n    }\n    else {\n      setSeeDetailsDialogOpen(true);\n\n    }\n\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n    setFilterError(false)\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  const [filterError, setFilterError] = React.useState(false)\n  const doSearch = () => {\n    if (!filter || filter.trim().length < 3) {\n      setFilterError(true)\n      return\n    }\n\n    loadData()\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={4}\n            >\n              <Grid item>\n                <TextField\n                  error={filterError}\n                  variant=\"standard\"\n                  value={filter}\n                  onChange={filterChanged}\n                  id=\"filter\"\n                  label=\"Patient's Name\"\n                  helperText={`You can search the patients by name ${filterError ? \"- Please Enter at least 3 characters\" : \"\"}`}\n                  name=\"filter\"\n                  autoComplete=\"off\"\n                  style={{ width: \"250px\" }}\n                  onKeyPress={(event) => {\n                    if (event.key === \"Enter\") {\n                      doSearch();\n                    }\n                  }}\n                />\n              </Grid>\n\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" onClick={doSearch}>\n                  Search\n                  </Button>\n              </Grid>\n\n              <Grid item>\n                {data.isFetching && (\n                  <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n                    <CircularProgress color=\"primary\" />\n                  </div>\n                )}\n              </Grid>\n\n            </Grid>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n      </Grid>\n\n\n      {data.bookings && data.bookings.length > 0 && (\n        <div style={{ height: 700, width: \"100%\", marginTop: \"20px\" }}>\n          <DataGrid\n            rows={data.bookings}\n            columns={columns}\n            autoPageSize\n            page={page}\n            onPageChange={(params) => {\n              setPage(params.page);\n            }}\n            onSelectionChange={handleSelectionChanged}\n          />\n        </div>\n      )}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n\n\n\n      )}\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpenBloodReport}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/bookappointment`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/optimalvision/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/optimalvision/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n    color: theme.palette.secondary.main,\n    fontSize: \"0.9rem\",\n  },\n\n  infoData: {\n    fontWeight: \"500\",\n    fontSize: \"1rem\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#b80012\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#d90015\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    color: \"#fff\",\n\n    backgroundColor:  \"#bd0d50\",\n    \"&:hover\": {\n      background: \"#d1175e\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  dialogTitle: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"#fff\",\n  },\n\n  question:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"400\",\n    color: theme.palette.secondary.main,\n    marginTop:\"30px\"\n  },\n\n  answer:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  const [openQDialg, setOpenQDialog] = React.useState(false)\n  const handleQDialgClose = () =>\n  {\n    setOpenQDialog(false)\n  }\n\n  const fixQuestion = (str) =>\n  {\n    let result = str.replace('*', '')\n    if (!result.trim().endsWith('?'))\n    {\n      result += '?'\n    }\n    return result\n  }\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              className={classes.dialogTitle}\n              style={{position:\"relative\"}}\n            >\n              {booking.questions && (\n                 <div style={{position:\"absolute\", right:\"10px\", top:\"12px\", backgroundColor:\"#069c00\", fontSize:\"0.85rem\", padding:\"8px\", borderRadius:\"10px\"}}>\n                   Self-Test\n                 </div>\n              )}\n\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: 25,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME :\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              FULLNAME :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>EMAIL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>TEL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              Consultation :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.faceToFaceConsultation && (\n                                <span> Face to Face </span>\n                              )}\n                              {((booking.faceToFaceConsultation &&\n                                booking.telephoneConsultation) ||\n                                (!booking.faceToFaceConsultation &&\n                                  !booking.telephoneConsultation)) && (\n                                <span\n                                  style={{\n                                    paddingLeft: \"5px\",\n                                    paddingRight: \"5px\",\n                                  }}\n                                >\n                                  {\" \"}\n                                  -{\" \"}\n                                </span>\n                              )}\n                              {booking.telephoneConsultation && (\n                                <span> Telephone </span>\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      {booking.questions && (\n                        <React.Fragment>\n                          <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                          <Button fullWidth variant=\"contained\" color=\"primary\" style={{color:\"#fff\",margin:\"10px\"}} onClick={() => setOpenQDialog(true)}>\n                             Show questionnaire\n                          </Button>\n                          </div>\n                          <Divider />\n                        </React.Fragment>\n                      )}\n\n                   \n\n                      \n                      <div style={{marginTop:\"20px\"}}>\n\n                      </div>\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to archive this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Archive This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Archive This Record\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Archive this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n\n          <Dialog\n            open={openQDialg}\n            onClose={handleQDialgClose}\n            maxWidth=\"sm\"\n          >\n            <DialogContent>\n                      {booking.questions && JSON.parse(booking.questions).map(item => (\n                        <div >\n                          <div className={classes.question}>\n                            {fixQuestion(item.question)}\n                          </div>\n                          <div className={classes.answer}>\n                            {item.answer}\n                          </div>\n                        </div>\n                      ))}\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={() => setOpenQDialog(false)}>\n                Close\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PaymentService {\n\n   static sendPaymentLinkTextMessage = (medexPaymentId, phone) =>\n   {\n      return API.post(`/api/medex/payment/sendpaymentlinktext`, {medexPaymentId : medexPaymentId, phone: phone});\n   }\n\n\n   static sendPaymentLinkEmail = (medexPaymentId, email) =>\n   {\n      return API.post(`/api/medex/payment/sendpaymentlinkemail`, {medexPaymentId : medexPaymentId, email: email});\n   }\n\n   static doPayment = (paymentId, medexPaymentId) =>\n   {\n      return API.post(`/api/medex/payment/dopayment`, {paymentId: paymentId  , medexPaymentId : medexPaymentId});\n   }\n\n   static refundPayment = (paymentId) =>\n   {\n      return API.post(`/api/medex/payment/refundpayment`, {medexPaymentId : paymentId});\n   }\n\n   static createNewPaymentLink = (paymentRecord) =>\n   {\n      return API.post(`/api/medex/payment/createpayment`, {paymentRecord : paymentRecord});\n   }\n\n   static deletePaymentLink = (paymentId) =>\n   {\n      return API.post(`/api/medex/payment/deletepayment`, {medexPaymentId : paymentId});\n   }\n\n   static getAllPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getallpayments`);\n   }\n\n   static getDeletedPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getdeletedpayments`);\n   }\n\n   static getPaidPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getpaidpayments`);\n   }\n\n   static getNotPaidPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getnotpaidpayments`);\n   }\n\n   static getLatePayments = () =>\n   {\n      return API.get(`/api/medex/payment/getlatepayments`);\n   }\n\n\n   static getRefundPayments = () =>\n   {\n      return API.get(`/api/medex/payment/getrefundpayments`);\n   }\n\n   static getRecentPayments = () => {\n      return API.get(`/api/medex/payment/getrecentpayments`);\n   }\n\n   static getPaymentById = (paymentId) =>\n   {\n      return API.get(`/api/medex/payment/getpaymentbyid?id=${paymentId}`);\n   }\n\n   static getTotalReceivedAmount = () => {\n      return API.get(`/api/medex/payment/gettotalreceivedamount`);\n   }\n\n   static getTodayReceivedAmount = () => {\n      return API.get(`/api/medex/payment/gettodayreceivedamount`);\n   }\n\n   static getTotalLinkSent = () => {\n      return API.get(`/api/medex/payment/gettotallinksent`);\n   }\n\n   static getTodayLinkSent = () => {\n      return API.get(`/api/medex/payment/gettodaylinksent`);\n   }\n\n\n   \n\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PatientService {\n\n\n   static registerNewPatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/registernewpatient`, payload);\n   }\n\n   static updatePatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/updatepatient`, payload);\n   } \n\n   static deletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/deletepatient?id=${id}`);\n   } \n\n   static unDeletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/undeletepatient?id=${id}`);\n   } \n   \n    static getPatientById = (id) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbyid?id=${id}`);\n    }\n\n    static getPatientByPatientId = (patiantID) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbypatientid?patiantID=${patiantID}`);\n    }\n\n    static getAllPatients = () =>\n    {\n      return API.get(`/api/optimalvision/patient/getallpatients`);\n    }\n\n    static getDeletedPatients= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/patiant/getdeletedpatients`);\n    }\n\n}","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, IconButton, InputLabel, Select, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    loadingBox: {\n\n    }\n\n}));\n\n\nconst DateField = ({ title, value, dateChanged, error, todayButton, children }) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n    const updateDate = (dd, mm, yyyy) => {\n        let dayStr = `${dd}`;\n        let monthStr = `${mm + 1}`;\n\n\n        if (dayStr.length === 1) {\n            dayStr = `0${dayStr}`;\n        }\n\n        if (monthStr.length === 1) {\n            monthStr = `0${monthStr}`;\n        }\n\n        dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n\n\n    }\n\n    const handleDayChanged = (event) => {\n        setDay(event.target.value);\n        updateDate(event.target.value, month, year);\n    };\n\n    const handleMonthChanged = (event) => {\n        setMonth(event.target.value);\n        updateDate(day, event.target.value, year);\n    };\n\n    const handleYearChanged = (event) => {\n        setYear(event.target.value);\n        updateDate(day, month, event.target.value);\n    };\n\n    const resetDate = () => {\n        setDay(\"\")\n        setYear(\"\")\n        setMonth(\"\")\n        dateChanged(\"\")\n    }\n\n    const todayDate = () => {\n        const today = new Date()\n        updateDate(today.getDate(), today.getMonth(), today.getFullYear())\n    }\n\n\n    useEffect(() => {\n        if (value && value.length === 10) {\n            const d = parseInt(value.substr(8, 2));\n            const m = parseInt(value.substr(5, 2));\n            const y = parseInt(value.substr(0, 4));\n\n            setDay(d);\n            setMonth(m - 1);\n            setYear(y);\n        }else if (!value)\n        {\n            resetDate()\n        }\n\n\n    }, [value]);\n\n    useEffect(() => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1; i <= 31; i++) {\n            days.push(i);\n        }\n\n        for (i = 0; i < 12; i++) {\n            months.push(dateformat(new Date(2020, i, 5), 'mmmm'));\n        }\n\n        for (i = 1900; i <= new Date().getFullYear() + 1; i++) {\n            years.push(i);\n        }\n\n\n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n    }, [])\n\n    return (\n\n        <React.Fragment>\n\n\n            <div style={{ position: \"relative\", border: `1px solid ${error ? 'red' : '#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    {title}\n                </div>\n\n                <div style={{ position: \"absolute\", top: \"-25px\", right: \"10px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    <Tooltip title=\"Clear Date\">\n                        <IconButton onClick={resetDate}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n\n                {todayButton && (\n                    <div style={{ position: \"absolute\", top: \"-25px\", right: \"70px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                        <Tooltip title=\"Today\">\n                            <IconButton onClick={todayDate}>\n                                <TodayIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n\n                )}\n\n\n\n\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                >\n\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Day</InputLabel>\n                            <Select\n\n                                labelId=\"day-label\"\n                                id=\"day-select\"\n                                value={day}\n                                onChange={handleDayChanged}\n                            >\n                                {\n                                    dayArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"month-label\">Month</InputLabel>\n                            <Select\n                                labelId=\"month-label\"\n                                id=\"month-select\"\n                                value={month}\n                                onChange={handleMonthChanged}\n                            >\n                                {\n                                    monthArray.map((item, index) => (\n                                        <MenuItem value={index}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Year</InputLabel>\n                            <Select\n                                labelId=\"year-label\"\n                                id=\"year-select\"\n                                value={year}\n                                onChange={handleYearChanged}\n                            >\n                                {\n                                    yearArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <div>\n                    {children}\n                </div>\n\n            </div>\n\n\n        </React.Fragment>\n    );\n}\n\n\nDateField.propTypes = {\n    title: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n};\n\nexport default DateField;\n\n\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport PatientService from \"./services/PatientService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PatientDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [patient, setPatient] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [patientIDError, setPatientIDError] = React.useState(false)\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [patientRepeated, setPatientRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n            const _history = []\n\n            if (props.patient) {\n                setPatient({ ...props.patient, formData: props.patient.formData ? JSON.parse(props.patient.formData) : {} })\n                setBackUpFormData(props.patient.formData ? JSON.parse(props.patient.formData) : {})\n                if (props.patient.history) {\n                    props.patient.history.forEach(record => {\n                        _history.push(JSON.parse(record))\n                    });\n                    setSelectedVersion(0)\n                }\n            }\n            else {\n                setPatient({ formData: {},  name : props.name || '', surname: props.surname || ''})\n            }\n\n            setHistory(_history.reverse())\n\n        }\n    }, [props.patient, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        setPatient({ formData: {} })\n        setPatientIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        setPatientRepeated(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatePatient()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            setPatientRepeated(false)\n            setSaving(true)\n            patient.formData = JSON.stringify(patient.formData)\n            if (props.patient) {\n                const res = await PatientService.updatePatient({ id: patient._id, patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await PatientService.registerNewPatient({ patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated Patient!\") {\n                    setPatientIDError(true)\n                    setPatientRepeated(true)\n                    setValue(0)\n\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await PatientService.deletePatient(props.patient._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                patientDialogDataChanged: !state.patientDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatePatient = () => {\n        var error = false\n        if (!patient.patientID || patient.patientID.trim().length === 0) {\n            error = true\n            setPatientIDError(true)\n        }\n        if (!patient.name || patient.name.trim().length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!patient.surname || patient.surname.trim().length === 0) {\n            error = true\n            setSurnameError(true)\n        }\n\n        if (patient.birthDate && patient.birthDate.length !== 10) {\n            setBirthDateError(true)\n            error = true\n        }\n\n        return !error\n\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const showHistoryComboBox = () => {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"-10px\" }}>\n                    <span style={{ color: \"#fff\", fontWeight: \"500\", fontSize: \"1rem\", marginRight: \"10px\" }}>\n                        Version :\n                    </span>\n                    <Select\n                        label=\"Version\"\n                        labelId=\"version-label\"\n                        id=\"version-label\"\n                        style={{ color: \"#fff\", padding: \"0px 10px\" }}\n                        value={selectedVersion}\n                        onChange={(event) => {\n                            setSelectedVersion(event.target.value)\n                            if (event.target.value === 0) {\n                                setPatient({ ...patient, formData: backupFormData })\n                            } else {\n                                setPatient({ ...patient, formData: history[event.target.value - 1] })\n                            }\n\n                        }}\n\n                    >\n                        <MenuItem value={0}>{`${formatDate(patient.formData.timeStamp)} ( Current )`}</MenuItem>\n\n                        {history.map((item, index) => (\n                            <MenuItem value={index + 1}>{`${formatDate(item.timeStamp)} ( History )`}</MenuItem>\n                        ))\n                        }\n                    </Select>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"secondary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n\n                            {history && history.length > 0 && (\n                                <Grid item>\n                                    {showHistoryComboBox()}\n                                </Grid>\n                            )}\n                        </Grid>\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n                            <Tab label={`History & Symptoms`} {...a11yProps(1)} />\n                            <Tab label=\"Dry Eyes\" {...a11yProps(2)} />\n                            <Tab label=\"Ocular Examination\" {...a11yProps(3)} />\n                            <Tab label=\"Diagnostics\" {...a11yProps(4)} />\n                            <Tab label=\"Uncorrected VA\" {...a11yProps(5)} />\n                            <Tab label=\"Refraction\" {...a11yProps(6)} />\n                            <Tab label=\"Auto Refraction\" {...a11yProps(7)} />\n                            <Tab label=\"Manifest Refraction\" {...a11yProps(8)} />\n                            <Tab label=\"Target Refraction\" {...a11yProps(9)} />\n                            <Tab label=\"Recommendation\" {...a11yProps(10)} />\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        disabled={props.patient}\n                                        name=\"patientid\"\n                                        id=\"patientid\"\n                                        label=\"Patient ID\"\n                                        fullWidth\n                                        required\n                                        helperText={patientRepeated ? 'This PatientID is already assigned to another patient' : ''}\n                                        error={patientIDError}\n                                        value={patient.patientID || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, patientID: event.target.value })\n                                            setPatientIDError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"firstname\"\n                                        id=\"firstname\"\n                                        label=\"First Name\"\n                                        fullWidth\n                                        required\n                                        error={nameError}\n                                        value={patient.name || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, name: event.target.value })\n                                            setNameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"surname\"\n                                        id=\"surname\"\n                                        label=\"Surname\"\n                                        fullWidth\n                                        required\n                                        error={surnameError}\n                                        value={patient.surname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, surname: event.target.value })\n                                            setSurnameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"gender-label\">Gender</InputLabel>\n                                        <Select\n                                            label=\"Gender\"\n                                            labelId=\"gender-label\"\n                                            id=\"gender-label\"\n                                            fullWidth\n                                            style={{ height: \"90px\" }}\n                                            value={patient.gender || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, gender: event.target.value })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8} style={{ marginTop: \"-20px\" }} >\n                                    <DateField\n                                        error={birthDateError}\n                                        value={patient.birthDate || ''}\n                                        title=\"DOB\"\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, birthDate: value })\n                                            setBirthDateError(false)\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"postcode\"\n                                        id=\"postcode\"\n                                        label=\"Postcode\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.postCode || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, postCode: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8}>\n                                    <TextField\n                                        name=\"address\"\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.address || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, address: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"hometel\"\n                                        id=\"hometel\"\n                                        label=\"Home Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.homeTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, homeTel: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"mobiletel\"\n                                        id=\"mobiletel\"\n                                        label=\"Mobile Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.mobileTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, mobileTel: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"email\"\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.email || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, email: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"occupation\"\n                                        id=\"occupation\"\n                                        label=\"Occupation\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.occupation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, occupation: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"gpname\"\n                                        id=\"gpname\"\n                                        label={`GP Name & Address`}\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.gpname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, gpname: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"kincontact\"\n                                        id=\"kincontact\"\n                                        label=\"Next of Kin Contact\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.kincontact || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, kincontact: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"prevsighttest\"\n                                        id=\"prevsignttest\"\n                                        label=\"Previous Sight Test\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevsighttest || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevsighttest: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                {props.patient && (\n                                    <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                                        <Button\n                                            onClick={() => setOpenDeleteDialog(true)}\n                                            variant=\"contained\"\n                                            fullWidth\n                                            color=\"primary\"\n                                            // style={{ width: \"100px\" }}\n                                            style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                            disabled={saving}\n                                        >\n                                            Delete This Patient\n                                  </Button>\n                                    </Grid>\n\n\n                                )}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cc\"\n                                        id=\"cc\"\n                                        label=\"C.C\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cc || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cc: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevmedicalhistory\"\n                                        id=\"prevmedicalhistory\"\n                                        label=\"Previous Medical History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevmedicalhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevmedicalhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevocularhistory\"\n                                        id=\"prevocularhistory\"\n                                        label=\"Previous Ocular History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevocularhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevocularhistory: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"familyhistory\"\n                                        id=\"familyhistory\"\n                                        label=\"Family History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.familyhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, familyhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"medications\"\n                                        id=\"medications\"\n                                        label=\"Medications\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.medications || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, medications: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"grafth\"\n                                        id=\"grafth\"\n                                        label=\"Graft H\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.grafth || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, grafth: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"allergies\"\n                                        id=\"allregies\"\n                                        label=\"Allergies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.allergies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, allergies: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"contactlenswearer\"\n                                        id=\"contactlenswearer\"\n                                        label=\"Contact Lens Wearer\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        placeholder={` Yes/No \\n Soft/RGP/EW`}\n                                        value={patient.formData.contactlenswearer || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlenswearer: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"hobbies\"\n                                        id=\"hobbies\"\n                                        label=\"Lifestyle / Hobbies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.hobbies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, hobbies: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vdu\"\n                                        id=\"vdu\"\n                                        label=\"VDU\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vdu || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vdu: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"driver\"\n                                        id=\"driver\"\n                                        label=\"Driver\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.driver || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, driver: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"othernotes\"\n                                        id=\"othernotes\"\n                                        label=\"Other Notes\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.othernotes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, othernotes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"dryevehistory\"\n                                        id=\"dryevehistory\"\n                                        label=\"Dry Eye History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.dryeyehistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, dryeyehistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"nightvisionglare\"\n                                        id=\"nightvisionglare\"\n                                        label=\"Night Vision / Glare\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nightvisionglare || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nightvisionglare: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"ocularirritation\"\n                                        id=\"ocularirritation\"\n                                        label=\"Ocular Irritation\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ocularirritation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ocularirritation: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"wateryeyes\"\n                                        id=\"wateryeyes\"\n                                        label=\"Watery Eyes\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.wateryeyes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, wateryeyes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"speedquestionariedone\"\n                                        id=\"speedquestionariedone\"\n                                        label=\"SPEED Questionnaire Done\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.speedquestionariedone || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, speedquestionariedone: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <div className={classes.titleCenter || ''}>\n                                        ANTERIOR SEGMENT\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cornearight\"\n                                        id=\"cornearight\"\n                                        label=\"Cornea (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cornearight || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cornearight: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cornealeft\"\n                                        id=\"cornealeft\"\n                                        label=\"Cornea (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cornealeft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cornealeft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lidslashesright\"\n                                        id=\"lidslashesright\"\n                                        label={`Lids & Lashes (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lidslashesright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lidslashesright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lidslashesleft\"\n                                        id=\"lidslashesleft\"\n                                        label={`Lids & Lashes (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lidslashesleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lidslashesleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"conjunctivaright\"\n                                        id=\"conjunctivaright\"\n                                        label={`Conjunctiva (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.conjunctivaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, conjunctivaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"conjunctivaleft\"\n                                        id=\"conjunctivaleft\"\n                                        label={`Conjunctiva (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.conjunctivaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, conjunctivaleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupilright\"\n                                        id=\"pupilright\"\n                                        label={`Pupil/PERRLA/RPAD/SIZE (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupilright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupilright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupilleft\"\n                                        id=\"pupilleft\"\n                                        label={`Pupil/PERRLA/RPAD/SIZE (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupilleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupilleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acright\"\n                                        id=\"acright\"\n                                        label={`A.C. (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acleft\"\n                                        id=\"acleft\"\n                                        label={`A.C. (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lensright\"\n                                        id=\"lensright\"\n                                        label={`Lens (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lensright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lensright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lensleft\"\n                                        id=\"lensleft\"\n                                        label={`Lens (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lensleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lensleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vitreousright\"\n                                        id=\"vitreousright\"\n                                        label={`Vitreous (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vitreousright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vitreousright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vitreousleft\"\n                                        id=\"vitreousleft\"\n                                        label={`Vitreous (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vitreousleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vitreousleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombright\"\n                                        id=\"ombright\"\n                                        label={`OMB (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombleft\"\n                                        id=\"ombleft\"\n                                        label={`OMB (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"tbutright\"\n                                        id=\"tbutright\"\n                                        label={`TBUT (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.tbutright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, tbutright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombleft\"\n                                        id=\"ombleft\"\n                                        label={`OMB (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} style={{ margingTop: \"10px\" }}>\n                                    <div className={classes.titleCenter}>\n                                        POSTERIOR SEGMENT\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"discright\"\n                                        id=\"discright\"\n                                        label={`DISC (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.discright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, discright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"discleft\"\n                                        id=\"discleft\"\n                                        label={`DISC (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.discleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, discleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cdright\"\n                                        id=\"cdright\"\n                                        label={`C:D (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cdright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cdright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cdleft\"\n                                        id=\"cdleft\"\n                                        label={`C:D (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cdleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cdleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"bloodvesselsright\"\n                                        id=\"bloodvesselsright\"\n                                        label={`Blood Vessels (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.bloodvesselsright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, bloodvesselsright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"bloodvesselsleft\"\n                                        id=\"bloodvesselsleft\"\n                                        label={`Blood Vessels (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.bloodvesselsleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, bloodvesselsleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"macularight\"\n                                        id=\"macularight\"\n                                        label={`Macula (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.macularight || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, macularight: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculaleft\"\n                                        id=\"maculaleft\"\n                                        label={`Macula (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculaleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"peripheryright\"\n                                        id=\"peripheryright\"\n                                        label={`Periphery (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.peripheryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, peripheryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"peripheryleft\"\n                                        id=\"peripheryleft\"\n                                        label={`Periphery (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.peripheryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, peripheryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={4}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupillowlightdiamright\"\n                                        id=\"pupillowlightdiamright\"\n                                        label=\"Pupil (low light diam) (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupillowlightdiamright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupillowlightdiamright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupillowlightdiamleft\"\n                                        id=\"pupillowlightdiamleft\"\n                                        label=\"Pupil (low light diam) (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupillowlightdiamleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupillowlightdiamleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pachmetryright\"\n                                        id=\"pachmetryright\"\n                                        label=\"Pachmetry (μm) (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pachmetryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pachmetryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pachmetryleft\"\n                                        id=\"pachmetryleft\"\n                                        label=\"Pachmetry (μm) (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pachmetryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pachmetryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"keratometryright\"\n                                        id=\"keratometryright\"\n                                        label=\"Keratometry (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.keratometryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, keratometryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"keratometryleft\"\n                                        id=\"keratometryleft\"\n                                        label=\"Keratometry (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.keratometryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, keratometryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acdepthright\"\n                                        id=\"acdepthright\"\n                                        label=\"AC Depth (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acdepthright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acdepthright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acdepthleft\"\n                                        id=\"acdepthleft\"\n                                        label=\"AC Depth (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acdepthleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acdepthleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculathicnessright\"\n                                        id=\"maculathicnessright\"\n                                        label=\"Macula Thickness (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculathicnessright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculathicnessright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculathicnessleft\"\n                                        id=\"maculathicnessleft\"\n                                        label=\"Macula Thickness (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculathicnessleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculathicnessleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"octcommentright\"\n                                        id=\"octcommentright\"\n                                        label=\"OCT Comment (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.octcommentright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, octcommentright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"octcommentleft\"\n                                        id=\"octcommentleft\"\n                                        label=\"OCT Comment (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.octcommentleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, octcommentleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pentacamcommentright\"\n                                        id=\"pentacamcommentright\"\n                                        label=\"Pentacam Comment (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pentacamcommentright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pentacamcommentright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pentacamcommentleft\"\n                                        id=\"pentacamcommentleft\"\n                                        label=\"Pentacam Comment (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pentacamcommentleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pentacamcommentleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={5}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevaright\"\n                                        id=\"distancevaright\"\n                                        label=\"Distance (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevaleft\"\n                                        id=\"distancevaleft\"\n                                        label=\"Distance (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevabinocular\"\n                                        id=\"distancevabinocular\"\n                                        label=\"Distance (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevaright\"\n                                        id=\"intermediatevaright\"\n                                        label=\"Intermediate (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevaleft\"\n                                        id=\"intermediatevaleft\"\n                                        label=\"Intermediate (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevabinocular\"\n                                        id=\"intermediatevabinocular\"\n                                        label=\"Intermediate (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvaright\"\n                                        id=\"nearvaright\"\n                                        label=\"Near (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvaleft\"\n                                        id=\"nearvaleft\"\n                                        label=\"Near (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvabinocular\"\n                                        id=\"nearvabinocular\"\n                                        label=\"Near (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n\n\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={6}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <DateField\n                                        // error={birthDateError}\n                                        title=\"Current Prescription Date\"\n                                        value={patient.formData.refractioncurrentpresdate || ''}\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, refractioncurrentpresdate: value } })\n                                            // setBirthDateError(false)\n                                        }}\n                                        todayButton={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateright\"\n                                        id=\"spherepresdateright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateright\"\n                                        id=\"cylpresdateright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateright\"\n                                        id=\"axispresdateright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateright\"\n                                        id=\"addpresdateright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateright\"\n                                        id=\"vapresdateright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateleft\"\n                                        id=\"spherepresdateleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateleft\"\n                                        id=\"cylpresdateleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateleft\"\n                                        id=\"axispresdateleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateleft\"\n                                        id=\"addpresdateleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateleft\"\n                                        id=\"vapresdateleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"spectype-label\">Spec Type</InputLabel>\n                                        <Select\n                                            label=\"Spec Type\"\n                                            labelId=\"spectype-label\"\n                                            id=\"spectype-label\"\n                                            style={{ textAlign: \"center\" }}\n                                            fullWidth\n                                            value={patient.formData.refractionsepctype || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, formData: { ...patient.formData, refractionsepctype: event.target.value } })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Single Vision\"}>Single Vision</MenuItem>\n                                            <MenuItem value={\"Bifocal\"}>Bifocal</MenuItem>\n                                            <MenuItem value={\"Varifocal\"}>Varifocal</MenuItem>\n                                            <MenuItem value={\"RR\"}>RR</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12}>\n                                    <DateField\n                                        // error={birthDateError}\n                                        title=\"Contact Lens Date\"\n                                        value={patient.formData.contactlensdate || ''}\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlensdate: value } })\n                                            // setBirthDateError(false)\n                                        }}\n                                        todayButton={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdaterightlens\"\n                                        id=\"spherepresdaterightlens\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdaterightlens\"\n                                        id=\"cylpresdaterightlens\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdaterightlens\"\n                                        id=\"axispresdaterightlens\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdaterightlens\"\n                                        id=\"addpresdaterightlens\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdaterightlens\"\n                                        id=\"vapresdaterightlens\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateleftlens\"\n                                        id=\"spherepresdateleftlens\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateleftlens\"\n                                        id=\"cylpresdateleftlens\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateleftlens\"\n                                        id=\"axispresdateleftlens\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateleftlens\"\n                                        id=\"addpresdateleftlens\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateleftlens\"\n                                        id=\"vapresdateleftlens\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"cltype-label\">CL Type</InputLabel>\n                                        <Select\n                                            label=\"CL Type\"\n                                            labelId=\"cltype-label\"\n                                            id=\"cltype-label\"\n                                            style={{ textAlign: \"center\" }}\n                                            fullWidth\n                                            value={patient.formData.refractioncltype || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, formData: { ...patient.formData, refractioncltype: event.target.value } })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Dailies Soft\"}>Dailies Soft</MenuItem>\n                                            <MenuItem value={\"Monthlies\"}>Monthlies</MenuItem>\n                                            <MenuItem value={\"RGP\"}>RGP</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={12} style={{ marginBottom: \"20px\" }}></Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={7}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"sphereautorefright\"\n                                        id=\"sphereautorefright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.sphereautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, sphereautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylautorefright\"\n                                        id=\"cylautorefright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axisautorefright\"\n                                        id=\"axisautorefright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axisautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axisautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vaautorefright\"\n                                        id=\"vaautorefright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vaautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vaautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}></Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"sphereautorefleft\"\n                                        id=\"sphereautorefleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.sphereautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, sphereautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylautorefleft\"\n                                        id=\"cylautorefleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axisautorefleft\"\n                                        id=\"axisautorefleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axisautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axisautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vaautorefleft\"\n                                        id=\"vaautorefleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vaautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vaautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={8}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <div className={classes.titleCenter}>\n                                        Manifest Refraction\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheremanifestright\"\n                                        id=\"spheremanifestright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheremanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheremanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylmanifestright\"\n                                        id=\"cylmanifestright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylmanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylmanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axismanifestright\"\n                                        id=\"axismanifestright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axismanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axismanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addmanifestright\"\n                                        id=\"addmanifestright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addmanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addmanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vamanifestright\"\n                                        id=\"vamanifestright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vamanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vamanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheremanifestleft\"\n                                        id=\"spheremanifestleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheremanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheremanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylmanifestleft\"\n                                        id=\"cylmanifestleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylmanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylmanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axismanifestleft\"\n                                        id=\"axismanifestleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axismanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axismanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addmanifestleft\"\n                                        id=\"addmanifestleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addmanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addmanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vamanifestleft\"\n                                        id=\"vamanifestleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vamanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vamanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} style={{ marginTop: \"50px\" }}>\n                                    <div className={classes.titleCenter}>\n                                        Cycloplegic Refraction\n                                    </div>\n                                </Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherecycloright\"\n                                        id=\"spherecycloright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherecycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherecycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylcycloright\"\n                                        id=\"cylcycloright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylcycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylcycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axiscycloright\"\n                                        id=\"axiscycloright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axiscycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axiscycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addcycloright\"\n                                        id=\"addcycloright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addcycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addcycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vacycloright\"\n                                        id=\"vacycloright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vacycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vacycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherecycloleft\"\n                                        id=\"spherecycloleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherecycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherecycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylcycloleft\"\n                                        id=\"cylcycloleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylcycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylcycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axiscycloleft\"\n                                        id=\"axiscycloleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axiscycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axiscycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addcycloleft\"\n                                        id=\"addcycloleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addcycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addcycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vacycloleft\"\n                                        id=\"vacycloleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vacycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vacycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={9}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheretargetrefright\"\n                                        id=\"spheretargetrefright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheretargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheretargetrefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cyltargetrefright\"\n                                        id=\"cyltargetrefright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cyltargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cyltargetrefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axistargetrefright\"\n                                        id=\"axistargetrefright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axistargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axistargetrefright: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                </Grid>\n                                <Grid item xs={12} md={2}></Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheretargetrefleft\"\n                                        id=\"spheretargetrefleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheretargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheretargetrefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cyltargetrefleft\"\n                                        id=\"cyltargetrefleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cyltargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cyltargetrefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axistargetrefleft\"\n                                        id=\"axistargetrefleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axistargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axistargetrefleft: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={10}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"recommendation\"\n                                        id=\"recommendation\"\n                                        label=\"Recommendation\"\n                                        fullWidth\n                                        multiline\n                                        rows={15}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.recommendation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, recommendation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                Are you sure you want to delete this patient?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this patient\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport PaymentService from \"./services/PaymentService\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\n\nimport * as EmailValidator from \"email-validator\";\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport SendIcon from '@material-ui/icons/Send';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewPaymentDialog(props) {\n  const classes = useStyles();\n\n  const LinkRef = React.useRef(null)\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [amount, setAmount] = useState(\"\");\n  const [amountError, setAmountError] = useState(false);\n\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [phoneSent, setPhoneSent] = React.useState(false);\n\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [description, setDescription] = React.useState(\"\");\n\n  const [paymentLink, setPaymentLink] = React.useState(null);\n  const [paymentId, setPaymentId] = React.useState(null);\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    if (EmailValidator.validate(event.target.value))\n    {\n      setEmailError(false)\n    }\n   \n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n  };\n\n\n  const amountChanged = (event) => {\n    setAmount(event.target.value)\n    setAmountError(false)\n  }\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setAmount('')\n    setFullname('')\n    setEmail('')\n    setPhone('')\n    setDescription('')\n    setNotes('')\n    setPaymentLink(null)\n    setPaymentId(null)\n\n    setAmountError(false)\n    setFullnameError(false)\n    setEmailError(false)\n    setPhoneError(false)\n    setSaving(false);\n    setEmailSent(false)\n    setPhoneSent(false)\n  };\n\n  const createLinkClicked = async () => {\n    if (!validatePayment()) {\n      return\n    }\n\n    try {\n      setSaving(true)\n      const paymentRecord = {\n        amount: amount,\n        fullname: fullname,\n        description: description,\n        notes: notes\n      }\n\n      const res = await PaymentService.createNewPaymentLink(paymentRecord)\n\n      if (res && res.data && res.data.status === \"OK\") {\n        const payment = res.data.payment\n        setPaymentLink(buildPaymentLink(payment._id))\n        setPaymentId(payment._id)\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n        LinkRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n      }\n\n      setSaving(false)\n\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n\n\n  }\n\n  const validatePayment = () => {\n    let error = false\n\n    if (!amount || amount.trim().length === 0 || parseFloat(amount) <= 0) {\n      setAmountError(true)\n      error = true\n    }\n\n    if (!fullname || fullname.trim().length === 0) {\n      setFullnameError(true)\n      error = true\n    }\n\n    return !error\n\n  }\n\n  const buildPaymentLink = (id) => {\n    return `https://londonmedicalclinic.co.uk/medicalexpressclinic/pay/${id}`\n  }\n\n  const sendEmailClicked = async () =>\n  {\n    if (!email || email.length < 3 || !EmailValidator.validate(email))\n    {\n      setEmailError(true)\n      return\n    }\n\n    try{\n\n      setSaving(true)\n\n     const res = await PaymentService.sendPaymentLinkEmail(paymentId, email)\n     if (res && res.data && res.data.status === \"OK\")\n     {\n       setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n       setEmailSent(true)     \n     }\n\n     setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n  const sendTextClicked = async () =>\n  {\n    if (!phone || (phone.trim().length < 10))\n    {\n      setPhoneError(true)\n      return\n    }\n\n    try{\n\n      setSaving(true)\n\n     const res = await PaymentService.sendPaymentLinkTextMessage(paymentId, phone)\n     if (res && res.data && res.data.status === \"OK\")\n     {\n       setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n       setPhoneSent(true)     \n     }\n\n     setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        <Dialog\n          maxWidth=\"sm\"\n          open={props.open}\n          onClose={handleClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <LinkIcon\n                  style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#f50057\",\n                    paddingBottom: \"10px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                    Create New Payment Link{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <Grid\n              container\n              justify=\"space-between\"\n              spacing={2}\n              alignItems=\"flex-start\"\n              style={{ marginBottom: \"20px\" }}\n            >\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  autoFocus\n                  error={amountError}\n                  label=\"Amount\"\n                  value={amount}\n                  fullWidth\n                  required\n                  onChange={amountChanged}\n                  name=\"product-price\"\n                  id=\"product-price-id\"\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        £\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  fullWidth\n                  error={fullnameError}\n                  label=\"Customer/Payer Name\"\n                  value={fullname}\n                  required\n                  onChange={fullnameChanged}\n                  name=\"fullname\"\n                  id=\"fullname-id\"\n                  autoComplete=\"none\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  fullWidth\n                  label=\"Description\"\n                  value={description}\n                  onChange={descriptionChanged}\n                  name=\"description\"\n                  id=\"description-id\"\n                  helperText=\"This will be shown to the users at payment time.\"\n                  autoComplete=\"none\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  disabled={paymentLink !== null || saving}\n                  fullWidth\n                  label=\"Notes\"\n                  value={notes}\n                  onChange={notesChanged}\n                  name=\"notes\"\n                  id=\"notes-id\"\n                  helperText=\"This is just for your use, it will not be shown to the users.\"\n                  autoComplete=\"none\"\n                />\n              </Grid>\n\n              {paymentLink && (\n                <React.Fragment>\n\n                  <Grid item xs={12}>\n\n                    <div style={{ fontSize: \"1rem\", fontWeight: \"500\", marginBottom: \"5px\", marginTop: \"5px\", color: \"#333\" }}>\n                      Payment Link URL :\n                    </div>\n\n                    <div style={{ width: \"100%\", overflowWrap: \"break-word\" }} ref={LinkRef}>\n                      <Link style={{ fontSize: \"1rem\", fontWeight: \"500\" }} href={paymentLink} target=\"_blank\" rel=\"noopener\">\n                        {paymentLink}\n                      </Link>\n\n                      <span>\n\n                        <Tooltip title=\"COPY LINK TO CLIPBOARD\">\n                          <IconButton\n                            onClick={() => {\n                              navigator.clipboard.writeText(\n                                paymentLink\n                              );\n                            }}\n                            aria-label=\"delete\"\n                            className={classes.margin}\n                            size=\"small\"\n                          >\n                            <FileCopyOutlinedIcon\n                              style={{color:\"#bf9b30\", fontSize:\"1.3rem\", marginLeft:\"10px\"}}\n                            />\n                          </IconButton>\n                        </Tooltip>\n\n                      </span>\n\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      error={emailError}\n                      label=\"Customer Email Address\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                      variant=\"outlined\"\n                      placeholder=\"Enter customer email address\"\n                      InputProps={ emailSent ?  {\n                        endAdornment: <InputAdornment position=\"end\">\n                          <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Email Sent</span>\n                          <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                        </InputAdornment>,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <AccountCircleIcon style={{color:\"#05acb2\"}}/>\n                          </InputAdornment>\n                        ),\n                      } : {\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <AccountCircleIcon style={{color:\"#05acb2\"}} />\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button\n                      disabled={saving}\n                      fullWidth\n                      onClick={sendEmailClicked}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Send Link With Email\n                    </Button>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      error={phoneError}\n                      label=\"Customer Mobile Number\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                      variant=\"outlined\"\n                      placeholder=\"1234567891\"\n                      helperText=\"* Please enter only the mobile number (10 numbers) without the country code. Just UK numbers are accepted.\"\n                      InputProps={ phoneSent ?  {\n                        endAdornment: <InputAdornment position=\"end\">\n                          <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Text MSG Sent</span>\n                          <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                        </InputAdornment>,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}}/>\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                          </InputAdornment>\n                        ),\n                      } : {\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}}/>\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                           \n                          </InputAdornment>\n                        ),\n                      }}\n\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button\n                      disabled={saving}\n                      fullWidth\n                      onClick={sendTextClicked}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Send Link With Text Message\n                    </Button>\n                  </Grid>\n\n\n\n                </React.Fragment>\n              )}\n\n\n            </Grid>\n\n            <Backdrop className={classes.backdrop} open={saving}>\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </DialogContent>\n\n\n          <DialogActions>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n\n              <Grid item>\n                <Button\n                  onClick={handleClose}\n                  style={{ width: \"100px\" }}\n                  disabled={saving}\n                >\n                  back\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  disabled={paymentLink !== null || saving}\n                  onClick={createLinkClicked}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Create Link\n                </Button>\n              </Grid>\n\n            </Grid>\n\n          </DialogActions>\n\n\n\n        </Dialog>\n      </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport PaymentService from \"./services/PaymentService\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport * as EmailValidator from \"email-validator\";\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport SendIcon from '@material-ui/icons/Send';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport dateformat from 'dateformat'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 999,\n    color: \"#fff\",\n  },\n\n  itemLabel: {\n    color: \"#555\",\n    fontWeight: \"500\",\n    fontSize: \"1rem\"\n  },\n\n  itemData: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n    fontSize: \"1rem\"\n  },\n\n  TextSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ViewPaymentDialog(props) {\n  const classes = useStyles();\n\n  const LinkRef = React.useRef(null)\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [amount, setAmount] = useState(\"\");\n  const [amountError, setAmountError] = useState(false);\n\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [emailError, setEmailError] = React.useState(false);\n  const [phoneError, setPhoneError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [description, setDescription] = React.useState(\"\");\n\n  const [paymentLink, setPaymentLink] = React.useState(null);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [phoneSent, setPhoneSent] = React.useState(false);\n\n  const [refundDone, setRefundDone] = React.useState(false);\n  const [deleteDone, setdeleteDone] = React.useState(false);\n  const [refundTimeStamp, setRefundTimeStamp] = React.useState(null)\n\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const handleCloseDeleteDialog = () =>\n  {\n    setOpenDeleteDialog(false)\n  }\n\n\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false)\n  }\n\n\n\n  React.useEffect(() => {\n    if (props.payment && props.open) {\n      setPaymentLink(buildPaymentLink(props.payment._id))\n      setEmail(props.payment.email || '')\n      setPhone(props.payment.phone || '')\n    }\n\n  }, [props.payment, props.open])\n\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n  };\n\n\n  const amountChanged = (event) => {\n    setAmount(event.target.value)\n    setAmountError(false)\n  }\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setAmount('')\n    setFullname('')\n    setEmail('')\n    setPhone('')\n    setDescription('')\n    setNotes('')\n    setPaymentLink(null)\n    setRefundTimeStamp(null)\n\n    setAmountError(false)\n    setFullnameError(false)\n    setEmailError(false)\n    setPhoneError(false)\n    setSaving(false);\n    setEmailSent(false)\n    setRefundDone(false)\n    setOpenRefundDialog(false)\n    setOpenDeleteDialog(false)\n    setdeleteDone(false)\n    setPhoneSent(false)\n  };\n\n  const createLinkClicked = async () => {\n    if (!validatePayment()) {\n      return\n    }\n\n    try {\n      setSaving(true)\n      const paymentRecord = {\n        amount: amount,\n        fullname: fullname,\n        description: description,\n        notes: notes\n      }\n\n      const res = await PaymentService.createNewPaymentLink(paymentRecord)\n\n      if (res && res.data && res.data.status === \"OK\") {\n        const payment = res.data.payment\n        setPaymentLink(buildPaymentLink(payment._id))\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n        LinkRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n      }\n\n      setSaving(false)\n\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n\n\n  }\n\n  const validatePayment = () => {\n    let error = false\n\n    if (!amount || amount.trim().length === 0 || parseFloat(amount) <= 0) {\n      setAmountError(true)\n      error = true\n    }\n\n    if (!fullname || fullname.trim().length === 0) {\n      setFullnameError(true)\n      error = true\n    }\n\n    return !error\n\n  }\n\n  const buildPaymentLink = (id) => {\n    return `https://londonmedicalclinic.co.uk/medicalexpressclinic/pay/${id}`\n  }\n\n\n  const sendEmailClicked = async () => {\n    if (!email || email.length < 3 || !EmailValidator.validate(email)) {\n      setEmailError(true)\n      return\n    }\n\n    try {\n\n      setSaving(true)\n\n      const res = await PaymentService.sendPaymentLinkEmail(props.payment._id, email)\n      if (res && res.data && res.data.status === \"OK\") {\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n        setEmailSent(true)\n      }\n\n      setSaving(false)\n\n    } catch (err) {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n  const refundPaymentClicked = () => {\n    setOpenRefundDialog(true)\n  }\n\n  const refundPayment = async () => {\n    try {\n      setSaving(true)\n\n      const res = await PaymentService.refundPayment(props.payment._id)\n      setSaving(false)\n      setOpenRefundDialog(false)\n      if (res && res.data && res.data.status === \"OK\") {\n        setRefundDone(true)\n        setRefundTimeStamp(new Date())\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n      }\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n  }\n\n  const deleteClicked = async () => {\n    try {\n      setSaving(true)\n\n      const res = await PaymentService.deletePaymentLink(props.payment._id)\n      setSaving(false)\n      setOpenDeleteDialog(false)\n      if (res && res.data && res.data.status === \"OK\") {\n        setdeleteDone(true)\n        setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n      }\n    } catch (err) {\n      console.error(err)\n      setSaving(false)\n    }\n  }\n\n  const sendTextClicked = async () =>\n  {\n    if (!phone || (phone.trim().length < 10))\n    {\n      setPhoneError(true)\n      return\n    }\n\n    try{\n\n      setSaving(true)\n\n     const res = await PaymentService.sendPaymentLinkTextMessage(props.payment._id, phone)\n     if (res && res.data && res.data.status === \"OK\")\n     {\n       setState(state => ({ ...state, paymentDialogDataChanged: !state.paymentDialogDataChanged }))\n       setPhoneSent(true)     \n     }\n\n     setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      {props.payment && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\" style={{ position: \"relative\" }}>\n              <div style={{ position: \"absolute\", top: \"15px\" }}>\n                {props.payment.paymentInfo && !props.payment.refund && !refundDone && (\n                  <Tooltip title=\"Successful Payment\">\n                    <DoneOutlineIcon style={{ color: \"#009c39\", fontSize: \"2.5rem\" }} />\n                  </Tooltip>\n                )}\n\n                {props.payment.paymentInfo && (props.payment.refund || refundDone) && (\n                  <Tooltip title=\"Refunded Payment\">\n                    <KeyboardReturnIcon style={{ color: \"#f06400\", fontSize: \"2.5rem\" }} />\n                  </Tooltip>\n                )}\n\n              </div>\n\n              <div style={{ position: \"absolute\", top: \"15px\", right: \"15px\" }}>\n                {(props.payment.deleted || deleteDone) && (\n                  <Tooltip title=\"Deleted Payment\">\n                    <DeleteIcon style={{ color: \"#d40000\", fontSize: \"2.5rem\" }} />\n                  </Tooltip>\n                )}\n\n              </div>\n\n\n\n\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <LinkIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Payment Link Info{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent style={(props.payment.deleted || deleteDone) ? { backgroundColor: \"#bbb\" } : {}}\n            >\n              <Grid\n                container\n                justify=\"space-between\"\n                spacing={2}\n                alignItems=\"flex-start\"\n                style={{ marginBottom: \"20px\" }}\n              >\n                {props.payment.paymentInfo && (\n                  <React.Fragment>\n                    <Grid item xs={12}>\n                      <span className={classes.itemLabel} style={{ color: \"#009c39\", marginRight: \"10px\" }}> Square Ref # : </span>\n                      <span className={classes.itemData} style={{ color: \"#009c39\" }}>\n                        {JSON.parse(props.payment.paymentInfo).id}\n                      </span>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <span className={classes.itemLabel} style={{ color: \"#009c39\", marginRight: \"10px\" }}> Payment done at : </span>\n                        <span className={classes.itemData} style={{ color: \"#009c39\" }}>\n                          {dateformat(props.payment.paymentTimeStamp,\"dddd, mmmm dS, yyyy, h:MM:ss TT\")}\n                        </span>\n                    </Grid>  \n                 </React.Fragment>\n                \n                )}\n\n                {props.payment.paymentInfo && !props.payment.refund && !refundDone && (\n                  <Grid item xs={12}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={refundPaymentClicked}\n                    >\n                      Refund Payment\n                    </Button>\n                  </Grid>\n                )}\n\n                {props.payment.paymentInfo && (props.payment.refund || refundDone) && (\n                  <React.Fragment> \n                  <Grid item xs={12}>\n                    <div style={{ fontSize: \"1.1rem\", fontWeight: \"600\", textAlign: \"left\", color: \"#f06400\" }}>\n                      Payment has been Refunded.\n                    </div>\n                  </Grid>\n                    <Grid item xs={12}>\n                        <span className={classes.itemLabel} style={{ color: \"#f06400\", marginRight: \"10px\" }}> Refund done at : </span>\n                        <span className={classes.itemData} style={{ color: \"#f06400\" }}>\n                          {dateformat(props.payment.refundTimeStamp || refundTimeStamp,\"dddd, mmmm dS, yyyy, h:MM:ss TT\")}\n                        </span>\n                    </Grid>  \n                    </React.Fragment>\n              \n                )}\n\n\n\n\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Amount: </span>\n                  <span className={classes.itemData}>\n                    {`£${(\n                      props.payment.amount\n                    ).toLocaleString(\"en-GB\")}`}\n                  </span>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Customer/Payer Name: </span>\n                  <span className={classes.itemData}>\n                    {props.payment.fullname || '-'}\n                  </span>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Description: </span>\n                  <span className={classes.itemData}>\n                    {props.payment.description || '-'}\n                  </span>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <span className={classes.itemLabel}> Notes: </span>\n                  <span className={classes.itemData}>\n                    {props.payment.notes || '-'}\n                  </span>\n                </Grid>\n\n\n                {paymentLink && (\n                  <React.Fragment>\n\n                    <Grid item xs={12}>\n\n                      <div style={{ fontSize: \"1rem\", fontWeight: \"500\", color: \"#333\" }}>\n                        Payment Link URL :\n                    </div>\n\n                      <div style={{ width: \"100%\", overflowWrap: \"break-word\" }} ref={LinkRef}>\n                        <Link style={{ fontSize: \"1rem\", fontWeight: \"500\" }} href={paymentLink} target=\"_blank\" rel=\"noopener\">\n                          {paymentLink}\n                        </Link>\n\n                        <span>\n\n                          <Tooltip title=\"COPY LINK TO CLIPBOARD\">\n                            <IconButton\n                              onClick={() => {\n                                navigator.clipboard.writeText(\n                                  paymentLink\n                                );\n                              }}\n                              aria-label=\"delete\"\n                              className={classes.margin}\n                              size=\"small\"\n                            >\n                              <FileCopyOutlinedIcon\n                                style={{ color: \"#bf9b30\", fontSize: \"1.3rem\", marginLeft: \"10px\" }}\n                              />\n                            </IconButton>\n                          </Tooltip>\n\n                        </span>\n\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        error={emailError}\n                        label=\"Customer Email Address\"\n                        value={email}\n                        onChange={emailChanged}\n                        name=\"email\"\n                        id=\"email-id\"\n                        autoComplete=\"none\"\n                        variant=\"outlined\"\n                        placeholder=\"Enter customer email address\"\n                        InputProps={ (emailSent || props.payment.emailSent) ?  {\n                          endAdornment: <InputAdornment position=\"end\">\n                            <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Email Sent</span>\n                            <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                          </InputAdornment>,\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <AccountCircleIcon style={{color:\"#05acb2\"}}/>\n                            </InputAdornment>\n                          ),\n                        } : {\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <AccountCircleIcon style={{color:\"#05acb2\"}} />\n                            </InputAdornment>\n                          ),\n                        }}\n  \n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <Button\n                        disabled={saving || (props.payment.paymentInfo || props.payment.refund || props.payment.deleted)}\n                        fullWidth\n                        onClick={sendEmailClicked}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        Send Link With Email\n                    </Button>\n                    </Grid>\n\n\n                    <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      error={phoneError}\n                      label=\"Customer Mobile Number\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                      variant=\"outlined\"\n                      placeholder=\"1234567891\"\n                      helperText=\"* Please enter only the mobile number (10 numbers) without the country code. Just UK numbers are accepted.\"\n                      InputProps={ (phoneSent || props.payment.textSent) ?  {\n                        endAdornment: <InputAdornment position=\"end\">\n                          <span style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1rem\", fontWeight:\"500\"}}>Text MSG Sent</span>\n                          <SendIcon style={{marginRight:\"10px\" , color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n                        </InputAdornment>,\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}}/>\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                          </InputAdornment>\n                        ),\n                      } : {\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <PhoneAndroidIcon style={{color:\"#05acb2\"}} />\n                            <span style={{color:\"#05acb2\"}}> (+44) </span> \n                          </InputAdornment>\n                        ),\n                      }}\n\n                    />\n                  </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        disabled={saving || (props.payment.paymentInfo || props.payment.refund || props.payment.deleted)}\n                        fullWidth\n                        onClick={sendTextClicked}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        Send Link With Text Message\n                    </Button>\n                    </Grid>\n\n                    {!props.payment.deleted && !deleteDone && (\n                      <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                        <Button\n                          onClick={() => setOpenDeleteDialog(true)}\n                          variant=\"contained\"\n                          fullWidth\n                          color=\"primary\"\n                          style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                          disabled={saving}\n                        >\n                          Delete This Record\n                        </Button>\n                      </Grid>\n                    )}\n\n                  </React.Fragment>\n                )}\n\n\n              </Grid>\n\n            </DialogContent>\n\n\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={2}\n              >\n\n                <Grid item>\n                  <Button\n                    onClick={handleClose}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    close\n                </Button>\n                </Grid>\n                {/* <Grid item>\n                <Button\n                  disabled={paymentLink !== null || saving}\n                  onClick={createLinkClicked}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Create Link\n                </Button>\n              </Grid> */}\n\n              </Grid>\n            </DialogActions>\n\n\n            <Dialog\n              open={openRefundDialog}\n              onClose={handleCloseRefundDialog}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle style={{ color: \"#bf0000\" }} id=\"alert-dialog-title\">\n                {\"Refund Deposit\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText\n                  style={{ color: \"#333\", fontWeight: \"400\" }}\n                  id=\"alert-dialog-description\"\n                >\n                  Are you sure you want to refund this payment?\n              </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseRefundDialog} color=\"default\">\n                  Back\n              </Button>\n                <Button\n                  onClick={refundPayment}\n                  color=\"secondary\"\n                  style={{ fontWeight: \"600\" }}\n                  variant=\"contained\"\n                  autoFocus\n                >\n                  Yes, Refund Payment\n              </Button>\n              </DialogActions>\n            </Dialog>\n\n\n            <Dialog\n              open={openDeleteDialog}\n              onClose={handleCloseDeleteDialog}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                {\"Delete Record\"}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText\n                  style={{ color: \"#000\", fontWeight: \"500\" }}\n                  id=\"alert-dialog-description\"\n                >\n                  Are you sure you want to delete this record?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                  Back\n                </Button>\n                <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                  Yes, Delete this record\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n          </Dialog>\n\n          <Backdrop className={classes.backdrop} open={saving}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport PaymentService from './services/PaymentService';\nimport PatientDialog from './PatientDialog';\nimport LinkIcon from '@material-ui/icons/Link';\nimport NewPaymentDialog from './NewPaymentDialog';\nimport ViewPaymentDialog from './ViewPaymentDialog';\n\nimport DoneIcon from '@material-ui/icons/Done';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport SendIcon from '@material-ui/icons/Send';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'paid') {\n    return `Successful Payments`;\n  } else if (str === 'refund') {\n    return `Refunded Payments`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'notpaid') {\n    return `Not Yet Paid`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Deleted Records`;\n  } else if (str === 'late') {\n    return `4 Hours Late`;\n  }\n\n  else {\n    return `Payment Links`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'paid') {\n    return <DoneOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'refund') {\n    return <KeyboardReturnIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'notpaid') {\n    return <MoneyOffIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <LinkIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PaymentsTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 120,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n\n            {params.getValue(\"paymentInfo\") && !params.getValue(\"refund\") && (\n              <DoneOutlineIcon style={{color:\"#009c39\", fontSize:\"1.6rem\"}}/>\n            )}\n\n            {params.getValue(\"paymentInfo\") && params.getValue(\"refund\") && (\n              <KeyboardReturnIcon style={{color:\"#f06400\", fontSize:\"1.6rem\"}}/>\n            )}\n            \n            {!params.getValue(\"paymentInfo\") && (params.getValue(\"emailSent\") || params.getValue(\"textSent\")) && (\n              <SendIcon style={{color:\"#008082\", fontSize:\"1.6rem\"}}/>\n            )}\n\n\n\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'timeStamp', headerName: 'Created at', width: 180, valueFormatter: (params) => { \n      return formatTimeStamp(params.value);\n      }\n    },\n\n    { field: 'amount', headerName: 'Amount', width: 150 , valueFormatter: (params) => {\n      return `£${(\n        params.value\n      ).toLocaleString(\"en-GB\")}`\n    },},\n    { field: 'fullname', headerName: 'Customer Name', width: 200 },\n    { field: 'description', headerName: 'Description', width: 250 },\n    { field: 'email', headerName: 'Email', width: 150 },\n    { field: 'phone', headerName: 'Telephone', width: 150 },\n    { field: 'notes', headerName: 'Notes', width: 300 },\n\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = PaymentService.getAllPayments;\n\n    if (props.date === 'deleted') {\n      api = PaymentService.getDeletedPayments;\n    }else if (props.date === 'paid') {\n      api = PaymentService.getPaidPayments;\n    }else if (props.date === 'refund') {\n      api = PaymentService.getRefundPayments;\n    }else if (props.date === 'notpaid') {\n      api = PaymentService.getNotPaidPayments;\n    }else if (props.date === 'late') {\n      api = PaymentService.getLatePayments;\n    }\n\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data.result], cachedBookings: [...res.data.result], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.paymentDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const payment = data.bookings.find(element => element._id === id);\n    if (payment) {\n      setSelectedBooking(payment);\n      setViewDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewPatientClicked = () => {\n    setSelectedPatient(null)\n    setPatientDialogTitle('Register New Patient')\n    setPatientDialogSaveButtonText(\"Save\")\n    setPatientDialogOpen(true)\n  }\n\n  const [selectedPatient, setSelectedPatient] = React.useState(null)\n  const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n  const [patientDialogTitle, setPatientDialogTitle] = React.useState('')\n  const [patientDialogSaveButtonText, setPatientDialogSaveButtonText] = React.useState('')\n\n\n  const [viewDialogOpen, setViewDialogOpen] = React.useState(false)\n\n\n  const handleClosePatientDialog = () => {\n    setPatientDialogOpen(false)\n  }\n\n  const handleCloseViewDialog = () => {\n    setViewDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <div\n                  style={{\n                    fontSize: \"1.2rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                    marginTop : \"-5px\"\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </div>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n      {props.date === \"all\" && (\n            <Grid item md={3}>\n            <div style={{ paddingBottom: \"10px\" }}>\n              <Button\n                // className={classes.ExportToExcelButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={registerNewPatientClicked}\n                startIcon={\n                  <AddIcon />\n                }\n              >\n                Create New Link\n                </Button>\n            </div>\n          </Grid>\n      )}\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      {/* <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      /> */}\n\n      {/* <PatientDialog\n        patient={selectedPatient}\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n        title={patientDialogTitle}\n        saveButtonText={patientDialogSaveButtonText}\n      /> */}\n\n      <NewPaymentDialog\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n      />\n\n      <ViewPaymentDialog\n        payment={selectedBooking}\n        open={viewDialogOpen}\n        handleClose={handleCloseViewDialog}\n      />\n\n\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport PaymentService from './services/PaymentService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  // const seeMoreRecords = (event) => {\n  //   event.preventDefault();\n  //   setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  // }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    PaymentService.getRecentPayments().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data.result, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings.result, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Payments Received</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Recived at</TableCell>        \n            <TableCell>Amount</TableCell>        \n            <TableCell>Customer</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Desctiption</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.paymentTimeStamp)}</TableCell>\n              <TableCell style={{fontWeight:\"600\"}}>{`£${(\n                row.amount\n              ).toLocaleString(\"en-GB\")}`}\n              </TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{row.description}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {/* <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div> */}\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n\n}));\n\nexport default function TotalReceivedPaymentView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getTotalReceivedAmount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}}>\n                    Total Money Received\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n                {data !== null && <div className={classes.countLabel}>\n                {`£${(\n                    data\n                  ).toLocaleString(\"en-GB\")}`}\n                \n                  </div>\n                }\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n\n}));\n\nexport default function TodayReceivedPaymentView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getTodayReceivedAmount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}}>\n                    Today Money Received\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n                {data !== null && <div className={classes.countLabel}>\n                {`£${(\n                    data\n                  ).toLocaleString(\"en-GB\")}`}\n                \n                  </div>\n                }\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n\n}));\n\nexport default function TodayLinksSentView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getTodayLinkSent();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}}>\n                    Today Payment Links Sent\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n                {data !== null && <div className={classes.countLabel}>\n                      {data}                \n                  </div>\n                }\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport PaymentService from \"./services/PaymentService\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   fontSize: \"2rem\",\n   color: theme.palette.secondary.main\n  },\n\n  countLabelRed: {\n    fontSize: \"2rem\",\n    color: \"red\"\n   },\n\n   TitleRed:{\n    color: \"red\"\n   }\n\n\n\n}));\n\nexport default function LatePaymentsView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PaymentService.getLatePayments();\n\n      setData(res.data.result?.length || 0);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            {/* <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={classes.Icon} />\n              </div>\n            </Grid> */}\n            <Grid item>\n                <div style={{width:\"100%\", textAlign:\"center\", fontSize:\"1.5rem\"}} className={data === 0 ? classes.Title : classes.TitleRed}>\n                    4 Hours Late Payments\n                </div>\n            </Grid>\n            <Grid item></Grid>\n            <Grid item>\n              {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\n\n            </Grid>\n          </Grid>\n\n\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\nimport TotalReceivedPaymentView from './TotalReceivedPaymentView';\nimport TodayReceivedPaymentView from './TodayReceivedPaymentView';\nimport TodayLinksSentView from './TodayLinkSentView';\nimport LatePaymentsView from './LatePaymentsView';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getGlobalPath } from \"./../GlobalPath\";\nimport { getMenuId, getMenuIndex } from \"./../MenuList\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\n\n  const history = useHistory();\n\n  const role=\"payment\"\n\n  const gotoLatePayments = () =>\n  {\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'latepaymentsTable'))}`));\n  }\n\n\n  return (\n    <React.Fragment>\n\n      <Grid container spacing={3}>\n        {/* Chart */}\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall}>\n            <TotalReceivedPaymentView/>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall}>\n             <TodayReceivedPaymentView/>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoLatePayments} style={{cursor:\"pointer\"}}>\n              <LatePaymentsView/>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6} lg={3}>\n          <Paper className={fixedHeightPaperSmall}>\n              <TodayLinksSentView/>\n          </Paper>\n        </Grid>\n\n        {/* Recent Bookings */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper} style={{ minHeight: \"250px\" }}>\n            <BookingView />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static searchAllInvoicesByName = (name) =>\n   {\n      return API.post(`/api/medex/invoice/searchallinvoicesbyname`, {search: {name: name}});\n   }\n\n   static searchAllInvoicesByDate = (search) => // search is an object {from: ..., until: ...}\n   {\n      return API.post(`/api/medex/invoice/searchallinvoicesbydate`, {search});\n   }\n\n   static getInvoiceReports = () =>\n   {\n      return API.get(`/api/medex/invoice/getinvoicereports`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/admin/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/admin/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/admin/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/admin/book/getallbookings?limit=${limit}`);\n    }\n\n    static searchAllBookings = (filter) =>\n    {\n      return API.post(`/api/admin/book/searchallbookings`,{filter:filter});\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/admin/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/admin/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport BookingDialog from '../Admin/BookingDialog'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ViewInvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(props.invoice.name.toUpperCase());\n      setSelectedBooking({...props.invoice.booking, clinic: props.invoice.clinic})\n    } else {\n      handleClose()\n    }\n\n    // fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice, props.open]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n    setSelectedBooking(null)\n    setOpenBookingDetailDialog(false)\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n\n  const [openBookingDetailDialog, setOpenBookingDetailDialog] = React.useState(false)\n  const showBookingDetailClicked = () => {\n    setOpenBookingDetailDialog(true)\n  }\n  const handleCloseBookingDetailDialog = () => {\n    setOpenBookingDetailDialog(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  {selectedBooking && (\n                    <Grid item style={{ width: \"100%\" }}>\n                      <Button fullWidth onClick={showBookingDetailClicked} startIcon={<SearchIcon />} color=\"primary\" variant=\"contained\">\n                        Show Booking Detail ...\n                      </Button>\n                    </Grid>\n\n                  )\n                  }\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"0px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      minHeight: \"150px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              {/* <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid> */}\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\",fontSize: \"1.5rem\", }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"700\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1.5rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    close\n                  </Button>\n                </Grid>\n                {/* <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid> */}\n              </Grid>\n            </DialogActions>\n\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openBookingDetailDialog}\n                onClose={handleCloseBookingDetailDialog}\n              />\n\n          </Dialog>\n\n\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"../GlobalState\";\nimport { getMenuIndex } from \"../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"../Admin/DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"../Admin/BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"../Admin/PriceCalculator\";\nimport { corporates } from \"../Admin/Corporates\";\n\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport ViewInvoiceDialog from \"./ViewInvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n  DefaultLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  Summary: {\n    marginTop:\"10px\", \n    padding:\"15px 30px\", \n    border:\"1px solid #ddd\",\n    borderRadius:\"4px\",\n    backgroundColor : \"#333\",\n    color: \"#fff\",\n    fontWeight:\"500\",\n    fontSize: \"1rem\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SearchInvoices(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n        case \"screening\":\n      return classes.ScreeningLabel;\n        \n      default:\n        return classes.DefaultLabel;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n\n  const removeTitle = (_name) =>\n  {\n    let name = _name\n    const titles = [\"Mr\", \"Mrs\", \"Miss\", \"Ms\", \"Dr\"]\n    titles.forEach( title => {\n      if (_name.indexOf(`${title} `) === 0)\n      {\n        name = _name.substring(title.length)\n      }\n    })\n\n    return name\n  }\n\n  const formatPayment = (payment) => {\n    if (!payment)\n    {\n      return \"NONE\";\n    }\n\n    switch(payment)\n    {\n      case \"credit card\":\n        return \"C/CARD\";\n      case \"cash\": \n        return \"CASH\";\n      case \"corporate\":\n          return \"CORP\";\n      default :\n        return \"OTHERS\"        \n    }\n  }\n\n\n  var columns = [];\n\n  columns = [\n    // { field: 'id', headerName: '#', width: 70 },\n\n    {\n      field: \"_id\",\n      headerName: \"Invoice #\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <div\n            style={{ cursor: \"pointer\" }}\n            onClick={(event) => openDetailsDialog(event, params.value, params.getValue(\"clinic\"))}\n          >\n            <span style={{ minWidth: \"60px\", color: \"#00a1c5\", display: \"inline-block\" }}>{params.getValue(\"invoiceNumber\")}</span>\n            <IconButton\n              color=\"primary\"\n            >\n              <SearchIcon />\n            </IconButton>\n          </div>\n        );\n      },\n    },\n\n    {\n      field: \"timeStamp\",\n      headerName: \"Date\",\n      width: 100,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"0.8rem\", fontWeight: \"500\" }}>\n            {formatTimeStamp(params.value)}\n          </span>\n        )\n      },\n    },\n\n    {\n      field: \"grandTotal\",\n      headerName: \"Fee\",\n      align: \"center\",\n      width: 140,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"1rem\", fontWeight: \"500\", color: \"#067500\" }}>\n            {parseFloat(\n              params.value\n            ).toLocaleString(\"en-GB\", {\n              style: \"currency\",\n              currency: \"GBP\",\n            })}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"name\", headerName: \"Patient Name\", width: 200, renderCell: (params) => {\n\n        return (\n          <span style={{ fontSize: \"0.8rem\", fontWeight: \"500\" }}>\n            {removeTitle(params.value)}\n          </span>\n        )\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)} style={{ fontSize: \"0.8rem\" }}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"booking.paidBy\",\n      headerName: \"Payment\",\n      align: \"center\",\n      width: 110,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"0.8rem\" }}>\n            {formatPayment(params.getValue('booking').paidBy)}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"booking.corporate\",\n      headerName: \"Corporate\",\n      align: \"center\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"0.8rem\" }}>\n            {params.getValue('booking').corporate || ''}\n          </span>\n        );\n      },\n    },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: false,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n  const [seeDetailsDialogOpenBloodReport, setSeeDetailsDialogOpenBloodReport] = React.useState(false);\n\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    // const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    // const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    // if (todayStr === timeStampStr) {\n    //   return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    // } else {\n    //   return dateformat(timeStamp, \"mmmm dS yyyy, h:MM:ss TT\");\n    // }\n    return dateformat(timeStamp, \"dd-mm-yyyy\");\n  };\n\n  const loadData = () => {\n    var api = BookService.searchAllInvoicesByName;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(filter)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.result.length; i++) {\n          res.data.result[i] = { ...res.data.result[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data.result],\n          cachedBookings: [...res.data.result],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  };\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n    setSeeDetailsDialogOpenBloodReport(false);\n  };\n\n  const openDetailsDialog = (event, id, clinic) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n    setFilterError(false)\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  const [filterError, setFilterError] = React.useState(false)\n  const doSearch = () => {\n    if (!filter || filter.trim().length < 3) {\n      setFilterError(true)\n      return\n    }\n\n    loadData()\n  }\n\n  const calcTotalAmount = (bookings) => {\n    let amount = 0\n    bookings.forEach(record => {\n      amount += record.grandTotal\n    })\n\n    return amount\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item xs={12}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={4}\n            >\n              <Grid item>\n                <TextField\n                  error={filterError}\n                  variant=\"standard\"\n                  value={filter}\n                  onChange={filterChanged}\n                  id=\"filter\"\n                  label=\"Patient's Name\"\n                  helperText={`You can search the invoices by patient's name ${filterError ? \"- Please Enter at least 3 characters\" : \"\"}`}\n                  name=\"filter\"\n                  autoComplete=\"off\"\n                  style={{ maxWidth: \"300px\" }}\n                  onKeyPress={(event) => {\n                    if (event.key === \"Enter\") {\n                      doSearch();\n                    }\n                  }}\n                />\n              </Grid>\n\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" onClick={doSearch}>\n                  Search in the invoices\n                  </Button>\n              </Grid>\n\n              <Grid item>\n                {data.isFetching && (\n                  <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n                    <CircularProgress color=\"primary\" />\n                  </div>\n                )}\n              </Grid>\n\n            </Grid>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n      </Grid>\n\n      {data.bookings && data.bookings.length > 0 && (\n        <div className={classes.Summary}>\n          <Grid container spacing={4} justify=\"space-between\" alignItems=\"center\">\n            <Grid item>\n              <span style={{width:\"115px\", display:\"inline-block\", color:\"#eee\"}}>Total Records :</span>\n              <span>{data.bookings?.length}</span>\n            </Grid>\n            <Grid item>\n              <span style={{width:\"115px\", display:\"inline-block\", color:\"#eee\"}}>Total FEE :</span>\n              <span>{parseFloat(\n                calcTotalAmount(data.bookings)\n              ).toLocaleString(\"en-GB\", {\n                style: \"currency\",\n                currency: \"GBP\",\n              })}\n              </span>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n\n\n      {data.bookings && data.bookings.length > 0 && (\n        <div style={{ height: 700, width: \"100%\", marginTop: \"0px\" }}>\n          <DataGrid\n            rows={data.bookings}\n            columns={columns}\n            autoPageSize\n            page={page}\n            onPageChange={(params) => {\n              setPage(params.page);\n            }}\n            onSelectionChange={handleSelectionChanged}\n          />\n        </div>\n      )}\n\n      <ViewInvoiceDialog\n        booking={selectedBooking}\n        invoice={selectedBooking}\n        open={seeDetailsDialogOpen}\n        handleClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n\n\n\n      )}\n\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"../GlobalState\";\nimport { getMenuIndex } from \"../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"../Admin/DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"../Admin/BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"../Admin/PriceCalculator\";\n\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport ViewInvoiceDialog from \"./ViewInvoiceDialog\";\n\nimport ExcelJS from \"exceljs/dist/es5/exceljs.browser\";\nimport saveAs from \"file-saver\";\nimport { getCorporates } from \"../Corporates\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: CalendarColors.PCR_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: CalendarColors.GYNAE_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: CalendarColors.GP_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: CalendarColors.STD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: CalendarColors.BLOOD_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: CalendarColors.DermaLabel,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  ScreeningLabel: {\n    color: CalendarColors.SCREENING_COLOR,\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n  DefaultLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  Summary: {\n    marginTop: \"10px\",\n    padding: \"15px 30px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#333\",\n    color: \"#fff\",\n    fontWeight: \"500\",\n    fontSize: \"1rem\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PeriodicReport(props) {\n  const classes = useStyles();\n\n  const [corporates, setCorporates] = React.useState([])\n  React.useEffect( () => {\n    loadCorporates()\n  }, [])\n  const loadCorporates = async () =>\n  {\n    try{\n      const _corps = await getCorporates()\n      setCorporates(_corps)\n      setCorporate(_corps[0])\n    }catch(err)\n    {\n      console.error(err)\n    }\n  }\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n      case \"screening\":\n        return classes.ScreeningLabel;\n\n      default:\n        return classes.DefaultLabel;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [clinic, setClinic] = React.useState('all')\n\n  const [fromDate, setFromDate] = React.useState(null)\n  //   new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  // );\n\n\n  const handleFromDateChange = (date) => {\n    if (!date || date.toString() === \"Invalid Date\") {\n      setFromDateStr('')\n      return\n    }\n\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n    setFromDateError(false)\n  };\n\n  const [untilDate, setUntilDate] = React.useState(null);\n  // new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  // );\n  const handleUntilDateChange = (date) => {\n    if (!date || date.toString() === \"Invalid Date\") {\n      seUntilDateStr('');\n      return\n    }\n\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n    setUntilDateError(false)\n  };\n\n  const [fromDateError, setFromDateError] = React.useState(false)\n  const [untilDateError, setUntilDateError] = React.useState(false)\n\n\n  const [fromDateStr, setFromDateStr] = useState('')\n  const [untilDateStr, seUntilDateStr] = useState('')\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n\n  const removeTitle = (_name) => {\n    let name = _name\n    const titles = [\"Mr\", \"Mrs\", \"Miss\", \"Ms\", \"Dr\"]\n    titles.forEach(title => {\n      if (_name.indexOf(`${title} `) === 0) {\n        name = _name.substring(title.length)\n      }\n    })\n\n    return name\n  }\n\n  const formatPayment = (payment) => {\n    if (!payment)\n    {\n      return \"NONE\";\n    }\n\n    switch(payment)\n    {\n      case \"credit card\":\n        return \"C/CARD\";\n      case \"cash\": \n        return \"CASH\";\n      case \"corporate\":\n          return \"CORP\";\n      default :\n        return \"OTHERS\"        \n    }\n  }\n\n  var columns = [];\n\n  columns = [\n    // { field: 'id', headerName: '#', width: 70 },\n\n    {\n      field: \"_id\",\n      headerName: \"Invoice #\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <div\n            style={{ cursor: \"pointer\" }}\n            onClick={(event) => openDetailsDialog(event, params.value, params.getValue(\"clinic\"))}\n          >\n            <span style={{ minWidth: \"60px\", color: \"#00a1c5\", display: \"inline-block\" }}>{params.getValue(\"invoiceNumber\")}</span>\n            <IconButton\n              color=\"primary\"\n            >\n              <SearchIcon />\n            </IconButton>\n          </div>\n        );\n      },\n    },\n\n    {\n      field: \"timeStamp\",\n      headerName: \"Date\",\n      width: 100,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"0.8rem\", fontWeight: \"500\" }}>\n            {formatTimeStamp(params.value)}\n          </span>\n        )\n      },\n    },\n\n    {\n      field: \"grandTotal\",\n      headerName: \"Fee\",\n      align: \"center\",\n      width: 140,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"1rem\", fontWeight: \"500\", color: \"#067500\" }}>\n            {parseFloat(\n              params.value\n            ).toLocaleString(\"en-GB\", {\n              style: \"currency\",\n              currency: \"GBP\",\n            })}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"name\", headerName: \"Patient Name\", width: 200, renderCell: (params) => {\n\n        return (\n          <span style={{ fontSize: \"0.8rem\", fontWeight: \"500\" }}>\n            {removeTitle(params.value)}\n          </span>\n        )\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)} style={{ fontSize: \"0.8rem\" }}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"booking.paidBy\",\n      headerName: \"Payment\",\n      align: \"center\",\n      width: 110,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"0.8rem\" }}>\n            {formatPayment(params.getValue('booking').paidBy)}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"booking.corporate\",\n      headerName: \"Corporate\",\n      align: \"center\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <span style={{ fontSize: \"0.8rem\" }}>\n            {params.getValue('booking').corporate || ''}\n          </span>\n        );\n      },\n    },\n  ];\n\n  const [exportingToExcel, setExportingToExcel] = React.useState(false)\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: false,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n  const [seeDetailsDialogOpenBloodReport, setSeeDetailsDialogOpenBloodReport] = React.useState(false);\n\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    // const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    // const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    // if (todayStr === timeStampStr) {\n    //   return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    // } else {\n    //   return dateformat(timeStamp, \"mmmm dS yyyy, h:MM:ss TT\");\n    // }\n    return dateformat(timeStamp, \"dd-mm-yyyy\");\n  };\n\n  const loadData = () => {\n    var api = BookService.searchAllInvoicesByDate;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n    const search = {\n      from: fromDate,\n      until: untilDate,\n      clinic: clinic,\n      corporate: justCorporate ? corporate : null\n    }\n\n    const currentPromise = api(search)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.result.length; i++) {\n          res.data.result[i] = { ...res.data.result[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data.result],\n          cachedBookings: [...res.data.result],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  };\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n    setSeeDetailsDialogOpenBloodReport(false);\n  };\n\n  const openDetailsDialog = (event, id, clinic) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n    setFilterError(false)\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n   ExportToExcel();\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  const [filterError, setFilterError] = React.useState(false)\n\n  const validateData = () => {\n    let error = false\n    if (!fromDateStr) {\n      setFromDateError(true)\n      error = true\n    }\n    if (!untilDateStr) {\n      setUntilDateError(true)\n      error = true\n    }\n\n    return !error\n  }\n\n  const doSearch = () => {\n\n    if (!validateData())\n      return\n\n    loadData()\n  }\n\n  const calcTotalAmount = (bookings) => {\n    let amount = 0\n    bookings.forEach(record => {\n      amount += record.grandTotal\n    })\n\n    return amount\n  }\n\n  const ExportToExcel = async () => {\n    try{\n      setExportingToExcel(true)  \n      const wb = new ExcelJS.Workbook()\n\n      const worksheet = wb.addWorksheet()\n\n      worksheet.properties.defaultRowHeight = 15;\n      worksheet.properties.defaultColWidth = 15;\n  \n      const row1 = worksheet.getRow(1)\n      row1.getCell(1).value = `MEDICAL EXPRESS CLINIC PERIODIC REPORT : ${fromDateStr} | ${untilDateStr}`\n     \n      const row2 = worksheet.getRow(2)\n      row2.getCell(1).value =  `TOTAL RECORDS :`\n      row2.getCell(2).value =  `${data.bookings.length}`\n      row2.getCell(2).font = { name: 'Calibri', family: 4, size: 14, bold: true };\n\n  \n      const row3 = worksheet.getRow(3)\n      row3.getCell(1).value = `TOTAL FEE :`\n\n      row3.getCell(2).value = `${parseFloat(\n        calcTotalAmount(data.bookings)\n      ).toLocaleString(\"en-GB\", {\n        style: \"currency\",\n        currency: \"GBP\",\n      })}`\n      row3.getCell(2).font = { name: 'Calibri', family: 4, size: 14, bold: true };\n\n\n\n      const row4 = worksheet.getRow(5)\n      row4.height = 25\n      const columns = [\"Invoice #\", \"Date\", \"Fee\" , \"Patient Name\", \"Clinic\", \"Payment\", \"Corporate\"]\n      \n      columns.forEach((col, index) =>\n          {\n              row4.getCell(index+1).value = col;\n              row4.getCell(index+1).font = { name: 'Calibri', family: 4, size: 10, bold: true };\n          })\n  \n      const offset = 6\n\n      if (data.bookings && data.bookings.length > 0)\n      {\n          data.bookings.forEach((invoice, index) => {\n              worksheet.getRow(offset + index).height = 30\n  \n              worksheet.getRow(offset + index).getCell(1).value = invoice.invoiceNumber\n              worksheet.getRow(offset + index).getCell(1).font = { name: 'Calibri', family: 4, size: 12, bold: false };\n\n              worksheet.getRow(offset + index).getCell(2).value = dateformat(invoice.timeStamp,'dd/mm/yyyy')\n              worksheet.getRow(offset + index).getCell(2).font = { name: 'Calibri', family: 4, size: 12, bold: false };\n\n              worksheet.getRow(offset + index).getCell(3).value = `${parseFloat(\n                invoice.grandTotal\n              ).toLocaleString(\"en-GB\", {\n                style: \"currency\",\n                currency: \"GBP\",\n              })}`\n              worksheet.getRow(offset + index).getCell(3).font = { name: 'Calibri', family: 4, size: 12, bold: false };\n\n              worksheet.getRow(offset + index).getCell(4).value = removeTitle(invoice.name).toUpperCase()\n              worksheet.getRow(offset + index).getCell(4).font = { name: 'Calibri', family: 4, size: 12, bold: false };\n\n              worksheet.getRow(offset + index).getCell(5).value = invoice.clinic.toUpperCase()\n              worksheet.getRow(offset + index).getCell(5).font = { name: 'Calibri', family: 4, size: 12, bold: false };\n\n              worksheet.getRow(offset + index).getCell(6).value = formatPayment(invoice.booking.paidBy).toUpperCase()\n              worksheet.getRow(offset + index).getCell(6).font = { name: 'Calibri', family: 4, size: 12, bold: false };\n\n              worksheet.getRow(offset + index).getCell(7).value = invoice.booking.corporate\n              worksheet.getRow(offset + index).getCell(7).font = { name: 'Calibri', family: 4, size: 12, bold: false };              \n          })\n      }\n  \n\n\n\n      const buf = await wb.xlsx.writeBuffer()\n\n      saveAs(new Blob([buf]), `MEDEX-REPORT-${clinic.toUpperCase()}-${fromDateStr}-${untilDateStr}.xlsx`)\n\n      setExportingToExcel(false)  \n    }catch(err)\n    {\n      console.log(err)\n      setExportingToExcel(false)  \n    }\n\n  }\n\n  return (\n    <React.Fragment>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n\n        <div style={{ padding: \"0px 10px 20px 10px\", border: \"2px solid #ddd\", borderRadius: \"8px\", backgroundColor: \"#fff\" }}>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <KeyboardDatePicker\n                error={fromDateError}\n                autoOk={true}\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-until\"\n                label=\"From\"\n                value={fromDate}\n                onChange={handleFromDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <KeyboardDatePicker\n                error={untilDateError}\n                autoOk={true}\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-until\"\n                label=\"Until\"\n                value={untilDate}\n                onChange={handleUntilDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <FormControl style={{ marginTop: \"5px\", width: \"150px\" }}>\n                <InputLabel id=\"demo-simple-select-label\">Clinic</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={clinic}\n                  onChange={(event) => setClinic(event.target.value)}\n                >\n                  <MenuItem value={'all'}>All Clinics</MenuItem>\n                  <MenuItem value={'pcr'}>PCR</MenuItem>\n                  <MenuItem value={'gynae'}>Gynae</MenuItem>\n                  <MenuItem value={'gp'}>GP</MenuItem>\n                  <MenuItem value={'std'}>STD</MenuItem>\n                  <MenuItem value={'blood'}>Blood</MenuItem>\n                  <MenuItem value={'screening'}>Screening</MenuItem>\n                  <MenuItem value={'derma'}>Derma</MenuItem>\n\n                </Select>\n              </FormControl>\n            </Grid>\n\n\n\n            <Grid item>\n              <FormControlLabel style={{marginTop:\"30px\"}}\n                control={\n                  <Switch\n                    checked={justCorporate}\n                    onChange={justCorporateChanged}\n                    name=\"justCorporate\"\n                  />\n                }\n                label=\"Corporate\"\n              />\n            </Grid>\n\n            {justCorporate && (\n              <Grid item>\n                <FormControl\n                  style={{ marginTop: \"20px\", width: \"150px\" }}\n                  className={classes.formControl}\n                >\n                  <Select\n                    labelId=\"select-corporate\"\n                    id=\"select-corporate-id\"\n                    value={corporate}\n                    onChange={corporateChanged}\n                  >\n                    {corporates.map((element) => (\n                      <MenuItem value={element}>{`${element}`}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n\n            <Grid item xs={8}>\n              <Button disabled={data.isFetching} fullWidth style={{ marginTop: \"0px\" }} variant=\"contained\" color=\"primary\" onClick={doSearch}>\n                Generate Report\n              </Button>\n            </Grid>\n\n            {data.isFetching && (\n              <Grid item>\n                <div style={{ width: \"100%\", paddingTop: \"0px\" }}>\n                  <CircularProgress color=\"primary\" />\n                </div>\n              </Grid>\n            )}\n\n            {!data.isFetching && data.bookings && data.bookings.length > 0 && (\n              <Grid item xs={3}>\n                <div>\n                  <Button\n                    disabled={exportingToExcel}\n                    className={classes.ExportToExcelButton}\n                    variant=\"outlined\"\n                    color=\"default\"\n                    onClick={handleExcelButtonClicked}\n                    startIcon={\n                      <FontAwesomeIcon\n                        style={{ color: \"#009900\" }}\n                        icon={faFileExcel}\n                      />\n                    }\n                  >\n                    Save as Excel file\n                  </Button>\n                </div>\n              </Grid>\n            )}\n\n\n\n\n          </Grid>\n        </div>\n\n\n        {data.bookings && data.bookings.length > 0 && (\n          <div className={classes.Summary}>\n            <Grid container spacing={4} justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ width: \"115px\", display: \"inline-block\", color: \"#eee\" }}>Total Records :</span>\n                <span>{data.bookings?.length}</span>\n              </Grid>\n              <Grid item>\n                <span style={{ width: \"115px\", display: \"inline-block\", color: \"#eee\" }}>Total FEE :</span>\n                <span style={{ fontWeight: \"700\" }}>{parseFloat(\n                  calcTotalAmount(data.bookings)\n                ).toLocaleString(\"en-GB\", {\n                  style: \"currency\",\n                  currency: \"GBP\",\n                })}\n                </span>\n              </Grid>\n            </Grid>\n          </div>\n        )}\n\n\n        {data.bookings && data.bookings.length > 0 && (\n          <div style={{ height: 700, width: \"100%\", marginTop: \"0px\" }}>\n            <DataGrid\n              rows={data.bookings}\n              columns={columns}\n              autoPageSize\n              page={page}\n              onPageChange={(params) => {\n                setPage(params.page);\n              }}\n              onSelectionChange={handleSelectionChanged}\n            />\n          </div>\n        )}\n\n        <ViewInvoiceDialog\n          booking={selectedBooking}\n          invoice={selectedBooking}\n          open={seeDetailsDialogOpen}\n          handleClose={handleCloseSeeDetaisDialog}\n        />\n\n      </MuiPickersUtilsProvider>\n\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, CircularProgress, Grid, TextField } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport CorporateService from '../services/CorporateService';\n\nexport default function CorporatesList() {\n\n    const [corporates, setCorporates] = React.useState(\"\")\n    const [saving, setSaving] = React.useState(false)\n    const [loaded, setLoaded] = React.useState(false)\n    const [savingDone, setSavingDone] = React.useState(false)\n\n    useEffect(() => {\n        loadData()\n    }, [])\n\n    const loadData = async () => {\n        try {\n            const res = await CorporateService.getCorporates()\n            if (res.data.status === \"OK\") {\n                setCorporates(res.data.result)\n                setLoaded(true)\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const corporatesChanged = (event) => {\n        setCorporates(event.target.value)\n    }\n\n    const saveClicked = async () => {\n        try {\n            setSaving(true)\n\n            await CorporateService.updateCorporates(corporates)\n\n            setSaving(false)\n            setSavingDone(true)\n        } catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n    return (\n        <React.Fragment>\n\n            {loaded && (\n\n\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Alert severity=\"info\" style={{ fontSize: \"1rem\" }}>\n                            Please enter each corporate in a new line.\n                        </Alert>\n                    </Grid>\n\n                    <Grid item xs={12} md={6}>\n                        <TextField\n                            disabled={saving}\n                            value={corporates}\n                            onChange={corporatesChanged}\n                            multiline\n                            rows={20}\n                            label=\"Corporates List\"\n                            fullWidth\n                            variant=\"outlined\"\n                            inputProps={{\n                                style: {\n                                    lineHeight: \"1.8rem\"\n                                },\n                            }}\n                        ></TextField>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} md={6}>\n                        <Grid container spacing={2}>\n                            <Grid item>\n                                <Button disabled={saving} variant=\"contained\" color=\"primary\" onClick={saveClicked}>\n                                    Save Changes\n                                </Button>\n                            </Grid>\n                            {saving && (\n                                <Grid item>\n                                    <div style={{ width: \"100%\", paddingTop: \"0px\" }}>\n                                        <CircularProgress color=\"primary\" />\n                                    </div>\n                                </Grid>\n                            )}\n\n                            {savingDone && !saving && (\n                                <Grid item xs={12}>\n                                    <div>\n                                        <Alert severity=\"success\" style={{ fontSize: \"1rem\", fontWeight: \"500\" }}>\n                                            Success! - Your changes have been saved successfully.\n                                        </Alert>\n                                    </div>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            )}\n        </React.Fragment>\n    );\n}\n\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\n\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip as TooltipCharts, Legend, ResponsiveContainer } from 'recharts';\nimport { CalendarColors } from '../Admin/calendar-admin/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  Title: {\n    fontSize: \"1.5rem\",\n    color: theme.palette.primary.main,\n    fontWeight: \"500\",\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n\n  Arrow: {\n    fontSize: \"2rem\",\n    color: theme.palette.primary.main,\n    fontWeight: \"500\",\n  },\n\n  ArrowRight: {\n    fontSize: \"2rem\",\n    color: theme.palette.primary.main,\n    fontWeight: \"500\",\n  },\n\n  TotalAmount: {\n    fontSize: \"1.5rem\",\n    backgroundColor: theme.palette.primary.dark,\n    fontWeight: \"500\",\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: \"10px\",\n    color: \"#fff\",\n    borderRadius: \"8px\",\n    letterSpacing: \"5px\"\n  },\n\n  content: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    fontWeight: \"500\",\n  },\n\n  primaryColor: {\n    color: theme.palette.primary.main,\n    fontWeight: \"500\",\n  }\n\n\n}));\n\nexport default function MonthlyChart(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [month, setMonth] = React.useState(props.defaultMonth || dateformat(new Date(), \"mmmm-yyyy\"));\n  const [data, setData] = React.useState([])\n\n  const [chartData, setChartData] = React.useState([])\n\n  const [activeIndex, setActiveIndex] = React.useState(0)\n\n\n\n  useEffect(() => {\n    loadData()\n  }, []);\n\n  useEffect(() => {\n    if (data && data.length > 0) {\n      loadChart()\n    }\n  }, [month, data]);\n\n  const loadChart = () => {\n    const currentData = data[getMonthIndex()] ? data[getMonthIndex()].data : {pcr:0,gynae:0,gp:0,std:0,blood:0,screening:0,derma:0}\n    let _chartData = []\n    _chartData.push({\n      name: \"PCR\",\n      Income: currentData.pcr\n    })\n    _chartData.push({\n      name: \"GYNAE\",\n      Income: currentData.gynae\n    })\n    _chartData.push({\n      name: \"GP\",\n      Income: currentData.gp\n    })\n    _chartData.push({\n      name: \"STD\",\n      Income: currentData.std\n    })\n    _chartData.push({\n      name: \"BLOOD\",\n      Income: currentData.blood\n    })\n    _chartData.push({\n      name: \"SCREENING\",\n      Income: currentData.screening\n    })\n    _chartData.push({\n      name: \"DERMA\",\n      Income: currentData.derma\n    })\n\n    setChartData(_chartData)\n\n  }\n\n  const loadData = async () => {\n    try {\n      const res = await BookService.getInvoiceReports()\n      setData(JSON.parse(res.data.result))\n\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const goNext = () => {\n    const monthIndex = data.findIndex(e => e.month === month);\n    if (monthIndex < data.length - 1) {\n      setMonth(data[monthIndex + 1].month)\n    }\n  }\n\n  const goPrevious = () => {\n    const monthIndex = data.findIndex(e => e.month === month);\n    if (monthIndex > 0) {\n      setMonth(data[monthIndex - 1].month)\n    }\n  }\n\n  const getMonthIndex = () => {\n    return data.findIndex(e => e.month === month);\n  }\n\n  const barClicked = (_data, _index) => {\n    setActiveIndex(_index)\n  }\n\n  const getColor = (index) => {\n    switch (index) {\n      case 0:\n        return CalendarColors.PCR_COLOR;\n      case 1:\n        return CalendarColors.GYNAE_COLOR;\n      case 2:\n        return CalendarColors.GP_COLOR;\n      case 3:\n        return CalendarColors.STD_COLOR;\n      case 4:\n        return CalendarColors.BLOOD_COLOR;\n      case 5:\n        return CalendarColors.SCREENING_COLOR;\n      case 6:\n        return CalendarColors.DERMA_COLOR;\n\n      default:\n        return \"#777\";\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {data && data.length > 0 && chartData && chartData.length > 0 && (\n        <>\n          <Grid container spacing={2} justify=\"center\" alignItems=\"center\" style={{ width: \"100%\" }}>\n            <Grid item xs={2}>\n              <Tooltip title=\"Previous Month\">\n                <IconButton onClick={goPrevious} disabled={getMonthIndex() === 0}>\n                  <ArrowBackIosIcon className={classes.Arrow} style={getMonthIndex() === 0 ? { color: \"#ddd\" } : {}} />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item xs={8}>\n              <div className={classes.Title}>{month.replace(\"-\", \" \")}</div>\n            </Grid>\n            <Grid item xs={2}>\n              <div style={{width:\"100%\", display:\"flex\", justifyContent:\"flex-end\"}}>\n                <Tooltip title=\"Next Month\">\n                  <IconButton onClick={goNext} disabled={getMonthIndex() === data.length - 1}>\n                    <ArrowForwardIosIcon className={classes.ArrowRight} style={getMonthIndex() === data.length - 1 ? { color: \"#ddd\" } : {}} />\n                  </IconButton>\n                </Tooltip>\n              </div>\n            </Grid>\n          </Grid>\n\n\n          <div className={classes.TotalAmount}>\n            <Grid container spacing={1} justify=\"center\" alignItems=\"center\" style={{ width: \"100%\" }}>\n              <Grid item xs={12}>\n                <div style={{fontSize:\"0.95rem\", letterSpacing: \"1px\", color:\"#f1f1f1\"}}>\n                  Total Income:\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n\n                {data[getMonthIndex()] ? `${parseFloat(\n                  data[getMonthIndex()].data.total\n                ).toLocaleString(\"en-GB\", {\n                  style: \"currency\",\n                  currency: \"GBP\",\n                })}` : '£0.00' }\n              </Grid>\n            </Grid>\n          </div>\n\n          <div style={{ marginTop: \"30px\" }}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart width={900} height={300} data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <TooltipCharts />\n              {/* <Legend /> */}\n              <Bar dataKey=\"Income\" onClick={barClicked}>\n                {chartData.map((entry, index) => (\n                  <Cell cursor=\"pointer\" fill={getColor(index)} key={`cell-${index}`} />\n                ))}\n              </Bar>\n            </BarChart>\n            </ResponsiveContainer>\n          </div>\n          <p className={classes.content}>{`Income of \"${chartData[activeIndex].name}\":`} <span className={classes.primaryColor}> {`${parseFloat(chartData[activeIndex].Income).toLocaleString(\"en-GB\", { style: \"currency\", currency: \"GBP\", })}`}</span> </p>\n          <span style={{color:\"#777\"}}>* Click on each bar to view the details.</span>\n\n        </>\n      )}\n\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport MonthlyChart from './MonthlyChart';\nimport dateformat from 'dateformat';\n\nconst useStyles = makeStyles((theme) => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    // height: 400,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const getPrevMonth = () =>\n  {\n    const today = new Date()\n    const prevMonth = new Date(today.getTime() - (today.getDate() + 1) * 24 * 60 * 60 * 1000)\n    return prevMonth\n  }\n\n  return (\n    <React.Fragment>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={fixedHeightPaper}>\n            <MonthlyChart defaultMonth={`${dateformat(getPrevMonth(),'mmmm-yyyy')}`}/>\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport CallIcon from '@material-ui/icons/Call';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\n\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport SendIcon from '@material-ui/icons/Send';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport BusinessIcon from '@material-ui/icons/Business';\n\n/// PCR ------------------\nimport FindByRef from \"./PCR/FindByRef\";\nimport BookingTable from \"./PCR/BookingTable\";\nimport DashboardPreview from \"./PCR/DashboardPreview\";\nimport UnmatchedRecords from \"./PCR/UnmatchedRecords\";\n// import CalendarView from \"./PCR/calendar/CalendarView\";\nimport PCRCalendarView from \"./PCR/calendar-admin/CalendarView\";\n//-----------------------\n\n/// Gynae -------------------\nimport GynaeBookingTable from \"./Gynae/BookingTable\";\nimport GynaeDashboardPreview from \"./Gynae/DashboardPreview\";\nimport GynaeFindByRef from \"./Gynae/FindByRef\";\nimport GynaeCalendarView from \"./Gynae/calendar-admin/CalendarView\";\n//----------------------------\n\n/// GP -------------------\nimport GPBookingTable from \"./GP/BookingTable\";\nimport GPDashboardPreview from \"./GP/DashboardPreview\";\nimport GPFindByRef from \"./GP/FindByRef\";\nimport GPCalendarView from \"./GP/calendar-admin/CalendarView\";\n//----------------------------\n\n/// STD -------------------\nimport STDBookingTable from \"./STD/BookingTable\";\nimport STDDashboardPreview from \"./STD/DashboardPreview\";\nimport STDFindByRef from \"./STD/FindByRef\";\nimport STDCalendarView from \"./STD/calendar-admin/CalendarView\";\n//----------------------------\n\n/// Blood -------------------\nimport BloodBookingTable from \"./Blood/BookingTable\";\nimport BloodDashboardPreview from \"./Blood/DashboardPreview\";\nimport BloodFindByRef from \"./Blood/FindByRef\";\nimport BloodCalendarView from \"./Blood/calendar-admin/CalendarView\";\nimport BloodUnmatchedRecords from \"./Blood/UnmatchedRecords\";\nimport BloodMatchedRecords from \"./Blood/MatchedRecords\";\nimport BloodArchivedRecords from \"./Blood/ArchivedRecords\";\nimport SentBloodRecords from \"./Blood/SentRecords\";\n\n//----------------------------\n\n/// Derma -------------------\nimport DermaBookingTable from \"./Derma/BookingTable\";\nimport DermaDashboardPreview from \"./Derma/DashboardPreview\";\nimport DermaFindByRef from \"./Derma/FindByRef\";\nimport DermaCalendarView from \"./Derma/calendar-admin/CalendarView\";\n//----------------------------\n\n/// Screening -------------------\nimport ScreeningBookingTable from \"./Screening/BookingTable\";\nimport ScreeningDashboardPreview from \"./Screening/DashboardPreview\";\nimport ScreeningFindByRef from \"./Screening/FindByRef\";\nimport ScreeningCalendarView from \"./Screening/calendar-admin/CalendarView\";\n//----------------------------\n\n\n\n// Admin ----------------\nimport AdminDashBoardPreview from \"./DashboardPreview\";\nimport AdminFindByRef from \"./Admin/FindByRef\";\nimport AdminBookingTable from \"./Admin/BookingTable\";\nimport AdminCalendarView from \"./Admin/calendar-admin/CalendarView\";\nimport SearchBookingTable from \"./Admin/SearchBookingTable\";\n\n\n// Payment ----------------\nimport PaymentsTable from \"./Payment/PaymentsTable\";\nimport PaymentsDashboard from \"./Payment/DashboardPreview\"\n\n//---------------\n\n// Reports ----------------\nimport SearchInvoices from \"./Reports/SearchInvoices\"\nimport PeriodicReport from \"./Reports/PeriodicReport\";\nimport CorporatesList from \"./Reports/CorporatesList\";\nimport ReportsDashboard from \"./Reports/DashboardPreview\"\n\n//---------------\n\n\n\nimport LinkIcon from '@material-ui/icons/Link';\n\nexport const MenuList_Reports = [\n  {\n    index: 0,\n    id: `dashboard`,\n    title: `Dashboard`,\n    icon: <DashboardIcon />,\n  },\n  {\n    index: 1,\n    id: `periodicReport`,\n    title: `Periodic Report`,\n    icon: <EventNoteIcon />,\n  },\n  {\n    index: 2,\n    id: `searchInvoices`,\n    title: `Search Invoices`,\n    icon: <SearchIcon />,\n  },\n  {\n    index: 3,\n    id: `corporates`,\n    title: `Corporates List`,\n    icon: <BusinessIcon />,\n  },\n\n\n]\n\n\n//---------------\n\n\nexport const MenuList_Payment = [\n  {\n    index: 0,\n    id: `dashboard`,\n    title: `Dashboard`,\n    icon: <DashboardIcon />,\n  },\n  {\n    index: 1,\n    id: `paymentsTable`,\n    title: `Payment Links`,\n    icon: <LinkIcon />,\n  },\n  {\n    index: 2,\n    id: `paidpaymentsTable`,\n    title: `Successful Payments`,\n    icon: <DoneOutlineIcon />,\n  },\n  {\n    index: 3,\n    id: `latepaymentsTable`,\n    title: `4 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n\n\n  {\n    index: 4,\n    id: `notyetPaid`,\n    title: `Not Yet Paid`,\n    icon: <MoneyOffIcon />,\n  },\n  {\n    index: 5,\n    id: `refundpaymentsTable`,\n    title: `Refunded Payments`,\n    icon: <KeyboardReturnIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedpaymentsTable`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n]\n\n\n//---------------\n\nexport const MenuList_Admin = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Gynae = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_GP = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_STD = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Blood = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `bloodMatchedRecords`,\n    title: `Matched Results`,\n    icon: <DoneOutlineIcon />,\n  },\n  {\n    index: 8,\n    id: `bloodUnatchedRecords`,\n    title: `Unmatched Results`,\n    icon: <WarningIcon />,\n  },\n\n  {\n    index: 9,\n    id: `bloodArchived`,\n    title: `Archived Results`,\n    icon: <ArchiveIcon />,\n  },\n\n  {\n    index: 10,\n    id: `bloodSent`,\n    title: `Sent Results`,\n    icon: <SendRoundedIcon />,\n  },\n\n\n\n  {\n    index: 11,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 12, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 13, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_PCR = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `completedBookings`,\n    title: `Completed Bookings`,\n    icon: <PlaylistAddCheckIcon />,\n  },\n  {\n    index: 8,\n    id: `positiveBookings`,\n    title: `Positive Results`,\n    icon: <AddCircleOutlineIcon />,\n  },\n  {\n    index: 9,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 10,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 11,\n    id: `trBookings`,\n    title: `TR Bookings`,\n    icon: <AirplanemodeActiveIcon />,\n  },\n  {\n    index: 12,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n  {\n    index: 13,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  // {\n  //   index: 14,\n  //   id: `adminCalendarView`,\n  //   title: `Admin Calendar`,\n  //   icon: <EventNoteIcon />,\n  // },\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 16, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Derma = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Screening = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  { index: 1, id: `pendingBookings`, title: `Pending Bookings`, icon: <AddAlertIcon /> },\n  { index: 2, id: `tbcBookings`, title: `Patients TBC`, icon: <CallIcon /> },\n\n  {\n    index: 3,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 4,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 5,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 6,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 7,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 8,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 9,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 10, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 11, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\n\n\nexport const MenuList_PCRLAB = [\n  {\n    index: 0,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  {\n    index: 1,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 2,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n\n  {\n    index: 3,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n];\n\nexport const getMenuContent = (role, index) => {\n  if (role === \"pcr\") {\n    switch (index) {\n      case 0:\n        return <DashboardPreview />;\n      case 1:\n        return <BookingTable date=\"recent\" />;\n      case 2:\n        return <BookingTable date=\"today\" />;\n      case 3:\n        return <BookingTable date=\"live\" />;\n      case 4:\n        return <BookingTable date=\"old\" />;\n      case 5:\n        return <BookingTable date=\"future\" />;\n      case 6:\n        return <BookingTable date=\"all\" />;\n      case 7:\n        return <BookingTable date=\"completed\" />;\n      case 8:\n        return <BookingTable date=\"positive\" />;\n      case 9:\n        return <BookingTable date=\"late\" />;\n      case 10:\n        return <BookingTable date=\"deleted\" />;\n      case 11:\n        return <BookingTable date=\"tr\" />;\n      case 12:\n        return <UnmatchedRecords />;\n      case 13:\n        //   return <CalendarView />;\n        // case 14:\n        return <PCRCalendarView />;\n      case 15:\n        return <FindByRef />;\n      case 16:\n        return <SearchBookingTable />\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"pcrlab\") {\n    switch (index) {\n      case 0:\n        return <BookingTable date=\"live\" />;\n      case 1:\n        return <BookingTable date=\"late\" />;\n      case 2:\n        return <UnmatchedRecords />;\n      case 3:\n        return <PCRCalendarView />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"gynae\") {\n    switch (index) {\n      case 0:\n        return <GynaeDashboardPreview />;\n      case 1:\n        return <GynaeBookingTable date=\"recent\" />;\n      case 2:\n        return <GynaeBookingTable date=\"today\" />;\n      case 3:\n        return <GynaeBookingTable date=\"old\" />;\n      case 4:\n        return <GynaeBookingTable date=\"future\" />;\n      case 5:\n        return <GynaeBookingTable date=\"all\" />;\n      case 6:\n        return <GynaeBookingTable date=\"deleted\" />;\n      case 7:\n        return <GynaeCalendarView />;\n      case 8:\n        return <GynaeFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"gp\") {\n    switch (index) {\n      case 0:\n        return <GPDashboardPreview />;\n      case 1:\n        return <GPBookingTable date=\"recent\" />;\n      case 2:\n        return <GPBookingTable date=\"today\" />;\n      case 3:\n        return <GPBookingTable date=\"old\" />;\n      case 4:\n        return <GPBookingTable date=\"future\" />;\n      case 5:\n        return <GPBookingTable date=\"all\" />;\n      case 6:\n        return <GPBookingTable date=\"deleted\" />;\n      case 7:\n        return <GPCalendarView />;\n      case 8:\n        return <GPFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"std\") {\n    switch (index) {\n      case 0:\n        return <STDDashboardPreview />;\n      case 1:\n        return <STDBookingTable date=\"recent\" />;\n      case 2:\n        return <STDBookingTable date=\"today\" />;\n      case 3:\n        return <STDBookingTable date=\"old\" />;\n      case 4:\n        return <STDBookingTable date=\"future\" />;\n      case 5:\n        return <STDBookingTable date=\"all\" />;\n      case 6:\n        return <STDBookingTable date=\"deleted\" />;\n      case 7:\n        return <STDCalendarView />;\n      case 8:\n        return <STDFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"blood\") {\n    switch (index) {\n      case 0:\n        return <BloodDashboardPreview />;\n      case 1:\n        return <BloodBookingTable date=\"recent\" />;\n      case 2:\n        return <BloodBookingTable date=\"today\" />;\n      case 3:\n        return <BloodBookingTable date=\"old\" />;\n      case 4:\n        return <BloodBookingTable date=\"future\" />;\n      case 5:\n        return <BloodBookingTable date=\"all\" />;\n      case 6:\n        return <BloodBookingTable date=\"deleted\" />;\n      case 7:\n        return <BloodMatchedRecords />;\n\n      case 8:\n        return <BloodUnmatchedRecords />;\n      case 9:\n        return <BloodArchivedRecords />;\n\n      case 10:\n        return <SentBloodRecords />;\n\n      case 11:\n        return <BloodCalendarView />;\n      case 12:\n        return <BloodFindByRef />;\n      case 13:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"admin\") {\n    switch (index) {\n      case 0:\n        return <AdminDashBoardPreview />;\n      case 1:\n        return <AdminBookingTable date=\"recent\" />;\n      case 2:\n        return <AdminBookingTable date=\"today\" />;\n      case 3:\n        return <AdminBookingTable date=\"old\" />;\n      case 4:\n        return <AdminBookingTable date=\"future\" />;\n      case 5:\n        return <AdminBookingTable date=\"all\" />;\n      case 6:\n        return <AdminBookingTable date=\"deleted\" />;\n      case 7:\n        return <AdminCalendarView />;\n      case 8:\n        return <AdminFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  }\n  else if (role === \"derma\") {\n    switch (index) {\n      case 0:\n        return <DermaDashboardPreview />;\n      case 1:\n        return <DermaBookingTable date=\"recent\" />;\n      case 2:\n        return <DermaBookingTable date=\"today\" />;\n      case 3:\n        return <DermaBookingTable date=\"old\" />;\n      case 4:\n        return <DermaBookingTable date=\"future\" />;\n      case 5:\n        return <DermaBookingTable date=\"all\" />;\n      case 6:\n        return <DermaBookingTable date=\"deleted\" />;\n      case 7:\n        return <DermaCalendarView />;\n      case 8:\n        return <DermaFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"payment\") {\n    switch (index) {\n      case 0:\n        return <PaymentsDashboard />;\n      case 1:\n        return <PaymentsTable date=\"all\" />;\n      case 2:\n        return <PaymentsTable date=\"paid\" />;\n      case 3:\n        return <PaymentsTable date=\"late\" />;\n      case 4:\n        return <PaymentsTable date=\"notpaid\" />;\n      case 5:\n        return <PaymentsTable date=\"refund\" />;\n      case 6:\n        return <PaymentsTable date=\"deleted\" />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"screening\") {\n    switch (index) {\n      case 0:\n        return <ScreeningDashboardPreview />;\n      case 1:\n        return <ScreeningBookingTable date=\"pending\" />;  \n      case 2:\n        return <ScreeningBookingTable date=\"tbc\" />;  \n      case 3:\n        return <ScreeningBookingTable date=\"recent\" />;\n      case 4:\n        return <ScreeningBookingTable date=\"today\" />;\n      case 5:\n        return <ScreeningBookingTable date=\"old\" />;\n      case 6:\n        return <ScreeningBookingTable date=\"future\" />;\n      case 7:\n        return <ScreeningBookingTable date=\"all\" />;\n      case 8:\n        return <ScreeningBookingTable date=\"deleted\" />;\n      case 9:\n        return <ScreeningCalendarView />;\n      case 10:\n        return <ScreeningFindByRef />;\n      case 11:\n        return <SearchBookingTable />;\n\n\n      default:\n        return `Page Not Found!`;\n    }\n  }else if (role === \"reports\") {\n    switch (index) {\n      case 0:\n        return <ReportsDashboard/>;\n      case 1:\n        return  <PeriodicReport/>;  \n      case 2:\n        return <SearchInvoices />; \n      case 3:\n        return <CorporatesList />;  \n   \n      default:\n        return `Page Not Found!`;\n    }\n  }\n  else {\n    return `Page Not Found!`;\n  }\n};\n\nexport const getMenuRole = (role) => {\n  switch (role) {\n    case \"admin\":\n      return MenuList_Admin;\n    case \"pcr\":\n      return MenuList_PCR;\n    case \"pcrlab\":\n      return MenuList_PCRLAB;\n\n    case \"gynae\":\n      return MenuList_Gynae;\n    case \"gp\":\n      return MenuList_GP;\n    case \"std\":\n      return MenuList_STD;\n    case \"blood\":\n      return MenuList_Blood;\n    case \"derma\":\n      return MenuList_Derma;\n    case \"payment\":\n      return MenuList_Payment;\n    case \"screening\":\n      return MenuList_Screening;\n    case \"reports\":\n        return MenuList_Reports;\n  \n\n\n    default:\n      return [];\n  }\n};\n\nexport const getMenuId = (role, index) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].index === index) {\n      return MenuList[i].id;\n    }\n  }\n\n  return `Page Not Found!`;\n};\n\nexport const getMenuIndex = (role, id) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].id === id) {\n      return MenuList[i].index;\n    }\n  }\n\n  return -1;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalState from \"./GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport logoImage from \"./images/logo.png\"\n\nimport {\n  Grid,\n  AppBar,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Copyright from \"./CopyRight\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UserService from \"./services/UserService\";\nimport { getMenuId } from \"./MenuList\";\n\nimport { useMediaQuery } from 'react-responsive'\nimport { borderRadius } from \"@material-ui/system\";\nimport { setRole } from \"./Role\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/images/bg.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(15, 2),\n    padding: theme.spacing(4,4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\"\n    // border: `2px solid ${theme.palette.primary.main}`,\n    // borderRadius: \"8px\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"#f5f5f5\",\n  },\n\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  pageBg:{\n    paddingTop: theme.spacing(15),\n   \n    background: \"linear-gradient(3deg, rgba(2,0,36,1) 0%, rgba(9,77,121,1) 35%, rgba(0,212,255,1) 100%)\",\n    height: \"100vh\",\n    margin: 0,\n    padding:0,\n  },\n\n  appbarCenter: {\n    position: \"absolute\",\n    // width: \"260px\",\n    top: \"-40px\",\n    right: \"0\",\n    marginLeft: \"-145px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    padding: \"5px 20px 15px 20px\",\n    borderRadius: \"8px\"\n  },\n\n  logoImage: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"0px\",\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  adminPanelLabel: {\n    color: theme.palette.primary.main, \n    marginBottom:\"20px\"\n  }\n\n\n\n\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\n\n\n  let history = useHistory();\n\n  const [password, setPassword] = React.useState(\"\");\n\n  const [username, setUsername] = React.useState(\"\");\n\n  const [saveChecked, setSaveChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const [error, setError] = React.useState(null);\n  const [submiting, setSubmiting] = React.useState(false);\n\n  const signIn = () => {\n    setSubmiting(true);\n\n    UserService.signIn({\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        setSubmiting(false);\n        if (res.data.status === \"OK\") {\n          setError(null);\n          const token = res.data.token;\n          if (saveChecked) {\n            localStorage.setItem(\"medexadmin-auth-token\", token);\n          } else {\n            sessionStorage.setItem(\"medexadmin-auth-token\", token);\n          }\n\n          setState((state) => ({ ...state, signedIn: true }));\n          setRole(res.data.roles[0])\n          setState((state) => ({ ...state, currentMenuIndex: 0 }));\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 0)}`));\n        } else if (res.data.status === \"FAILED\") {\n          setError(res.data.error);\n        } else {\n          setError(\"Sorry, something went wrong, please try again.\");\n        }\n      })\n      .catch((err) => {\n        setSubmiting(false);\n        console.error(err);\n        setError(\"Sorry, something went wrong, please try again.\");\n      });\n  };\n\n  const usernameChanged = (event) => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n\n  const passwordChanged = (event) => {\n    setPassword(event.target.value);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const saveCheckedChanged = (event) => {\n    setSaveChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.pageBg}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Paper elevation={20}>\n          <div className={classes.paper}>\n            <div className={classes.appbarCenter}>\n              <span className={classes.appbarTitle}>\n                Medical Express Clinic\n              </span>\n\n              <img\n                className={classes.logoImage}\n                src={getGlobalPath(\"/images/logo.png\")}\n                alt=\"logo image\"\n              />\n            </div>\n\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.adminPanelLabel}\n            >\n              Admin Panel\n            </Typography>\n\n            {error && (\n              <div className={classes.alert}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\n                    {error}\n                  </div>\n                </Alert>\n              </div>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"username\"\n              value={username}\n              onChange={usernameChanged}\n              on\n              autoFocus\n            />\n            <FormControl\n              fullWidth\n              required\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  signIn();\n                }\n              }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                {\" \"}\n                Password{\" \"}\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                name=\"outlined-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={passwordChanged}\n                autoComplete=\"current-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      tabindex=\"-1\"\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n\n            <FormControlLabel\n              style={{ textAlign: \"left\", width: \"100%\" }}\n              control={\n                <Checkbox\n                  value=\"remember\"\n                  color=\"secondary\"\n                  checked={saveChecked}\n                  onChange={saveCheckedChanged}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={signIn}\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </div>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={submiting}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <CircularProgress color=\"inherit\" />\n            </Grid>\n            <Grid item>\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n                {\" \"}\n                {/* Please wait ...{\" \"} */}\n              </span>\n            </Grid>\n          </Grid>\n        </Backdrop>\n\n        <Box mt={5} style={{ color: \"#eee\" }}>\n          <Copyright />\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Badge,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { List, ListItem } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getMenuRole, getMenuId } from \"./MenuList\";\nimport { border, borderBottom } from \"@material-ui/system\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\nimport GyaneBookService from \"./Gynae/services/BookService\"\nimport ScreeningBookService from \"./Screening/services/BookService\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  icon: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    cursor: \"pointer\",\n    paddingTop: \"10px\",\n    paddingBottom: \"8px\",\n    borderBottom: \"1px solid #eee\",\n  },\n\n  iconSelected: {\n    color: \"#fff\",\n    backgroundColor:  theme.palette.primary.main,\n    transition: \"all 0.1s ease-in-out\"\n  },\n\n  menuText: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\"\n  },\n\n  Badge:{\n    backgroundColor: \"rgb(220, 0, 78)\",\n    color: \"#fff\",\n    fontWeight: \"600\",\n    textAlign:\"center\",\n    borderRadius: \"50%\",\n    fontSize: \"0.85rem\",\n    lineHeight: \"0.85rem\",\n    padding:\"7px\",\n    marginTop:\"9px\",\n    width:\"28px\"\n\n  }\n}));\n\nexport default function MyMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  let history = useHistory();\n\n  const updateShouldRefundsCount = async () =>\n  {\n    try{\n      const res = await GyaneBookService.getShouldRefundsCount()\n      if (res && res.data && res.data.status === \"OK\")\n      {\n        setState(state => ({...state, shouldRefunsCount: res.data.count}))\n      }\n    }\n    catch(ex)\n    {\n      console.error(ex)\n    }\n  }\n\n  const updateShouldRefundsCountScreening = async () =>\n  {\n    try{\n      const res = await ScreeningBookService.getShouldRefundsCount()\n      if (res && res.data && res.data.status === \"OK\")\n      {\n        setState(state => ({...state, shouldRefunsCountScreening: res.data.count}))\n      }\n    }\n    catch(ex)\n    {\n      console.error(ex)\n    }\n  }\n\n\n  const updateHSPendingBookingsCount = async () =>\n  {\n    try{\n      const res = await ScreeningBookService.getPendingBookings()\n      if (res && res.data)\n      {\n        setState(state => ({...state, hsPendingBookingsCount: res.data.length}))\n      }\n    }\n    catch(ex)\n    {\n      console.error(ex)\n    }\n  }\n\n\n  useEffect(() => {\n    setSelectedIndex(state.currentMenuIndex);\n    updateShouldRefundsCount()\n    updateShouldRefundsCountScreening()\n\n    updateHSPendingBookingsCount()\n  }, [state.currentMenuIndex, state.bookingDialogDataChanged]);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {state.role &&\n          getMenuRole(state.role).map(\n            (item) =>\n              !item.hidden && (\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\n                // <ListItemIcon>\n                //     {item.icon}\n                // </ListItemIcon>\n                // <ListItemText primary={`${item.title}`} />\n                // </ListItem>\n                <React.Fragment key={`${item.id}`}>\n                  <div\n                    key={`${item.id}`}\n                    className={clsx(\n                      classes.icon,\n                      selectedIndex === item.index && classes.iconSelected\n                    )}\n                    onClick={(event) => handleListItemClick(event, item.index)}\n                  >\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={3}\n                      style={{paddingLeft:\"15px\"}}\n                    >\n                      <Grid item>{item.icon}</Grid>\n\n                      <Grid item style={{textAlign:\"left\"}}>\n                        <span\n                          className={classes.menuText}\n                        >{`${item.title}`}</span>{\" \"}\n                      </Grid>\n\n                      {state.role === \"gynae\" && item.id === \"deletedBookings\" && state.shouldRefunsCount > 0 && (\n                        <span className={classes.Badge}> {state.shouldRefunsCount} </span>\n                      )}\n\n                      {state.role === \"screening\" && item.id === \"pendingBookings\" && state.hsPendingBookingsCount > 0 && (\n                        <span className={classes.Badge}> {state.hsPendingBookingsCount} </span>\n                      )}\n\n                      {state.role === \"screening\" && item.id === \"deletedBookings\" && state.shouldRefunsCountScreening > 0 && (\n                        <span className={classes.Badge}> {state.shouldRefunsCountScreening} </span>\n                      )}\n\n\n\n                    </Grid>\n                  </div>\n                </React.Fragment>\n              )\n          )}\n      </List>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport MyMenu from \"./Menu\";\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Copyright from \"./CopyRight\";\nimport { useMediaQuery } from \"react-responsive\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport dateformat from \"dateformat\";\nimport { getRole, setRole, clearRole } from \"./Role\";\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport AirplayIcon from '@material-ui/icons/Airplay';\nimport PollIcon from '@material-ui/icons/InsertChart';\n\n\nconst drawerWidth = 240;\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    marginTop: \"10px\",\n    // marginRight: \"5px\",\n    width: \"270px\",\n    height: \"240px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    paddingTop: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuApps = withStyles((theme) => ({\n  paper: {\n    marginTop: \"5px\",\n    // marginRight: \"5px\",\n    width: \"290px\",\n    height: \"450px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    // marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      opacity: 0.9,\n    },\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  appbarCenter: {\n    position: \"fixed\",\n    width: \"260px\",\n    top: \"10px\",\n    left: \"50%\",\n    marginLeft: \"-130px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n  },\n\n  logoImage: {\n    width: \"36px\",\n    height: \"36px\",\n    marginLeft: \"0px\",\n  },\n\n  userAvatar: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#aaa\",\n    border: \"1px solid\",\n    color: \"#aaa\",\n    cursor: \"pointer\",\n  },\n\n  userAvatarSelected: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n  },\n\n  userAvatarBig: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    width: \"60px\",\n    height: \"60px\",\n  },\n\n  appBarText: {\n    color: \"#888\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  appBarAppsIcon: {\n    // color: \"#888\",\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n  },\n\n  appBarAppsIconSelected: {\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n    color: theme.palette.primary.main,\n  },\n\n  usernameLabel: {\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n\n  lastLoginLabel: {\n    color: \"#777\",\n    paddingTop: \"5px\",\n  },\n\n  appsLogo: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n\n  appsBox: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid #fff`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsBoxSelected: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid${theme.palette.primary.light}`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsAdminLabel: {\n    color: \"#0264d4\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGPLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsSTDLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsBloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsDermaLabel: {\n    color: \"#323e9a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPaymentLabel: {\n    color: \"#008c77\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsScreeningLabel: {\n    color: \"#006b8f\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsReportsLabel: {\n    color: \"#008c34\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n\n\n\n\n  appsInToolbar: {\n    position: \"fixed\",\n    left: \"60px\",\n    top: \"-5px\",\n    height: \"65px\",\n    width: \"200px\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const [open, setOpen] = React.useState(isMobile ? false : true);\n\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\n\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\n  const handleUserAvatarClick = (event) => {\n    setAnchorUserAvatar(event.currentTarget);\n  };\n  const handleUserAvatarClose = () => {\n    setAnchorUserAvatar(null);\n  };\n\n  const [anchorApps, setAnchorApps] = React.useState(null);\n  const handleAppsClick = (event) => {\n    setAnchorApps(event.currentTarget);\n  };\n  const handleAppsClose = () => {\n    setAnchorApps(null);\n  };\n\n  const history = useHistory();\n\n  let location = useLocation();\n  React.useEffect(() => {\n    if (!state.role) return;\n    const index = getMenuIndex(\n      state.role,\n      getMenuIdFromGlobalPath(location.pathname)\n    );\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n  }, [location]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setCurrentMenuIndex(state.currentMenuIndex);\n    if (isMobile) {\n      setOpen(false);\n    }\n  }, [state.currentMenuIndex]);\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"medexadmin-auth-token\");\n    sessionStorage.removeItem(\"medexadmin-auth-token\");\n    clearRole();\n\n    setState((state) => ({ signedIn: false }));\n    history.replace(\"./login\");\n  };\n\n  const appsClicked = (role) => {\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\n    handleAppsClose();\n  };\n\n  const getAppsLogo = (role) => {\n    switch (role) {\n      case \"admin\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/admin.png\")}\n            className={classes.appsLogo}\n          />\n        );\n      case \"pcr\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/corona.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/woman.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gp\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/doctor.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"std\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/std-icon.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"blood\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/blood-logo.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"derma\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/derma-logo.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"payment\":\n        return (\n          // <img\n          //   src={getGlobalPath(\"/images/payment-logo.png\")}\n          //   className={classes.appsLogo}\n          // />\n          <MonetizationOnIcon className={classes.appsLogo} style={{color:\"#008c77\", fontSize:\"2rem\", padding:\"15px\"}}/>\n        );\n\n\n        case \"screening\":\n          return (\n            // <img\n            //   src={getGlobalPath(\"/images/payment-logo.png\")}\n            //   className={classes.appsLogo}\n            // />\n            <AirplayIcon className={classes.appsLogo} style={{color:\"#006b8f\", fontSize:\"2rem\", padding:\"16px\"}}/>\n          );\n\n          case \"reports\":\n            return (\n              // <img\n              //   src={getGlobalPath(\"/images/payment-logo.png\")}\n              //   className={classes.appsLogo}\n              // />\n              <PollIcon className={classes.appsLogo} style={{color:\"#008c34\", fontSize:\"2rem\", padding:\"13px\"}}/>\n            );\n    \n  \n\n\n\n      default:\n        return null;\n    }\n  };\n\n  const getAppsLabel = (role) => {\n    switch (role) {\n      case \"admin\":\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\n      case \"pcr\":\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\n      case \"gynae\":\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\n      case \"gp\":\n        return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\n      case \"std\":\n        return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\n      case \"blood\":\n        return <div className={classes.appsBloodLabel}> {\"Blood\"} </div>;\n      case \"derma\":\n        return <div className={classes.appsDermaLabel}> {\"Derma\"} </div>;\n      case \"payment\":\n        return <div className={classes.appsPaymentLabel}> {\"Payments\"} </div>;\n      case \"screening\":\n        return <div className={classes.appsScreeningLabel}> {\"Screening\"} </div>;\n      case \"reports\":\n          return <div className={classes.appsReportsLabel}> {\"Reports\"} </div>;\n    \n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.userId && state.role && (\n        <React.Fragment>\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\n              position=\"absolute\"\n              className={clsx(\n                classes.appBar,\n                false && open && classes.appBarShift\n              )}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton)}\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <div className={classes.appsInToolbar}>\n                  <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\n                    <Grid item>\n                      <div style={{ paddingTop: \"8px\" }}>\n                        {getAppsLabel(state.role)}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n                <div className={classes.appbarCenter}>\n                  {!isMobile && (\n                    <React.Fragment>\n                      <span className={classes.appbarTitle}>\n                        Medical Express Clinic\n                      </span>\n\n                      <img\n                        className={classes.logoImage}\n                        src={getGlobalPath(\"/images/logo.png\")}\n                        alt=\"logo image\"\n                      />\n                    </React.Fragment>\n                  )}\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    width: \"100%\",\n                    paddingLeft: \"2%\",\n                  }}\n                >\n                  <Grid\n                    container\n                    spacing={2}\n                    direction=\"row-reverse\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={\n                          anchorUserAvatar\n                            ? classes.userAvatarSelected\n                            : classes.userAvatar\n                        }\n                        onClick={handleUserAvatarClick}\n                      >\n                        <IconButton>\n                          <PersonOutlineIcon />\n                        </IconButton>\n                      </Avatar>\n                    </Grid>\n\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\n                      <Grid item>\n                        <IconButton onClick={handleAppsClick}>\n                          <AppsIcon\n                            className={\n                              anchorApps\n                                ? classes.appBarAppsIconSelected\n                                : classes.appBarAppsIcon\n                            }\n                          />\n                        </IconButton>\n                      </Grid>\n                    )}\n                  </Grid>\n                </div>\n              </Toolbar>\n            </AppBar>\n\n            <StyledMenu\n              id=\"user-avatar-menu\"\n              anchorEl={anchorUserAvatar}\n              keepMounted\n              open={Boolean(anchorUserAvatar)}\n              onClose={handleUserAvatarClose}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar className={classes.userAvatarBig}>\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <div className={classes.usernameLabel}>\n                    {\" \"}\n                    {state.userId?.username}{\" \"}\n                  </div>\n                </Grid>\n                <Grid item>\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\n                    Logged in at :\n                  </span>\n                </Grid>\n                <Grid item>\n                  <div className={classes.lastLoginLabel}>\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\n                  </div>\n                </Grid>\n\n                <Grid item>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    style={{\n                      marginTop: \"30px\",\n                      width: \"150px\",\n                      borderRadius: \"30px\",\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Grid>\n              </Grid>\n            </StyledMenu>\n\n            <StyledMenuApps\n              id=\"apps-menu\"\n              anchorEl={anchorApps}\n              keepMounted\n              open={Boolean(anchorApps)}\n              onClose={handleAppsClose}\n            >\n              <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"admin\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"admin\")}\n                  >\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"pcr\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"pcr\")}\n                  >\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gynae\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gynae\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gp\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gp\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"std\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"std\")}\n                  >\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"blood\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"blood\")}\n                  >\n                    <Grid item>{getAppsLogo(\"blood\")}</Grid>\n                    <Grid item>{getAppsLabel(\"blood\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"screening\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"screening\")}\n                  >\n                    <Grid item>{getAppsLogo(\"screening\")}</Grid>\n                    <Grid item>{getAppsLabel(\"screening\")}</Grid>\n                  </Grid>\n                </Grid>\n\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"derma\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"derma\")}\n                  >\n                    <Grid item>{getAppsLogo(\"derma\")}</Grid>\n                    <Grid item>{getAppsLabel(\"derma\")}</Grid>\n                  </Grid>\n                </Grid>\n\n\n\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"payment\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"payment\")}\n                  >\n                    <Grid item>{getAppsLogo(\"payment\")}</Grid>\n                    <Grid item>{getAppsLabel(\"payment\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"reports\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"reports\")}\n                  >\n                    <Grid item>{getAppsLogo(\"reports\")}</Grid>\n                    <Grid item>{getAppsLabel(\"reports\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item style={{width:\"85px\"}}></Grid>\n                <Grid item style={{width:\"85px\"}}></Grid>\n\n\n\n\n\n\n\n              </Grid>\n            </StyledMenuApps>\n\n            <Drawer\n              variant={isMobile ? \"temporary\" : \"persistent\"}\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <React.Fragment>\n                  <img\n                    className={classes.logoImage}\n                    src={getGlobalPath(\"/images/logo.png\")}\n                    alt=\"logo image\"\n                    style={{ marginRight: \"10px\" }}\n                  />\n                  <span className={classes.appbarTitle}>\n                    <span style={{ fontSize: \"0.9rem\" }}>Medical Express</span>\n                  </span>\n                </React.Fragment>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n\n              <MyMenu />\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\n                className={classes.container}\n              >\n                {getMenuContent(state.role, currentMenuIndex)}\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import UserService from \"./services/UserService\";\n\nexport async function getUserIdFromToken(token)\n{\n    try{\n       const res  = await UserService.checkToken({token: token})\n       if (res.data.status === 'OK')\n        {\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\n        }\n       else\n        {\n            return null\n        }\n    }\n    catch(err)\n    {\n        return null\n    }\n  \n}","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GlobalState from './GlobalState';\n\n\n\n\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard';\n\nimport { useLocation, useHistory} from \"react-router-dom\";\nimport { getUserIdFromToken } from './TokenVerifier';\nimport UserService from './services/UserService';\nimport { getMenuId } from './MenuList';\nimport { getRole, setRole } from './Role';\nimport { getGlobalPath } from './GlobalPath';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    appBar: {\n        position: 'static',\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        //alignItems: 'center'\n    \n      },\n\n      signOutButton:{\n        color: \"#fff\",\n        marginRight : \"20px\",\n        fontWeight: \"500\"\n      },\n\n      title: {\n        flexGrow : 1\n      }\n\n\n}));\n\nexport default function Navigator() {\n\n    const classes = useStyles();\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [loaded, setLoaded] = React.useState(false)\n\n    let history = useHistory();\n\n    const handleSignOut = () =>\n    {\n      setState(state => ({...state, signedIn: false}));\n\n    }\n\n    let location = useLocation();\n\n    React.useEffect(() => {\n\n      const checkToken = async () =>\n      {\n        const authToken = localStorage.getItem('medexadmin-auth-token') || sessionStorage.getItem('medexadmin-auth-token');\n        UserService.setToken(authToken)\n\n         if (!authToken)\n        {\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n          setLoaded(true)\n          history.push(getGlobalPath('/login'));\n        }\n        else\n        {\n           const userId = await getUserIdFromToken(authToken);\n           if (!userId)\n           {\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n              history.push(getGlobalPath('/login'));\n           }\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\n           {\n            if (!getRole())\n            {\n             setRole(userId.roles[0])\n            }\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\n            \n             history.push(getGlobalPath(`/${getMenuId(getRole(),0)}`));\n           }\n           else\n           {\n              if (!getRole())\n              {\n               setRole(userId.roles[0])\n              }\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\n           }\n\n           setLoaded(true)\n        }\n      }\n\n      checkToken();\n   \n    }, [location.pathname]);\n\n    const getComponentFromState = () =>\n    {\n\n      if (state.signedIn)\n      {\n        return <Dashboard/>\n      }\n      else\n      {\n          return <SignIn/>    \n      }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            {\n              loaded && (\n                getComponentFromState()\n              )\n            }\n        \n        </React.Fragment>\n    );\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalState from \"./GlobalState\";\nimport Navigator from './Navigator';\n\n\n\n\n// Configure JSS\n\n\nfunction App() {\n  const [state, setState] = React.useState({currentMenuIndex:0});\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <GlobalStyles />\n\n       \n\n              <Navigator/>\n\n       \n\n\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </GlobalState.Provider>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n      return \"\"\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n     return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n    \n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n      return \"\"\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n     return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}"],"sourceRoot":""}